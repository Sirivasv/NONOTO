/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./renderer.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../opensheetmusicdisplay/build/opensheetmusicdisplay.min.js":
/*!****************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/opensheetmusicdisplay/build/opensheetmusicdisplay.min.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(window,function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=115)}([function(t,e,n){"use strict";var i=n(14),r=n(83),o=n(39),s=n(153),a=n(28);function u(t){return t}function c(t,e){for(var n=0;n<t.length;++n)e[n]=255&t.charCodeAt(n);return e}e.newBlob=function(t,n){e.checkSupport("blob");try{return new Blob([t],{type:n})}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return i.append(t),i.getBlob(n)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var l={stringifyByChunk:function(t,e,n){var i=[],r=0,o=t.length;if(o<=n)return String.fromCharCode.apply(null,t);for(;r<o;)"array"===e||"nodebuffer"===e?i.push(String.fromCharCode.apply(null,t.slice(r,Math.min(r+n,o)))):i.push(String.fromCharCode.apply(null,t.subarray(r,Math.min(r+n,o)))),r+=n;return i.join("")},stringifyByChar:function(t){for(var e="",n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return e},applyCanBeUsed:{uint8array:function(){try{return i.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return i.nodebuffer&&1===String.fromCharCode.apply(null,o.allocBuffer(1)).length}catch(t){return!1}}()}};function h(t){var n=65536,i=e.getTypeOf(t),r=!0;if("uint8array"===i?r=l.applyCanBeUsed.uint8array:"nodebuffer"===i&&(r=l.applyCanBeUsed.nodebuffer),r)for(;n>1;)try{return l.stringifyByChunk(t,i,n)}catch(t){n=Math.floor(n/2)}return l.stringifyByChar(t)}function f(t,e){for(var n=0;n<t.length;n++)e[n]=t[n];return e}e.applyFromCharCode=h;var p={};p.string={string:u,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return p.string.uint8array(t).buffer},uint8array:function(t){return c(t,new Uint8Array(t.length))},nodebuffer:function(t){return c(t,o.allocBuffer(t.length))}},p.array={string:h,array:u,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return o.newBufferFrom(t)}},p.arraybuffer={string:function(t){return h(new Uint8Array(t))},array:function(t){return f(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:u,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return o.newBufferFrom(new Uint8Array(t))}},p.uint8array={string:h,array:function(t){return f(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:u,nodebuffer:function(t){return o.newBufferFrom(t)}},p.nodebuffer={string:h,array:function(t){return f(t,new Array(t.length))},arraybuffer:function(t){return p.nodebuffer.uint8array(t).buffer},uint8array:function(t){return f(t,new Uint8Array(t.length))},nodebuffer:u},e.transformTo=function(t,n){if(n||(n=""),!t)return n;e.checkSupport(t);var i=e.getTypeOf(n);return p[i][t](n)},e.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":i.nodebuffer&&o.isBuffer(t)?"nodebuffer":i.uint8array&&t instanceof Uint8Array?"uint8array":i.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},e.checkSupport=function(t){if(!i[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},e.MAX_VALUE_16BITS=65535,e.MAX_VALUE_32BITS=-1,e.pretty=function(t){var e,n,i="";for(n=0;n<(t||"").length;n++)i+="\\x"+((e=t.charCodeAt(n))<16?"0":"")+e.toString(16).toUpperCase();return i},e.delay=function(t,e,n){s(function(){t.apply(n||null,e||[])})},e.inherits=function(t,e){var n=function(){};n.prototype=e.prototype,t.prototype=new n},e.extend=function(){var t,e,n={};for(t=0;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&void 0===n[e]&&(n[e]=arguments[t][e]);return n},e.prepareContent=function(t,n,o,s,u){return a.Promise.resolve(n).then(function(t){return i.blob&&(t instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(t)))&&"undefined"!=typeof FileReader?new a.Promise(function(e,n){var i=new FileReader;i.onload=function(t){e(t.target.result)},i.onerror=function(t){n(t.target.error)},i.readAsArrayBuffer(t)}):t}).then(function(n){var l,h=e.getTypeOf(n);return h?("arraybuffer"===h?n=e.transformTo("uint8array",n):"string"===h&&(u?n=r.decode(n):o&&!0!==s&&(n=c(l=n,i.uint8array?new Uint8Array(l.length):new Array(l.length)))),n):a.Promise.reject(new Error("Can't read the data of '"+t+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,n,i){void 0===t&&(t=0),void 0===e&&(e=1),void 0===n&&(n=0),void 0===i&&(i=!0),this.numerator=0,this.denominator=1,this.wholeValue=0,this.numerator=t,this.denominator=e,this.wholeValue=n,i&&this.simplify(),this.setRealValue()}return t.max=function(t,e){return t.RealValue>e.RealValue?t:e},t.Equal=function(t,e){return t.wholeValue===e.wholeValue&&t.Denominator===e.Denominator&&t.Numerator===e.Numerator},t.createFromFraction=function(e){return new t(e.numerator,e.denominator,e.wholeValue,!1)},t.plus=function(t,e){var n=t.clone();return n.Add(e),n},t.minus=function(t,e){var n=t.clone();return n.Sub(e),n},t.greatestCommonDenominator=function(t,e){if(0===t)return e;if(1===e)return 1;for(;0!==e;)t>e?t-=e:e-=t;return t},t.prototype.toString=function(){var t=this.numerator+"/"+this.denominator;return 0!==this.wholeValue&&(t=this.wholeValue+" "+t),t},t.prototype.clone=function(){return new t(this.numerator,this.denominator,this.wholeValue,!1)},Object.defineProperty(t.prototype,"Numerator",{get:function(){return this.numerator},set:function(t){this.numerator!==t&&(this.numerator=t,this.simplify(),this.setRealValue())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Denominator",{get:function(){return this.denominator},set:function(t){this.denominator!==t&&(this.denominator=t,0!==this.numerator&&this.simplify(),this.setRealValue())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WholeValue",{get:function(){return this.wholeValue},set:function(t){this.wholeValue!==t&&(this.wholeValue=t,this.setRealValue())},enumerable:!0,configurable:!0}),t.prototype.GetExpandedNumerator=function(){return this.wholeValue*this.denominator+this.numerator},t.prototype.IsNegative=function(){return this.realValue<0},Object.defineProperty(t.prototype,"RealValue",{get:function(){return this.realValue},enumerable:!0,configurable:!0}),t.prototype.expand=function(t){this.numerator*=t,this.denominator*=t,0!==this.wholeValue&&(this.numerator+=this.wholeValue*this.denominator,this.wholeValue=0)},t.prototype.Add=function(t){this.numerator=(this.wholeValue*this.denominator+this.numerator)*t.denominator+(t.wholeValue*t.denominator+t.numerator)*this.denominator,this.denominator=this.denominator*t.denominator,this.wholeValue=0,this.simplify(),this.setRealValue()},t.prototype.Sub=function(t){this.numerator=(this.wholeValue*this.denominator+this.numerator)*t.denominator-(t.wholeValue*t.denominator+t.numerator)*this.denominator,this.denominator=this.denominator*t.denominator,this.wholeValue=0,this.simplify(),this.setRealValue()},t.prototype.Quantize=function(e){if(this.denominator<=e)return this;for(var n=new t(this.numerator+1,this.denominator,this.wholeValue);n.Denominator>e;)n.Numerator++;if(this.numerator>this.denominator){for(var i=new t(this.numerator-1,this.denominator,this.wholeValue);i.Denominator>e;)i.Numerator--;if(i.Denominator<n.Denominator)return i}return n},t.prototype.Equals=function(t){return this.realValue===t.realValue},t.prototype.CompareTo=function(t){var e=this.realValue-t.realValue;return e?e<0?-1:1:0},t.prototype.lt=function(t){return this.realValue<t.realValue},t.prototype.lte=function(t){return this.realValue<=t.realValue},t.prototype.setRealValue=function(){this.realValue=this.wholeValue+this.numerator/this.denominator},t.prototype.simplify=function(){if(0!==this.numerator){var e=t.greatestCommonDenominator(Math.abs(this.numerator),Math.abs(this.denominator));this.numerator/=e,this.denominator/=e;var n=Math.floor(this.numerator/this.denominator);if(0!==n&&(this.wholeValue+=n,this.numerator-=n*this.denominator,0===this.numerator&&(this.denominator=1)),this.denominator>t.maximumAllowedNumber){var i=this.denominator/t.maximumAllowedNumber;this.numerator=Math.round(this.numerator/i),this.denominator=Math.round(this.denominator/i)}if(this.numerator>t.maximumAllowedNumber){i=this.numerator/t.maximumAllowedNumber;this.numerator=Math.round(this.numerator/i),this.denominator=Math.round(this.denominator/i)}}else this.denominator=1},t.maximumAllowedNumber=46340,t}();e.Fraction=i},function(t,e,n){"use strict";var i,r;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.C=0]="C",t[t.D=2]="D",t[t.E=4]="E",t[t.F=5]="F",t[t.G=7]="G",t[t.A=9]="A",t[t.B=11]="B"}(i=e.NoteEnum||(e.NoteEnum={})),function(t){t[t.DOUBLEFLAT=-2]="DOUBLEFLAT",t[t.FLAT=-1]="FLAT",t[t.NONE=0]="NONE",t[t.SHARP=1]="SHARP",t[t.DOUBLESHARP=2]="DOUBLESHARP",t[t.NATURAL=3]="NATURAL"}(r=e.AccidentalEnum||(e.AccidentalEnum={}));var o=function(){function t(e,n,i){this.accidental=r.NONE,this.fundamentalNote=e,this.octave=n,this.accidental=i,this.halfTone=e+12*(n+t.octXmlDiff)+i,this.frequency=t.calcFrequency(this)}return t.getNoteEnumString=function(t){switch(t){case i.C:return"C";case i.D:return"D";case i.E:return"E";case i.F:return"F";case i.G:return"G";case i.A:return"A";case i.B:return"B";default:return""}},t.CalculateTransposedHalfTone=function(e,n){var i=e.fundamentalNote+e.accidental+n;return t.WrapAroundCheck(i,12)},t.WrapAroundCheck=function(t,e){for(var n=0;t<0;)t+=e,n--;for(;t>=e;)t-=e,n++;return{overflow:n,value:t}},t.calcFrequency=function(e){var n,r=0;if(e instanceof t){var o=e;r=o.octave-1,n=o.fundamentalNote-i.A+o.accidental}else if("number"==typeof e){n=e-57}return 440*Math.pow(2,r)*Math.pow(2,n/12)},t.calcFractionalKey=function(e){return Math.log(e/440)/Math.LN10*t.halftoneFactor+57},t.fromFrequency=function(e){var n=t.calcFractionalKey(e)+.5,i=Math.floor(n/12)-t.octXmlDiff,o=Math.floor(n)%12,s=o,a=r.NONE;return-1===this.pitchEnumValues.indexOf(s)&&(s=o-1,a=r.SHARP),new t(s,i,a)},t.fromHalftone=function(e){var n=Math.floor(e/12)-t.octXmlDiff,i=e%12,o=i,s=r.NONE;return-1===this.pitchEnumValues.indexOf(o)&&(o=i-1,s=r.SHARP),new t(o,n,s)},t.ceiling=function(t){var e=t%=12;return-1===this.pitchEnumValues.indexOf(e)&&(e=t+1),e},t.floor=function(t){var e=t%=12;return-1===this.pitchEnumValues.indexOf(e)&&(e=t-1),e},Object.defineProperty(t.prototype,"Octave",{get:function(){return this.octave},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FundamentalNote",{get:function(){return this.fundamentalNote},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Accidental",{get:function(){return this.accidental},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Frequency",{get:function(){return this.frequency},enumerable:!0,configurable:!0}),Object.defineProperty(t,"OctaveXmlDifference",{get:function(){return t.octXmlDiff},enumerable:!0,configurable:!0}),t.prototype.getHalfTone=function(){return this.halfTone},t.prototype.getTransposedPitch=function(t){if(t>12)throw new Error("rewrite this method to handle bigger octave changes or don't use is with bigger octave changes!");return t>0?this.getHigherPitchByTransposeFactor(t):t<0?this.getLowerPitchByTransposeFactor(-t):this},t.prototype.DoEnharmonicChange=function(){switch(this.accidental){case r.FLAT:case r.DOUBLEFLAT:this.fundamentalNote=this.getPreviousFundamentalNote(this.fundamentalNote),this.accidental=this.halfTone-(this.fundamentalNote+12*(this.octave+t.octXmlDiff));break;case r.SHARP:case r.DOUBLESHARP:this.fundamentalNote=this.getNextFundamentalNote(this.fundamentalNote),this.accidental=this.halfTone-(this.fundamentalNote+12*(this.octave+t.octXmlDiff));break;default:return}},t.prototype.ToString=function(){return"Note: "+this.fundamentalNote+", octave: "+this.octave.toString()+", alter: "+this.accidental},t.prototype.OperatorEquals=function(t){return void 0!==this&&void 0!==t&&(this.FundamentalNote===t.FundamentalNote&&this.Octave===t.Octave&&this.Accidental===t.Accidental)},t.prototype.OperatorNotEqual=function(t){return!(this===t)},t.prototype.getHigherPitchByTransposeFactor=function(e){var n,i=t.pitchEnumValues.indexOf(this.fundamentalNote),o=this.octave;return i+e>t.pitchEnumValues.length-1?(n=t.pitchEnumValues[i+e-t.pitchEnumValues.length],o++):n=t.pitchEnumValues[i+e],new t(n,o,r.NONE)},t.prototype.getLowerPitchByTransposeFactor=function(e){var n,i=t.pitchEnumValues.indexOf(this.fundamentalNote),o=this.octave;return i-e<0?(n=t.pitchEnumValues[t.pitchEnumValues.length+i-e],o--):n=t.pitchEnumValues[i-e],new t(n,o,r.NONE)},t.prototype.getNextFundamentalNote=function(e){var n=t.pitchEnumValues.indexOf(e);return n=(n+1)%t.pitchEnumValues.length,t.pitchEnumValues[n]},t.prototype.getPreviousFundamentalNote=function(e){var n=t.pitchEnumValues.indexOf(e);return n>0?t.pitchEnumValues[n-1]:t.pitchEnumValues[t.pitchEnumValues.length-1]},t.pitchEnumValues=[i.C,i.D,i.E,i.F,i.G,i.A,i.B],t.halftoneFactor=12/(Math.LN2/Math.LN10),t.octXmlDiff=3,t}();e.Pitch=o},function(t,e,n){var i,r;!function(o,s){"use strict";void 0===(r="function"==typeof(i=function(){var t=function(){},e="undefined",n=["trace","debug","info","warn","error"];function i(t,e){var n=t[e];if("function"==typeof n.bind)return n.bind(t);try{return Function.prototype.bind.call(n,t)}catch(e){return function(){return Function.prototype.apply.apply(n,[t,arguments])}}}function r(e,i){for(var r=0;r<n.length;r++){var o=n[r];this[o]=r<e?t:this.methodFactory(o,e,i)}this.log=this.debug}function o(n,o,s){return function(n){"debug"===n&&(n="log");return typeof console!==e&&(void 0!==console[n]?i(console,n):void 0!==console.log?i(console,"log"):t)}(n)||function(t,n,i){return function(){typeof console!==e&&(r.call(this,n,i),this[t].apply(this,arguments))}}.apply(this,arguments)}function s(t,i,s){var a,u=this,c="loglevel";function l(){var t;if(typeof window!==e){try{t=window.localStorage[c]}catch(t){}if(typeof t===e)try{var n=window.document.cookie,i=n.indexOf(encodeURIComponent(c)+"=");-1!==i&&(t=/^([^;]+)/.exec(n.slice(i))[1])}catch(t){}return void 0===u.levels[t]&&(t=void 0),t}}t&&(c+=":"+t),u.name=t,u.levels={TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4,SILENT:5},u.methodFactory=s||o,u.getLevel=function(){return a},u.setLevel=function(i,o){if("string"==typeof i&&void 0!==u.levels[i.toUpperCase()]&&(i=u.levels[i.toUpperCase()]),!("number"==typeof i&&i>=0&&i<=u.levels.SILENT))throw"log.setLevel() called with invalid level: "+i;if(a=i,!1!==o&&function(t){var i=(n[t]||"silent").toUpperCase();if(typeof window===e)return;try{return void(window.localStorage[c]=i)}catch(t){}try{window.document.cookie=encodeURIComponent(c)+"="+i+";"}catch(t){}}(i),r.call(u,i,t),typeof console===e&&i<u.levels.SILENT)return"No console available for logging"},u.setDefaultLevel=function(t){l()||u.setLevel(t,!1)},u.enableAll=function(t){u.setLevel(u.levels.TRACE,t)},u.disableAll=function(t){u.setLevel(u.levels.SILENT,t)};var h=l();null==h&&(h=null==i?"WARN":i),u.setLevel(h,!1)}var a=new s,u={};a.getLogger=function(t){if("string"!=typeof t||""===t)throw new TypeError("You must supply a name when creating a logger.");var e=u[t];return e||(e=u[t]=new s(t,a.getLevel(),a.methodFactory)),e};var c=typeof window!==e?window.log:void 0;return a.noConflict=function(){return typeof window!==e&&window.log===a&&(window.log=c),a},a.getLoggers=function(){return u},a})?i.call(e,n,e,t):i)||(t.exports=r)}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,r=n(17),o=n(5),s=n(108),a=n(60),u=function(){function t(t,e){void 0===t&&(t=void 0),void 0===e&&(e=void 0),this.isSymbol=!1,this.relativePositionHasBeenSet=!1,this.xBordersHaveBeenSet=!1,this.yBordersHaveBeenSet=!1,this.absolutePosition=new o.PointF2D,this.relativePosition=new o.PointF2D,this.size=new s.SizeF2D,this.marginSize=new s.SizeF2D,this.upperLeftCorner=new o.PointF2D,this.upperLeftMarginCorner=new o.PointF2D,this.borderLeft=0,this.borderRight=0,this.borderTop=0,this.borderBottom=0,this.borderMarginLeft=0,this.borderMarginRight=0,this.borderMarginTop=0,this.borderMarginBottom=0,this.childElements=[],this.parent=e,this.dataObject=t,this.xBordersHaveBeenSet=!1,this.yBordersHaveBeenSet=!1,void 0!==e&&(this.Parent=e)}return Object.defineProperty(t.prototype,"RelativePositionHasBeenSet",{get:function(){return this.relativePositionHasBeenSet},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"XBordersHaveBeenSet",{get:function(){return this.xBordersHaveBeenSet},set:function(t){this.xBordersHaveBeenSet=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"YBordersHaveBeenSet",{get:function(){return this.yBordersHaveBeenSet},set:function(t){this.yBordersHaveBeenSet=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AbsolutePosition",{get:function(){return this.absolutePosition},set:function(t){this.absolutePosition=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RelativePosition",{get:function(){return this.relativePosition},set:function(t){this.relativePosition=t,this.relativePositionHasBeenSet=!0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Size",{get:function(){return this.size},set:function(t){this.size=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MarginSize",{get:function(){return this.marginSize},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"UpperLeftCorner",{get:function(){return this.upperLeftCorner},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"UpperLeftMarginCorner",{get:function(){return this.upperLeftMarginCorner},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderLeft",{get:function(){return this.borderLeft},set:function(t){this.borderLeft=t,this.calculateRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderRight",{get:function(){return this.borderRight},set:function(t){this.borderRight=t,this.calculateRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderTop",{get:function(){return this.borderTop},set:function(t){this.borderTop=t,this.calculateRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderBottom",{get:function(){return this.borderBottom},set:function(t){this.borderBottom=t,this.calculateRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderMarginLeft",{get:function(){return this.borderMarginLeft},set:function(t){this.borderMarginLeft=t,this.calculateMarginRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderMarginRight",{get:function(){return this.borderMarginRight},set:function(t){this.borderMarginRight=t,this.calculateMarginRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderMarginTop",{get:function(){return this.borderMarginTop},set:function(t){this.borderMarginTop=t,this.calculateMarginRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BorderMarginBottom",{get:function(){return this.borderMarginBottom},set:function(t){this.borderMarginBottom=t,this.calculateMarginRectangle()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BoundingRectangle",{get:function(){return this.boundingRectangle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BoundingMarginRectangle",{get:function(){return this.boundingMarginRectangle},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ChildElements",{get:function(){return this.childElements},set:function(t){this.childElements=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Parent",{get:function(){return this.parent},set:function(t){this.parent=t,this.parent.ChildElements.indexOf(this)>-1?console.error("BoundingBox of "+this.dataObject.constructor.name+" already in children list of "+this.parent.dataObject.constructor.name+"'s BoundingBox"):this.parent.ChildElements.push(this)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DataObject",{get:function(){return this.dataObject},enumerable:!0,configurable:!0}),t.prototype.setAbsolutePositionFromParent=function(){void 0!==this.parent?(this.absolutePosition.x=this.parent.AbsolutePosition.x+this.relativePosition.x,this.absolutePosition.y=this.parent.AbsolutePosition.y+this.relativePosition.y):this.absolutePosition=this.relativePosition},t.prototype.calculateAbsolutePosition=function(){this.absolutePosition.x=this.relativePosition.x,this.absolutePosition.y=this.relativePosition.y;for(var t=this.parent;void 0!==t;)this.absolutePosition.x+=t.relativePosition.x,this.absolutePosition.y+=t.relativePosition.y,t=t.parent},t.prototype.calculateAbsolutePositionsRecursiveWithoutTopelement=function(){this.absolutePosition.x=0,this.absolutePosition.y=0;for(var t=0,e=this.ChildElements.length;t<e;++t){this.ChildElements[t].calculateAbsolutePositionsRecursive(this.absolutePosition.x,this.absolutePosition.y)}},t.prototype.calculateAbsolutePositionsRecursive=function(t,e){this.absolutePosition.x=this.relativePosition.x+t,this.absolutePosition.y=this.relativePosition.y+e;for(var n=0,i=this.ChildElements.length;n<i;++n){this.ChildElements[n].calculateAbsolutePositionsRecursive(this.absolutePosition.x,this.absolutePosition.y)}},t.prototype.calculateAbsolutePositionsOfChildren=function(){for(var t=0,e=this.ChildElements.length;t<e;++t){this.ChildElements[t].calculateAbsolutePositionsRecursive(this.absolutePosition.x,this.absolutePosition.y)}},t.prototype.calculateBoundingBox=function(){if(0!==this.childElements.length){for(var t=0,e=this.ChildElements.length;t<e;++t){(l=this.ChildElements[t]).calculateBoundingBox()}var n=Number.MAX_VALUE,i=Number.MIN_VALUE,r=Number.MAX_VALUE,o=Number.MIN_VALUE,s=Number.MAX_VALUE,a=Number.MIN_VALUE,u=Number.MAX_VALUE,c=Number.MIN_VALUE;this.isSymbol&&(n=this.borderLeft,i=this.borderRight,r=this.borderTop,o=this.borderBottom,s=this.borderMarginLeft,a=this.borderMarginRight,u=this.borderMarginTop,c=this.borderMarginBottom);for(t=0,e=this.ChildElements.length;t<e;++t){var l=this.ChildElements[t];n=Math.min(n,l.relativePosition.x+l.borderLeft),i=Math.max(i,l.relativePosition.x+l.borderRight),r=Math.min(r,l.relativePosition.y+l.borderTop),o=Math.max(o,l.relativePosition.y+l.borderBottom),s=Math.min(s,l.relativePosition.x+l.borderMarginLeft),a=Math.max(a,l.relativePosition.x+l.borderMarginRight),u=Math.min(u,l.relativePosition.y+l.borderMarginTop),c=Math.max(c,l.relativePosition.y+l.borderMarginBottom)}this.borderLeft=n,this.borderRight=i,this.borderTop=r,this.borderBottom=o,this.borderMarginLeft=s,this.borderMarginRight=a,this.borderMarginTop=u,this.borderMarginBottom=c,this.calculateRectangle(),this.calculateMarginRectangle(),this.xBordersHaveBeenSet=!0,this.yBordersHaveBeenSet=!0}},t.prototype.calculateTopBottomBorders=function(){if(0!==this.childElements.length){for(var t=0,e=this.ChildElements.length;t<e;++t){(s=this.ChildElements[t]).calculateTopBottomBorders()}var n=Number.MAX_VALUE,i=Number.MIN_VALUE,r=Number.MAX_VALUE,o=Number.MIN_VALUE;this.yBordersHaveBeenSet&&(n=this.borderTop,i=this.borderBottom,r=this.borderMarginTop,o=this.borderMarginBottom);for(t=0,e=this.ChildElements.length;t<e;++t){var s=this.ChildElements[t];n=Math.min(n,s.relativePosition.y+s.borderTop),i=Math.max(i,s.relativePosition.y+s.borderBottom),r=Math.min(r,s.relativePosition.y+s.borderMarginTop),o=Math.max(o,s.relativePosition.y+s.borderMarginBottom)}this.borderTop=n,this.borderBottom=i,this.borderMarginTop=r,this.borderMarginBottom=o,this.calculateRectangle(),this.calculateMarginRectangle()}},t.prototype.computeNonOverlappingPositionWithMargin=function(t,e,n){this.RelativePosition=new o.PointF2D(n.x,n.y),this.setAbsolutePositionFromParent();var s=0,a=!1;do{switch(e){case i.Left:case i.Right:s=this.relativePosition.x,t.calculateMarginPositionAlongDirection(this,e),a=Math.abs(s-this.relativePosition.x)>.001;break;case i.Up:case i.Down:s=this.relativePosition.y,t.calculateMarginPositionAlongDirection(this,e),a=Math.abs(s-this.relativePosition.y)>.001;break;default:throw new r.ArgumentOutOfRangeException("direction")}}while(a)},t.prototype.collisionDetection=function(t){var e=Math.min(this.AbsolutePosition.x+this.borderRight,t.absolutePosition.x+t.borderRight)-Math.max(this.AbsolutePosition.x+this.borderLeft,t.absolutePosition.x+t.borderLeft),n=Math.min(this.AbsolutePosition.y+this.borderBottom,t.absolutePosition.y+t.borderBottom)-Math.max(this.AbsolutePosition.y+this.borderTop,t.absolutePosition.y+t.borderTop);return e>0&&n>0},t.prototype.liesInsideBorders=function(t){var e=this.AbsolutePosition.x+this.borderLeft<=t.absolutePosition.x+t.borderLeft&&t.absolutePosition.x+t.borderLeft<=this.AbsolutePosition.x+this.borderRight,n=this.AbsolutePosition.x+this.borderLeft<=t.absolutePosition.x+t.borderRight&&t.absolutePosition.x+t.borderRight<=this.AbsolutePosition.x+this.borderRight;if(e&&n){var i=this.AbsolutePosition.y+this.borderTop<=t.absolutePosition.y+t.borderTop&&t.absolutePosition.y+t.borderTop<=this.AbsolutePosition.y+this.borderBottom,r=this.AbsolutePosition.y+this.borderTop<=t.absolutePosition.y+t.borderBottom&&t.absolutePosition.y+t.borderBottom<=this.AbsolutePosition.y+this.borderBottom;if(i&&r)return!0}return!1},t.prototype.pointLiesInsideBorders=function(t){if(this.AbsolutePosition.x+this.borderLeft<=t.x&&t.x<=this.AbsolutePosition.x+this.borderRight&&(this.AbsolutePosition.y+this.borderTop<=t.y&&t.y<=this.AbsolutePosition.y+this.borderBottom))return!0;return!1},t.prototype.marginCollisionDetection=function(t){var e=Math.min(this.AbsolutePosition.x+this.borderMarginRight,t.absolutePosition.x+t.borderMarginRight)-Math.max(this.AbsolutePosition.x+this.borderMarginLeft,t.absolutePosition.x+t.borderMarginLeft),n=Math.min(this.AbsolutePosition.y+this.borderMarginBottom,t.absolutePosition.y+t.borderMarginBottom)-Math.max(this.AbsolutePosition.y+this.borderMarginTop,t.absolutePosition.y+t.borderMarginTop);return e>0&&n>0},t.prototype.liesInsideMargins=function(t){var e=this.AbsolutePosition.x+this.borderMarginLeft<=t.absolutePosition.x+t.borderMarginLeft&&t.absolutePosition.x+t.borderMarginLeft<=this.AbsolutePosition.x+this.borderMarginRight,n=this.AbsolutePosition.x+this.borderMarginLeft<=t.absolutePosition.x+t.borderMarginRight&&t.absolutePosition.x+t.borderMarginRight<=this.AbsolutePosition.x+this.borderMarginRight;if(e&&n){var i=this.AbsolutePosition.y+this.borderMarginTop<=t.absolutePosition.y+t.borderMarginTop&&t.absolutePosition.y+t.borderMarginTop<=this.AbsolutePosition.y+this.borderMarginBottom,r=this.AbsolutePosition.y+this.borderMarginTop<=t.absolutePosition.y+t.borderMarginBottom&&t.absolutePosition.y+t.borderMarginBottom<=this.AbsolutePosition.y+this.borderMarginBottom;if(i&&r)return!0}return!1},t.prototype.pointLiesInsideMargins=function(t){if(this.AbsolutePosition.x+this.borderMarginLeft<=t.x&&t.x<=this.AbsolutePosition.x+this.borderMarginRight&&(this.AbsolutePosition.y+this.borderMarginTop<=t.y&&t.y<=this.AbsolutePosition.y+this.borderMarginBottom))return!0;return!1},t.prototype.computeNonOverlappingPosition=function(t,e,n){this.RelativePosition=new o.PointF2D(n.x,n.y),this.setAbsolutePositionFromParent();var s=0,a=!1;do{switch(e){case i.Left:case i.Right:s=this.relativePosition.x,t.calculatePositionAlongDirection(this,e),a=Math.abs(s-this.relativePosition.x)>1e-4;break;case i.Up:case i.Down:s=this.relativePosition.y,t.calculatePositionAlongDirection(this,e),a=Math.abs(s-this.relativePosition.y)>1e-4;break;default:throw new r.ArgumentOutOfRangeException("direction")}}while(a)},t.prototype.getClickedObjectOfType=function(t){var e=this.dataObject;if(this.pointLiesInsideBorders(t)&&void 0!==e)return e;for(var n=0,i=this.childElements.length;n<i;++n){var r=this.childElements[n].getClickedObjectOfType(t);if(void 0!==r)return r}},t.prototype.getObjectsInRegion=function(t,e){if(void 0===e&&(e=!0),void 0!==this.dataObject)if(e){if(t.liesInsideBorders(this))return[this.dataObject]}else if(t.collisionDetection(this))return[this.dataObject];for(var n=[],i=0,r=this.childElements;i<r.length;i++){var o=r[i];n.concat(o.getObjectsInRegion(t,e))}return n},t.prototype.calculateRectangle=function(){this.upperLeftCorner=new o.PointF2D(this.borderLeft,this.borderTop),this.size=new s.SizeF2D(this.borderRight-this.borderLeft,this.borderBottom-this.borderTop),this.boundingRectangle=a.RectangleF2D.createFromLocationAndSize(this.upperLeftCorner,this.size)},t.prototype.calculateMarginRectangle=function(){this.upperLeftMarginCorner=new o.PointF2D(this.borderMarginLeft,this.borderMarginTop),this.marginSize=new s.SizeF2D(this.borderMarginRight-this.borderMarginLeft,this.borderMarginBottom-this.borderMarginTop),this.boundingMarginRectangle=a.RectangleF2D.createFromLocationAndSize(this.upperLeftMarginCorner,this.marginSize)},t.prototype.calculateMarginPositionAlongDirection=function(t,e){if(this!==t){if(this.isSymbol&&this.marginCollisionDetection(t)){var n=0;switch(e){case i.Left:return n=this.absolutePosition.x+this.borderMarginLeft-(t.absolutePosition.x+t.borderMarginRight),t.relativePosition.x+=n,void(t.absolutePosition.x+=n);case i.Right:return n=this.absolutePosition.x+this.borderMarginRight-(t.absolutePosition.x+t.borderMarginLeft),t.relativePosition.x+=n,void(t.absolutePosition.x+=n);case i.Up:return n=this.absolutePosition.y+this.borderMarginTop-(t.absolutePosition.y+t.borderMarginBottom),t.relativePosition.y+=n,void(t.absolutePosition.y+=n);case i.Down:return n=this.absolutePosition.y+this.borderMarginBottom-(t.absolutePosition.y+t.borderMarginTop),t.relativePosition.y+=n,void(t.absolutePosition.y+=n);default:throw new r.ArgumentOutOfRangeException("direction")}}for(var o=0,s=this.ChildElements.length;o<s;++o){this.ChildElements[o].calculateMarginPositionAlongDirection(t,e)}}},t.prototype.calculatePositionAlongDirection=function(t,e){if(this!==t){if(this.isSymbol&&this.collisionDetection(t)){var n=void 0;switch(e){case i.Left:return n=this.absolutePosition.x+this.borderLeft-(t.absolutePosition.x+t.borderRight),t.relativePosition.x+=n,void(t.absolutePosition.x+=n);case i.Right:return n=this.absolutePosition.x+this.borderRight-(t.absolutePosition.x+t.borderLeft),t.relativePosition.x+=n,void(t.absolutePosition.x+=n);case i.Up:return n=this.absolutePosition.y+this.borderTop-(t.absolutePosition.y+t.borderBottom),t.relativePosition.y+=n,void(t.absolutePosition.y+=n);case i.Down:return n=this.absolutePosition.y+this.borderBottom-(t.absolutePosition.y+t.borderTop),t.relativePosition.y+=n,void(t.absolutePosition.y+=n);default:throw new r.ArgumentOutOfRangeException("direction")}}for(var o=0,s=this.ChildElements.length;o<s;++o){this.ChildElements[o].calculatePositionAlongDirection(t,e)}}},t}();e.BoundingBox=u,function(t){t[t.Left=0]="Left",t[t.Right=1]="Right",t[t.Up=2]="Up",t[t.Down=3]="Down"}(i=e.ColDirEnum||(e.ColDirEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=0,this.y=0,this.x=t,this.y=e}return Object.defineProperty(t,"Empty",{get:function(){return new t},enumerable:!0,configurable:!0}),t.pointsAreEqual=function(t,e){return t.x===e.x&&t.y===e.y},t.prototype.ToString=function(){return"["+this.x+", "+this.y+"]"},t}();e.PointF2D=i},function(t,e,n){"use strict";function i(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}i.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var n=0;n<this._listeners[t].length;n++)this._listeners[t][n].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.end()}),t.on("error",function(t){e.error(t)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var t=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},t.exports=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return Object.defineProperty(t.prototype,"PositionAndShape",{get:function(){return this.boundingBox},set:function(t){this.boundingBox=t},enumerable:!0,configurable:!0}),t}();e.GraphicalObject=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o,s,a=n(2),u=n(61),c=n(2),l=n(2),h=n(17),f=function(t){function e(e,n,i){void 0===e&&(e=o.G),void 0===n&&(n=0),void 0===i&&(i=2);var r=t.call(this,void 0)||this;return r.clefType=o.G,r.line=2,r.octaveOffset=0,r.line=i,r.clefType=e,r.octaveOffset=n,r.calcParameters(),r}return r(e,t),e.getDefaultClefFromMidiInstrument=function(t){switch(t){case s.Acoustic_Grand_Piano:case s.Electric_Bass_finger:case s.Electric_Bass_pick:case s.Fretless_Bass:case s.Slap_Bass_1:case s.Slap_Bass_2:case s.Synth_Bass_1:case s.Synth_Bass_2:case s.Contrabass:return new e(o.F,0,4);default:return new e(o.G,0,2)}},e.getAllPossibleClefs=function(){for(var t=[],n=0;n<=2;n++){var i=new e(o.G,n,2);t.push(i)}for(var r=-2;r<=0;r++){var s=new e(o.F,r,4);t.push(s)}return t},e.isSupportedClef=function(t){switch(t){case o.G:case o.F:case o.C:case o.percussion:return!0;default:return!1}},Object.defineProperty(e.prototype,"ClefType",{get:function(){return this.clefType},set:function(t){this.clefType=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Line",{get:function(){return this.line},set:function(t){this.line=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"OctaveOffset",{get:function(){return this.octaveOffset},set:function(t){this.octaveOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ClefPitch",{get:function(){return this.clefPitch},set:function(t){this.clefPitch=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ReferenceCyPosition",{get:function(){return this.referenceCyPosition},set:function(t){this.referenceCyPosition=t},enumerable:!0,configurable:!0}),e.prototype.Equals=function(t){return this===t||void 0!==this&&void 0!==t&&(this.ClefPitch===t.ClefPitch&&this.Line===t.Line)},e.prototype.NotEqual=function(t){return!this.Equals(t)},e.prototype.ToString=function(){return"ClefType: "+this.clefType},e.prototype.calcParameters=function(){switch(this.clefType){case o.G:this.clefPitch=new a.Pitch(c.NoteEnum.G,1+this.octaveOffset,l.AccidentalEnum.NONE),this.referenceCyPosition=5-this.line+2;break;case o.F:this.clefPitch=new a.Pitch(c.NoteEnum.F,0+this.octaveOffset,l.AccidentalEnum.NONE),this.referenceCyPosition=5-this.line+1.5;break;case o.C:this.clefPitch=new a.Pitch(c.NoteEnum.C,1+this.octaveOffset,l.AccidentalEnum.NONE),this.referenceCyPosition=5-this.line;break;case o.percussion:this.clefPitch=new a.Pitch(c.NoteEnum.C,2,l.AccidentalEnum.NONE),this.referenceCyPosition=2;break;default:throw new h.ArgumentOutOfRangeException("clefType")}},e}(u.AbstractNotationInstruction);e.ClefInstruction=f,function(t){t[t.G=0]="G",t[t.F=1]="F",t[t.C=2]="C",t[t.percussion=3]="percussion",t[t.TAB=4]="TAB"}(o=e.ClefEnum||(e.ClefEnum={})),function(t){t[t.None=-1]="None",t[t.Acoustic_Grand_Piano=0]="Acoustic_Grand_Piano",t[t.Bright_Acoustic_Piano=1]="Bright_Acoustic_Piano",t[t.Electric_Grand_Piano=2]="Electric_Grand_Piano",t[t.Honky_tonk_Piano=3]="Honky_tonk_Piano",t[t.Electric_Piano_1=4]="Electric_Piano_1",t[t.Electric_Piano_2=5]="Electric_Piano_2",t[t.Harpsichord=6]="Harpsichord",t[t.Clavinet=7]="Clavinet",t[t.Celesta=8]="Celesta",t[t.Glockenspiel=9]="Glockenspiel",t[t.Music_Box=10]="Music_Box",t[t.Vibraphone=11]="Vibraphone",t[t.Marimba=12]="Marimba",t[t.Xylophone=13]="Xylophone",t[t.Tubular_Bells=14]="Tubular_Bells",t[t.Dulcimer=15]="Dulcimer",t[t.Drawbar_Organ=16]="Drawbar_Organ",t[t.Percussive_Organ=17]="Percussive_Organ",t[t.Rock_Organ=18]="Rock_Organ",t[t.Church_Organ=19]="Church_Organ",t[t.Reed_Organ=20]="Reed_Organ",t[t.Accordion=21]="Accordion",t[t.Harmonica=22]="Harmonica",t[t.Tango_Accordion=23]="Tango_Accordion",t[t.Acoustic_Guitar_nylon=24]="Acoustic_Guitar_nylon",t[t.Acoustic_Guitar_steel=25]="Acoustic_Guitar_steel",t[t.Electric_Guitar_jazz=26]="Electric_Guitar_jazz",t[t.Electric_Guitar_clean=27]="Electric_Guitar_clean",t[t.Electric_Guitar_muted=28]="Electric_Guitar_muted",t[t.Overdriven_Guitar=29]="Overdriven_Guitar",t[t.Distortion_Guitar=30]="Distortion_Guitar",t[t.Guitar_harmonics=31]="Guitar_harmonics",t[t.Acoustic_Bass=32]="Acoustic_Bass",t[t.Electric_Bass_finger=33]="Electric_Bass_finger",t[t.Electric_Bass_pick=34]="Electric_Bass_pick",t[t.Fretless_Bass=35]="Fretless_Bass",t[t.Slap_Bass_1=36]="Slap_Bass_1",t[t.Slap_Bass_2=37]="Slap_Bass_2",t[t.Synth_Bass_1=38]="Synth_Bass_1",t[t.Synth_Bass_2=39]="Synth_Bass_2",t[t.Violin=40]="Violin",t[t.Viola=41]="Viola",t[t.Cello=42]="Cello",t[t.Contrabass=43]="Contrabass",t[t.Tremolo_Strings=44]="Tremolo_Strings",t[t.Pizzicato_Strings=45]="Pizzicato_Strings",t[t.Orchestral_Harp=46]="Orchestral_Harp",t[t.Timpani=47]="Timpani",t[t.String_Ensemble_1=48]="String_Ensemble_1",t[t.String_Ensemble_2=49]="String_Ensemble_2",t[t.Synth_Strings_1=50]="Synth_Strings_1",t[t.Synth_Strings_2=51]="Synth_Strings_2",t[t.Choir_Aahs=52]="Choir_Aahs",t[t.Voice_Oohs=53]="Voice_Oohs",t[t.Synth_Voice=54]="Synth_Voice",t[t.Orchestra_Hit=55]="Orchestra_Hit",t[t.Trumpet=56]="Trumpet",t[t.Trombone=57]="Trombone",t[t.Tuba=58]="Tuba",t[t.Muted_Trumpet=59]="Muted_Trumpet",t[t.French_Horn=60]="French_Horn",t[t.Brass_Section=61]="Brass_Section",t[t.Synth_Brass_1=62]="Synth_Brass_1",t[t.Synth_Brass_2=63]="Synth_Brass_2",t[t.Soprano_Sax=64]="Soprano_Sax",t[t.Alto_Sax=65]="Alto_Sax",t[t.Tenor_Sax=66]="Tenor_Sax",t[t.Baritone_Sax=67]="Baritone_Sax",t[t.Oboe=68]="Oboe",t[t.English_Horn=69]="English_Horn",t[t.Bassoon=70]="Bassoon",t[t.Clarinet=71]="Clarinet",t[t.Piccolo=72]="Piccolo",t[t.Flute=73]="Flute",t[t.Recorder=74]="Recorder",t[t.Pan_Flute=75]="Pan_Flute",t[t.Blown_Bottle=76]="Blown_Bottle",t[t.Shakuhachi=77]="Shakuhachi",t[t.Whistle=78]="Whistle",t[t.Ocarina=79]="Ocarina",t[t.Lead_1_square=80]="Lead_1_square",t[t.Lead_2_sawtooth=81]="Lead_2_sawtooth",t[t.Lead_3_calliope=82]="Lead_3_calliope",t[t.Lead_4_chiff=83]="Lead_4_chiff",t[t.Lead_5_charang=84]="Lead_5_charang",t[t.Lead_6_voice=85]="Lead_6_voice",t[t.Lead_7_fifths=86]="Lead_7_fifths",t[t.Lead_8_bass_lead=87]="Lead_8_bass_lead",t[t.Pad_1_new_age=88]="Pad_1_new_age",t[t.Pad_2_warm=89]="Pad_2_warm",t[t.Pad_3_polysynth=90]="Pad_3_polysynth",t[t.Pad_4_choir=91]="Pad_4_choir",t[t.Pad_5_bowed=92]="Pad_5_bowed",t[t.Pad_6_metallic=93]="Pad_6_metallic",t[t.Pad_7_halo=94]="Pad_7_halo",t[t.Pad_8_sweep=95]="Pad_8_sweep",t[t.FX_1_rain=96]="FX_1_rain",t[t.FX_2_soundtrack=97]="FX_2_soundtrack",t[t.FX_3_crystal=98]="FX_3_crystal",t[t.FX_4_atmosphere=99]="FX_4_atmosphere",t[t.FX_5_brightness=100]="FX_5_brightness",t[t.FX_6_goblins=101]="FX_6_goblins",t[t.FX_7_echoes=102]="FX_7_echoes",t[t.FX_8_scifi=103]="FX_8_scifi",t[t.Sitar=104]="Sitar",t[t.Banjo=105]="Banjo",t[t.Shamisen=106]="Shamisen",t[t.Koto=107]="Koto",t[t.Kalimba=108]="Kalimba",t[t.Bag_pipe=109]="Bag_pipe",t[t.Fiddle=110]="Fiddle",t[t.Shanai=111]="Shanai",t[t.Tinkle_Bell=112]="Tinkle_Bell",t[t.Agogo=113]="Agogo",t[t.Steel_Drums=114]="Steel_Drums",t[t.Woodblock=115]="Woodblock",t[t.Taiko_Drum=116]="Taiko_Drum",t[t.Melodic_Tom=117]="Melodic_Tom",t[t.Synth_Drum=118]="Synth_Drum",t[t.Reverse_Cymbal=119]="Reverse_Cymbal",t[t.Guitar_Fret_Noise=120]="Guitar_Fret_Noise",t[t.Breath_Noise=121]="Breath_Noise",t[t.Seashore=122]="Seashore",t[t.Bird_Tweet=123]="Bird_Tweet",t[t.Telephone_Ring=124]="Telephone_Ring",t[t.Helicopter=125]="Helicopter",t[t.Applause=126]="Applause",t[t.Gunshot=127]="Gunshot",t[t.Percussion=128]="Percussion"}(s=e.MidiInstrument||(e.MidiInstrument={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=Object.prototype.hasOwnProperty;function r(t){return"function"==typeof t}function o(t){return void 0===t}function s(t){return"[object String]"===Object.prototype.toString.call(t)}e.has=function(t,e){return i.call(t,e)},e.defaultCompare=function(t,e){return t<e?-1:t===e?0:1},e.defaultEquals=function(t,e){return t===e},e.defaultToString=function(t){return null===t?"COLLECTION_NULL":o(t)?"COLLECTION_UNDEFINED":s(t)?"$s"+t:"$o"+t.toString()},e.makeString=function(t,n){if(void 0===n&&(n=","),null===t)return"COLLECTION_NULL";if(o(t))return"COLLECTION_UNDEFINED";if(s(t))return t.toString();var i="{",r=!0;for(var a in t)e.has(t,a)&&(r?r=!1:i+=n,i=i+a+":"+t[a]);return i+"}"},e.isFunction=r,e.isUndefined=o,e.isString=s,e.reverseCompareFunction=function(t){return r(t)?function(e,n){return-1*t(e,n)}:function(t,e){return t<e?1:t===e?0:-1}},e.compareToEquals=function(t){return function(e,n){return 0===t(e,n)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=function(){function t(t){this.table={},this.nElements=0,this.toStr=t||i.defaultToString}return t.prototype.getValue=function(t){var e=this.table["$"+this.toStr(t)];if(!i.isUndefined(e))return e.value},t.prototype.setValue=function(t,e){if(!i.isUndefined(t)&&!i.isUndefined(e)){var n,r="$"+this.toStr(t),o=this.table[r];return i.isUndefined(o)?(this.nElements++,n=void 0):n=o.value,this.table[r]={key:t,value:e},n}},t.prototype.remove=function(t){var e="$"+this.toStr(t),n=this.table[e];if(!i.isUndefined(n))return delete this.table[e],this.nElements--,n.value},t.prototype.keys=function(){var t=[];for(var e in this.table)if(i.has(this.table,e)){var n=this.table[e];t.push(n.key)}return t},t.prototype.values=function(){var t=[];for(var e in this.table)if(i.has(this.table,e)){var n=this.table[e];t.push(n.value)}return t},t.prototype.forEach=function(t){for(var e in this.table)if(i.has(this.table,e)){var n=this.table[e];if(!1===t(n.key,n.value))return}},t.prototype.containsKey=function(t){return!i.isUndefined(this.getValue(t))},t.prototype.clear=function(){this.table={},this.nElements=0},t.prototype.size=function(){return this.nElements},t.prototype.isEmpty=function(){return this.nElements<=0},t.prototype.toString=function(){var t="{";return this.forEach(function(e,n){t+="\n\t"+e+" : "+n}),t+"\n}"},t}();e.default=r},function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var i=n(165),r=n(164),o=n(88);function s(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(s()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return h(this,t)}return c(this,t,e,n)}function c(t,e,n,i){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,i){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(i||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,n):new Uint8Array(e,n,i);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=f(t,e);return t}(t,e,n,i):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var i=0|d(e,n),r=(t=a(t,i)).write(e,n);r!==i&&(t=t.slice(0,r));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=a(t,n)).length?t:(e.copy(t,0,0,n),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(i=e.length)!=i?a(t,0):f(t,e);if("Buffer"===e.type&&o(e.data))return f(t,e.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function h(t,e){if(l(e),t=a(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function f(t,e){var n=e.length<0?0:0|p(e.length);t=a(t,n);for(var i=0;i<n;i+=1)t[i]=255&e[i];return t}function p(t){if(t>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|t}function d(t,e){if(u.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var i=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return j(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return G(t).length;default:if(i)return j(t).length;e=(""+e).toLowerCase(),i=!0}}function b(t,e,n){var i=t[e];t[e]=t[n],t[n]=i}function y(t,e,n,i,r){if(0===t.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(r)return-1;n=t.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof e&&(e=u.from(e,i)),u.isBuffer(e))return 0===e.length?-1:m(t,e,n,i,r);if("number"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):m(t,[e],n,i,r);throw new TypeError("val must be string, number or Buffer")}function m(t,e,n,i,r){var o,s=1,a=t.length,u=e.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(t.length<2||e.length<2)return-1;s=2,a/=2,u/=2,n/=2}function c(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(r){var l=-1;for(o=n;o<a;o++)if(c(t,o)===c(e,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(n+u>a&&(n=a-u),o=n;o>=0;o--){for(var h=!0,f=0;f<u;f++)if(c(t,o+f)!==c(e,f)){h=!1;break}if(h)return o}return-1}function v(t,e,n,i){n=Number(n)||0;var r=t.length-n;i?(i=Number(i))>r&&(i=r):i=r;var o=e.length;if(o%2!=0)throw new TypeError("Invalid hex string");i>o/2&&(i=o/2);for(var s=0;s<i;++s){var a=parseInt(e.substr(2*s,2),16);if(isNaN(a))return s;t[n+s]=a}return s}function g(t,e,n,i){return W(j(e,t.length-n),t,n,i)}function _(t,e,n,i){return W(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,i)}function S(t,e,n,i){return _(t,e,n,i)}function x(t,e,n,i){return W(G(e),t,n,i)}function w(t,e,n,i){return W(function(t,e){for(var n,i,r,o=[],s=0;s<t.length&&!((e-=2)<0);++s)n=t.charCodeAt(s),i=n>>8,r=n%256,o.push(r),o.push(i);return o}(e,t.length-n),t,n,i)}function E(t,e,n){return 0===e&&n===t.length?i.fromByteArray(t):i.fromByteArray(t.slice(e,n))}function P(t,e,n){n=Math.min(t.length,n);for(var i=[],r=e;r<n;){var o,s,a,u,c=t[r],l=null,h=c>239?4:c>223?3:c>191?2:1;if(r+h<=n)switch(h){case 1:c<128&&(l=c);break;case 2:128==(192&(o=t[r+1]))&&(u=(31&c)<<6|63&o)>127&&(l=u);break;case 3:o=t[r+1],s=t[r+2],128==(192&o)&&128==(192&s)&&(u=(15&c)<<12|(63&o)<<6|63&s)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=t[r+1],s=t[r+2],a=t[r+3],128==(192&o)&&128==(192&s)&&128==(192&a)&&(u=(15&c)<<18|(63&o)<<12|(63&s)<<6|63&a)>65535&&u<1114112&&(l=u)}null===l?(l=65533,h=1):l>65535&&(l-=65536,i.push(l>>>10&1023|55296),l=56320|1023&l),i.push(l),r+=h}return function(t){var e=t.length;if(e<=T)return String.fromCharCode.apply(String,t);var n="",i=0;for(;i<e;)n+=String.fromCharCode.apply(String,t.slice(i,i+=T));return n}(i)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=s(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,i){return l(e),e<=0?a(t,e):void 0!==n?"string"==typeof i?a(t,e).fill(n,i):a(t,e).fill(n):a(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return h(null,t)},u.allocUnsafeSlow=function(t){return h(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,i=e.length,r=0,o=Math.min(n,i);r<o;++r)if(t[r]!==e[r]){n=t[r],i=e[r];break}return n<i?-1:i<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!o(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var i=u.allocUnsafe(e),r=0;for(n=0;n<t.length;++n){var s=t[n];if(!u.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(i,r),r+=s.length}return i},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?P(this,0,t):function(t,e,n){var i=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return O(this,e,n);case"utf8":case"utf-8":return P(this,e,n);case"ascii":return M(this,e,n);case"latin1":case"binary":return k(this,e,n);case"base64":return E(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,n);default:if(i)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),i=!0}}.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,i,r){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===i&&(i=0),void 0===r&&(r=this.length),e<0||n>t.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&e>=n)return 0;if(i>=r)return-1;if(e>=n)return 1;if(e>>>=0,n>>>=0,i>>>=0,r>>>=0,this===t)return 0;for(var o=r-i,s=n-e,a=Math.min(o,s),c=this.slice(i,r),l=t.slice(e,n),h=0;h<a;++h)if(c[h]!==l[h]){o=c[h],s=l[h];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return y(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return y(this,t,e,n,!1)},u.prototype.write=function(t,e,n,i){if(void 0===e)i="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)i=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===i&&(i="utf8")):(i=n,n=void 0)}var r=this.length-e;if((void 0===n||n>r)&&(n=r),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var o=!1;;)switch(i){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return g(this,t,e,n);case"ascii":return _(this,t,e,n);case"latin1":case"binary":return S(this,t,e,n);case"base64":return x(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return w(this,t,e,n);default:if(o)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var T=4096;function M(t,e,n){var i="";n=Math.min(t.length,n);for(var r=e;r<n;++r)i+=String.fromCharCode(127&t[r]);return i}function k(t,e,n){var i="";n=Math.min(t.length,n);for(var r=e;r<n;++r)i+=String.fromCharCode(t[r]);return i}function O(t,e,n){var i=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>i)&&(n=i);for(var r="",o=e;o<n;++o)r+=V(t[o]);return r}function A(t,e,n){for(var i=t.slice(e,n),r="",o=0;o<i.length;o+=2)r+=String.fromCharCode(i[o]+256*i[o+1]);return r}function C(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function L(t,e,n,i,r,o){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>r||e<o)throw new RangeError('"value" argument is out of bounds');if(n+i>t.length)throw new RangeError("Index out of range")}function I(t,e,n,i){e<0&&(e=65535+e+1);for(var r=0,o=Math.min(t.length-n,2);r<o;++r)t[n+r]=(e&255<<8*(i?r:1-r))>>>8*(i?r:1-r)}function R(t,e,n,i){e<0&&(e=4294967295+e+1);for(var r=0,o=Math.min(t.length-n,4);r<o;++r)t[n+r]=e>>>8*(i?r:3-r)&255}function N(t,e,n,i,r,o){if(n+i>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function F(t,e,n,i,o){return o||N(t,0,n,4),r.write(t,e,n,i,23,4),n+4}function B(t,e,n,i,o){return o||N(t,0,n,8),r.write(t,e,n,i,52,8),n+8}u.prototype.slice=function(t,e){var n,i=this.length;if(t=~~t,e=void 0===e?i:~~e,t<0?(t+=i)<0&&(t=0):t>i&&(t=i),e<0?(e+=i)<0&&(e=0):e>i&&(e=i),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var r=e-t;n=new u(r,void 0);for(var o=0;o<r;++o)n[o]=this[o+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var i=this[t],r=1,o=0;++o<e&&(r*=256);)i+=this[t+o]*r;return i},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var i=this[t+--e],r=1;e>0&&(r*=256);)i+=this[t+--e]*r;return i},u.prototype.readUInt8=function(t,e){return e||C(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||C(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||C(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||C(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||C(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var i=this[t],r=1,o=0;++o<e&&(r*=256);)i+=this[t+o]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*e)),i},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||C(t,e,this.length);for(var i=e,r=1,o=this[t+--i];i>0&&(r*=256);)o+=this[t+--i]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*e)),o},u.prototype.readInt8=function(t,e){return e||C(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||C(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||C(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||C(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||C(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||C(t,4,this.length),r.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||C(t,4,this.length),r.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||C(t,8,this.length),r.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||C(t,8,this.length),r.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,i){(t=+t,e|=0,n|=0,i)||L(this,t,e,n,Math.pow(2,8*n)-1,0);var r=1,o=0;for(this[e]=255&t;++o<n&&(r*=256);)this[e+o]=t/r&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,i){(t=+t,e|=0,n|=0,i)||L(this,t,e,n,Math.pow(2,8*n)-1,0);var r=n-1,o=1;for(this[e+r]=255&t;--r>=0&&(o*=256);)this[e+r]=t/o&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):R(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):R(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,i){if(t=+t,e|=0,!i){var r=Math.pow(2,8*n-1);L(this,t,e,n,r-1,-r)}var o=0,s=1,a=0;for(this[e]=255&t;++o<n&&(s*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+n},u.prototype.writeIntBE=function(t,e,n,i){if(t=+t,e|=0,!i){var r=Math.pow(2,8*n-1);L(this,t,e,n,r-1,-r)}var o=n-1,s=1,a=0;for(this[e+o]=255&t;--o>=0&&(s*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/s>>0)-a&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):R(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||L(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):R(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return F(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return F(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return B(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return B(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,i){if(n||(n=0),i||0===i||(i=this.length),e>=t.length&&(e=t.length),e||(e=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),t.length-e<i-n&&(i=t.length-e+n);var r,o=i-n;if(this===t&&n<e&&e<i)for(r=o-1;r>=0;--r)t[r+e]=this[r+n];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(r=0;r<o;++r)t[r+e]=this[r+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},u.prototype.fill=function(t,e,n,i){if("string"==typeof t){if("string"==typeof e?(i=e,e=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),1===t.length){var r=t.charCodeAt(0);r<256&&(t=r)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!u.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var o;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(o=e;o<n;++o)this[o]=t;else{var s=u.isBuffer(t)?t:j(new u(t,i).toString()),a=s.length;for(o=0;o<n-e;++o)this[o+e]=s[o%a]}return this};var D=/[^+\/0-9A-Za-z-_]/g;function V(t){return t<16?"0"+t.toString(16):t.toString(16)}function j(t,e){var n;e=e||1/0;for(var i=t.length,r=null,o=[],s=0;s<i;++s){if((n=t.charCodeAt(s))>55295&&n<57344){if(!r){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===i){(e-=3)>-1&&o.push(239,191,189);continue}r=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(e-=3)>-1&&o.push(239,191,189);if(r=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function G(t){return i.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(D,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function W(t,e,n,i){for(var r=0;r<i&&!(r+n>=e.length||r>=t.length);++r)e[r+n]=t[r];return r}}).call(this,n(23))},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(61),s=n(2),a=n(2),u=function(t){function e(e,n,i){void 0===e&&(e=void 0),void 0===n&&(n=0),void 0===i&&(i=c.major);var r=t.call(this,e)||this;return r.Key=n,r.mode=i,r}return r(e,t),e.copy=function(t){return new e(t.parent,t.Key,t.Mode)},e.getNoteEnumList=function(t){var n=[];if(t.keyType>0)for(var i=0;i<t.keyType;i++)n.push(e.sharpPositionList[i]);if(t.keyType<0)for(i=0;i<Math.abs(t.keyType);i++)n.push(e.flatPositionList[i]);return n},e.getAllPossibleMajorKeyInstructions=function(){for(var t=[],n=-7;n<7;n++){var i=new e(void 0,n,c.major);t.push(i)}return t},Object.defineProperty(e.prototype,"Key",{get:function(){return this.keyType},set:function(t){this.keyType=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Mode",{get:function(){return this.mode},set:function(t){this.mode=t},enumerable:!0,configurable:!0}),e.prototype.getFundamentalNotesOfAccidentals=function(){var t=[];if(this.keyType>0)for(var n=0;n<this.keyType;n++)t.push(e.sharpPositionList[n]);else if(this.keyType<0)for(n=0;n<-this.keyType;n++)t.push(e.flatPositionList[n]);return t},e.prototype.getAlterationForPitch=function(t){return this.keyType>0&&e.sharpPositionList.indexOf(t.FundamentalNote)<=this.keyType?a.AccidentalEnum.SHARP:this.keyType<0&&e.flatPositionList.indexOf(t.FundamentalNote)<=Math.abs(this.keyType)?a.AccidentalEnum.FLAT:a.AccidentalEnum.NONE},e.prototype.ToString=function(){return"Key: "+this.keyType+this.mode},e.prototype.OperatorEquals=function(t){return this===t||void 0!==this&&void 0!==t&&(this.Key===t.Key&&this.Mode===t.Mode)},e.prototype.OperatorNotEqual=function(t){return!this.OperatorEquals(t)},e.sharpPositionList=[s.NoteEnum.F,s.NoteEnum.C,s.NoteEnum.G,s.NoteEnum.D,s.NoteEnum.A,s.NoteEnum.E,s.NoteEnum.B],e.flatPositionList=[s.NoteEnum.B,s.NoteEnum.E,s.NoteEnum.A,s.NoteEnum.D,s.NoteEnum.G,s.NoteEnum.C,s.NoteEnum.F],e}(o.AbstractNotationInstruction);e.KeyInstruction=u;var c,l=function(){return function(t,e){this.note=t,this.halfTone=e}}();e.NoteEnumToHalfToneLink=l,function(t){t[t.major=0]="major",t[t.minor=1]="minor",t[t.none=2]="none",t[t.dorian=3]="dorian",t[t.phrygian=4]="phrygian",t[t.lydian=5]="lydian",t[t.mixolydian=6]="mixolydian",t[t.aeolian=7]="aeolian",t[t.ionian=8]="ionian",t[t.locrian=9]="locrian"}(c=e.KeyEnum||(e.KeyEnum={}))},function(t,e,n){"use strict";var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;function r(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var n=e.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(var i in n)r(n,i)&&(t[i]=n[i])}}return t},e.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var o={arraySet:function(t,e,n,i,r){if(e.subarray&&t.subarray)t.set(e.subarray(n,n+i),r);else for(var o=0;o<i;o++)t[r+o]=e[n+o]},flattenChunks:function(t){var e,n,i,r,o,s;for(i=0,e=0,n=t.length;e<n;e++)i+=t[e].length;for(s=new Uint8Array(i),r=0,e=0,n=t.length;e<n;e++)o=t[e],s.set(o,r),r+=o.length;return s}},s={arraySet:function(t,e,n,i,r){for(var o=0;o<i;o++)t[r+o]=e[n+o]},flattenChunks:function(t){return[].concat.apply([],t)}};e.setTyped=function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,o)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,s))},e.setTyped(i)},function(t,e,n){"use strict";(function(t){if(e.base64=!0,e.array=!0,e.string=!0,e.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,e.nodebuffer=void 0!==t,e.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)e.blob=!1;else{var i=new ArrayBuffer(0);try{e.blob=0===new Blob([i],{type:"application/zip"}).size}catch(t){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);r.append(i),e.blob=0===r.getBlob("application/zip").size}catch(t){e.blob=!1}}}try{e.nodestream=!!n(87).Readable}catch(t){e.nodestream=!1}}).call(this,n(11).Buffer)},function(t,e,n){var i;i=function(){return function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={exports:{},id:i,loaded:!1};return t[i].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}return n.m=t,n.c=e,n.p="",n(0)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=n(2),o=n(5),s=n(3),a=n(10),u=n(14),c=n(30),l=n(4),h=n(43),f=n(20),p=n(45),d=n(18),b=n(29),y=n(15),m=n(33),v=n(55),g=n(56),_=n(41),S=n(42),x=n(57),w=n(22),E=n(27),P=n(39),T=n(37),M=n(40),k=n(44),O=n(21),A=n(19),C=n(58),L=n(52),I=n(53),R=n(59),N=n(17),F=n(34),B=n(51),D=n(25),V=n(60),j=n(16),G=n(61),W=n(62),U=n(63),H=n(64),z=n(65),Y=n(8),X=n(35),K=n(50),q=n(66),J=n(67),Z=n(68),Q=n(38),$=n(69),tt=n(70),et=n(28),nt=n(46),it=n(71),rt=n(72),ot=n(31),st=n(32),at=n(73),ut=n(36),ct=n(74),lt=n(54),ht=n(9),ft=n(75),pt=n(76),dt=n(78),bt=n(77),yt=n(6);i.Vex.Flow=r.Flow,i.Vex.Flow.Element=o.Element,i.Vex.Flow.Fraction=s.Fraction,i.Vex.Flow.Renderer=a.Renderer,i.Vex.Flow.Formatter=u.Formatter,i.Vex.Flow.Music=c.Music,i.Vex.Flow.Glyph=l.Glyph,i.Vex.Flow.Stave=h.Stave,i.Vex.Flow.StaveNote=f.StaveNote,i.Vex.Flow.StaveModifier=p.StaveModifier,i.Vex.Flow.Voice=d.Voice,i.Vex.Flow.Accidental=b.Accidental,i.Vex.Flow.Beam=y.Beam,i.Vex.Flow.StaveTie=m.StaveTie,i.Vex.Flow.TabStave=v.TabStave,i.Vex.Flow.TabNote=g.TabNote,i.Vex.Flow.Bend=_.Bend,i.Vex.Flow.Vibrato=S.Vibrato,i.Vex.Flow.VibratoBracket=x.VibratoBracket,i.Vex.Flow.Note=w.Note,i.Vex.Flow.ModifierContext=E.ModifierContext,i.Vex.Flow.TickContext=P.TickContext,i.Vex.Flow.Articulation=T.Articulation,i.Vex.Flow.Annotation=M.Annotation,i.Vex.Flow.Barline=k.Barline,i.Vex.Flow.NoteHead=O.NoteHead,i.Vex.Flow.StaveConnector=A.StaveConnector,i.Vex.Flow.ClefNote=C.ClefNote,i.Vex.Flow.KeySignature=L.KeySignature,i.Vex.Flow.TimeSignature=I.TimeSignature,i.Vex.Flow.TimeSigNote=R.TimeSigNote,i.Vex.Flow.Stem=N.Stem,i.Vex.Flow.TabTie=F.TabTie,i.Vex.Flow.Clef=B.Clef,i.Vex.Flow.Modifier=D.Modifier,i.Vex.Flow.TabSlide=V.TabSlide,i.Vex.Flow.Tuplet=j.Tuplet,i.Vex.Flow.GraceNote=G.GraceNote,i.Vex.Flow.GraceTabNote=W.GraceTabNote,i.Vex.Flow.Tuning=U.Tuning,i.Vex.Flow.KeyManager=H.KeyManager,i.Vex.Flow.StaveHairpin=z.StaveHairpin,i.Vex.Flow.BoundingBox=Y.BoundingBox,i.Vex.Flow.Stroke=X.Stroke,i.Vex.Flow.TextNote=K.TextNote,i.Vex.Flow.Curve=q.Curve,i.Vex.Flow.TextDynamics=J.TextDynamics,i.Vex.Flow.StaveLine=Z.StaveLine,i.Vex.Flow.Ornament=Q.Ornament,i.Vex.Flow.PedalMarking=$.PedalMarking,i.Vex.Flow.TextBracket=tt.TextBracket,i.Vex.Flow.FretHandFinger=et.FretHandFinger,i.Vex.Flow.Repetition=nt.Repetition,i.Vex.Flow.BarNote=it.BarNote,i.Vex.Flow.GhostNote=rt.GhostNote,i.Vex.Flow.NoteSubGroup=ot.NoteSubGroup,i.Vex.Flow.GraceNoteGroup=st.GraceNoteGroup,i.Vex.Flow.Tremolo=at.Tremolo,i.Vex.Flow.StringNumber=ut.StringNumber,i.Vex.Flow.Crescendo=ct.Crescendo,i.Vex.Flow.Volta=lt.Volta,i.Vex.Flow.Font=ht.Font,i.Vex.Flow.System=ft.System,i.Vex.Flow.Factory=pt.Factory,i.Vex.Flow.Parser=dt.Parser,i.Vex.Flow.EasyScore=bt.EasyScore,i.Vex.Flow.Registry=yt.Registry,e.default=i.Vex,t.exports=e.default},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var r=function(){};r.L=function(t,e){if(e){var n=Array.prototype.slice.call(e).join(" ");window.console.log(t+": "+n)}},r.MakeException=function(t){return function(e){function n(e,r){i(this,n);var o=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return o.name=t,o.message=e,o.data=r,o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(n,Error),n}()};var o=function(){function t(e,n){i(this,t),this.code=e,this.message=n}return n(t,[{key:"toString",value:function(){return"[RuntimeError] "+this.code+":"+this.message}}]),t}();r.RERR=r.RuntimeError=o,r.Merge=function(t,e){for(var n in e)t[n]=e[n];return t},r.Min=Math.min,r.Max=Math.max,r.forEach=function(t,e){for(var n=0;n<t.length;n++)e(t[n],n)},r.RoundN=function(t,e){return t%e>=e/2?parseInt(t/e,10)*e+e:parseInt(t/e,10)*e},r.MidLine=function(t,e){var n=e+(t-e)/2;return n%2>0&&(n=r.RoundN(10*n,5)/10),n},r.SortAndUnique=function(t,e,n){if(t.length>1){var i=[],r=void 0;t.sort(e);for(var o=0;o<t.length;++o)0!==o&&n(t[o],r)||i.push(t[o]),r=t[o];return i}return t},r.Contains=function(t,e){for(var n=t.length;n--;)if(t[n]===e)return!0;return!1},r.getCanvasContext=function(t){if(!t)throw new r.RERR("BadArgument","Invalid canvas selector: "+t);var e=document.getElementById(t);if(!e||!e.getContext)throw new r.RERR("UnsupportedBrowserError","This browser does not support HTML5 Canvas");return e.getContext("2d")},r.drawDot=function(t,e,n){var i=arguments.length<=3||void 0===arguments[3]?"#55":arguments[3];t.save(),t.setFillStyle(i),t.beginPath(),t.arc(e,n,3,0,2*Math.PI,!0),t.closePath(),t.fill(),t.restore()},r.BM=function(t,e){var n=(new Date).getTime();e();var i=(new Date).getTime()-n;r.L(t+i+"ms")},r.StackTrace=function(){return(new Error).stack},r.W=function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];var i=e.join(" ");window.console.log("Warning: ",i,r.StackTrace())},(r.Prefix=function(t){return r.Prefix.prefix+t}).prefix="vf-",e.Vex=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Flow=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=n(1),o=n(3),s=n(4),a={STEM_WIDTH:1.5,STEM_HEIGHT:35,STAVE_LINE_THICKNESS:1,RESOLUTION:16384,DEFAULT_NOTATION_FONT_SCALE:39,DEFAULT_TABLATURE_FONT_SCALE:39,SLASH_NOTEHEAD_WIDTH:15,TEXT_HEIGHT_OFFSET_HACK:1,IsKerned:!0,clefProperties:function(t){if(!t)throw new r.Vex.RERR("BadArgument","Invalid clef: "+t);var e=a.clefProperties.values[t];if(!e)throw new r.Vex.RERR("BadArgument","Invalid clef: "+t);return e}};a.clefProperties.values={treble:{line_shift:0},bass:{line_shift:6},tenor:{line_shift:4},alto:{line_shift:3},soprano:{line_shift:1},percussion:{line_shift:0},"mezzo-soprano":{line_shift:2},"baritone-c":{line_shift:5},"baritone-f":{line_shift:5},subbass:{line_shift:7},french:{line_shift:-1}},a.keyProperties=function(t,e,n){void 0===e&&(e="treble");var o={octave_shift:0};"object"===(void 0===n?"undefined":i(n))&&r.Vex.Merge(o,n);var s=t.split("/");if(s.length<2)throw new r.Vex.RERR("BadArguments","Key must have note + octave and an optional glyph: "+t);var u=s[0].toUpperCase(),c=a.keyProperties.note_values[u];if(!c)throw new r.Vex.RERR("BadArguments","Invalid key name: "+u);c.octave&&(s[1]=c.octave);var l=parseInt(s[1],10),h=(7*(l+=-1*o.octave_shift)-28+c.index)/2,f=0;(h+=a.clefProperties(e).line_shift)<=0&&2*h%2==0&&(f=1),h>=6&&2*h%2==0&&(f=-1);var p=void 0!==c.int_val?12*l+c.int_val:null,d=c.code,b=c.shift_right;if(s.length>2&&s[2]){var y=s[2].toUpperCase(),m=a.keyProperties.note_glyph[y];m&&(d=m.code,b=m.shift_right)}return{key:u,octave:l,line:h,int_value:p,accidental:c.accidental,code:d,stroke:f,shift_right:b,displaced:!1}},a.keyProperties.note_values={C:{index:0,int_val:0,accidental:null},CN:{index:0,int_val:0,accidental:"n"},"C#":{index:0,int_val:1,accidental:"#"},"C##":{index:0,int_val:2,accidental:"##"},CB:{index:0,int_val:-1,accidental:"b"},CBB:{index:0,int_val:-2,accidental:"bb"},D:{index:1,int_val:2,accidental:null},DN:{index:1,int_val:2,accidental:"n"},"D#":{index:1,int_val:3,accidental:"#"},"D##":{index:1,int_val:4,accidental:"##"},DB:{index:1,int_val:1,accidental:"b"},DBB:{index:1,int_val:0,accidental:"bb"},E:{index:2,int_val:4,accidental:null},EN:{index:2,int_val:4,accidental:"n"},"E#":{index:2,int_val:5,accidental:"#"},"E##":{index:2,int_val:6,accidental:"##"},EB:{index:2,int_val:3,accidental:"b"},EBB:{index:2,int_val:2,accidental:"bb"},F:{index:3,int_val:5,accidental:null},FN:{index:3,int_val:5,accidental:"n"},"F#":{index:3,int_val:6,accidental:"#"},"F##":{index:3,int_val:7,accidental:"##"},FB:{index:3,int_val:4,accidental:"b"},FBB:{index:3,int_val:3,accidental:"bb"},G:{index:4,int_val:7,accidental:null},GN:{index:4,int_val:7,accidental:"n"},"G#":{index:4,int_val:8,accidental:"#"},"G##":{index:4,int_val:9,accidental:"##"},GB:{index:4,int_val:6,accidental:"b"},GBB:{index:4,int_val:5,accidental:"bb"},A:{index:5,int_val:9,accidental:null},AN:{index:5,int_val:9,accidental:"n"},"A#":{index:5,int_val:10,accidental:"#"},"A##":{index:5,int_val:11,accidental:"##"},AB:{index:5,int_val:8,accidental:"b"},ABB:{index:5,int_val:7,accidental:"bb"},B:{index:6,int_val:11,accidental:null},BN:{index:6,int_val:11,accidental:"n"},"B#":{index:6,int_val:12,accidental:"#"},"B##":{index:6,int_val:13,accidental:"##"},BB:{index:6,int_val:10,accidental:"b"},BBB:{index:6,int_val:9,accidental:"bb"},R:{index:6,int_val:9,rest:!0},X:{index:6,accidental:"",octave:4,code:"v3e",shift_right:5.5}},a.keyProperties.note_glyph={D0:{code:"v27",shift_right:-.5},D1:{code:"v2d",shift_right:-.5},D2:{code:"v22",shift_right:-.5},D3:{code:"v70",shift_right:-.5},T0:{code:"v49",shift_right:-2},T1:{code:"v93",shift_right:.5},T2:{code:"v40",shift_right:.5},T3:{code:"v7d",shift_right:.5},X0:{code:"v92",shift_right:-2},X1:{code:"v95",shift_right:-.5},X2:{code:"v7f",shift_right:.5},X3:{code:"v3b",shift_right:-2}},a.integerToNote=function(t){if(void 0===t)throw new r.Vex.RERR("BadArguments","Undefined integer for integerToNote");if(t<-2)throw new r.Vex.RERR("BadArguments","integerToNote requires integer > -2: "+t);var e=a.integerToNote.table[t];if(!e)throw new r.Vex.RERR("BadArguments","Unknown note value for integer: "+t);return e},a.integerToNote.table={0:"C",1:"C#",2:"D",3:"D#",4:"E",5:"F",6:"F#",7:"G",8:"G#",9:"A",10:"A#",11:"B"},a.tabToGlyph=function(t){var e=arguments.length<=1||void 0===arguments[1]?1:arguments[1],n=null,i=0,r=0;if("X"===t.toString().toUpperCase()){var o=new s.Glyph("v7f",a.DEFAULT_TABLATURE_FONT_SCALE).getMetrics();n="v7f",i=o.width,r=-o.height/2}else i=a.textWidth(t.toString());return{text:t,code:n,getWidth:function(){return i*e},shift_y:r}},a.textWidth=function(t){return 7*t.toString().length},a.articulationCodes=function(t){return a.articulationCodes.articulations[t]},a.articulationCodes.articulations={"a.":{code:"v23",between_lines:!0},av:{code:"v28",between_lines:!0},"a>":{code:"v42",between_lines:!0},"a-":{code:"v25",between_lines:!0},"a^":{code:"va",between_lines:!1},"a+":{code:"v8b",between_lines:!1},ao:{code:"v94",between_lines:!1},ah:{code:"vb9",between_lines:!1},"a@a":{code:"v43",between_lines:!1},"a@u":{code:"v5b",between_lines:!1},"a|":{code:"v75",between_lines:!1},am:{code:"v97",between_lines:!1},"a,":{code:"vb3",between_lines:!1}},a.accidentalCodes=function(t){return a.accidentalCodes.accidentals[t]},a.accidentalCodes.accidentals={"#":{code:"v18",parenRightPaddingAdjustment:-1},"##":{code:"v7f",parenRightPaddingAdjustment:-1},b:{code:"v44",parenRightPaddingAdjustment:-2},bb:{code:"v26",parenRightPaddingAdjustment:-2},n:{code:"v4e",parenRightPaddingAdjustment:-1},"{":{code:"v9c",parenRightPaddingAdjustment:-1},"}":{code:"v84",parenRightPaddingAdjustment:-1},db:{code:"v9e",parenRightPaddingAdjustment:-1},d:{code:"vab",parenRightPaddingAdjustment:0},bbs:{code:"v90",parenRightPaddingAdjustment:-1},"++":{code:"v51",parenRightPaddingAdjustment:-1},"+":{code:"v78",parenRightPaddingAdjustment:-1},"+-":{code:"v8d",parenRightPaddingAdjustment:-1},"++-":{code:"v7a",parenRightPaddingAdjustment:-1},bs:{code:"vb7",parenRightPaddingAdjustment:-1},bss:{code:"v39",parenRightPaddingAdjustment:-1},o:{code:"vd0",parenRightPaddingAdjustment:-1},k:{code:"vd1",parenRightPaddingAdjustment:-1}},a.accidentalColumnsTable={1:{a:[1],b:[1]},2:{a:[1,2]},3:{a:[1,3,2],b:[1,2,1],second_on_bottom:[1,2,3]},4:{a:[1,3,4,2],b:[1,2,3,1],spaced_out_tetrachord:[1,2,1,2]},5:{a:[1,3,5,4,2],b:[1,2,4,3,1],spaced_out_pentachord:[1,2,3,2,1],very_spaced_out_pentachord:[1,2,1,2,1]},6:{a:[1,3,5,6,4,2],b:[1,2,4,5,3,1],spaced_out_hexachord:[1,3,2,1,3,2],very_spaced_out_hexachord:[1,2,1,2,1,2]}},a.ornamentCodes=function(t){return a.ornamentCodes.ornaments[t]},a.ornamentCodes.ornaments={mordent:{code:"v1e"},mordent_inverted:{code:"v45"},turn:{code:"v72"},turn_inverted:{code:"v33"},tr:{code:"v1f"},upprall:{code:"v60"},downprall:{code:"vb4"},prallup:{code:"v6d"},pralldown:{code:"v2c"},upmordent:{code:"v29"},downmordent:{code:"v68"},lineprall:{code:"v20"},prallprall:{code:"v86"}},a.keySignature=function(t){var e=a.keySignature.keySpecs[t];if(!e)throw new r.Vex.RERR("BadKeySignature","Bad key signature spec: '"+t+"'");if(!e.acc)return[];for(var n=a.keySignature.accidentalList(e.acc),i=[],o=0;o<e.num;++o){var s=n[o];i.push({type:e.acc,line:s})}return i},a.keySignature.keySpecs={C:{acc:null,num:0},Am:{acc:null,num:0},F:{acc:"b",num:1},Dm:{acc:"b",num:1},Bb:{acc:"b",num:2},Gm:{acc:"b",num:2},Eb:{acc:"b",num:3},Cm:{acc:"b",num:3},Ab:{acc:"b",num:4},Fm:{acc:"b",num:4},Db:{acc:"b",num:5},Bbm:{acc:"b",num:5},Gb:{acc:"b",num:6},Ebm:{acc:"b",num:6},Cb:{acc:"b",num:7},Abm:{acc:"b",num:7},G:{acc:"#",num:1},Em:{acc:"#",num:1},D:{acc:"#",num:2},Bm:{acc:"#",num:2},A:{acc:"#",num:3},"F#m":{acc:"#",num:3},E:{acc:"#",num:4},"C#m":{acc:"#",num:4},B:{acc:"#",num:5},"G#m":{acc:"#",num:5},"F#":{acc:"#",num:6},"D#m":{acc:"#",num:6},"C#":{acc:"#",num:7},"A#m":{acc:"#",num:7}},a.unicode={sharp:String.fromCharCode(parseInt("266F",16)),flat:String.fromCharCode(parseInt("266D",16)),natural:String.fromCharCode(parseInt("266E",16)),triangle:String.fromCharCode(parseInt("25B3",16)),"o-with-slash":String.fromCharCode(parseInt("00F8",16)),degrees:String.fromCharCode(parseInt("00B0",16)),circle:String.fromCharCode(parseInt("25CB",16))},a.keySignature.accidentalList=function(t){return{b:[2,.5,2.5,1,3,1.5,3.5],"#":[0,1.5,-.5,1,2.5,.5,2]}[t]},a.parseNoteDurationString=function(t){if("string"!=typeof t)return null;var e=/(\d*\/?\d+|[a-z])(d*)([nrhms]|$)/.exec(t);if(!e)return null;var n=e[1],i=e[2].length,r=e[3];return 0===r.length&&(r="n"),{duration:n,dots:i,type:r}},a.parseNoteData=function(t){var e=t.duration,n=a.parseNoteDurationString(e);if(!n)return null;var i=a.durationToTicks(n.duration);if(null==i)return null;var r=t.type;if(r){if("n"!==r&&"r"!==r&&"h"!==r&&"m"!==r&&"s"!==r)return null}else(r=n.type)||(r="n");var o=t.dots?t.dots:n.dots;if("number"!=typeof o)return null;for(var s=i,u=0;u<o;u++){if(s<=1)return null;i+=s/=2}return{duration:n.duration,type:r,dots:o,ticks:i}},a.sanitizeDuration=function(t){var e=a.durationAliases[t];if(void 0!==e&&(t=e),void 0===a.durationToTicks.durations[t])throw new r.Vex.RERR("BadArguments","The provided duration is not valid: "+t);return t},a.durationToFraction=function(t){return(new o.Fraction).parse(a.sanitizeDuration(t))},a.durationToNumber=function(t){return a.durationToFraction(t).value()},a.durationToTicks=function(t){t=a.sanitizeDuration(t);var e=a.durationToTicks.durations[t];return void 0===e?null:e},a.durationToTicks.durations={"1/2":2*a.RESOLUTION,1:a.RESOLUTION/1,2:a.RESOLUTION/2,4:a.RESOLUTION/4,8:a.RESOLUTION/8,16:a.RESOLUTION/16,32:a.RESOLUTION/32,64:a.RESOLUTION/64,128:a.RESOLUTION/128,256:a.RESOLUTION/256},a.durationAliases={w:"1",h:"2",q:"4",b:"256"},a.durationToGlyph=function(t,e){t=a.sanitizeDuration(t);var n=a.durationToGlyph.duration_codes[t];if(void 0===n)return null;e||(e="n");var i=n.type[e];return void 0===i?null:r.Vex.Merge(r.Vex.Merge({},n.common),i)},a.durationToGlyph.duration_codes={"1/2":{common:{getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"v53",t).getMetrics().width},stem:!1,stem_offset:0,flag:!1,stem_up_extension:-a.STEM_HEIGHT,stem_down_extension:-a.STEM_HEIGHT,gracenote_stem_up_extension:-a.STEM_HEIGHT,gracenote_stem_down_extension:-a.STEM_HEIGHT,tabnote_stem_up_extension:-a.STEM_HEIGHT,tabnote_stem_down_extension:-a.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v53"},h:{code_head:"v59"},m:{code_head:"vf",stem_offset:0},r:{code_head:"v31",rest:!0,position:"B/5",dot_shiftY:.5},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},1:{common:{getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"v1d",t).getMetrics().width},stem:!1,stem_offset:0,flag:!1,stem_up_extension:-a.STEM_HEIGHT,stem_down_extension:-a.STEM_HEIGHT,gracenote_stem_up_extension:-a.STEM_HEIGHT,gracenote_stem_down_extension:-a.STEM_HEIGHT,tabnote_stem_up_extension:-a.STEM_HEIGHT,tabnote_stem_down_extension:-a.STEM_HEIGHT,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v1d"},h:{code_head:"v46"},m:{code_head:"v92",stem_offset:-3},r:{code_head:"v5c",rest:!0,position:"D/5",dot_shiftY:.5},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},2:{common:{getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"v81",t).getMetrics().width},stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"v81"},h:{code_head:"v2d"},m:{code_head:"v95",stem_offset:-3},r:{code_head:"vc",stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},4:{common:{getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!1,stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e",stem_offset:-3},r:{code_head:"v7c",stem:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1.5,line_below:1.5},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},8:{common:{getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,beam_count:1,code_flag_upstem:"v54",code_flag_downstem:"v9a",stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"va5",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:1},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},16:{common:{beam_count:2,getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v3f",code_flag_downstem:"v8f",stem_up_extension:0,stem_down_extension:0,gracenote_stem_up_extension:-14,gracenote_stem_down_extension:-14,tabnote_stem_up_extension:0,tabnote_stem_down_extension:0,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v3c",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-.5,line_above:1,line_below:2},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},32:{common:{beam_count:3,getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v47",code_flag_downstem:"v2a",stem_up_extension:9,stem_down_extension:9,gracenote_stem_up_extension:-12,gracenote_stem_down_extension:-12,tabnote_stem_up_extension:8,tabnote_stem_down_extension:5,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v55",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:2},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},64:{common:{beam_count:4,getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"va9",code_flag_downstem:"v58",stem_up_extension:13,stem_down_extension:13,gracenote_stem_up_extension:-10,gracenote_stem_down_extension:-10,tabnote_stem_up_extension:12,tabnote_stem_down_extension:9,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"v38",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:-1.5,line_above:2,line_below:3},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}},128:{common:{beam_count:5,getWidth:function(){var t=arguments.length<=0||void 0===arguments[0]?a.DEFAULT_NOTATION_FONT_SCALE:arguments[0];return new s.Glyph(this.code_head||"vb",t).getMetrics().width},stem:!0,stem_offset:0,flag:!0,code_flag_upstem:"v9b",code_flag_downstem:"v30",stem_up_extension:22,stem_down_extension:22,gracenote_stem_up_extension:-8,gracenote_stem_down_extension:-8,tabnote_stem_up_extension:21,tabnote_stem_down_extension:18,dot_shiftY:0,line_above:0,line_below:0},type:{n:{code_head:"vb"},h:{code_head:"v22"},m:{code_head:"v3e"},r:{code_head:"vaa",stem:!1,flag:!1,rest:!0,position:"B/4",dot_shiftY:1.5,line_above:3,line_below:3},s:{getWidth:function(){return a.SLASH_NOTEHEAD_WIDTH},position:"B/4"}}}},a.TIME4_4={num_beats:4,beat_value:4,resolution:a.RESOLUTION},e.Flow=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Fraction=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1);var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.set(e,n)}return i(t,null,[{key:"GCD",value:function(t,e){if("number"!=typeof t||"number"!=typeof e)throw new r.Vex.RERR("BadArgument","Invalid numbers: "+t+", "+e);for(var n=void 0;0!==e;)n=e,e=t%e,t=n;return t}},{key:"LCM",value:function(e,n){return e*n/t.GCD(e,n)}},{key:"LCMM",value:function(e){if(0===e.length)return 0;if(1===e.length)return e[0];if(2===e.length)return t.LCM(e[0],e[1]);var n=e[0];return e.shift(),t.LCM(n,t.LCMM(e))}}]),i(t,[{key:"set",value:function(t,e){return this.numerator=void 0===t?1:t,this.denominator=void 0===e?1:e,this}},{key:"value",value:function(){return this.numerator/this.denominator}},{key:"simplify",value:function(){var e=this.numerator,n=this.denominator,i=t.GCD(e,n);return e/=i,(n/=i)<0&&(n=-n,e=-e),this.set(e,n)}},{key:"add",value:function(e,n){var i=void 0,r=void 0;e instanceof t?(i=e.numerator,r=e.denominator):(i=void 0!==e?e:0,r=void 0!==n?n:1);var o=t.LCM(this.denominator,r),s=o/this.denominator,a=o/r,u=this.numerator*s+i*a;return this.set(u,o)}},{key:"subtract",value:function(e,n){var i=void 0,r=void 0;e instanceof t?(i=e.numerator,r=e.denominator):(i=void 0!==e?e:0,r=void 0!==n?n:1);var o=t.LCM(this.denominator,r),s=o/this.denominator,a=o/r,u=this.numerator*s-i*a;return this.set(u,o)}},{key:"multiply",value:function(e,n){var i=void 0,r=void 0;return e instanceof t?(i=e.numerator,r=e.denominator):(i=void 0!==e?e:1,r=void 0!==n?n:1),this.set(this.numerator*i,this.denominator*r)}},{key:"divide",value:function(e,n){var i=void 0,r=void 0;return e instanceof t?(i=e.numerator,r=e.denominator):(i=void 0!==e?e:1,r=void 0!==n?n:1),this.set(this.numerator*r,this.denominator*i)}},{key:"equals",value:function(e){var n=t.__compareA.copy(e).simplify(),i=t.__compareB.copy(this).simplify();return n.numerator===i.numerator&&n.denominator===i.denominator}},{key:"greaterThan",value:function(e){var n=t.__compareB.copy(this);return n.subtract(e),n.numerator>0}},{key:"greaterThanEquals",value:function(e){var n=t.__compareB.copy(this);return n.subtract(e),n.numerator>=0}},{key:"lessThan",value:function(t){return!this.greaterThanEquals(t)}},{key:"lessThanEquals",value:function(t){return!this.greaterThan(t)}},{key:"clone",value:function(){return new t(this.numerator,this.denominator)}},{key:"copy",value:function(t){return this.set(t.numerator,t.denominator)}},{key:"quotient",value:function(){return Math.floor(this.numerator/this.denominator)}},{key:"fraction",value:function(){return this.numerator%this.denominator}},{key:"abs",value:function(){return this.denominator=Math.abs(this.denominator),this.numerator=Math.abs(this.numerator),this}},{key:"toString",value:function(){return this.numerator+"/"+this.denominator}},{key:"toSimplifiedString",value:function(){return t.__tmp.copy(this).simplify().toString()}},{key:"toMixedString",value:function(){var e="",n=this.quotient(),i=t.__tmp.copy(this);return n<0?i.abs().fraction():i.fraction(),0!==n?(e+=n,0!==i.numerator&&(e+=" "+i.toSimplifiedString())):e=0===i.numerator?"0":i.toSimplifiedString(),e}},{key:"parse",value:function(t){var e=t.split("/"),n=parseInt(e[0],10),i=e[1]?parseInt(e[1],10):1;return this.set(n,i)}}]),t}();e.Fraction=o,o.__compareA=new o,o.__compareB=new o,o.__tmp=new o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Glyph=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(7),a=n(8),u=n(9);function c(t,e,n,i,r,o){var s=void 0,a=void 0,u=void 0,c=0;function l(){return e+t[c++]*i}function h(){return n+t[c++]*r}for(;c<t.length;)switch(s=t[c++]){case"m":case"l":o[s](l(),h());break;case"q":a=l(),u=h(),o.q(l(),h(),a,u);break;case"b":a=l(),u=h(),o.b(l(),h(),l(),h(),a,u)}}e.Glyph=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","Glyph"),r.code=t,r.point=n,r.options={cache:!0,font:u.Font},r.metrics=null,r.x_shift=0,r.y_shift=0,r.originShift={x:0,y:0},i?r.setOptions(i):r.reset(),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"loadMetrics",value:function(t,e,n){var i=t.glyphs[e];if(!i)throw new r.Vex.RERR("BadGlyph","Glyph "+e+" does not exist in font.");var o=i.x_min,s=i.x_max,a=i.ha,u=void 0;if(i.o)return n?i.cached_outline?u=i.cached_outline:(u=i.o.split(" "),i.cached_outline=u):(i.cached_outline&&delete i.cached_outline,u=i.o.split(" ")),{x_min:o,x_max:s,ha:a,outline:u};throw new r.Vex.RERR("BadGlyph","Glyph "+e+" has no outline defined.")}},{key:"renderGlyph",value:function(t,n,i,r,o,s){var a=72*r/(100*u.Font.resolution),c=e.loadMetrics(u.Font,o,!s);e.renderOutline(t,c.outline,a,n,i)}},{key:"renderOutline",value:function(t,e,n,i,r){t.beginPath(),t.moveTo(i,r),c(e,i,r,n,-n,{m:t.moveTo.bind(t),l:t.lineTo.bind(t),q:t.quadraticCurveTo.bind(t),b:t.bezierCurveTo.bind(t)}),t.fill()}},{key:"getOutlineBoundingBox",value:function(t,e,n,i){var r=new s.BoundingBoxComputation;return c(t,n,i,e,-e,{m:r.addPoint.bind(r),l:r.addPoint.bind(r),q:r.addQuadraticCurve.bind(r),b:r.addBezierCurve.bind(r)}),new a.BoundingBox(r.x1,r.y1,r.width(),r.height())}}]),i(e,[{key:"setOptions",value:function(t){r.Vex.Merge(this.options,t),this.reset()}},{key:"setPoint",value:function(t){return this.point=t,this}},{key:"setStave",value:function(t){return this.stave=t,this}},{key:"setXShift",value:function(t){return this.x_shift=t,this}},{key:"setYShift",value:function(t){return this.y_shift=t,this}},{key:"reset",value:function(){this.scale=72*this.point/(100*this.options.font.resolution),this.metrics=e.loadMetrics(this.options.font,this.code,this.options.cache),this.bbox=e.getOutlineBoundingBox(this.metrics.outline,this.scale,0,0)}},{key:"getMetrics",value:function(){if(!this.metrics)throw new r.Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");return{x_min:this.metrics.x_min*this.scale,x_max:this.metrics.x_max*this.scale,width:this.bbox.getW(),height:this.bbox.getH()}}},{key:"setOriginX",value:function(t){var e=this.bbox,n=(t-Math.abs(e.getX()/e.getW()))*e.getW();this.originShift.x=-n}},{key:"setOriginY",value:function(t){var e=this.bbox,n=(t-Math.abs(e.getY()/e.getH()))*e.getH();this.originShift.y=-n}},{key:"setOrigin",value:function(t,e){this.setOriginX(t),this.setOriginY(e)}},{key:"render",value:function(t,n,i){if(!this.metrics)throw new r.Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");var o=this.metrics.outline,s=this.scale;this.setRendered(),this.applyStyle(t),e.renderOutline(t,o,s,n+this.originShift.x,i+this.originShift.y),this.restoreStyle(t)}},{key:"renderToStave",value:function(t){if(this.checkContext(),!this.metrics)throw new r.Vex.RuntimeError("BadGlyph","Glyph "+this.code+" is not initialized.");if(!this.stave)throw new r.Vex.RuntimeError("GlyphError","No valid stave");var n=this.metrics.outline,i=this.scale;this.setRendered(),this.applyStyle(),e.renderOutline(this.context,n,i,t+this.x_shift,this.stave.getYForGlyphs()+this.y_shift),this.restoreStyle()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Element=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(6);(e.Element=function(){function t(){var e=(arguments.length<=0||void 0===arguments[0]?{}:arguments[0]).type;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.attrs={id:t.newID(),el:null,type:e||"Base",classes:{}},this.boundingBox=null,this.context=null,this.rendered=!1,o.Registry.getDefaultRegistry()&&o.Registry.getDefaultRegistry().register(this)}return i(t,null,[{key:"newID",value:function(){return"auto"+t.ID++}}]),i(t,[{key:"setStyle",value:function(t){return this.style=t,this}},{key:"getStyle",value:function(){return this.style}},{key:"applyStyle",value:function(){var t=arguments.length<=0||void 0===arguments[0]?this.context:arguments[0],e=arguments.length<=1||void 0===arguments[1]?this.getStyle():arguments[1];return e?(t.save(),e.shadowColor&&t.setShadowColor(e.shadowColor),e.shadowBlur&&t.setShadowBlur(e.shadowBlur),e.fillStyle&&t.setFillStyle(e.fillStyle),e.strokeStyle&&t.setStrokeStyle(e.strokeStyle),e.lineWidth&&t.setLineWidth(e.lineWidth),this):this}},{key:"restoreStyle",value:function(){var t=arguments.length<=0||void 0===arguments[0]?this.context:arguments[0];return(arguments.length<=1||void 0===arguments[1]?this.getStyle():arguments[1])?(t.restore(),this):this}},{key:"hasClass",value:function(t){return!0===this.attrs.classes[t]}},{key:"addClass",value:function(t){return this.attrs.classes[t]=!0,this.registry&&this.registry.onUpdate({id:this.getAttribute("id"),name:"class",value:t,oldValue:null}),this}},{key:"removeClass",value:function(t){return delete this.attrs.classes[t],this.registry&&this.registry.onUpdate({id:this.getAttribute("id"),name:"class",value:null,oldValue:t}),this}},{key:"onRegister",value:function(t){return this.registry=t,this}},{key:"isRendered",value:function(){return this.rendered}},{key:"setRendered",value:function(){var t=arguments.length<=0||void 0===arguments[0]||arguments[0];return this.rendered=t,this}},{key:"getAttributes",value:function(){return this.attrs}},{key:"getAttribute",value:function(t){return this.attrs[t]}},{key:"setAttribute",value:function(t,e){var n=this.attrs.id,i=this.attrs[t];return this.attrs[t]=e,this.registry&&this.registry.onUpdate({id:n,name:t,value:e,oldValue:i}),this}},{key:"getContext",value:function(){return this.context}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getBoundingBox",value:function(){return this.boundingBox}},{key:"checkContext",value:function(){if(!this.context)throw new r.Vex.RERR("NoContext","No rendering context attached to instance");return this.context}}]),t}()).ID=1e3},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Registry=e.X=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1);var o=e.X=r.Vex.MakeException("RegistryError");function s(t,e,n,i,r){t[e][n]||(t[e][n]={}),t[e][n][i]=r}(e.Registry=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.clear()}return i(t,null,[{key:"INDEXES",get:function(){return["type"]}}]),i(t,[{key:"clear",value:function(){return this.index={id:{},type:{},class:{}},this}},{key:"updateIndex",value:function(t){var e=t.id,n=t.name,i=t.value,r=t.oldValue,o=this.getElementById(e);null!==r&&this.index[n][r]&&delete this.index[n][r][e],null!==i&&s(this.index,n,i,o.getAttribute("id"),o)}},{key:"register",value:function(e,n){var i=this;if(!(n=n||e.getAttribute("id")))throw new o("Can't add element without `id` attribute to registry",e);return e.setAttribute("id",n),s(this.index,"id",n,n,e),t.INDEXES.forEach(function(t){i.updateIndex({id:n,name:t,value:e.getAttribute(t),oldValue:null})}),e.onRegister(this),this}},{key:"getElementById",value:function(t){return this.index.id[t]?this.index.id[t][t]:null}},{key:"getElementsByAttribute",value:function(t,e){var n=this.index[t];return n&&n[e]?Object.keys(n[e]).map(function(t){return n[e][t]}):[]}},{key:"getElementsByType",value:function(t){return this.getElementsByAttribute("type",t)}},{key:"getElementsByClass",value:function(t){return this.getElementsByAttribute("class",t)}},{key:"onUpdate",value:function(e){var n=e.id,i=e.name,r=e.value,o=e.oldValue;return function(t,e){return t.filter(function(t){return t===e}).length>0}(t.INDEXES.concat(["id","class"]),i)?(this.updateIndex({id:n,name:i,value:r,oldValue:o}),this):this}}],[{key:"enableDefaultRegistry",value:function(e){t.defaultRegistry=e}},{key:"getDefaultRegistry",value:function(){return t.defaultRegistry}},{key:"disableDefaultRegistry",value:function(){t.defaultRegistry=null}}]),t}()).defaultRegistry=null},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();e.BoundingBoxComputation=function(){function t(e,n,i,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN,this.addPoint(e,n),this.addPoint(i,r)}return n(t,[{key:"width",value:function(){return this.x2-this.x1}},{key:"height",value:function(){return this.y2-this.y1}},{key:"addPoint",value:function(t,e){null!=t&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=t,this.x2=t),t<this.x1&&(this.x1=t),t>this.x2&&(this.x2=t)),null!=e&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=e,this.y2=e),e<this.y1&&(this.y1=e),e>this.y2&&(this.y2=e))}},{key:"addX",value:function(t){this.addPoint(t,null)}},{key:"addY",value:function(t){this.addPoint(null,t)}},{key:"addQuadraticCurve",value:function(t,e,n,i,r,o){var s=t+2/3*(n-t),a=e+2/3*(i-e),u=s+1/3*(r-t),c=a+1/3*(o-e);this.addBezierCurve(t,e,s,a,u,c,r,o)}},{key:"addBezierCurve",value:function(t,e,n,i,r,o,s,a){var u=[t,e],c=[n,i],l=[r,o],h=[s,a],f=void 0;this.addPoint(u[0],u[1]),this.addPoint(h[0],h[1]);var p=function(t,e){return Math.pow(1-t,3)*u[e]+3*Math.pow(1-t,2)*t*c[e]+3*(1-t)*Math.pow(t,2)*l[e]+Math.pow(t,3)*h[e]};for(f=0;f<=1;f++){var d=6*u[f]-12*c[f]+6*l[f],b=-3*u[f]+9*c[f]-9*l[f]+3*h[f],y=3*c[f]-3*u[f];if(0!==b){var m=Math.pow(d,2)-4*y*b;if(!(m<0)){var v=(-d+Math.sqrt(m))/(2*b);0<v&&v<1&&(0===f&&this.addX(p(v,f)),1===f&&this.addY(p(v,f)));var g=(-d-Math.sqrt(m))/(2*b);0<g&&g<1&&(0===f&&this.addX(p(g,f)),1===f&&this.addY(p(g,f)))}}else{if(0===d)continue;var _=-y/d;0<_&&_<1&&(0===f&&this.addX(p(_,f)),1===f&&this.addY(p(_,f)))}}}}]),t}()},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();e.BoundingBox=function(){function t(e,n,i,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=e,this.y=n,this.w=i,this.h=r}return n(t,null,[{key:"copy",value:function(e){return new t(e.x,e.y,e.w,e.h)}}]),n(t,[{key:"getX",value:function(){return this.x}},{key:"getY",value:function(){return this.y}},{key:"getW",value:function(){return this.w}},{key:"getH",value:function(){return this.h}},{key:"setX",value:function(t){return this.x=t,this}},{key:"setY",value:function(t){return this.y=t,this}},{key:"setW",value:function(t){return this.w=t,this}},{key:"setH",value:function(t){return this.h=t,this}},{key:"move",value:function(t,e){this.x+=t,this.y+=e}},{key:"clone",value:function(){return t.copy(this)}},{key:"mergeWith",value:function(t,e){var n=t,i=this.x<n.x?this.x:n.x,r=this.y<n.y?this.y:n.y,o=Math.max(this.x+this.w,n.x+n.w)-i,s=Math.max(this.y+this.h,n.y+n.h)-r;return this.x=i,this.y=r,this.w=o,this.h=s,e&&this.draw(e),this}},{key:"draw",value:function(t,e,n){e||(e=0),n||(n=0),t.rect(this.x+e,this.y+n,this.w,this.h),t.stroke()}}]),t}()},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Font={glyphs:{v0:{x_min:0,x_max:514.5,ha:525,o:"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 "},v1:{x_min:-1.359375,x_max:344.359375,ha:351,o:"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 "},v2:{x_min:-1.359375,x_max:458.6875,ha:468,o:"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 "},v3:{x_min:-1.359375,x_max:409.6875,ha:418,o:"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v4:{x_min:0,x_max:468.21875,ha:478,o:"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 "},v5:{x_min:0,x_max:409.6875,ha:418,o:"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 "},v6:{x_min:0,x_max:475.03125,ha:485,o:"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},v7:{x_min:0,x_max:442.359375,ha:451,o:"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 "},v8:{x_min:0,x_max:488.640625,ha:499,o:"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 "},v9:{x_min:0,x_max:475.03125,ha:485,o:"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 "},va:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 "},vb:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 "},vc:{x_min:0,x_max:447.8125,ha:457,o:"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 "},vf:{x_min:0,x_max:370.21875,ha:378,o:"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 "},v10:{x_min:0,x_max:559.421875,ha:571,o:"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 "},v11:{x_min:-155.171875,x_max:153.8125,ha:157,o:"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 "},v18:{x_min:0,x_max:323.9375,ha:331,o:"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 "},v1b:{x_min:0,x_max:559.421875,ha:571,o:"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 "},v1d:{x_min:0,x_max:619.3125,ha:632,o:"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 "},v1e:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 "},v1f:{x_min:-340.28125,x_max:338.921875,ha:346,o:"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 "},v20:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 "},v22:{x_min:0,x_max:432.828125,ha:442,o:"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 "},v23:{x_min:0,x_max:133.390625,ha:136,o:"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 "},v25:{x_min:0,x_max:318.5,ha:325,o:"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 "},v26:{x_min:-21.78125,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v27:{x_min:0,x_max:432.828125,ha:442,o:"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 "},v28:{x_min:-73.5,x_max:72.140625,ha:74,o:"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 "},v29:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 "},v2a:{x_min:-21.78125,x_max:366.140625,ha:374,o:"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 "},v2c:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 "},v2d:{x_min:0,x_max:438.28125,ha:447,o:"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 "},v2f:{x_min:-1.359375,x_max:680.5625,ha:694,o:"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 "},v30:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 "},v31:{x_min:0,x_max:386.5625,ha:394,o:"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 "},v33:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 "},v34:{x_min:0,x_max:622.03125,ha:635,o:"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 "},v36:{x_min:-1.359375,x_max:1064.390625,ha:1086,o:"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 "},v38:{x_min:-1.359375,x_max:651.96875,ha:665,o:"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 "},v39:{x_min:-171.5,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},v3b:{x_min:0,x_max:484.5625,ha:494,o:"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 "},v3c:{x_min:0,x_max:450.53125,ha:460,o:"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 "},v3e:{x_min:0,x_max:406.96875,ha:415,o:"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 "},v3f:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 "},v40:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v41:{x_min:-1.359375,x_max:556.6875,ha:568,o:"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 "},v42:{x_min:-348.4375,x_max:24.5,ha:25,o:"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 "},v43:{x_min:-442.359375,x_max:441,ha:450,o:"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 "},v44:{x_min:-21.78125,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},v45:{x_min:-402.890625,x_max:401.53125,ha:410,o:"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 "},v46:{x_min:0,x_max:627.46875,ha:640,o:"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 "},v47:{x_min:-24.5,x_max:315.78125,ha:322,o:"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 "},v49:{x_min:0,x_max:630.203125,ha:643,o:"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 "},v4a:{x_min:70.78125,x_max:378.390625,ha:315,o:"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 "},v4b:{x_min:0,x_max:503.609375,ha:514,o:"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 "},v4d:{x_min:-311.6875,x_max:310.328125,ha:317,o:"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 "},v4e:{x_min:0,x_max:239.5625,ha:244,o:"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 "},v51:{x_min:-1.359375,x_max:455.96875,ha:465,o:"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 "},v52:{x_min:-10.890625,x_max:298.078125,ha:294,o:"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 "},v53:{x_min:0,x_max:902.421875,ha:921,o:"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 "},v54:{x_min:-24.5,x_max:317.140625,ha:324,o:"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 "},v55:{x_min:0,x_max:551.25,ha:563,o:"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 "},v58:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 "},v59:{x_min:0,x_max:464.140625,ha:474,o:"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 "},v5a:{x_min:-171.5,x_max:170.140625,ha:174,o:"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 "},v5b:{x_min:-441,x_max:439.640625,ha:449,o:"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 "},v5c:{x_min:0,x_max:447.8125,ha:457,o:"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 "},v5d:{x_min:-1.359375,x_max:592.078125,ha:604,o:"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 "},v60:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 "},v62:{x_min:46.28125,x_max:669.671875,ha:563,o:"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 "},v68:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},v6c:{x_min:-1.359375,x_max:193.28125,ha:197,o:"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 "},v6d:{x_min:-590.71875,x_max:589.359375,ha:601,o:"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 "},v6f:{x_min:-80.3125,x_max:78.9375,ha:81,o:"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 "},v70:{x_min:0,x_max:436.921875,ha:446,o:"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 "},v72:{x_min:-423.3125,x_max:421.9375,ha:431,o:"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 "},v74:{x_min:-206.890625,x_max:428.75,ha:438,o:"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 "},v75:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 "},v78:{x_min:0,x_max:193.28125,ha:197,o:"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 "},v79:{x_min:-1.359375,x_max:899.703125,ha:918,o:"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 "},v7a:{x_min:-1.359375,x_max:386.5625,ha:394,o:"m 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 "},v7c:{x_min:0,x_max:300.8125,ha:307,o:"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 "},v7d:{x_min:-1.359375,x_max:436.921875,ha:446,o:"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 "},v7f:{x_min:0,x_max:367.5,ha:375,o:"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 "},v80:{x_min:29.9375,x_max:420.578125,ha:371,o:"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 "},v81:{x_min:0,x_max:428.75,ha:438,o:"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 "},v83:{x_min:-1.359375,x_max:847.96875,ha:865,o:"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 "},v84:{x_min:25.859375,x_max:164.6875,ha:168,o:"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 "},v86:{x_min:-571.671875,x_max:570.3125,ha:582,o:"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 "},v8a:{x_min:-170.140625,x_max:168.78125,ha:172,o:"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 "},v8b:{x_min:0,x_max:319.859375,ha:326,o:"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 "},v8c:{x_min:-330.75,x_max:329.390625,ha:336,o:"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 "},v8d:{x_min:-1.359375,x_max:255.890625,ha:261,o:"m 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 "},v8f:{x_min:-21.78125,x_max:362.0625,ha:369,o:"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 "},v90:{x_min:-171.5,x_max:483.1875,ha:493,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 "},v92:{x_min:0,x_max:598.890625,ha:611,o:"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 "},v93:{x_min:0,x_max:438.28125,ha:447,o:"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 "},v94:{x_min:-149.71875,x_max:148.359375,ha:151,o:"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 "},v95:{x_min:0,x_max:406.96875,ha:415,o:"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 "},v97:{x_min:-228.671875,x_max:227.3125,ha:232,o:"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 "},v9a:{x_min:-21.78125,x_max:367.5,ha:375,o:"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 "},v9b:{x_min:-24.5,x_max:313.0625,ha:319,o:"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 "},v9c:{x_min:-166.0625,x_max:-25.859375,ha:0,o:"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 "},v9e:{x_min:0,x_max:607.0625,ha:619,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 "},va3:{x_min:58.53125,x_max:228.671875,ha:294,o:"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 "},va5:{x_min:0,x_max:349.8125,ha:357,o:"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 "},va9:{x_min:-24.5,x_max:314.421875,ha:321,o:"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 "},vaa:{x_min:-1.359375,x_max:752.703125,ha:768,o:"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 "},vab:{x_min:0,x_max:272.21875,ha:278,o:"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 "},vad:{x_min:0,x_max:873.828125,ha:892,o:"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 "},vb1:{x_min:78.9375,x_max:485.921875,ha:417,o:"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 "},vb3:{x_min:0,x_max:227.3125,ha:232,o:"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 "},vb4:{x_min:-597.53125,x_max:596.171875,ha:608,o:"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 "},vb6:{x_min:0,x_max:556.6875,ha:568,o:"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 "},vb7:{x_min:-176.9375,x_max:251.8125,ha:257,o:"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 "},vb9:{x_min:-122.5,x_max:121.140625,ha:124,o:"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 "},vba:{x_min:-118.421875,x_max:597.53125,ha:381,o:"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 "},vbf:{x_min:-53.078125,x_max:513.140625,ha:485,o:"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 "},vc3:{x_min:-10.890625,x_max:299.4375,ha:294,o:"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 "},vd0:{x_min:-10.890625,x_max:299.4375,ha:294,o:"m 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 "},vd1:{x_min:-20,x_max:320,ha:257,o:"m -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 "}},cssFontWeight:"normal",ascender:1903,underlinePosition:-125,cssFontStyle:"normal",boundingBox:{yMin:-2065.375,xMin:-695.53125,yMax:1901.578125,xMax:1159.671875},resolution:1e3,descender:-2066,familyName:"VexFlow-18",lineHeight:4093,underlineThickness:50}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Renderer=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(11),o=n(12),s=n(13),a=n(1);var u=null;e.Renderer=function(){function t(e,n){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.elementId=e,!this.elementId)throw new a.Vex.RERR("BadArgument","Invalid id for renderer.");if(this.element=document.getElementById(e),this.element||(this.element=e),this.ctx=null,this.paper=null,this.backend=n,this.backend===t.Backends.CANVAS){if(!this.element.getContext)throw new a.Vex.RERR("BadElement","Can't get canvas context from element: "+e);this.ctx=t.bolsterCanvasContext(this.element.getContext("2d"))}else if(this.backend===t.Backends.RAPHAEL)this.ctx=new o.RaphaelContext(this.element);else{if(this.backend!==t.Backends.SVG)throw new a.Vex.RERR("InvalidBackend","No support for backend: "+this.backend);this.ctx=new s.SVGContext(this.element)}}return i(t,null,[{key:"buildContext",value:function(e,n,i,r,o){var s=new t(e,n);i&&r&&s.resize(i,r),o||(o="#FFF");var a=s.getContext();return a.setBackgroundFillStyle(o),t.lastContext=a,a}},{key:"getCanvasContext",value:function(e,n,i,r){return t.buildContext(e,t.Backends.CANVAS,n,i,r)}},{key:"getRaphaelContext",value:function(e,n,i,r){return t.buildContext(e,t.Backends.RAPHAEL,n,i,r)}},{key:"getSVGContext",value:function(e,n,i,r){return t.buildContext(e,t.Backends.SVG,n,i,r)}},{key:"bolsterCanvasContext",value:function(e){if(t.USE_CANVAS_PROXY)return new r.CanvasContext(e);return e.vexFlowCanvasContext=e,["clear","setFont","setRawFont","setFillStyle","setBackgroundFillStyle","setStrokeStyle","setShadowColor","setShadowBlur","setLineWidth","setLineCap","setLineDash","openGroup","closeGroup","getGroup"].forEach(function(t){e[t]=e[t]||r.CanvasContext.prototype[t]}),e}},{key:"drawDashedLine",value:function(t,e,n,i,r,o){t.beginPath();var s=i-e,a=r-n,u=Math.atan2(a,s),c=e,l=n;t.moveTo(e,n);for(var h=0,f=!0;!(s<0?c<=i:c>=i)||!(a<0?l<=r:l>=r);){var p=o[h++%o.length],d=c+Math.cos(u)*p;c=s<0?Math.max(i,d):Math.min(i,d);var b=l+Math.sin(u)*p;l=a<0?Math.max(r,b):Math.min(r,b),f?t.lineTo(c,l):t.moveTo(c,l),f=!f}t.closePath(),t.stroke()}},{key:"Backends",get:function(){return{CANVAS:1,RAPHAEL:2,SVG:3,VML:4}}},{key:"LineEndType",get:function(){return{NONE:1,UP:2,DOWN:3}}},{key:"USE_CANVAS_PROXY",get:function(){return!1}},{key:"lastContext",get:function(){return u},set:function(t){u=t}}]),i(t,[{key:"resize",value:function(e,n){if(this.backend===t.Backends.CANVAS){if(!this.element.getContext)throw new a.Vex.RERR("BadElement","Can't get canvas context from element: "+this.elementId);var i=window.devicePixelRatio||1;this.element.width=e*i,this.element.height=n*i,this.element.style.width=e+"px",this.element.style.height=n+"px",this.ctx=t.bolsterCanvasContext(this.element.getContext("2d")),this.ctx.scale(i,i)}else this.ctx.resize(e,n);return this}},{key:"getContext",value:function(){return this.ctx}}]),t}()},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();e.CanvasContext=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.vexFlowCanvasContext=e,e.canvas?this.canvas=e.canvas:this.canvas={width:t.WIDTH,height:t.HEIGHT}}return n(t,null,[{key:"WIDTH",get:function(){return 600}},{key:"HEIGHT",get:function(){return 400}}]),n(t,[{key:"clear",value:function(){this.vexFlowCanvasContext.clearRect(0,0,this.canvas.width,this.canvas.height)}},{key:"openGroup",value:function(){}},{key:"closeGroup",value:function(){}},{key:"add",value:function(){}},{key:"setFont",value:function(t,e,n){return this.vexFlowCanvasContext.font=(n||"")+" "+e+"pt "+t,this}},{key:"setRawFont",value:function(t){return this.vexFlowCanvasContext.font=t,this}},{key:"setFillStyle",value:function(t){return this.vexFlowCanvasContext.fillStyle=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_fillStyle=t,this}},{key:"setStrokeStyle",value:function(t){return this.vexFlowCanvasContext.strokeStyle=t,this}},{key:"setShadowColor",value:function(t){return this.vexFlowCanvasContext.shadowColor=t,this}},{key:"setShadowBlur",value:function(t){return this.vexFlowCanvasContext.shadowBlur=t,this}},{key:"setLineWidth",value:function(t){return this.vexFlowCanvasContext.lineWidth=t,this}},{key:"setLineCap",value:function(t){return this.vexFlowCanvasContext.lineCap=t,this}},{key:"setLineDash",value:function(t){return this.vexFlowCanvasContext.lineDash=t,this}},{key:"scale",value:function(t,e){return this.vexFlowCanvasContext.scale(parseFloat(t),parseFloat(e))}},{key:"resize",value:function(t,e){return this.vexFlowCanvasContext.resize(parseInt(t,10),parseInt(e,10))}},{key:"rect",value:function(t,e,n,i){return this.vexFlowCanvasContext.rect(t,e,n,i)}},{key:"fillRect",value:function(t,e,n,i){return this.vexFlowCanvasContext.fillRect(t,e,n,i)}},{key:"clearRect",value:function(t,e,n,i){return this.vexFlowCanvasContext.clearRect(t,e,n,i)}},{key:"beginPath",value:function(){return this.vexFlowCanvasContext.beginPath()}},{key:"moveTo",value:function(t,e){return this.vexFlowCanvasContext.moveTo(t,e)}},{key:"lineTo",value:function(t,e){return this.vexFlowCanvasContext.lineTo(t,e)}},{key:"bezierCurveTo",value:function(t,e,n,i,r,o){return this.vexFlowCanvasContext.bezierCurveTo(t,e,n,i,r,o)}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.vexFlowCanvasContext.quadraticCurveTo(t,e,n,i)}},{key:"arc",value:function(t,e,n,i,r,o){return this.vexFlowCanvasContext.arc(t,e,n,i,r,o)}},{key:"glow",value:function(){return this.vexFlowCanvasContext.glow()}},{key:"fill",value:function(){return this.vexFlowCanvasContext.fill()}},{key:"stroke",value:function(){return this.vexFlowCanvasContext.stroke()}},{key:"closePath",value:function(){return this.vexFlowCanvasContext.closePath()}},{key:"measureText",value:function(t){return this.vexFlowCanvasContext.measureText(t)}},{key:"fillText",value:function(t,e,n){return this.vexFlowCanvasContext.fillText(t,e,n)}},{key:"save",value:function(){return this.vexFlowCanvasContext.save()}},{key:"restore",value:function(){return this.vexFlowCanvasContext.restore()}}]),t}()},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();e.RaphaelContext=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.element=e,this.paper=Raphael(e),this.path="",this.pen={x:0,y:0},this.lineWidth=1,this.state={scale:{x:1,y:1},font_family:"Arial",font_size:8,font_weight:800},this.attributes={"stroke-width":.3,fill:"black",stroke:"black",font:"10pt Arial"},this.background_attributes={"stroke-width":0,fill:"white",stroke:"white",font:"10pt Arial"},this.shadow_attributes={width:0,color:"black"},this.state_stack=[]}return n(t,[{key:"openGroup",value:function(){}},{key:"closeGroup",value:function(){}},{key:"add",value:function(){}},{key:"setFont",value:function(t,e,n){return this.state.font_family=t,this.state.font_size=e,this.state.font_weight=n,this.attributes.font=(this.state.font_weight||"")+" "+this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this}},{key:"setRawFont",value:function(t){return this.attributes.font=t,this}},{key:"setFillStyle",value:function(t){return this.attributes.fill=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_attributes.fill=t,this.background_attributes.stroke=t,this}},{key:"setStrokeStyle",value:function(t){return this.attributes.stroke=t,this}},{key:"setShadowColor",value:function(t){return this.shadow_attributes.color=t,this}},{key:"setShadowBlur",value:function(t){return this.shadow_attributes.width=t,this}},{key:"setLineWidth",value:function(t){this.attributes["stroke-width"]=t,this.lineWidth=t}},{key:"setLineDash",value:function(){return this}},{key:"setLineCap",value:function(){return this}},{key:"scale",value:function(t,e){return this.state.scale={x:t,y:e},this.attributes.transform="S"+t+","+e+",0,0",this.attributes.scale=t+","+e+",0,0",this.attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this.background_attributes.transform="S"+t+","+e+",0,0",this.background_attributes.font=this.state.font_size*this.state.scale.x+"pt "+this.state.font_family,this}},{key:"clear",value:function(){this.paper.clear()}},{key:"resize",value:function(t,e){return this.element.style.width=t,this.paper.setSize(t,e),this}},{key:"setViewBox",value:function(t){this.paper.canvas.setAttribute("viewBox",t)}},{key:"rect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.attributes).attr("fill","none").attr("stroke-width",this.lineWidth),this}},{key:"fillRect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.attributes),this}},{key:"clearRect",value:function(t,e,n,i){return i<0&&(e+=i,i=-i),this.paper.rect(t,e,n-.5,i-.5).attr(this.background_attributes),this}},{key:"beginPath",value:function(){return this.path="",this.pen.x=0,this.pen.y=0,this}},{key:"moveTo",value:function(t,e){return this.path+="M"+t+","+e,this.pen.x=t,this.pen.y=e,this}},{key:"lineTo",value:function(t,e){return this.path+="L"+t+","+e,this.pen.x=t,this.pen.y=e,this}},{key:"bezierCurveTo",value:function(t,e,n,i,r,o){return this.path+="C"+t+","+e+","+n+","+i+","+r+","+o,this.pen.x=r,this.pen.y=o,this}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.path+="Q"+t+","+e+","+n+","+i,this.pen.x=n,this.pen.y=i,this}},{key:"arc",value:function(t,e,n,i,r,o){function s(t){for(;t<0;)t+=2*Math.PI;for(;t>2*Math.PI;)t-=2*Math.PI;return t}if((i=s(i))>(r=s(r))){var a=i;i=r,r=a,o=!o}var u=r-i;return u>Math.PI?(this.arcHelper(t,e,n,i,i+u/2,o),this.arcHelper(t,e,n,i+u/2,r,o)):this.arcHelper(t,e,n,i,r,o),this}},{key:"arcHelper",value:function(t,e,n,i,r,o){var s=t+n*Math.cos(i),a=e+n*Math.sin(i),u=t+n*Math.cos(r),c=e+n*Math.sin(r),l=0,h=0;o?(h=1,r-i<Math.PI&&(l=1)):r-i>Math.PI&&(l=1),this.path+="M"+s+","+a+",A"+n+","+n+",0,"+l+","+h+","+u+","+c+"M"+this.pen.x+","+this.pen.y}},{key:"glow",value:function(){var t=this.paper.set();if(this.shadow_attributes.width>0)for(var e=this.shadow_attributes,n=e.width/2,i=1;i<=n;i++)t.push(this.paper.path(this.path).attr({stroke:e.color,"stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(e.width/n*i).toFixed(3),opacity:+((e.opacity||.3)/n).toFixed(3),transform:this.attributes.transform,scale:this.attributes.scale}));return t}},{key:"fill",value:function(){var t=this.paper.path(this.path).attr(this.attributes).attr("stroke-width",0);return this.glow(t),this}},{key:"stroke",value:function(){var t=this.lineWidth*(this.state.scale.x+this.state.scale.y)/2,e=this.paper.path(this.path).attr(this.attributes).attr("fill","none").attr("stroke-width",t);return this.glow(e),this}},{key:"closePath",value:function(){return this.path+="Z",this}},{key:"measureText",value:function(t){var e=this.paper.text(0,0,t).attr(this.attributes).attr("fill","none").attr("stroke","none"),n=e.getBBox();return e.remove(),{width:n.width,height:n.height}}},{key:"fillText",value:function(t,e,n){return this.paper.text(e+this.measureText(t).width/2,n-this.state.font_size/(2.25*this.state.scale.y),t).attr(this.attributes),this}},{key:"save",value:function(){return this.state_stack.push({state:{font_family:this.state.font_family},attributes:{font:this.attributes.font,fill:this.attributes.fill,stroke:this.attributes.stroke,"stroke-width":this.attributes["stroke-width"]},shadow_attributes:{width:this.shadow_attributes.width,color:this.shadow_attributes.color}}),this}},{key:"restore",value:function(){var t=this.state_stack.pop();return this.state.font_family=t.state.font_family,this.attributes.font=t.attributes.font,this.attributes.fill=t.attributes.fill,this.attributes.stroke=t.attributes.stroke,this.attributes["stroke-width"]=t.attributes["stroke-width"],this.shadow_attributes.width=t.shadow_attributes.width,this.shadow_attributes.color=t.shadow_attributes.color,this}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SVGContext=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1);e.SVGContext=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.element=e,this.svgNS="http://www.w3.org/2000/svg";var n=this.create("svg");this.element.appendChild(n),this.svg=n,this.groups=[this.svg],this.parent=this.svg,this.path="",this.pen={x:0,y:0},this.lineWidth=1,this.state={scale:{x:1,y:1},"font-family":"Arial","font-size":"8pt","font-weight":"normal"},this.attributes={"stroke-width":.3,fill:"black",stroke:"black","stroke-dasharray":"none","font-family":"Arial","font-size":"10pt","font-weight":"normal","font-style":"normal"},this.background_attributes={"stroke-width":0,fill:"white",stroke:"white","stroke-dasharray":"none","font-family":"Arial","font-size":"10pt","font-weight":"normal","font-style":"normal"},this.shadow_attributes={width:0,color:"black"},this.state_stack=[],this.iePolyfill()}return i(t,[{key:"create",value:function(t){return document.createElementNS(this.svgNS,t)}},{key:"openGroup",value:function(t,e,n){var i=this.create("g");return this.groups.push(i),this.parent.appendChild(i),this.parent=i,t&&i.setAttribute("class",r.Vex.Prefix(t)),e&&i.setAttribute("id",r.Vex.Prefix(e)),n&&n.pointerBBox&&i.setAttribute("pointer-events","bounding-box"),i}},{key:"closeGroup",value:function(){this.groups.pop(),this.parent=this.groups[this.groups.length-1]}},{key:"add",value:function(t){this.parent.appendChild(t)}},{key:"iePolyfill",value:function(){"undefined"!=typeof navigator&&(this.ie=/MSIE 9/i.test(navigator.userAgent)||/MSIE 10/i.test(navigator.userAgent)||/rv:11\.0/i.test(navigator.userAgent)||/Trident/i.test(navigator.userAgent))}},{key:"setFont",value:function(t,e,n){var i=!1,o=!1,s="normal";"string"==typeof n&&(-1!==n.indexOf("italic")&&(n=n.replace(/italic/g,""),o=!0),-1!==n.indexOf("bold")&&(n=n.replace(/bold/g,""),i=!0),n=n.replace(/ /g,""));var a={"font-family":t,"font-size":e+"pt","font-weight":n=void 0===(n=i?"bold":n)||""===n?"normal":n,"font-style":s=o?"italic":s};return this.fontSize=Number(e),r.Vex.Merge(this.attributes,a),r.Vex.Merge(this.state,a),this}},{key:"setRawFont",value:function(t){var e=(t=t.trim()).split(" ");return this.attributes["font-family"]=e[1],this.state["font-family"]=e[1],this.attributes["font-size"]=e[0],this.state["font-size"]=e[0],this.fontSize=Number(e[0].match(/\d+/)),this}},{key:"setFillStyle",value:function(t){return this.attributes.fill=t,this}},{key:"setBackgroundFillStyle",value:function(t){return this.background_attributes.fill=t,this.background_attributes.stroke=t,this}},{key:"setStrokeStyle",value:function(t){return this.attributes.stroke=t,this}},{key:"setShadowColor",value:function(t){return this.shadow_attributes.color=t,this}},{key:"setShadowBlur",value:function(t){return this.shadow_attributes.width=t,this}},{key:"setLineWidth",value:function(t){this.attributes["stroke-width"]=t,this.lineWidth=t}},{key:"setLineDash",value:function(t){if("[object Array]"===Object.prototype.toString.call(t))return t=t.join(", "),this.attributes["stroke-dasharray"]=t,this;throw new r.Vex.RERR("ArgumentError","lineDash must be an array of integers.")}},{key:"setLineCap",value:function(t){return this.attributes["stroke-linecap"]=t,this}},{key:"resize",value:function(t,e){this.width=t,this.height=e,this.element.style.width=t;var n={width:t,height:e};return this.applyAttributes(this.svg,n),this}},{key:"scale",value:function(t,e){this.state.scale={x:t,y:e};var n=this.width/t,i=this.height/e;return this.setViewBox(0,0,n,i),this}},{key:"setViewBox",value:function(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];if(1===e.length){var i=e[0];this.svg.setAttribute("viewBox",i)}else{var r=e[0]+" "+e[1]+" "+e[2]+" "+e[3];this.svg.setAttribute("viewBox",r)}}},{key:"applyAttributes",value:function(t,e){return Object.keys(e).forEach(function(n){return t.setAttributeNS(null,n,e[n])}),t}},{key:"clear",value:function(){for(;this.svg.lastChild;)this.svg.removeChild(this.svg.lastChild);this.scale(this.state.scale.x,this.state.scale.y)}},{key:"rect",value:function(t,e,n,i,o){i<0&&(e+=i,i*=-1);var s=this.create("rect");return void 0===o&&(o={fill:"none","stroke-width":this.lineWidth,stroke:"black"}),r.Vex.Merge(o,{x:t,y:e,width:n,height:i}),this.applyAttributes(s,o),this.add(s),this}},{key:"fillRect",value:function(t,e,n,i){return i<0&&(e+=i,i*=-1),this.rect(t,e,n,i,this.attributes),this}},{key:"clearRect",value:function(t,e,n,i){return this.rect(t,e,n,i,this.background_attributes),this}},{key:"beginPath",value:function(){return this.path="",this.pen.x=0,this.pen.y=0,this}},{key:"moveTo",value:function(t,e){return this.path+="M"+t+" "+e,this.pen.x=t,this.pen.y=e,this}},{key:"lineTo",value:function(t,e){return this.path+="L"+t+" "+e,this.pen.x=t,this.pen.y=e,this}},{key:"bezierCurveTo",value:function(t,e,n,i,r,o){return this.path+="C"+t+" "+e+","+n+" "+i+","+r+" "+o,this.pen.x=r,this.pen.y=o,this}},{key:"quadraticCurveTo",value:function(t,e,n,i){return this.path+="Q"+t+" "+e+","+n+" "+i,this.pen.x=n,this.pen.y=i,this}},{key:"arc",value:function(t,e,n,i,r,o){function s(t){for(;t<0;)t+=2*Math.PI;for(;t>2*Math.PI;)t-=2*Math.PI;return t}if((i=s(i))>(r=s(r))){var a=i;i=r,r=a,o=!o}var u=r-i;return u>Math.PI?(this.arcHelper(t,e,n,i,i+u/2,o),this.arcHelper(t,e,n,i+u/2,r,o)):this.arcHelper(t,e,n,i,r,o),this}},{key:"arcHelper",value:function(t,e,n,i,r,o){var s=t+n*Math.cos(i),a=e+n*Math.sin(i),u=t+n*Math.cos(r),c=e+n*Math.sin(r),l=0,h=0;o?(h=1,r-i<Math.PI&&(l=1)):r-i>Math.PI&&(l=1),this.path+="M"+s+" "+a+" A"+n+" "+n+" 0 "+l+" "+h+" "+u+" "+c+"M"+this.pen.x+" "+this.pen.y}},{key:"closePath",value:function(){return this.path+="Z",this}},{key:"glow",value:function(){if(this.shadow_attributes.width>0)for(var t=this.shadow_attributes,e=t.width/2,n=1;n<=e;n++){var i={stroke:t.color,"stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(.4*t.width/e*n).toFixed(3),opacity:+((t.opacity||.3)/e).toFixed(3)},r=this.create("path");i.d=this.path,this.applyAttributes(r,i),this.add(r)}return this}},{key:"fill",value:function(t){this.glow();var e=this.create("path");return void 0===t&&(t={},r.Vex.Merge(t,this.attributes),t.stroke="none"),t.d=this.path,this.applyAttributes(e,t),this.add(e),this}},{key:"stroke",value:function(){this.glow();var t=this.create("path"),e={};return r.Vex.Merge(e,this.attributes),e.fill="none",e["stroke-width"]=this.lineWidth,e.d=this.path,this.applyAttributes(t,e),this.add(t),this}},{key:"measureText",value:function(t){var e=this.create("text");if("function"!=typeof e.getBBox)return{x:0,y:0,width:0,height:0};e.textContent=t,this.applyAttributes(e,this.attributes),this.svg.appendChild(e);var n=e.getBBox();return this.ie&&""!==t&&"italic"===this.attributes["font-style"]&&(n=this.ieMeasureTextFix(n,t)),this.svg.removeChild(e),n}},{key:"ieMeasureTextFix",value:function(t){var e=1.196*Number(this.fontSize)+1.9598,n=t.width-e,i=t.height-1.5;return{x:t.x,y:t.y,width:n,height:i}}},{key:"fillText",value:function(t,e,n){var i={};r.Vex.Merge(i,this.attributes),i.stroke="none",i.x=e,i.y=n;var o=this.create("text");o.textContent=t,this.applyAttributes(o,i),this.add(o)}},{key:"save",value:function(){return this.state_stack.push({state:{"font-family":this.state["font-family"],"font-weight":this.state["font-weight"],"font-style":this.state["font-style"],"font-size":this.state["font-size"]},attributes:{"font-family":this.attributes["font-family"],"font-weight":this.attributes["font-weight"],"font-style":this.attributes["font-style"],"font-size":this.attributes["font-size"],fill:this.attributes.fill,stroke:this.attributes.stroke,"stroke-width":this.attributes["stroke-width"],"stroke-dasharray":this.attributes["stroke-dasharray"]},shadow_attributes:{width:this.shadow_attributes.width,color:this.shadow_attributes.color}}),this}},{key:"restore",value:function(){var t=this.state_stack.pop();return this.state["font-family"]=t.state["font-family"],this.state["font-weight"]=t.state["font-weight"],this.state["font-style"]=t.state["font-style"],this.state["font-size"]=t.state["font-size"],this.attributes["font-family"]=t.attributes["font-family"],this.attributes["font-weight"]=t.attributes["font-weight"],this.attributes["font-style"]=t.attributes["font-style"],this.attributes["font-size"]=t.attributes["font-size"],this.attributes.fill=t.attributes.fill,this.attributes.stroke=t.attributes.stroke,this.attributes["stroke-width"]=t.attributes["stroke-width"],this.attributes["stroke-dasharray"]=t.attributes["stroke-dasharray"],this.shadow_attributes.width=t.shadow_attributes.width,this.shadow_attributes.color=t.shadow_attributes.color,this}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Formatter=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(15),a=n(2),u=n(3),c=n(18),l=n(19),h=n(20),f=n(22),p=n(27),d=n(39);function b(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];v.DEBUG&&o.Vex.L("Vex.Flow.Formatter",e)}function y(t,e,n,i){var r=e;for(n+=1;n<t.length;n+=1){var s=t[n];if(!s.isRest()&&!s.shouldIgnoreTicks()){r=s.getLineForRest();break}}if(i&&e!==r){var a=Math.max(e,r),u=Math.min(e,r);r=o.Vex.MidLine(a,u)}return r}function m(t,e,n){if(!t||!t.length)throw new o.Vex.RERR("BadArgument","No voices to format");var i=t[0].getTotalTicks(),r=t.reduce(function(t,e){if(!e.getTotalTicks().equals(i))throw new o.Vex.RERR("TickMismatch","Voices should have same total note duration in ticks.");if(e.getMode()===c.Voice.Mode.STRICT&&!e.isComplete())throw new o.Vex.RERR("IncompleteVoice","Voice does not have enough notes.");return Math.max(t,u.Fraction.LCM(t,e.getResolutionMultiplier()))},1),s={},a=[],l=[];return t.forEach(function(t){var i=new u.Fraction(0,r);t.getTickables().forEach(function(t){var r=i.numerator;if(!s[r]){var o=new e;l.push(o),s[r]=o}n(t,s[r]),a.push(r),i.add(t.getTicks())})}),{map:s,array:l,list:o.Vex.SortAndUnique(a,function(t,e){return t-e},function(t,e){return t===e}),resolutionMultiplier:r}}var v=e.Formatter=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.minTotalWidth=0,this.hasMinTotalWidth=!1,this.totalTicks=new u.Fraction(0,1),this.tickContexts=null,this.modiferContexts=null,this.contextGaps={total:0,gaps:[]},this.voices=[]}return r(t,null,[{key:"SimpleFormat",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?0:arguments[1],n=(arguments.length<=2||void 0===arguments[2]?{}:arguments[2]).paddingBetween,i=void 0===n?10:n;t.reduce(function(t,e){e.addToModifierContext(new p.ModifierContext);var n=(new d.TickContext).addTickable(e).preFormat(),r=n.getExtraPx();return n.setX(t+r.left),t+n.getWidth()+r.right+i},e)}},{key:"plotDebugging",value:function(t,e,n,i,r){var o=n+f.Note.STAVEPADDING,s=e.contextGaps;t.save(),t.setFont("Arial",8,""),s.gaps.forEach(function(e){var n,s,a;n=o+e.x1,s=o+e.x2,a="#aaa",t.beginPath(),t.setStrokeStyle(a),t.setFillStyle(a),t.setLineWidth(1),t.fillRect(n,i,s-n,r-i),t.fillText(Math.round(e.x2-e.x1),o+e.x1,r+12)}),t.fillText(Math.round(s.total)+"px",o-20,r+12),t.setFillStyle("red"),t.fillText("Loss: "+e.lossHistory.map(function(t){return Math.round(t)}),o-20,r+22),t.restore()}},{key:"FormatAndDraw",value:function(e,n,r,u){var l={auto_beam:!1,align_rests:!1};"object"===(void 0===u?"undefined":i(u))?o.Vex.Merge(l,u):"boolean"==typeof u&&(l.auto_beam=u);var h=new c.Voice(a.Flow.TIME4_4).setMode(c.Voice.Mode.SOFT).addTickables(r),f=l.auto_beam?s.Beam.applyAndGetBeams(h):[];return(new t).joinVoices([h],{align_rests:l.align_rests}).formatToStave([h],n,{align_rests:l.align_rests,stave:n}),h.setStave(n).draw(e,n),f.forEach(function(t){return t.setContext(e).draw()}),h.getBoundingBox()}},{key:"FormatAndDrawTab",value:function(e,n,r,u,h,f,p){var d={auto_beam:f,align_rests:!1};"object"===(void 0===p?"undefined":i(p))?o.Vex.Merge(d,p):"boolean"==typeof p&&(d.auto_beam=p);var b=new c.Voice(a.Flow.TIME4_4).setMode(c.Voice.Mode.SOFT).addTickables(h),y=new c.Voice(a.Flow.TIME4_4).setMode(c.Voice.Mode.SOFT).addTickables(u),m=d.auto_beam?s.Beam.applyAndGetBeams(b):[];(new t).joinVoices([b],{align_rests:d.align_rests}).joinVoices([y]).formatToStave([b,y],r,{align_rests:d.align_rests}),b.draw(e,r),y.draw(e,n),m.forEach(function(t){return t.setContext(e).draw()}),new l.StaveConnector(r,n).setContext(e).draw()}},{key:"AlignRestsToNotes",value:function(t,e,n){return t.forEach(function(i,r){if(i instanceof h.StaveNote&&i.isRest()){if(i.tuplet&&!n)return;var o=i.getGlyph().position.toUpperCase();if("R/4"!==o&&"B/4"!==o)return;if(e||null!=i.beam){var s=i.getKeyProps()[0];if(0===r)s.line=y(t,s.line,r,!1),i.setKeyLine(0,s.line);else if(r>0&&r<t.length){var a=void 0;t[r-1].isRest()?(a=t[r-1].getKeyProps()[0].line,s.line=a):(a=t[r-1].getLineForRest(),s.line=y(t,a,r,!0)),i.setKeyLine(0,s.line)}}}}),this}}]),r(t,[{key:"alignRests",value:function(e,n){if(!e||!e.length)throw new o.Vex.RERR("BadArgument","No voices to format rests");e.forEach(function(e){return t.AlignRestsToNotes(e.getTickables(),n)})}},{key:"preCalculateMinTotalWidth",value:function(t){if(this.hasMinTotalWidth)return this.minTotalWidth;if(!this.tickContexts){if(!t)throw new o.Vex.RERR("BadArgument","'voices' required to run preCalculateMinTotalWidth");this.createTickContexts(t)}var e=this.tickContexts,n=e.list,i=e.map;return this.minTotalWidth=n.map(function(t){var e=i[t];return e.preFormat(),e.getWidth()}).reduce(function(t,e){return t+e},0),this.hasMinTotalWidth=!0,this.minTotalWidth}},{key:"getMinTotalWidth",value:function(){if(!this.hasMinTotalWidth)throw new o.Vex.RERR("NoMinTotalWidth","Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'");return this.minTotalWidth}},{key:"createModifierContexts",value:function(t){var e=m(t,p.ModifierContext,function(t,e){return t.addToModifierContext(e)});return this.modiferContexts=e,e}},{key:"createTickContexts",value:function(t){var e=m(t,d.TickContext,function(t,e){return e.addTickable(t)});return e.array.forEach(function(t){t.tContexts=e.array}),this.totalTicks=t[0].getTicksUsed().clone(),this.tickContexts=e,e}},{key:"preFormat",value:function(){var t=arguments.length<=0||void 0===arguments[0]?0:arguments[0],e=arguments[1],n=this,i=arguments[2],r=arguments[3],o=this.tickContexts,s=o.list,a=o.map,u=o.resolutionMultiplier;i&&r&&i.forEach(function(t){return t.setStave(r).preFormat()});var c=0,l=0,h=t/2;if(this.minTotalWidth=0,s.forEach(function(t){var i=a[t];e&&i.setContext(e),i.preFormat();var r=i.getWidth();n.minTotalWidth+=r;var o=i.getMetrics();c=c+l+o.extraLeftPx,i.setX(c),l=r-o.extraLeftPx}),this.minTotalWidth=c+l,this.hasMinTotalWidth=!0,!(t<=0)){var f=(t-this.minTotalWidth)/(this.totalTicks.value()*u),p=0;s.forEach(function(t,e){var n=s[e-1]||0,i=a[t];p+=(t-n)*f,i.setX(i.getX()+p),i.getCenterAlignedTickables().forEach(function(t){t.center_x_shift=h-i.getX()})}),1!==s.length&&(this.justifyWidth=t,this.lossHistory=[],this.evaluate())}}},{key:"evaluate",value:function(){var t=this,e=this.justifyWidth;this.contextGaps={total:0,gaps:[]},this.tickContexts.list.forEach(function(e,n){if(0!==n){var i=t.tickContexts.list[n-1],r=t.tickContexts.map[i],o=t.tickContexts.map[e],s=r.getMetrics(),a=r.getX()+s.width,u=o.getX(),c=u-a;t.contextGaps.total+=c,t.contextGaps.gaps.push({x1:a,x2:u}),o.getFormatterMetrics().freedom.left=c,r.getFormatterMetrics().freedom.right=c}});var n=this.durationStats={};this.voices.forEach(function(t){t.getTickables().forEach(function(t,i,r){var o=t.getTicks().clone().simplify().toString(),s=t.getMetrics(),a=t.getFormatterMetrics(),u=t.getX()+s.noteWidth+s.modRightPx+s.extraRightPx,c=0;if(i<r.length-1){var l=r[i+1],h=l.getMetrics();c=l.getX()-h.modLeftPx-h.extraLeftPx-u,a.space.used=l.getX()-t.getX(),l.getFormatterMetrics().freedom.left=c}else c=e-u,a.space.used=e-t.getX();a.freedom.right=c,function(t,e){var i=n[t];void 0===i?n[t]={mean:e,count:1}:(i.count+=1,i.mean=(i.mean+e)/2)}(o,a.space.used)})});var i=0;return this.voices.forEach(function(t){t.getTickables().forEach(function(t){var e=t.getTicks().clone().simplify().toString(),r=t.getFormatterMetrics();r.iterations+=1,r.space.deviation=r.space.used-n[e].mean,r.duration=e,r.space.mean=n[e].mean,i+=Math.pow(n[e].mean,2)})}),this.totalCost=Math.sqrt(i),this.lossHistory.push(this.totalCost),this}},{key:"tune",value:function(){var t=this;var e=0;return this.tickContexts.list.forEach(function(n,i,r){var o=t.tickContexts.map[n],s=i>0?t.tickContexts.map[r[i-1]]:null,a=i<r.length-1?t.tickContexts.map[r[i+1]]:null;!function(t,e,n,i){t.setX(t.getX()+i),t.getFormatterMetrics().freedom.left+=i,t.getFormatterMetrics().freedom.right-=i,e&&(e.getFormatterMetrics().freedom.right+=i),n&&(n.getFormatterMetrics().freedom.left-=i)}(o,s,a,e);var u=-o.getTickables().map(function(t){return t.getFormatterMetrics().space.deviation}).reduce(function(t,e){return t+e});u>0?e=-Math.min(o.getFormatterMetrics().freedom.right,Math.abs(u)):u<0&&(e=a?Math.min(a.getFormatterMetrics().freedom.right,Math.abs(u)):0);var c=Math.min(5,Math.abs(e));e=e>0?c:-c}),this.evaluate()}},{key:"postFormat",value:function(){var t=function(t){return t.list.forEach(function(e){return t.map[e].postFormat()})};return t(this.modiferContexts),t(this.tickContexts),this}},{key:"joinVoices",value:function(t){return this.createModifierContexts(t),this.hasMinTotalWidth=!1,this}},{key:"format",value:function(t,e,n){var i={align_rests:!1,context:null,stave:null};return o.Vex.Merge(i,n),this.voices=t,this.alignRests(t,i.align_rests),this.createTickContexts(t),this.preFormat(e,i.context,t,i.stave),i.stave&&this.postFormat(),this}},{key:"formatToStave",value:function(t,e,n){var i=e.getNoteEndX()-e.getNoteStartX()-10;b("Formatting voices to width: ",i);var r={context:e.getContext()};return o.Vex.Merge(r,n),this.format(t,i,r)}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Beam=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(5),a=n(3),u=n(16),c=n(17);function l(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function h(t){var e=0;return t.forEach(function(t){t.keyProps&&t.keyProps.forEach(function(t){e+=t.line-3})}),e>=0?c.Stem.DOWN:c.Stem.UP}e.Beam=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(i.setAttribute("type","Beam"),!t||t===[])throw new r.Vex.RuntimeError("BadArguments","No notes provided for beam.");if(1===t.length)throw new r.Vex.RuntimeError("BadArguments","Too few notes for beam.");if(i.ticks=t[0].getIntrinsicTicks(),i.ticks>=o.Flow.durationToTicks("4"))throw new r.Vex.RuntimeError("BadArguments","Beams can only be applied to notes shorter than a quarter note.");var s=void 0,a=void 0;for(i.stem_direction=c.Stem.UP,s=0;s<t.length;++s)if((a=t[s]).hasStem()){i.stem_direction=a.getStemDirection();break}var u=i.stem_direction;if(n&&"stavenotes"===t[0].getCategory())u=h(t);else if(n&&"tabnotes"===t[0].getCategory()){u=t.reduce(function(t,e){return t+e.stem_direction},0)>-1?c.Stem.UP:c.Stem.DOWN}for(s=0;s<t.length;++s)a=t[s],n&&(a.setStemDirection(u),i.stem_direction=u),a.setBeam(i);return i.postFormatted=!1,i.notes=t,i.beam_count=i.getBeamCount(),i.break_on_indices=[],i.render_options={beam_width:5,max_slope:.25,min_slope:-.25,slope_iterations:20,slope_cost:100,show_stemlets:!1,stemlet_extension:7,partial_beam_length:10,flat_beams:!1,min_flat_beam_offset:15},i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Element),i(e,null,[{key:"getDefaultBeamGroups",value:function(t){t&&"c"!==t||(t="4/4");var e={"1/2":["1/2"],"2/2":["1/2"],"3/2":["1/2"],"4/2":["1/2"],"1/4":["1/4"],"2/4":["1/4"],"3/4":["1/4"],"4/4":["1/4"],"1/8":["1/8"],"2/8":["2/8"],"3/8":["3/8"],"4/8":["2/8"],"1/16":["1/16"],"2/16":["2/16"],"3/16":["3/16"],"4/16":["2/16"]}[t];if(void 0!==e)return e.map(function(t){return(new a.Fraction).parse(t)});var n=parseInt(t.split("/")[0],10),i=parseInt(t.split("/")[1],10);return n%3==0?[new a.Fraction(3,i)]:i>4?[new a.Fraction(2,i)]:i<=4?[new a.Fraction(1,i)]:[new a.Fraction(1,4)]}},{key:"applyAndGetBeams",value:function(t,n,i){return e.generateBeams(t.getTickables(),{groups:i,stem_direction:n})}},{key:"generateBeams",value:function(t,n){n||(n={}),n.groups&&n.groups.length||(n.groups=[new a.Fraction(2,8)]);var i,s,l=n.groups.map(function(t){if(!t.multiply)throw new r.Vex.RuntimeError("InvalidBeamGroups","The beam groups must be an array of Vex.Flow.Fractions");return t.clone().multiply(o.Flow.RESOLUTION,1)}),f=0,p=[],d=[];function b(){l.length-1>f?f+=1:f=0}i=[],t.forEach(function(t){if(i=[],t.shouldIgnoreTicks())return p.push(d),void(d=i);d.push(t);var e=l[f].clone(),n=d.reduce(function(t,e){return e.getTicks().clone().add(t)},new a.Fraction(0,1)),r=o.Flow.durationToNumber(t.duration)<8;r&&t.tuplet&&(e.numerator*=2),n.greaterThan(e)?(r||i.push(d.pop()),p.push(d),d=i,b()):n.equals(e)&&(p.push(d),d=i,b())}),d.length>0&&p.push(d),s=[],p.forEach(function(t){var e=[];t.forEach(function(t,i,r){var o=0===i||i===r.length-1,a=r[i-1],u=!n.beam_rests&&t.isRest(),c=n.beam_rests&&n.beam_middle_only&&t.isRest()&&o,l=!1;if(n.maintain_stem_directions&&a&&!t.isRest()&&!a.isRest()){var h=a.getStemDirection();l=t.getStemDirection()!==h}var f=parseInt(t.duration,10)<8;u||c||l||f?(e.length>0&&s.push(e),e=l?[t]:[]):e.push(t)}),e.length>0&&s.push(e)}),(p=s).forEach(function(t){var e=void 0;if(n.maintain_stem_directions){var i=function(t){for(var e=0;e<t.length;e++){var n=t[e];if(!n.isRest())return n}return!1}(t);e=i?i.getStemDirection():c.Stem.UP}else e=n.stem_direction?n.stem_direction:h(t);!function(t,e){t.forEach(function(t){t.setStemDirection(e)})}(t,e)});var y,m=p.filter(function(t){if(t.length>1){var e=!0;return t.forEach(function(t){t.getIntrinsicTicks()>=o.Flow.durationToTicks("4")&&(e=!1)}),e}return!1}),v=(y=[],p.forEach(function(t){var e=null;t.forEach(function(t){t.tuplet&&e!==t.tuplet&&(e=t.tuplet,y.push(e))})}),y),g=[];return m.forEach(function(t){var i=new e(t);n.show_stemlets&&(i.render_options.show_stemlets=!0),n.secondary_breaks&&(i.render_options.secondary_break_ticks=o.Flow.durationToTicks(n.secondary_breaks)),!0===n.flat_beams&&(i.render_options.flat_beams=!0,i.render_options.flat_beam_offset=n.flat_beam_offset),g.push(i)}),v.forEach(function(t){var e=t.notes[0].stem_direction===c.Stem.DOWN?u.Tuplet.LOCATION_BOTTOM:u.Tuplet.LOCATION_TOP;t.setTupletLocation(e);for(var n=!1,i=0;i<t.notes.length;i++){if(null===t.notes[i].beam){n=!0;break}}t.setBracketed(n)}),g}}]),i(e,[{key:"getNotes",value:function(){return this.notes}},{key:"getBeamCount",value:function(){return this.notes.map(function(t){return t.getGlyph().beam_count}).reduce(function(t,e){return e>t?e:t})}},{key:"breakSecondaryAt",value:function(t){return this.break_on_indices=t,this}},{key:"getSlopeY",value:function(t,e,n,i){return n+(t-e)*i}},{key:"calculateSlope",value:function(){for(var t=this.notes,e=this.stem_direction,n=this.render_options,i=n.max_slope,r=n.min_slope,o=n.slope_iterations,s=n.slope_cost,a=t[0],u=function(t,e){var n=t.getStemExtents().topY,i=t.getStemX();return(e.getStemExtents().topY-n)/(e.getStemX()-i)}(a,t[t.length-1]),c=(i-r)/o,l=Number.MAX_VALUE,h=0,f=0,p=r;p<=i;p+=c){for(var d=0,b=0,y=1;y<t.length;++y){var m=t[y],v=this.getSlopeY(m.getStemX(),a.getStemX(),a.getStemExtents().topY,p)+b,g=m.getStemExtents().topY;if(g*e<v*e){var _=Math.abs(g-v);b+=_*-e,d+=_*y}else d+=(g-v)*e}var S=u/2,x=s*Math.abs(S-p)+Math.abs(d);x<l&&(l=x,h=p,f=b)}this.slope=h,this.y_shift=f}},{key:"calculateFlatSlope",value:function(){for(var t=this.notes,e=this.stem_direction,n=this.render_options,i=n.beam_width,r=n.min_flat_beam_offset,o=n.flat_beam_offset,s=0,a=0,u=0,h=0,f=0;f<t.length;f++){var p=t[f],d=p.getStemExtents().topY;s+=d,e===c.Stem.DOWN&&h<d?(h=d,a=Math.max.apply(Math,l(p.getYs())),u=p.getBeamCount()):e===c.Stem.UP&&(0===h||h>d)&&(h=d,a=Math.min.apply(Math,l(p.getYs())),u=p.getBeamCount())}var b=s/t.length,y=r+u*(1.5*i),m=a+y*-e;e===c.Stem.DOWN&&b<m?b=a+y:e===c.Stem.UP&&b>m&&(b=a-y),o?e===c.Stem.DOWN&&b>o?this.render_options.flat_beam_offset=b:e===c.Stem.UP&&b<o&&(this.render_options.flat_beam_offset=b):this.render_options.flat_beam_offset=b,this.slope=0,this.y_shift=0}},{key:"applyStemExtensions",value:function(){var t=this.notes,e=this.slope,n=this.y_shift,i=this.stem_direction,r=this.beam_count,o=this.render_options,s=o.show_stemlets,a=o.flat_beam_offset,u=o.flat_beams,l=o.stemlet_extension,h=o.beam_width,f=t[0],p=f.getStemExtents().topY;u&&a&&(p=a);for(var d=f.getStemX(),b=0;b<t.length;++b){var y=t[b],m=y.getStemX(),v=y.getStemExtents().topY,g=this.getSlopeY(m,d,p,e)+n,_=y.getStem().getExtension(),S=i===c.Stem.UP?v-g:g-v;if(y.stem.setExtension(_+S),y.stem.renderHeightAdjustment=-c.Stem.WIDTH/2,y.isRest()&&s){var x=(r-1)*h*1.5+h;y.stem.setVisibility(!0).setStemlet(!0,x+l)}}}},{key:"getBeamLines",value:function(t){for(var e=[],n=!1,i=null,r=this.render_options.partial_beam_length,s=!1,a=0,u=0;u<this.notes.length;++u){var l=this.notes[u];a+=l.ticks.value();var h=!1;parseInt(t,10)>=8&&(h=-1!==this.break_on_indices.indexOf(u),this.render_options.secondary_break_ticks&&a>=this.render_options.secondary_break_ticks&&(a=0,h=!0));var f=l.getIntrinsicTicks()<o.Flow.durationToTicks(t),p=l.getStemX()-c.Stem.WIDTH/2,d=this.notes[u+1],b=d&&d.getIntrinsicTicks()<o.Flow.durationToTicks(t);f?n?((i=e[e.length-1]).end=p,h&&(n=!1,d&&!b&&null===i.end&&(i.end=i.start-r))):(i={start:p,end:null},n=!0,b?h&&(i.end=i.start-r,n=!1):i.end=(s||0===u)&&d?i.start+r:i.start-r,e.push(i)):n=!1,s=h}var y=e[e.length-1];return y&&null===y.end&&(y.end=y.start-r),e}},{key:"drawStems",value:function(){var t=this;this.notes.forEach(function(e){e.getStem()&&e.getStem().setContext(t.context).draw()},this)}},{key:"drawBeamLines",value:function(){this.checkContext();var t=["4","8","16","32","64"],e=this.notes[0],n=e.getStemExtents().topY;this.render_options.flat_beams&&this.render_options.flat_beam_offset&&(n=this.render_options.flat_beam_offset);for(var i=e.getStemX(),r=this.render_options.beam_width*this.stem_direction,o=0;o<t.length;++o){for(var s=t[o],a=this.getBeamLines(s),u=0;u<a.length;++u){var c=a[u],l=c.start,h=this.getSlopeY(l,i,n,this.slope),f=c.end,p=this.getSlopeY(f,i,n,this.slope);this.context.beginPath(),this.context.moveTo(l,h),this.context.lineTo(l,h+r),this.context.lineTo(f+1,p+r),this.context.lineTo(f+1,p),this.context.closePath(),this.context.fill()}n+=1.5*r}}},{key:"preFormat",value:function(){return this}},{key:"postFormat",value:function(){this.postFormatted||("tabnotes"===this.notes[0].getCategory()||this.render_options.flat_beams?this.calculateFlatSlope():this.calculateSlope(),this.applyStemExtensions(),this.postFormatted=!0)}},{key:"draw",value:function(){this.checkContext(),this.setRendered(),this.unbeamable||(this.postFormatted||this.postFormat(),this.drawStems(),this.applyStyle(),this.drawBeamLines(),this.restoreStyle())}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tuplet=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(14),a=n(4),u=n(17);e.Tuplet=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(i.setAttribute("type","Tuplet"),!t||!t.length)throw new r.Vex.RuntimeError("BadArguments","No notes provided for tuplet.");return i.options=r.Vex.Merge({},n),i.notes=t,i.num_notes="num_notes"in i.options?i.options.num_notes:t.length,i.options.beats_occupied&&i.beatsOccupiedDeprecationWarning(),i.notes_occupied=i.options.notes_occupied||i.options.beats_occupied||2,"bracketed"in i.options?i.bracketed=i.options.bracketed:i.bracketed=t.some(function(t){return null===t.beam}),i.ratioed="ratioed"in i.options?i.options.ratioed:Math.abs(i.notes_occupied-i.num_notes)>1,i.point=28,i.y_pos=16,i.x_pos=100,i.width=200,i.location=i.options.location||e.LOCATION_TOP,s.Formatter.AlignRestsToNotes(t,!0,!0),i.resolveGlyphs(),i.attach(),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"LOCATION_TOP",get:function(){return 1}},{key:"LOCATION_BOTTOM",get:function(){return-1}},{key:"NESTING_OFFSET",get:function(){return 15}}]),i(e,[{key:"attach",value:function(){for(var t=0;t<this.notes.length;t++){this.notes[t].setTuplet(this)}}},{key:"detach",value:function(){for(var t=0;t<this.notes.length;t++){this.notes[t].resetTuplet(this)}}},{key:"setBracketed",value:function(t){return this.bracketed=!!t,this}},{key:"setRatioed",value:function(t){return this.ratioed=!!t,this}},{key:"setTupletLocation",value:function(t){if(t){if(t!==e.LOCATION_TOP&&t!==e.LOCATION_BOTTOM)throw new r.Vex.RERR("BadArgument","Invalid tuplet location: "+t)}else t=e.LOCATION_TOP;return this.location=t,this}},{key:"getNotes",value:function(){return this.notes}},{key:"getNoteCount",value:function(){return this.num_notes}},{key:"beatsOccupiedDeprecationWarning",value:function(){var t=["beats_occupied has been deprecated as an ","option for tuplets. Please use notes_occupied ","instead. Calls to getBeatsOccupied and ","setBeatsOccupied should now be routed to ","getNotesOccupied and setNotesOccupied instead"].join("");console&&console.warn?console.warn(t):console&&console.log(t)}},{key:"getBeatsOccupied",value:function(){return this.beatsOccupiedDeprecationWarning(),this.getNotesOccupied()}},{key:"setBeatsOccupied",value:function(t){return this.beatsOccupiedDeprecationWarning(),this.setNotesOccupied(t)}},{key:"getNotesOccupied",value:function(){return this.notes_occupied}},{key:"setNotesOccupied",value:function(t){this.detach(),this.notes_occupied=t,this.resolveGlyphs(),this.attach()}},{key:"resolveGlyphs",value:function(){this.num_glyphs=[];for(var t=this.num_notes;t>=1;)this.num_glyphs.push(new a.Glyph("v"+t%10,this.point)),t=parseInt(t/10,10);for(this.denom_glyphs=[],t=this.notes_occupied;t>=1;)this.denom_glyphs.push(new a.Glyph("v"+t%10,this.point)),t=parseInt(t/10,10)}},{key:"getNestedTupletCount",value:function(){var t=this.location,e=this.notes[0],n=r(e,t),i=r(e,t);function r(t,e){return t.tupletStack.filter(function(t){return t.location===e}).length}return this.notes.forEach(function(e){var o=r(e,t);n=o>n?o:n,i=o<i?o:i}),n-i}},{key:"getYPosition",value:function(){var t=this.getNestedTupletCount()*e.NESTING_OFFSET*-this.location,n=this.options.y_offset||0,i=this.notes[0],r=void 0;if(this.location===e.LOCATION_TOP){r=i.getStave().getYForLine(0)-15;for(var o=0;o<this.notes.length;++o){var s=this.notes[o].getStemDirection()===u.Stem.UP?this.notes[o].getStemExtents().topY-10:this.notes[o].getStemExtents().baseY-20;s<r&&(r=s)}}else{r=i.getStave().getYForLine(4)+20;for(var a=0;a<this.notes.length;++a){var c=this.notes[a].getStemDirection()===u.Stem.UP?this.notes[a].getStemExtents().baseY+20:this.notes[a].getStemExtents().topY+10;c>r&&(r=c)}}return r+t+n}},{key:"draw",value:function(){var t=this;this.checkContext(),this.setRendered();var n=this.notes[0],i=this.notes[this.notes.length-1];this.bracketed?(this.x_pos=n.getTieLeftX()-5,this.width=i.getTieRightX()-this.x_pos+5):(this.x_pos=n.getStemX(),this.width=i.getStemX()-this.x_pos),this.y_pos=this.getYPosition();var r=function(t,e){return t+e.getMetrics().width},o=this.num_glyphs.reduce(r,0);this.ratioed&&(o=this.denom_glyphs.reduce(r,o),o+=.32*this.point);var s=this.x_pos+this.width/2-o/2;if(this.bracketed){var a=this.width/2-o/2-5;a>0&&(this.context.fillRect(this.x_pos,this.y_pos,a,1),this.context.fillRect(this.x_pos+this.width/2+o/2+5,this.y_pos,a,1),this.context.fillRect(this.x_pos,this.y_pos+(this.location===e.LOCATION_BOTTOM),1,10*this.location),this.context.fillRect(this.x_pos+this.width,this.y_pos+(this.location===e.LOCATION_BOTTOM),1,10*this.location))}var u=0;if(this.num_glyphs.forEach(function(e){e.render(t.context,s+u,t.y_pos+t.point/3-2),u+=e.getMetrics().width}),this.ratioed){var c=s+u+.16*this.point,l=.06*this.point;this.context.beginPath(),this.context.arc(c,this.y_pos-.08*this.point,l,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),this.context.beginPath(),this.context.arc(c,this.y_pos+.12*this.point,l,0,2*Math.PI,!0),this.context.closePath(),this.context.fill(),u+=.32*this.point,this.denom_glyphs.forEach(function(e){e.render(t.context,s+u,t.y_pos+t.point/3-2),u+=e.getMetrics().width})}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Stem=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(2);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.Stem",e)}var u=e.Stem=function(t){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","Stem"),n.x_begin=t.x_begin||0,n.x_end=t.x_end||0,n.y_top=t.y_top||0,n.y_bottom=t.y_bottom||0,n.stem_extension=t.stem_extension||0,n.stem_direction=t.stem_direction||0,n.hide=t.hide||!1,n.isStemlet=t.isStemlet||!1,n.stemletHeight=t.stemletHeight||0,n.renderHeightAdjustment=0,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"CATEGORY",get:function(){return"stem"}},{key:"UP",get:function(){return 1}},{key:"DOWN",get:function(){return-1}},{key:"WIDTH",get:function(){return s.Flow.STEM_WIDTH}},{key:"HEIGHT",get:function(){return s.Flow.STEM_HEIGHT}}]),i(e,[{key:"setNoteHeadXBounds",value:function(t,e){return this.x_begin=t,this.x_end=e,this}},{key:"setDirection",value:function(t){this.stem_direction=t}},{key:"setExtension",value:function(t){this.stem_extension=t}},{key:"getExtension",value:function(){return this.stem_extension}},{key:"setYBounds",value:function(t,e){this.y_top=t,this.y_bottom=e}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getHeight",value:function(){return(this.y_bottom-this.y_top)*this.stem_direction+(e.HEIGHT+this.stem_extension)*this.stem_direction}},{key:"getBoundingBox",value:function(){throw new r.Vex.RERR("NotImplemented","getBoundingBox() not implemented.")}},{key:"getExtents",value:function(){var t=this.stem_direction===e.UP,n=[this.y_top,this.y_bottom],i=e.HEIGHT+this.stem_extension,r=(t?Math.min:Math.max).apply(void 0,n),o=(t?Math.max:Math.min).apply(void 0,n);return{topY:r+i*-this.stem_direction,baseY:o}}},{key:"setVisibility",value:function(t){return this.hide=!t,this}},{key:"setStemlet",value:function(t,e){return this.isStemlet=t,this.stemletHeight=e,this}},{key:"draw",value:function(){if(this.setRendered(),!this.hide){var t=this.checkContext(),n=void 0,i=void 0,r=this.stem_direction;r===e.DOWN?(n=this.x_begin,i=this.y_top):(n=this.x_end,i=this.y_bottom);var o=this.getHeight();a("Rendering stem - ","Top Y: ",this.y_top,"Bottom Y: ",this.y_bottom);var s=this.isStemlet?o-this.stemletHeight*this.stem_direction:0;t.save(),this.applyStyle(t),t.beginPath(),t.setLineWidth(e.WIDTH),t.moveTo(n,i-s),t.lineTo(n,i-o-this.renderHeightAdjustment*r),t.stroke(),t.restore()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Voice=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(2),a=n(3);e.Voice=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(n.setAttribute("type","Voice"),"string"==typeof t){var i=t.match(/(\d+)\/(\d+)/);i&&(t={num_beats:i[1],beat_value:i[2],resolution:s.Flow.RESOLUTION})}return n.time=r.Vex.Merge({num_beats:4,beat_value:4,resolution:s.Flow.RESOLUTION},t),n.totalTicks=new a.Fraction(n.time.num_beats*(n.time.resolution/n.time.beat_value),1),n.resolutionMultiplier=1,n.tickables=[],n.ticksUsed=new a.Fraction(0,1),n.smallestTickCount=n.totalTicks.clone(),n.largestTickWidth=0,n.stave=null,n.mode=e.Mode.STRICT,n.voiceGroup=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"Mode",get:function(){return{STRICT:1,SOFT:2,FULL:3}}}]),i(e,[{key:"getTotalTicks",value:function(){return this.totalTicks}},{key:"getTicksUsed",value:function(){return this.ticksUsed}},{key:"getLargestTickWidth",value:function(){return this.largestTickWidth}},{key:"getSmallestTickCount",value:function(){return this.smallestTickCount}},{key:"getTickables",value:function(){return this.tickables}},{key:"getMode",value:function(){return this.mode}},{key:"setMode",value:function(t){return this.mode=t,this}},{key:"getResolutionMultiplier",value:function(){return this.resolutionMultiplier}},{key:"getActualResolution",value:function(){return this.resolutionMultiplier*this.time.resolution}},{key:"setStave",value:function(t){return this.stave=t,this.boundingBox=null,this}},{key:"getBoundingBox",value:function(){var t=void 0,e=void 0,n=void 0,i=void 0;if(!this.boundingBox){if(!this.stave)throw new r.Vex.RERR("NoStave","Can't get bounding box without stave.");for(t=this.stave,e=null,i=0;i<this.tickables.length;++i)this.tickables[i].setStave(t),(n=this.tickables[i].getBoundingBox())&&(e=e?e.mergeWith(n):n);this.boundingBox=e}return this.boundingBox}},{key:"getVoiceGroup",value:function(){if(!this.voiceGroup)throw new r.Vex.RERR("NoVoiceGroup","No voice group for voice.");return this.voiceGroup}},{key:"setVoiceGroup",value:function(t){return this.voiceGroup=t,this}},{key:"setStrict",value:function(t){return this.mode=t?e.Mode.STRICT:e.Mode.SOFT,this}},{key:"isComplete",value:function(){return this.mode!==e.Mode.STRICT&&this.mode!==e.Mode.FULL||this.ticksUsed.equals(this.totalTicks)}},{key:"addTickable",value:function(t){if(!t.shouldIgnoreTicks()){var n=t.getTicks();if(this.ticksUsed.add(n),(this.mode===e.Mode.STRICT||this.mode===e.Mode.FULL)&&this.ticksUsed.greaterThan(this.totalTicks))throw this.totalTicks.subtract(n),new r.Vex.RERR("BadArgument","Too many ticks.");n.lessThan(this.smallestTickCount)&&(this.smallestTickCount=n.clone()),this.resolutionMultiplier=this.ticksUsed.denominator,this.totalTicks.add(0,this.ticksUsed.denominator)}return this.tickables.push(t),t.setVoice(this),this}},{key:"addTickables",value:function(t){for(var e=0;e<t.length;++e)this.addTickable(t[e]);return this}},{key:"preFormat",value:function(){var t=this;return this.preFormatted?this:(this.tickables.forEach(function(e){e.getStave()||e.setStave(t.stave)}),this.preFormatted=!0,this)}},{key:"draw",value:function(){var t=arguments.length<=0||void 0===arguments[0]?this.context:arguments[0],e=arguments.length<=1||void 0===arguments[1]?this.stave:arguments[1];this.setRendered();for(var n=null,i=0;i<this.tickables.length;++i){var o=this.tickables[i];if(e&&o.setStave(e),!o.getStave())throw new r.Vex.RuntimeError("MissingStave","The voice cannot draw tickables without staves.");if(0===i&&(n=o.getBoundingBox()),i>0&&n){var s=o.getBoundingBox();s&&n.mergeWith(s)}o.setContext(t),o.draw()}this.boundingBox=n}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveConnector=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(2),a=n(4);function u(t,e,n,i,o){if(e!==c.type.BOLD_DOUBLE_LEFT&&e!==c.type.BOLD_DOUBLE_RIGHT)throw new r.Vex.RERR("InvalidConnector","A REPEAT_BEGIN or REPEAT_END type must be provided.");var s=3,a=3.5;e===c.type.BOLD_DOUBLE_RIGHT&&(s=-5,a=3),t.fillRect(n+s,i,1,o-i),t.fillRect(n-2,i,a,o-i)}var c=e.StaveConnector=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.setAttribute("type","StaveConnector"),i.thickness=s.Flow.STAVE_LINE_THICKNESS,i.width=3,i.top_stave=t,i.bottom_stave=n,i.type=e.type.DOUBLE,i.font={family:"times",size:16,weight:"normal"},i.x_shift=0,i.texts=[],i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"type",get:function(){return{SINGLE_RIGHT:0,SINGLE_LEFT:1,SINGLE:1,DOUBLE:2,BRACE:3,BRACKET:4,BOLD_DOUBLE_LEFT:5,BOLD_DOUBLE_RIGHT:6,THIN_DOUBLE:7,NONE:8}}},{key:"typeString",get:function(){return{singleRight:e.type.SINGLE_RIGHT,singleLeft:e.type.SINGLE_LEFT,single:e.type.SINGLE,double:e.type.DOUBLE,brace:e.type.BRACE,bracket:e.type.BRACKET,boldDoubleLeft:e.type.BOLD_DOUBLE_LEFT,boldDoubleRight:e.type.BOLD_DOUBLE_RIGHT,thinDouble:e.type.THIN_DOUBLE,none:e.type.NONE}}}]),i(e,[{key:"setType",value:function(t){return(t="string"==typeof t?e.typeString[t]:t)>=e.type.SINGLE_RIGHT&&t<=e.type.NONE&&(this.type=t),this}},{key:"setText",value:function(t,e){return this.texts.push({content:t,options:r.Vex.Merge({shift_x:0,shift_y:0},e)}),this}},{key:"setFont",value:function(t){r.Vex.Merge(this.font,t)}},{key:"setXShift",value:function(t){if("number"!=typeof t)throw r.Vex.RERR("InvalidType","x_shift must be a Number");return this.x_shift=t,this}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered();var n=this.top_stave.getYForLine(0),i=this.bottom_stave.getYForLine(this.bottom_stave.getNumLines()-1)+this.thickness,o=this.width,s=this.top_stave.getX();(this.type===e.type.SINGLE_RIGHT||this.type===e.type.BOLD_DOUBLE_RIGHT||this.type===e.type.THIN_DOUBLE)&&(s=this.top_stave.getX()+this.top_stave.width);var c=i-n;switch(this.type){case e.type.SINGLE:case e.type.SINGLE_LEFT:case e.type.SINGLE_RIGHT:o=1;break;case e.type.DOUBLE:s-=this.width+2;break;case e.type.BRACE:o=12;var l=this.top_stave.getX()-2+this.x_shift,h=n,f=l,p=i,d=l-o,b=h+c/2,y=d-.9*o,m=h+.2*c,v=l+1.1*o,g=b-.135*c,_=v,S=b+.135*c,x=y,w=p-.2*c,E=d-o,P=w,T=l+.4*o,M=b+.135*c,k=T,O=b-.135*c,A=E,C=m;t.beginPath(),t.moveTo(l,h),t.bezierCurveTo(y,m,v,g,d,b),t.bezierCurveTo(_,S,x,w,f,p),t.bezierCurveTo(E,P,T,M,d,b),t.bezierCurveTo(k,O,A,C,l,h),t.fill(),t.stroke();break;case e.type.BRACKET:c=(i+=4)-(n-=4),a.Glyph.renderGlyph(t,s-5,n-3,40,"v1b",!0),a.Glyph.renderGlyph(t,s-5,i+3,40,"v10",!0),s-=this.width+2;break;case e.type.BOLD_DOUBLE_LEFT:u(t,this.type,s+this.x_shift,n,i);break;case e.type.BOLD_DOUBLE_RIGHT:u(t,this.type,s,n,i);break;case e.type.THIN_DOUBLE:o=1;break;case e.type.NONE:break;default:throw new r.Vex.RERR("InvalidType","The provided StaveConnector.type ("+this.type+") is invalid")}this.type!==e.type.BRACE&&this.type!==e.type.BOLD_DOUBLE_LEFT&&this.type!==e.type.BOLD_DOUBLE_RIGHT&&this.type!==e.type.NONE&&t.fillRect(s,n,o,c),this.type===e.type.THIN_DOUBLE&&t.fillRect(s-3,n,o,c),t.save(),t.lineWidth=2,t.setFont(this.font.family,this.font.size,this.font.weight);for(var L=0;L<this.texts.length;L++){var I=this.texts[L],R=t.measureText(""+I.content).width,N=this.top_stave.getX()-R-24+I.options.shift_x,F=(this.top_stave.getYForLine(0)+this.bottom_stave.getBottomLineY())/2+I.options.shift_y;t.fillText(""+I.content,N,F+4)}t.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveNote=void 0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=n(1),a=n(2),u=n(8),c=n(17),l=n(21),h=n(24),f=n(25),p=n(26);function d(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];y.DEBUG&&s.Vex.L("Vex.Flow.StaveNote",e)}function b(t,e,n){var i=(e.isrest?0:1)*n;t.line+=i,t.maxLine+=i,t.minLine+=i,t.note.setKeyLine(0,t.note.getKeyLine(0)+i)}var y=e.StaveNote=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));if(n.setAttribute("type","StaveNote"),n.keys=t.keys,n.clef=t.clef,n.octave_shift=t.octave_shift,n.beam=null,n.glyph=a.Flow.durationToGlyph(n.duration,n.noteType),!n.glyph)throw new s.Vex.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): "+JSON.stringify(t));return n.displaced=!1,n.dot_shiftY=0,n.keyProps=[],n.use_default_head_x=!1,n.note_heads=[],n.modifiers=[],s.Vex.Merge(n.render_options,{glyph_font_scale:t.glyph_font_scale||a.Flow.DEFAULT_NOTATION_FONT_SCALE,stroke_px:t.stroke_px||e.DEFAULT_LEDGER_LINE_OFFSET}),n.calculateKeyProps(),n.buildStem(),t.auto_stem?n.autoStem():n.setStemDirection(t.stem_direction),n.reset(),n.buildFlag(),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,h.StemmableNote),o(e,null,[{key:"format",value:function(t,n){if(!t||t.length<2)return!1;if(t[0].getStave())return e.formatByY(t,n);for(var i=[],r=0;r<t.length;r++){var o=t[r].getKeyProps(),a=o[0].line,u=o[o.length-1].line,c=t[r].getStemDirection(),l=t[r].getStemLength()/10,h=t[r].getStemMinumumLength()/10,f=void 0;t[r].isRest()?(f=a+t[r].glyph.line_above,u=a-t[r].glyph.line_below):(f=1===c?o[o.length-1].line+l:o[o.length-1].line,u=1===c?o[0].line:o[0].line-l),i.push({line:o[0].line,maxLine:f,minLine:u,isrest:t[r].isRest(),stemDirection:c,stemMax:l,stemMin:h,voice_shift:t[r].getVoiceShiftWidth(),is_displaced:t[r].isDisplaced(),note:t[r]})}var p=i.length,d=i[0],y=p>2?i[1]:null,m=p>2?i[2]:i[1];2===p&&-1===d.stemDirection&&1===m.stemDirection&&(d=i[1],m=i[0]);var v=Math.max(d.voice_shift,m.voice_shift),g=0,_=void 0;if(2===p){var S=d.stemDirection===m.stemDirection?0:.5;return d.stemDirection===m.stemDirection&&d.minLine<=m.maxLine&&(d.isrest||(_=Math.abs(d.line-(m.maxLine+.5)),_=Math.max(_,d.stemMin),d.minLine=d.line-_,d.note.setStemLength(10*_))),d.minLine<=m.maxLine+S&&(d.isrest?b(d,m,1):m.isrest?b(m,d,-1):(g=v,d.stemDirection===m.stemDirection?d.note.setXShift(g+3):m.note.setXShift(g))),!0}if((null!==y&&y.minLine<m.maxLine+.5&&(y.isrest||(_=Math.abs(y.line-(m.maxLine+.5)),_=Math.max(_,y.stemMin),y.minLine=y.line-_,y.note.setStemLength(10*_))),y.isrest&&!d.isrest&&!m.isrest)&&(d.minLine<=y.maxLine||y.minLine<=m.maxLine))return y.maxLine-y.minLine<d.minLine-m.maxLine?function(t,e,n){var i=t.line-s.Vex.MidLine(e.minLine,n.maxLine);t.note.setKeyLine(0,t.note.getKeyLine(0)-i),t.line-=i,t.maxLine-=i,t.minLine-=i}(y,d,m):(g=v+3,y.note.setXShift(g)),!0;return d.isrest&&y.isrest&&m.isrest?(b(d,y,1),b(m,y,-1),!0):(y.isrest&&d.isrest&&y.minLine<=m.maxLine&&b(y,m,1),y.isrest&&m.isrest&&d.minLine<=y.maxLine&&b(y,d,-1),d.isrest&&d.minLine<=y.maxLine&&b(d,y,1),m.isrest&&y.minLine<=m.maxLine&&b(m,y,-1),(!d.isrest&&!y.isrest&&d.minLine<=y.maxLine+.5||!y.isrest&&!m.isrest&&y.minLine<=m.maxLine)&&(g=v+3,y.note.setXShift(g)),!0)}},{key:"formatByY",value:function(t,e){for(var n=!0,i=0;i<t.length;i++)n=n&&null!=t[i].getStave();if(!n)throw new s.Vex.RERR("Stave Missing","All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!");for(var r=0,o=0;o<t.length-1;o++){var a=t[o],u=t[o+1];a.getStemDirection()===c.Stem.DOWN&&(a=t[o+1],u=t[o]);var l=a.getKeyProps(),h=u.getKeyProps(),f=a.getStave().getYForLine(5-l[0].line+.5);u.getStave().getYForLine(5-h[h.length-1].line-.5)-f<0&&(r=a.getVoiceShiftWidth()+2,u.setXShift(r))}e.right_shift+=r}},{key:"postFormat",value:function(t){return!!t&&(t.forEach(function(t){return t.postFormat()}),!0)}},{key:"CATEGORY",get:function(){return"stavenotes"}},{key:"STEM_UP",get:function(){return c.Stem.UP}},{key:"STEM_DOWN",get:function(){return c.Stem.DOWN}},{key:"DEFAULT_LEDGER_LINE_OFFSET",get:function(){return 3}}]),o(e,[{key:"reset",value:function(){var t=this;r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"reset",this).call(this);var n=this.note_heads.map(function(t){return t.getStyle()});this.buildNoteHeads(),this.note_heads.forEach(function(t,e){return t.setStyle(n[e])}),this.stave&&this.note_heads.forEach(function(e){return e.setStave(t.stave)}),this.calcExtraPx()}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"buildStem",value:function(){var t=this.getGlyph(),e="v95"===t.code_head||"v3e"===t.code_head?-4:0;this.setStem(new c.Stem({yExtend:e,hide:!!this.isRest()}))}},{key:"buildNoteHeads",value:function(){this.note_heads=[];var t=this.getStemDirection(),e=this.getKeys(),n=null,i=null,r=!1,o=void 0,s=void 0,a=void 0;t===c.Stem.UP?(o=0,s=e.length,a=1):t===c.Stem.DOWN&&(o=e.length-1,s=-1,a=-1);for(var u=o;u!==s;u+=a){var h=this.keyProps[u],f=h.line;null===n?n=f:0===(i=Math.abs(n-f))||.5===i?r=!r:(r=!1,this.use_default_head_x=!0),n=f;var p=new l.NoteHead({duration:this.duration,note_type:this.noteType,displaced:r,stem_direction:t,custom_glyph_code:h.code,glyph_font_scale:this.render_options.glyph_font_scale,x_shift:h.shift_right,line:h.line});this.note_heads[u]=p}}},{key:"autoStem",value:function(){this.minLine=this.keyProps[0].line,this.maxLine=this.keyProps[this.keyProps.length-1].line;var t=(this.minLine+this.maxLine)/2<3?c.Stem.UP:c.Stem.DOWN;this.setStemDirection(t)}},{key:"calculateKeyProps",value:function(){for(var t=null,e=0;e<this.keys.length;++e){var n=this.keys[e];this.glyph.rest&&(this.glyph.position=n);var i={octave_shift:this.octave_shift||0},r=a.Flow.keyProperties(n,this.clef,i);if(!r)throw new s.Vex.RuntimeError("BadArguments","Invalid key for note properties: "+n);"R"===r.key&&("1"===this.duration||"w"===this.duration?r.line=4:r.line=3);var o=r.line;null===t?t=o:.5===Math.abs(t-o)&&(this.displaced=!0,r.displaced=!0,this.keyProps.length>0&&(this.keyProps[e-1].displaced=!0)),t=o,this.keyProps.push(r)}t=-1/0,this.keyProps.forEach(function(e){e.line<t&&s.Vex.W("Unsorted keys in note will be sorted. See https://github.com/0xfe/vexflow/issues/104 for details."),t=e.line}),this.keyProps.sort(function(t,e){return t.line-e.line})}},{key:"getBoundingBox",value:function(){if(!this.preFormatted)throw new s.Vex.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var t=this.getMetrics(),e=t.width,n=t.modLeftPx,i=t.extraLeftPx,r=this.getAbsoluteX()-n-i,o=0,c=0,l=this.getStave().getSpacingBetweenLines()/2,h=2*l;if(this.isRest()){var f=this.ys[0],p=a.Flow.durationToFraction(this.duration);p.equals(1)||p.equals(2)?(o=f-l,c=f+l):(o=f-this.glyph.line_above*h,c=f+this.glyph.line_below*h)}else if(this.glyph.stem){var d=this.getStemExtents();d.baseY+=l*this.stem_direction,o=Math.min(d.topY,d.baseY),c=Math.max(d.topY,d.baseY)}else{o=null,c=null;for(var b=0;b<this.ys.length;++b){var y=this.ys[b];0===b?(o=y,c=y):(o=Math.min(y,o),c=Math.max(y,c))}o-=l,c+=l}return new u.BoundingBox(r,o,e,c-o)}},{key:"getLineNumber",value:function(t){if(!this.keyProps.length)throw new s.Vex.RERR("NoKeyProps","Can't get bottom note line, because note is not initialized properly.");for(var e=this.keyProps[0].line,n=0;n<this.keyProps.length;n++){var i=this.keyProps[n].line;t?i>e&&(e=i):i<e&&(e=i)}return e}},{key:"isRest",value:function(){return this.glyph.rest}},{key:"isChord",value:function(){return!this.isRest()&&this.keys.length>1}},{key:"hasStem",value:function(){return this.glyph.stem}},{key:"hasFlag",value:function(){return r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"hasFlag",this).call(this)&&!this.isRest()}},{key:"getStemX",value:function(){return"r"===this.noteType?this.getCenterGlyphX():r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"getStemX",this).call(this)+(t=this,c.Stem.WIDTH/(2*-t.getStemDirection()));var t}},{key:"getYForTopText",value:function(t){var e=this.getStemExtents();return Math.min(this.stave.getYForTopText(t),e.topY-this.render_options.annotation_spacing*(t+1))}},{key:"getYForBottomText",value:function(t){var e=this.getStemExtents();return Math.max(this.stave.getYForTopText(t),e.baseY+this.render_options.annotation_spacing*t)}},{key:"setStave",value:function(t){r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setStave",this).call(this,t);var n=this.note_heads.map(function(e){return e.setStave(t),e.getY()});if(this.setYs(n),this.stem){var i=this.getNoteHeadBounds(),o=i.y_top,s=i.y_bottom;this.stem.setYBounds(o,s)}return this}},{key:"getKeys",value:function(){return this.keys}},{key:"getKeyProps",value:function(){return this.keyProps}},{key:"isDisplaced",value:function(){return this.displaced}},{key:"setNoteDisplaced",value:function(t){return this.displaced=t,this}},{key:"getTieRightX",value:function(){var t=this.getAbsoluteX();return t+=this.getGlyphWidth()+this.x_shift+this.extraRightPx,this.modifierContext&&(t+=this.modifierContext.getExtraRightPx()),t}},{key:"getTieLeftX",value:function(){var t=this.getAbsoluteX();return t+=this.x_shift-this.extraLeftPx}},{key:"getLineForRest",value:function(){var t=this.keyProps[0].line;if(this.keyProps.length>1){var e=this.keyProps[this.keyProps.length-1].line,n=Math.max(t,e),i=Math.min(t,e);t=s.Vex.MidLine(n,i)}return t}},{key:"getModifierStartXY",value:function(t,e){if(!this.preFormatted)throw new s.Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new s.Vex.RERR("NoYValues","No Y-Values calculated for this note.");var n=f.Modifier.Position,i=n.ABOVE,r=n.BELOW,o=n.LEFT,a=n.RIGHT,u=0;return t===o?u=-2:t===a?(u=this.getGlyphWidth()+this.x_shift+2,this.stem_direction===c.Stem.UP&&this.hasFlag()&&function(t,e){return e===(t.getStemDirection()===c.Stem.UP?t.keyProps.length-1:0)}(this,e)&&(u+=this.flag.getMetrics().width)):t!==r&&t!==i||(u=this.getGlyphWidth()/2),{x:this.getAbsoluteX()+u,y:this.ys[e]}}},{key:"setStyle",value:function(t){r(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setStyle",this).call(this,t),this.note_heads.forEach(function(e){return e.setStyle(t)}),this.stem.setStyle(t)}},{key:"setStemStyle",value:function(t){this.getStem().setStyle(t)}},{key:"getStemStyle",value:function(){return this.stem.getStyle()}},{key:"setLedgerLineStyle",value:function(t){this.ledgerLineStyle=t}},{key:"getLedgerLineStyle",value:function(){return this.ledgerLineStyle}},{key:"setFlagStyle",value:function(t){this.flagStyle=t}},{key:"getFlagStyle",value:function(){return this.flagStyle}},{key:"setKeyStyle",value:function(t,e){return this.note_heads[t].setStyle(e),this}},{key:"setKeyLine",value:function(t,e){return this.keyProps[t].line=e,this.reset(),this}},{key:"getKeyLine",value:function(t){return this.keyProps[t].line}},{key:"addToModifierContext",value:function(t){this.setModifierContext(t);for(var e=0;e<this.modifiers.length;++e)this.modifierContext.addModifier(this.modifiers[e]);return this.modifierContext.addModifier(this),this.setPreFormatted(!1),this}},{key:"addModifier",value:function(t,e){return e.setNote(this),e.setIndex(t),this.modifiers.push(e),this.setPreFormatted(!1),this}},{key:"addAccidental",value:function(t,e){return this.addModifier(t,e)}},{key:"addArticulation",value:function(t,e){return this.addModifier(t,e)}},{key:"addAnnotation",value:function(t,e){return this.addModifier(t,e)}},{key:"addDot",value:function(t){var e=new p.Dot;return e.setDotShiftY(this.glyph.dot_shiftY),this.dots++,this.addModifier(t,e)}},{key:"addDotToAll",value:function(){for(var t=0;t<this.keys.length;++t)this.addDot(t);return this}},{key:"getAccidentals",value:function(){return this.modifierContext.getModifiers("accidentals")}},{key:"getDots",value:function(){return this.modifierContext.getModifiers("dots")}},{key:"getVoiceShiftWidth",value:function(){return this.getGlyphWidth()*(this.displaced?2:1)}},{key:"calcExtraPx",value:function(){this.setExtraLeftPx(this.displaced&&this.stem_direction===c.Stem.DOWN?this.getGlyphWidth():0),this.setExtraRightPx(!this.hasFlag()&&this.displaced&&this.stem_direction===c.Stem.UP?this.getGlyphWidth():0)}},{key:"preFormat",value:function(){if(!this.preFormatted){this.modifierContext&&this.modifierContext.preFormat();var t=this.getGlyphWidth()+this.extraLeftPx+this.extraRightPx;this.glyph.flag&&null===this.beam&&this.stem_direction===c.Stem.UP&&(t+=this.getGlyphWidth()),this.setWidth(t),this.setPreFormatted(!0)}}},{key:"getNoteHeadBounds",value:function(){var t=null,e=null,n=null,i=null,r=this.stave.getNumLines(),o=1,s=!1,a=!1,u=r,c=o;return this.note_heads.forEach(function(l){var h=l.getLine(),f=l.getY();(null===t||f<t)&&(t=f),(null===e||f>e)&&(e=f),null===i&&l.isDisplaced()&&(i=l.getAbsoluteX()),null!==n||l.isDisplaced()||(n=l.getAbsoluteX()),r=h>r?h:r,o=h<o?h:o,l.isDisplaced()?(s=!1===s?h:Math.max(h,s),a=!1===a?h:Math.min(h,a)):(u=Math.max(h,u),c=Math.min(h,c))},this),{y_top:t,y_bottom:e,displaced_x:i,non_displaced_x:n,highest_line:r,lowest_line:o,highest_displaced_line:s,lowest_displaced_line:a,highest_non_displaced_line:u,lowest_non_displaced_line:c}}},{key:"getNoteHeadBeginX",value:function(){return this.getAbsoluteX()+this.x_shift}},{key:"getNoteHeadEndX",value:function(){return this.getNoteHeadBeginX()+this.getGlyphWidth()}},{key:"drawLedgerLines",value:function(){var t=this.stave,e=this.glyph,n=this.render_options.stroke_px,r=this.context,o=e.getWidth()+2*n,a=2*(e.getWidth()+n)-c.Stem.WIDTH/2;if(!this.isRest()){if(!r)throw new s.Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var u=this.getNoteHeadBounds(),l=u.highest_line,h=u.lowest_line,f=u.highest_displaced_line,p=u.highest_non_displaced_line,d=u.lowest_displaced_line,b=u.lowest_non_displaced_line,y=u.displaced_x,m=u.non_displaced_x,v=Math.min(y,m),g=function(t,e,i){var s=void 0;s=i&&e?v-n:e?m-n:y-n;var u=e&&i?a:o;r.beginPath(),r.moveTo(s,t),r.lineTo(s+u,t),r.stroke()},_=i({},t.getStyle()||{},this.getLedgerLineStyle()||{});this.applyStyle(r,_);for(var S=6;S<=l;++S){var x=null!==m&&S<=p,w=null!==y&&S<=f;g(t.getYForNote(S),x,w)}for(var E=0;E>=h;--E){var P=null!==m&&E>=b,T=null!==y&&E>=d;g(t.getYForNote(E),P,T)}this.restoreStyle(r,_)}}},{key:"drawModifiers",value:function(){if(!this.context)throw new s.Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var t=this.context;t.openGroup("modifiers");for(var e=0;e<this.modifiers.length;e++){var n=this.modifiers[e],i=this.note_heads[n.getIndex()],r=i.getStyle();r&&(t.save(),i.applyStyle(t)),n.setContext(t),n.draw(),r&&t.restore()}t.closeGroup()}},{key:"drawFlag",value:function(){var t=this.stem,e=this.beam,n=this.context;if(!n)throw new s.Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");var i=null===e;if(this.getGlyph().flag&&i){var r=this.getNoteHeadBounds(),o=r.y_top,a=r.y_bottom,u=t.getHeight(),l=this.getStemX(),h=this.getStemDirection()===c.Stem.DOWN?o-u+2:a-u-2;n.openGroup("flag",null,{pointerBBox:!0}),this.applyStyle(n,this.getFlagStyle()||!1),this.flag.render(n,l,h),this.restoreStyle(n,this.getFlagStyle()||!1),n.closeGroup()}}},{key:"drawNoteHeads",value:function(){var t=this;this.note_heads.forEach(function(e){t.context.openGroup("notehead",null,{pointerBBox:!0}),e.setContext(t.context).draw(),t.context.closeGroup()})}},{key:"drawStem",value:function(t){if(!this.context)throw new s.Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");t&&this.setStem(new c.Stem(t)),this.context.openGroup("stem",null,{pointerBBox:!0}),this.stem.setContext(this.context).draw(),this.context.closeGroup()}},{key:"draw",value:function(){if(!this.context)throw new s.Vex.RERR("NoCanvasContext","Can't draw without a canvas context.");if(!this.stave)throw new s.Vex.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new s.Vex.RERR("NoYValues","Can't draw note without Y values.");var t=this.getNoteHeadBeginX(),e=this.hasStem()&&!this.beam;this.note_heads.forEach(function(e){return e.setX(t)});var n=this.getStemX();this.stem.setNoteHeadXBounds(n,n),d("Rendering ",this.isChord()?"chord :":"note :",this.keys),this.drawLedgerLines(),this.applyStyle(),this.setAttribute("el",this.context.openGroup("stavenote",this.getAttribute("id"))),this.context.openGroup("note",null,{pointerBBox:!0}),e&&this.drawStem(),this.drawNoteHeads(),this.drawFlag(),this.context.closeGroup(),this.drawModifiers(),this.context.closeGroup(),this.restoreStyle(),this.setRendered()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NoteHead=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(22),a=n(17),u=n(20),c=n(4);function l(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];h.DEBUG&&r.Vex.L("Vex.Flow.NoteHead",e)}var h=e.NoteHead=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));if(n.setAttribute("type","NoteHead"),n.index=t.index,n.x=t.x||0,n.y=t.y||0,n.note_type=t.note_type,n.duration=t.duration,n.displaced=t.displaced||!1,n.stem_direction=t.stem_direction||u.StaveNote.STEM_UP,n.line=t.line,n.glyph=o.Flow.durationToGlyph(n.duration,n.note_type),!n.glyph)throw new r.Vex.RuntimeError("BadArguments","No glyph found for duration '"+n.duration+"' and type '"+n.note_type+"'");return n.glyph_code=n.glyph.code_head,n.x_shift=t.x_shift,t.custom_glyph_code&&(n.custom_glyph=!0,n.glyph_code=t.custom_glyph_code),n.style=t.style,n.slashed=t.slashed,r.Vex.Merge(n.render_options,{glyph_font_scale:t.glyph_font_scale||o.Flow.DEFAULT_NOTATION_FONT_SCALE,stroke_px:3}),n.setWidth(n.glyph.getWidth(n.render_options.glyph_font_scale)),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Note),i(e,null,[{key:"CATEGORY",get:function(){return"notehead"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){return this.width}},{key:"isDisplaced",value:function(){return!0===this.displaced}},{key:"getGlyph",value:function(){return this.glyph}},{key:"setX",value:function(t){return this.x=t,this}},{key:"getY",value:function(){return this.y}},{key:"setY",value:function(t){return this.y=t,this}},{key:"getLine",value:function(){return this.line}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"getAbsoluteX",value:function(){var t=this.preFormatted?function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0}(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"getAbsoluteX",this).call(this):this.x,n=a.Stem.WIDTH/2;return t+(this.displaced?(this.width-n)*this.stem_direction:0)}},{key:"getBoundingBox",value:function(){if(!this.preFormatted)throw new r.Vex.RERR("UnformattedNote","Can't call getBoundingBox on an unformatted note.");var t=this.stave.getSpacingBetweenLines(),e=t/2,n=this.y-e;return new o.Flow.BoundingBox(this.getAbsoluteX(),n,this.width,t)}},{key:"setStave",value:function(t){var e=this.getLine();return this.stave=t,this.setY(t.getYForNote(e)),this.context=this.stave.context,this}},{key:"preFormat",value:function(){if(this.preFormatted)return this;var t=this.getWidth()+this.extraLeftPx+this.extraRightPx;return this.setWidth(t),this.setPreFormatted(!0),this}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.context,e=this.getAbsoluteX(),n=this.y;l("Drawing note head '",this.note_type,this.duration,"' at",e,n);var i=this.stem_direction,r=this.render_options.glyph_font_scale;if("s"===this.note_type){var s=this.stave.getSpacingBetweenLines();!function(t,e,n,i,r,s){var a=o.Flow.SLASH_NOTEHEAD_WIDTH;t.save(),t.setLineWidth(o.Flow.STEM_WIDTH);var u=!1;if(o.Flow.durationToNumber(e)>2&&(u=!0),u||(n-=o.Flow.STEM_WIDTH/2*r),t.beginPath(),t.moveTo(n,i+s),t.lineTo(n,i+1),t.lineTo(n+a,i-s),t.lineTo(n+a,i),t.lineTo(n,i+s),t.closePath(),u?t.fill():t.stroke(),o.Flow.durationToFraction(e).equals(.5))for(var c=[-3,-1,a+1,a+3],l=0;l<c.length;l++)t.beginPath(),t.moveTo(n+c[l],i-10),t.lineTo(n+c[l],i+11),t.stroke();t.restore()}(t,this.duration,e,n,i,s)}else this.style?(this.applyStyle(t),c.Glyph.renderGlyph(t,e,n,r,this.glyph_code),this.restoreStyle(t)):c.Glyph.renderGlyph(t,e,n,r,this.glyph_code)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Note=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(2),a=n(23);e.Note=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(n.setAttribute("type","Note"),!t)throw new o.Vex.RuntimeError("BadArguments","Note must have valid initialization data to identify duration and type.");var r=s.Flow.parseNoteData(t);if(!r)throw new o.Vex.RuntimeError("BadArguments","Invalid note initialization object: "+JSON.stringify(t));if(n.duration=r.duration,n.dots=r.dots,n.noteType=r.type,t.duration_override?n.setDuration(t.duration_override):n.setIntrinsicTicks(r.ticks),n.modifiers=[],n.glyph=s.Flow.durationToGlyph(n.duration,n.noteType),n.positions&&("object"!==i(n.positions)||!n.positions.length))throw new o.Vex.RuntimeError("BadArguments","Note keys must be array type.");return n.playNote=null,n.tickContext=null,n.modifierContext=null,n.ignore_ticks=!1,n.width=0,n.extraLeftPx=0,n.extraRightPx=0,n.x_shift=0,n.left_modPx=0,n.right_modPx=0,n.voice=null,n.preFormatted=!1,n.ys=[],t.align_center&&n.setCenterAlignment(t.align_center),n.stave=null,n.render_options={annotation_spacing:5,stave_padding:e.STAVEPADDING},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.Tickable),r(e,null,[{key:"plotMetrics",value:function(t,e,n){var i=e.getMetrics(),r=e.getAbsoluteX()-i.modLeftPx-i.extraLeftPx,s=e.getAbsoluteX()-i.extraLeftPx,a=e.getAbsoluteX(),u=e.getAbsoluteX()+i.noteWidth,c=e.getAbsoluteX()+i.noteWidth+i.extraRightPx,l=e.getAbsoluteX()+i.noteWidth+i.extraRightPx+i.modRightPx,h=l+e.getFormatterMetrics().freedom.right,f=l-r;t.save(),t.setFont("Arial",8,""),t.fillText(Math.round(f)+"px",r+e.getXShift(),n);var p=n+7;function d(n,i,r){var o=arguments.length<=3||void 0===arguments[3]?p:arguments[3];t.beginPath(),t.setStrokeStyle(r),t.setFillStyle(r),t.setLineWidth(3),t.moveTo(n+e.getXShift(),o),t.lineTo(i+e.getXShift(),o),t.stroke()}d(r,s,"red"),d(s,a,"#999"),d(a,u,"green"),d(u,c,"#999"),d(c,l,"red"),d(l,h,"#DD0"),d(r-e.getXShift(),r,"#BBB"),o.Vex.drawDot(t,a+e.getXShift(),p,"blue");var b=e.getFormatterMetrics();if(b.iterations>0){var y=b.space.deviation,m=y>=0?"+":"";t.setFillStyle("red"),t.fillText(m+Math.round(y),a+e.getXShift(),n-10)}t.restore()}},{key:"CATEGORY",get:function(){return"note"}},{key:"STAVEPADDING",get:function(){return 12}}]),r(e,[{key:"getPlayNote",value:function(){return this.playNote}},{key:"setPlayNote",value:function(t){return this.playNote=t,this}},{key:"isRest",value:function(){return!1}},{key:"addStroke",value:function(t,e){return e.setNote(this),e.setIndex(t),this.modifiers.push(e),this.setPreFormatted(!1),this}},{key:"getStave",value:function(){return this.stave}},{key:"setStave",value:function(t){return this.stave=t,this.setYs([t.getYForLine(0)]),this.context=this.stave.context,this}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getExtraLeftPx",value:function(){return this.extraLeftPx}},{key:"getExtraRightPx",value:function(){return this.extraRightPx}},{key:"setExtraLeftPx",value:function(t){return this.extraLeftPx=t,this}},{key:"setExtraRightPx",value:function(t){return this.extraRightPx=t,this}},{key:"shouldIgnoreTicks",value:function(){return this.ignore_ticks}},{key:"getLineNumber",value:function(){return 0}},{key:"getLineForRest",value:function(){return 0}},{key:"getGlyph",value:function(){return this.glyph}},{key:"getGlyphWidth",value:function(){return this.glyph.getWidth(this.render_options.glyph_font_scale)}},{key:"setYs",value:function(t){return this.ys=t,this}},{key:"getYs",value:function(){if(0===this.ys.length)throw new o.Vex.RERR("NoYValues","No Y-values calculated for this note.");return this.ys}},{key:"getYForTopText",value:function(t){if(!this.stave)throw new o.Vex.RERR("NoStave","No stave attached to this note.");return this.stave.getYForTopText(t)}},{key:"getBoundingBox",value:function(){return null}},{key:"getVoice",value:function(){if(!this.voice)throw new o.Vex.RERR("NoVoice","Note has no voice.");return this.voice}},{key:"setVoice",value:function(t){return this.voice=t,this.preFormatted=!1,this}},{key:"getTickContext",value:function(){return this.tickContext}},{key:"setTickContext",value:function(t){return this.tickContext=t,this.preFormatted=!1,this}},{key:"getDuration",value:function(){return this.duration}},{key:"isDotted",value:function(){return this.dots>0}},{key:"hasStem",value:function(){return!1}},{key:"getDots",value:function(){return this.dots}},{key:"getNoteType",value:function(){return this.noteType}},{key:"setBeam",value:function(){return this}},{key:"setModifierContext",value:function(t){return this.modifierContext=t,this}},{key:"addModifier",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?0:arguments[1];return t.setNote(this),t.setIndex(e),this.modifiers.push(t),this.setPreFormatted(!1),this}},{key:"getModifierStartXY",value:function(){if(!this.preFormatted)throw new o.Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");return{x:this.getAbsoluteX(),y:this.ys[0]}}},{key:"getMetrics",value:function(){if(!this.preFormatted)throw new o.Vex.RERR("UnformattedNote","Can't call getMetrics on an unformatted note.");var t=0,e=0;null!=this.modifierContext&&(t=this.modifierContext.state.left_shift,e=this.modifierContext.state.right_shift);var n=this.getWidth();return{width:n,noteWidth:n-t-e-this.extraLeftPx-this.extraRightPx,left_shift:this.x_shift,modLeftPx:t,modRightPx:e,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){if(!this.preFormatted)throw new o.Vex.RERR("UnformattedNote","Can't call GetWidth on an unformatted note.");return this.width+(this.modifierContext?this.modifierContext.getWidth():0)}},{key:"setXShift",value:function(t){return this.x_shift=t,this}},{key:"getXShift",value:function(){return this.x_shift}},{key:"getX",value:function(){if(!this.tickContext)throw new o.Vex.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");return this.tickContext.getX()+this.x_shift}},{key:"getAbsoluteX",value:function(){if(!this.tickContext)throw new o.Vex.RERR("NoTickContext","Note needs a TickContext assigned for an X-Value");var t=this.tickContext.getX();return this.stave&&(t+=this.stave.getNoteStartX()+this.render_options.stave_padding),this.isCenterAligned()&&(t+=this.getCenterXShift()),t}},{key:"setPreFormatted",value:function(t){if(this.preFormatted=t,this.preFormatted){var e=this.tickContext.getExtraPx();this.left_modPx=Math.max(this.left_modPx,e.left),this.right_modPx=Math.max(this.right_modPx,e.right)}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tickable=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(2),a=n(3);e.Tickable=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","Tickable"),t.ticks=new a.Fraction(0,1),t.intrinsicTicks=0,t.tickMultiplier=new a.Fraction(1,1),t.width=0,t.x_shift=0,t.voice=null,t.tickContext=null,t.modifierContext=null,t.modifiers=[],t.preFormatted=!1,t.postFormatted=!1,t.tuplet=null,t.tupletStack=[],t.align_center=!1,t.center_x_shift=0,t.ignore_ticks=!1,t.formatterMetrics={freedom:{left:0,right:0},duration:"",iterations:0,space:{used:0,mean:0,deviation:0}},t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,[{key:"reset",value:function(){return this}},{key:"getTicks",value:function(){return this.ticks}},{key:"shouldIgnoreTicks",value:function(){return this.ignore_ticks}},{key:"getWidth",value:function(){return this.width}},{key:"getFormatterMetrics",value:function(){return this.formatterMetrics}},{key:"setXShift",value:function(t){this.x_shift=t}},{key:"getCenterXShift",value:function(){return this.isCenterAligned()?this.center_x_shift:0}},{key:"isCenterAligned",value:function(){return this.align_center}},{key:"setCenterAlignment",value:function(t){return this.align_center=t,this}},{key:"getVoice",value:function(){if(!this.voice)throw new r.Vex.RERR("NoVoice","Tickable has no voice.");return this.voice}},{key:"setVoice",value:function(t){this.voice=t}},{key:"getTuplet",value:function(){return this.tuplet}},{key:"resetTuplet",value:function(t){var e=void 0,n=void 0;if(t){var i=this.tupletStack.indexOf(t);return-1!==i&&(this.tupletStack.splice(i,1),e=t.getNoteCount(),n=t.getNotesOccupied(),this.applyTickMultiplier(e,n)),this}for(;this.tupletStack.length;)e=(t=this.tupletStack.pop()).getNoteCount(),n=t.getNotesOccupied(),this.applyTickMultiplier(e,n);return this}},{key:"setTuplet",value:function(t){if(t){this.tupletStack.push(t);var e=t.getNoteCount(),n=t.getNotesOccupied();this.applyTickMultiplier(n,e)}return this.tuplet=t,this}},{key:"addToModifierContext",value:function(t){this.modifierContext=t,this.preFormatted=!1}},{key:"addModifier",value:function(t){return this.modifiers.push(t),this.preFormatted=!1,this}},{key:"getModifiers",value:function(){return this.modifiers}},{key:"setTickContext",value:function(t){this.tickContext=t,this.preFormatted=!1}},{key:"preFormat",value:function(){this.preFormatted||(this.width=0,this.modifierContext&&(this.modifierContext.preFormat(),this.width+=this.modifierContext.getWidth()))}},{key:"postFormat",value:function(){return this.postFormatted?this:(this.postFormatted=!0,this)}},{key:"getIntrinsicTicks",value:function(){return this.intrinsicTicks}},{key:"setIntrinsicTicks",value:function(t){this.intrinsicTicks=t,this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}},{key:"getTickMultiplier",value:function(){return this.tickMultiplier}},{key:"applyTickMultiplier",value:function(t,e){this.tickMultiplier.multiply(t,e),this.ticks=this.tickMultiplier.clone().multiply(this.intrinsicTicks)}},{key:"setDuration",value:function(t){var e=t.numerator*(s.Flow.RESOLUTION/t.denominator);this.ticks=this.tickMultiplier.clone().multiply(e),this.intrinsicTicks=this.ticks.value()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StemmableNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(17),a=n(4),u=n(22);e.StemmableNote=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.setAttribute("type","StemmableNote"),n.stem=null,n.stemExtensionOverride=null,n.beam=null,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,u.Note),i(e,[{key:"getStem",value:function(){return this.stem}},{key:"setStem",value:function(t){return this.stem=t,this}},{key:"buildStem",value:function(){var t=new s.Stem;return this.setStem(t),this}},{key:"buildFlag",value:function(){var t=this.glyph,e=null===this.beam;if(t&&t.flag&&e){var n=this.getStemDirection()===s.Stem.DOWN?t.code_flag_downstem:t.code_flag_upstem;this.flag=new a.Glyph(n,this.render_options.glyph_font_scale)}}},{key:"getStemLength",value:function(){return s.Stem.HEIGHT+this.getStemExtension()}},{key:"getBeamCount",value:function(){var t=this.getGlyph();return t?t.beam_count:0}},{key:"getStemMinumumLength",value:function(){var t=o.Flow.durationToFraction(this.duration).value()<=1?0:20;switch(this.duration){case"8":null==this.beam&&(t=35);break;case"16":t=null==this.beam?35:25;break;case"32":t=null==this.beam?45:35;break;case"64":t=null==this.beam?50:40;break;case"128":t=null==this.beam?55:45}return t}},{key:"getStemDirection",value:function(){return this.stem_direction}},{key:"setStemDirection",value:function(t){if(t||(t=s.Stem.UP),t!==s.Stem.UP&&t!==s.Stem.DOWN)throw new r.Vex.RERR("BadArgument","Invalid stem direction: "+t);return this.stem_direction=t,this.stem&&(this.stem.setDirection(t),this.stem.setExtension(this.getStemExtension())),this.reset(),this.flag&&this.buildFlag(),this.beam=null,this.preFormatted&&this.preFormat(),this}},{key:"getStemX",value:function(){var t=this.getAbsoluteX()+this.x_shift,e=this.getAbsoluteX()+this.x_shift+this.getGlyphWidth();return this.stem_direction===s.Stem.DOWN?t:e}},{key:"getCenterGlyphX",value:function(){return this.getAbsoluteX()+this.x_shift+this.getGlyphWidth()/2}},{key:"getStemExtension",value:function(){var t=this.getGlyph();return null!=this.stemExtensionOverride?this.stemExtensionOverride:t?1===this.getStemDirection()?t.stem_up_extension:t.stem_down_extension:0}},{key:"setStemLength",value:function(t){return this.stemExtensionOverride=t-s.Stem.HEIGHT,this}},{key:"getStemExtents",value:function(){return this.stem.getExtents()}},{key:"setBeam",value:function(t){return this.beam=t,this}},{key:"getYForTopText",value:function(t){var e=this.getStemExtents();return this.hasStem()?Math.min(this.stave.getYForTopText(t),e.topY-this.render_options.annotation_spacing*(t+1)):this.stave.getYForTopText(t)}},{key:"getYForBottomText",value:function(t){var e=this.getStemExtents();return this.hasStem()?Math.max(this.stave.getYForTopText(t),e.baseY+this.render_options.annotation_spacing*t):this.stave.getYForBottomText(t)}},{key:"hasFlag",value:function(){return o.Flow.durationToGlyph(this.duration).flag&&!this.beam}},{key:"postFormat",value:function(){return this.beam&&this.beam.postFormat(),this.postFormatted=!0,this}},{key:"drawStem",value:function(t){this.checkContext(),this.setRendered(),this.setStem(new s.Stem(t)),this.stem.setContext(this.context).draw()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Modifier=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5);e.Modifier=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","Modifier"),t.width=0,t.note=null,t.index=null,t.text_line=0,t.position=e.Position.LEFT,t.modifier_context=null,t.x_shift=0,t.y_shift=0,t.spacingFromNextModifier=0,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"CATEGORY",get:function(){return"none"}},{key:"Position",get:function(){return{LEFT:1,RIGHT:2,ABOVE:3,BELOW:4}}},{key:"PositionString",get:function(){return{above:e.Position.ABOVE,below:e.Position.BELOW,left:e.Position.LEFT,right:e.Position.RIGHT}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){return this.width}},{key:"setWidth",value:function(t){return this.width=t,this}},{key:"getNote",value:function(){return this.note}},{key:"setNote",value:function(t){return this.note=t,this}},{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(t){return this.index=t,this}},{key:"getModifierContext",value:function(){return this.modifier_context}},{key:"setModifierContext",value:function(t){return this.modifier_context=t,this}},{key:"getPosition",value:function(){return this.position}},{key:"setPosition",value:function(t){return this.position="string"==typeof t?e.PositionString[t]:t,this}},{key:"setTextLine",value:function(t){return this.text_line=t,this}},{key:"setYShift",value:function(t){return this.y_shift=t,this}},{key:"setSpacingFromNextModifier",value:function(t){this.spacingFromNextModifier=t}},{key:"getSpacingFromNextModifier",value:function(){return this.spacingFromNextModifier}},{key:"setXShift",value:function(t){this.x_shift=0,this.position===e.Position.LEFT?this.x_shift-=t:this.x_shift+=t}},{key:"getXShift",value:function(){return this.x_shift}},{key:"draw",value:function(){throw this.checkContext(),new r.Vex.RERR("MethodNotImplemented","draw() not implemented for this modifier.")}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Dot=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25);e.Dot=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","Dot"),t.note=null,t.index=null,t.position=o.Modifier.Position.RIGHT,t.radius=2,t.setWidth(5),t.dot_shiftY=0,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"format",value:function(t,e){var n=e.right_shift;if(!t||0===t.length)return!1;for(var i=[],r=0;r<t.length;++r){var o=t[r],s=o.getNote(),a=void 0,u=void 0;"function"==typeof s.getKeyProps?u=(a=s.getKeyProps()[o.getIndex()]).displaced?s.getExtraRightPx():0:(a={line:.5},u=0),i.push({line:a.line,shift:u,note:s,dot:o})}i.sort(function(t,e){return e.line-t.line});for(var c=n,l=0,h=null,f=null,p=null,d=0,b=0;b<i.length;++b){var y=i[b],m=y.dot,v=y.note,g=y.shift,_=y.line;_===h&&v===f||(c=g),v.isRest()||_===h||(.5===Math.abs(_%1)?d=0:v.isRest()||(d=.5,null==f||f.isRest()||h-_!=.5?_+d===p&&(d=-.5):d=-.5)),m.dot_shiftY=-d,p=_+d,m.setXShift(c),l=(c+=m.getWidth()+1)>l?c:l,h=_,f=v}return e.right_shift+=l,!0}},{key:"CATEGORY",get:function(){return"dots"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setNote",value:function(t){this.note=t,"gracenotes"===this.note.getCategory()&&(this.radius*=.5,this.setWidth(3))}},{key:"setDotShiftY",value:function(t){return this.dot_shiftY=t,this}},{key:"draw",value:function(){if(this.checkContext(),this.setRendered(),!this.note||null===this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw dot without a note and index.");var t=this.note.stave.options.spacing_between_lines_px,e=this.note.getModifierStartXY(this.position,this.index);"tabnotes"===this.note.getCategory()&&(e.y=this.note.getStemExtents().baseY);var n=e.x+this.x_shift+this.width-this.radius,i=e.y+this.y_shift+this.dot_shiftY*t,o=this.context;o.beginPath(),o.arc(n,i,this.radius,0,2*Math.PI,!1),o.fill()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ModifierContext=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(20),s=n(26),a=n(28),u=n(29),c=n(31),l=n(32),h=n(35),f=n(36),p=n(37),d=n(38),b=n(40),y=n(41),m=n(42);function v(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];g.DEBUG&&r.Vex.L("Vex.Flow.ModifierContext",e)}var g=e.ModifierContext=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.modifiers={},this.preFormatted=!1,this.postFormatted=!1,this.width=0,this.spacing=0,this.state={left_shift:0,right_shift:0,text_line:0,top_text_line:0},this.PREFORMAT=[o.StaveNote,s.Dot,a.FretHandFinger,u.Accidental,l.GraceNoteGroup,c.NoteSubGroup,h.Stroke,f.StringNumber,p.Articulation,d.Ornament,b.Annotation,y.Bend,m.Vibrato],this.POSTFORMAT=[o.StaveNote]}return i(t,[{key:"addModifier",value:function(t){var e=t.getCategory();return this.modifiers[e]||(this.modifiers[e]=[]),this.modifiers[e].push(t),t.setModifierContext(this),this.preFormatted=!1,this}},{key:"getModifiers",value:function(t){return this.modifiers[t]}},{key:"getWidth",value:function(){return this.width}},{key:"getExtraLeftPx",value:function(){return this.state.left_shift}},{key:"getExtraRightPx",value:function(){return this.state.right_shift}},{key:"getState",value:function(){return this.state}},{key:"getMetrics",value:function(){if(!this.formatted)throw new r.Vex.RERR("UnformattedModifier","Unformatted modifier has no metrics.");return{width:this.state.left_shift+this.state.right_shift+this.spacing,spacing:this.spacing,extra_left_px:this.state.left_shift,extra_right_px:this.state.right_shift}}},{key:"preFormat",value:function(){var t=this;this.preFormatted||(this.PREFORMAT.forEach(function(e){v("Preformatting ModifierContext: ",e.CATEGORY),e.format(t.getModifiers(e.CATEGORY),t.state,t)}),this.width=this.state.left_shift+this.state.right_shift,this.preFormatted=!0)}},{key:"postFormat",value:function(){var t=this;this.postFormatted||this.POSTFORMAT.forEach(function(e){v("Postformatting ModifierContext: ",e.CATEGORY),e.postFormat(t.getModifiers(e.CATEGORY),t)})}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FretHandFinger=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25);e.FretHandFinger=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","FretHandFinger"),n.note=null,n.index=null,n.finger=t,n.width=7,n.position=o.Modifier.Position.LEFT,n.x_shift=0,n.y_shift=0,n.x_offset=0,n.y_offset=0,n.font={family:"sans-serif",size:9,weight:"bold"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"format",value:function(t,e){var n=e.left_shift,i=e.right_shift;if(!t||0===t.length)return!1;for(var r=[],s=null,a=0,u=0,c=0;c<t.length;++c){var l=t[c],h=l.getNote(),f=l.getPosition(),p=h.getKeyProps()[l.getIndex()];if(h!==s){for(var d=0;d<h.keys.length;++d){var b=h.getKeyProps()[d];0===n&&(a=b.displaced?h.getExtraLeftPx():a),0===i&&(u=b.displaced?h.getExtraRightPx():u)}s=h}r.push({note:h,num:l,pos:f,line:p.line,shiftL:a,shiftR:u})}r.sort(function(t,e){return e.line-t.line});for(var y=0,m=0,v=0,g=0,_=null,S=null,x=0;x<r.length;++x){var w=0,E=r[x],P=E.note,T=E.pos,M=E.num,k=E.line,O=E.shiftL,A=E.shiftR;k===_&&P===S||(y=n+O,m=i+A);var C=M.getWidth()+1;T===o.Modifier.Position.LEFT?(M.setXShift(n+y),v=(w=n+C)>v?w:v):T===o.Modifier.Position.RIGHT&&(M.setXShift(m),g=(w=u+C)>g?w:g),_=k,S=P}return e.left_shift+=v,e.right_shift+=g,!0}},{key:"CATEGORY",get:function(){return"frethandfinger"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setFretHandFinger",value:function(t){return this.finger=t,this}},{key:"setOffsetX",value:function(t){return this.x_offset=t,this}},{key:"setOffsetY",value:function(t){return this.y_offset=t,this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw string number without a note and index.");this.setRendered();var t=this.context,e=this.note.getModifierStartXY(this.position,this.index),n=e.x+this.x_shift+this.x_offset,i=e.y+this.y_shift+this.y_offset+5;switch(this.position){case o.Modifier.Position.ABOVE:n-=4,i-=12;break;case o.Modifier.Position.BELOW:n-=2,i+=10;break;case o.Modifier.Position.LEFT:n-=this.width;break;case o.Modifier.Position.RIGHT:n+=1;break;default:throw new r.Vex.RERR("InvalidPostion","The position "+this.position+" does not exist")}t.save(),t.setFont(this.font.family,this.font.size,this.font.weight),t.fillText(""+this.finger,n,i),t.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Accidental=void 0;var i=function(){return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,e){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){r=!0,o=t}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(3),a=n(2),u=n(30),c=n(25),l=n(4);function h(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];p.DEBUG&&o.Vex.L("Vex.Flow.Accidental",e)}var f=function(t){return t.getMetrics().width},p=e.Accidental=function(t){function e(){var t=arguments.length<=0||void 0===arguments[0]?null:arguments[0];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(n.setAttribute("type","Accidental"),h("New accidental: ",t),n.note=null,n.index=null,n.type=t,n.position=c.Modifier.Position.LEFT,n.render_options={font_scale:38,stroke_px:3,parenLeftPadding:2,parenRightPadding:2},n.accidental=a.Flow.accidentalCodes(n.type),!n.accidental)throw new o.Vex.RERR("ArgumentError","Unknown accidental type: "+t);return n.cautionary=!1,n.parenLeft=null,n.parenRight=null,n.reset(),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,c.Modifier),r(e,null,[{key:"format",value:function(t,e){var n=this,r=e.left_shift+1;if(t&&0!==t.length){for(var o=[],s=null,u=0,c=0;c<t.length;++c){var l=t[c],f=l.getNote(),p=f.getStave(),d=f.getKeyProps()[l.getIndex()];if(f!==s){for(var b=0;b<f.keys.length;++b)u=f.getKeyProps()[b].displaced?f.getExtraLeftPx():u;s=f}if(null!==p){var y=p.options.spacing_between_lines_px,m=p.getYForLine(d.line),v=Math.round(m/y*2)/2;o.push({y:m,line:v,shift:u,acc:l,lineSpace:y})}else o.push({line:d.line,shift:u,acc:l})}o.sort(function(t,e){return e.line-t.line});for(var g=[],_=0,S=null,x=0;x<o.length;x++){var w=o[x];null!==S&&S===w.line||g.push({line:w.line,flatLine:!0,dblSharpLine:!0,numAcc:0,width:0}),"b"!==w.acc.type&&"bb"!==w.acc.type&&(g[g.length-1].flatLine=!1),"##"!==w.acc.type&&(g[g.length-1].dblSharpLine=!1),g[g.length-1].numAcc++,g[g.length-1].width+=w.acc.getWidth()+3,_=w.shift>_?w.shift:_,S=w.line}for(var E=0,P=function(t){for(var e=!1,r=t,o=t;o+1<g.length&&!e;)n.checkCollision(g[o],g[o+1])?o++:e=!0;var s=function(t){return g[r+t]},u=function(t){return t.map(s)},c=function(t,e){var n=u([t,e]).map(function(t){return t.line}),r=i(n,2);return r[0]-r[1]},l=function(){for(var t=arguments.length,e=Array(t),i=0;i<t;i++)e[i]=arguments[i];return e.map(u).every(function(t){return!n.checkCollision.apply(n,function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}(t))})},h=o-r+1,f=n.checkCollision(g[r],g[o])?"a":"b";switch(h){case 3:"a"===f&&.5===c(1,2)&&.5!==c(0,1)&&(f="second_on_bottom");break;case 4:l([0,2],[1,3])&&(f="spaced_out_tetrachord");break;case 5:"b"===f&&l([1,3])&&(f="spaced_out_pentachord",l([0,2],[2,4])&&(f="very_spaced_out_pentachord"));break;case 6:l([0,3],[1,4],[2,5])&&(f="spaced_out_hexachord"),l([0,2],[2,4],[1,3],[3,5])&&(f="very_spaced_out_hexachord")}var p=void 0,d=void 0;if(h>=7){for(var b=2,y=!0;!0===y;){y=!1;for(var m=0;m+b<g.length;m++)if(n.checkCollision(g[m],g[m+b])){y=!0,b++;break}}for(p=t;p<=o;p++)d=(p-t)%b+1,g[p].column=d,E=E>d?E:d}else for(p=t;p<=o;p++)d=a.Flow.accidentalColumnsTable[h][f][p-t],g[p].column=d,E=E>d?E:d;T=t=o},T=0;T<g.length;T++)P(T);for(var M=[],k=[],O=0;O<=E;O++)M[O]=0,k[O]=0;M[0]=_+r,k[0]=_+r,g.forEach(function(t){t.width>M[t.column]&&(M[t.column]=t.width)});for(var A=1;A<M.length;A++)k[A]=M[A]+k[A-1];var C=k[k.length-1],L=0;g.forEach(function(t){for(var e=0,n=L+t.numAcc;L<n;L++){var i=k[t.column-1]+e;o[L].acc.setXShift(i),e+=o[L].acc.getWidth()+3,h("Line, accCount, shift: ",t.line,L,i)}}),e.left_shift+=C}}},{key:"checkCollision",value:function(t,e){var n=e.line-t.line,i=3;n>0?(i=e.flatLine||e.dblSharpLine?2.5:3,t.dblSharpLine&&(n-=.5)):(i=t.flatLine||t.dblSharpLine?2.5:3,e.dblSharpLine&&(n-=.5));var r=Math.abs(n)<i;return h("Line_1, Line_2, Collision: ",t.line,e.line,r),r}},{key:"applyAccidentals",value:function(t,n){var i=[],r={};t.forEach(function(t){var e=new s.Fraction(0,1);t.getTickables().forEach(function(t){if(!t.shouldIgnoreTicks()){var n=r[e.value()];n?n.push(t):(i.push(e.value()),r[e.value()]=[t]),e.add(t.getTicks())}})});var o=new u.Music;n||(n="C");var a=o.createScaleMap(n);i.forEach(function(t){var n=[];r[t].forEach(function t(i){i.isRest()||i.shouldIgnoreTicks()||(i.keys.forEach(function(t,r){var s=o.getNoteParts(t.split("/")[0]),u=s.accidental||"n",c=s.root+u,l=a[s.root]===c,h=n.indexOf(c)>-1;if(!l||l&&h){a[s.root]=c;var f=new e(u);i.addAccidental(r,f),n.push(c)}}),i.getModifiers().forEach(function(e){"gracenotegroups"===e.getCategory()&&e.getGraceNotes().forEach(t)}))})})}},{key:"CATEGORY",get:function(){return"accidentals"}}]),r(e,[{key:"reset",value:function(){var t=this.render_options.font_scale;this.glyph=new l.Glyph(this.accidental.code,t),this.glyph.setOriginX(1),this.cautionary&&(this.parenLeft=new l.Glyph(a.Flow.accidentalCodes("{").code,t),this.parenRight=new l.Glyph(a.Flow.accidentalCodes("}").code,t),this.parenLeft.setOriginX(1),this.parenRight.setOriginX(1))}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getWidth",value:function(){var t=this.cautionary?f(this.parenLeft)+f(this.parenRight)+this.render_options.parenLeftPadding+this.render_options.parenRightPadding:0;return f(this.glyph)+t}},{key:"setNote",value:function(t){if(!t)throw new o.Vex.RERR("ArgumentError","Bad note value: "+t);this.note=t,"gracenotes"===this.note.getCategory()&&(this.render_options.font_scale=25,this.reset())}},{key:"setAsCautionary",value:function(){return this.cautionary=!0,this.render_options.font_scale=28,this.reset(),this}},{key:"draw",value:function(){var t=this.context,e=this.type,n=this.position,i=this.note,r=this.index,s=this.cautionary,a=this.x_shift,u=this.y_shift,c=this.glyph,l=this.parenLeft,p=this.parenRight,d=this.render_options,b=d.parenLeftPadding,y=d.parenRightPadding;if(this.checkContext(),!i||null==r)throw new o.Vex.RERR("NoAttachedNote","Can't draw accidental without a note and index.");var m=i.getModifierStartXY(n,r),v=m.x+a,g=m.y+u;h("Rendering: ",e,v,g),s?(p.render(t,v,g),v-=f(p),v-=y,v-=this.accidental.parenRightPaddingAdjustment,c.render(t,v,g),v-=f(c),v-=b,l.render(t,v,g)):c.render(t,v,g),this.setRendered()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Music=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1);e.Music=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}return i(t,[{key:"isValidNoteValue",value:function(e){return!(null==e||e<0||e>=t.NUM_TONES)}},{key:"isValidIntervalValue",value:function(t){return this.isValidNoteValue(t)}},{key:"getNoteParts",value:function(t){if(!t||t.length<1)throw new r.Vex.RERR("BadArguments","Invalid note name: "+t);if(t.length>3)throw new r.Vex.RERR("BadArguments","Invalid note name: "+t);var e=t.toLowerCase(),n=/^([cdefgab])(b|bb|n|#|##)?$/.exec(e);if(null!=n)return{root:n[1],accidental:n[2]};throw new r.Vex.RERR("BadArguments","Invalid note name: "+t)}},{key:"getKeyParts",value:function(t){if(!t||t.length<1)throw new r.Vex.RERR("BadArguments","Invalid key: "+t);var e=t.toLowerCase(),n=/^([cdefgab])(b|#)?(mel|harm|m|M)?$/.exec(e);if(null!=n){var i=n[1],o=n[2],s=n[3];return s||(s="M"),{root:i,accidental:o,type:s}}throw new r.Vex.RERR("BadArguments","Invalid key: "+t)}},{key:"getNoteValue",value:function(e){var n=t.noteValues[e];if(null==n)throw new r.Vex.RERR("BadArguments","Invalid note name: "+e);return n.int_val}},{key:"getIntervalValue",value:function(e){var n=t.intervals[e];if(null==n)throw new r.Vex.RERR("BadArguments","Invalid interval name: ${intervalString}");return n}},{key:"getCanonicalNoteName",value:function(e){if(!this.isValidNoteValue(e))throw new r.Vex.RERR("BadArguments","Invalid note value: "+e);return t.canonical_notes[e]}},{key:"getCanonicalIntervalName",value:function(e){if(!this.isValidIntervalValue(e))throw new r.Vex.RERR("BadArguments","Invalid interval value: "+e);return t.diatonic_intervals[e]}},{key:"getRelativeNoteValue",value:function(e,n,i){if(null==i&&(i=1),1!==i&&-1!==i)throw new r.Vex.RERR("BadArguments","Invalid direction: "+i);var o=(e+i*n)%t.NUM_TONES;return o<0&&(o+=t.NUM_TONES),o}},{key:"getRelativeNoteName",value:function(e,n){var i=this.getNoteParts(e),o=this.getNoteValue(i.root),s=n-o;if(Math.abs(s)>t.NUM_TONES-3){var a=1;s>0&&(a=-1);var u=(n+1+(o+1))%t.NUM_TONES*a;if(Math.abs(u)>2)throw new r.Vex.RERR("BadArguments","Notes not related: "+e+", "+n+")");s=u}if(Math.abs(s)>2)throw new r.Vex.RERR("BadArguments","Notes not related: "+e+", "+n+")");var c=i.root;if(s>0)for(var l=1;l<=s;++l)c+="#";else if(s<0)for(var h=-1;h>=s;--h)c+="b";return c}},{key:"getScaleTones",value:function(t,e){for(var n=[t],i=t,r=0;r<e.length;r+=1)(i=this.getRelativeNoteValue(i,e[r]))!==t&&n.push(i);return n}},{key:"getIntervalBetween",value:function(e,n,i){if(null==i&&(i=1),1!==i&&-1!==i)throw new r.Vex.RERR("BadArguments","Invalid direction: "+i);if(!this.isValidNoteValue(e)||!this.isValidNoteValue(n))throw new r.Vex.RERR("BadArguments","Invalid notes: "+e+", "+n);var o=1===i?n-e:e-n;return o<0&&(o+=t.NUM_TONES),o}},{key:"createScaleMap",value:function(e){var n=this.getKeyParts(e),i=t.scaleTypes[n.type],o=n.root;if(n.accidental&&(o+=n.accidental),!i)throw new r.Vex.RERR("BadArguments","Unsupported key type: "+e);for(var s=this.getScaleTones(this.getNoteValue(o),i),a=t.root_indices[n.root],u={},c=0;c<t.roots.length;++c){var l=(a+c)%t.roots.length,h=t.roots[l],f=this.getRelativeNoteName(h,s[c]);1===f.length&&(f+="n"),u[h]=f}return u}}],[{key:"NUM_TONES",get:function(){return 12}},{key:"roots",get:function(){return["c","d","e","f","g","a","b"]}},{key:"root_values",get:function(){return[0,2,4,5,7,9,11]}},{key:"root_indices",get:function(){return{c:0,d:1,e:2,f:3,g:4,a:5,b:6}}},{key:"canonical_notes",get:function(){return["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]}},{key:"diatonic_intervals",get:function(){return["unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","octave"]}},{key:"diatonic_accidentals",get:function(){return{unison:{note:0,accidental:0},m2:{note:1,accidental:-1},M2:{note:1,accidental:0},m3:{note:2,accidental:-1},M3:{note:2,accidental:0},p4:{note:3,accidental:0},dim5:{note:4,accidental:-1},p5:{note:4,accidental:0},m6:{note:5,accidental:-1},M6:{note:5,accidental:0},b7:{note:6,accidental:-1},M7:{note:6,accidental:0},octave:{note:7,accidental:0}}}},{key:"intervals",get:function(){return{u:0,unison:0,m2:1,b2:1,min2:1,S:1,H:1,2:2,M2:2,maj2:2,T:2,W:2,m3:3,b3:3,min3:3,M3:4,3:4,maj3:4,4:5,p4:5,"#4":6,b5:6,aug4:6,dim5:6,5:7,p5:7,"#5":8,b6:8,aug5:8,6:9,M6:9,maj6:9,b7:10,m7:10,min7:10,dom7:10,M7:11,maj7:11,8:12,octave:12}}},{key:"scales",get:function(){return{major:[2,2,1,2,2,2,1],dorian:[2,1,2,2,2,1,2],mixolydian:[2,2,1,2,2,1,2],minor:[2,1,2,2,1,2,2]}}},{key:"scaleTypes",get:function(){return{M:t.scales.major,m:t.scales.minor}}},{key:"accidentals",get:function(){return["bb","b","n","#","##"]}},{key:"noteValues",get:function(){return{c:{root_index:0,int_val:0},cn:{root_index:0,int_val:0},"c#":{root_index:0,int_val:1},"c##":{root_index:0,int_val:2},cb:{root_index:0,int_val:11},cbb:{root_index:0,int_val:10},d:{root_index:1,int_val:2},dn:{root_index:1,int_val:2},"d#":{root_index:1,int_val:3},"d##":{root_index:1,int_val:4},db:{root_index:1,int_val:1},dbb:{root_index:1,int_val:0},e:{root_index:2,int_val:4},en:{root_index:2,int_val:4},"e#":{root_index:2,int_val:5},"e##":{root_index:2,int_val:6},eb:{root_index:2,int_val:3},ebb:{root_index:2,int_val:2},f:{root_index:3,int_val:5},fn:{root_index:3,int_val:5},"f#":{root_index:3,int_val:6},"f##":{root_index:3,int_val:7},fb:{root_index:3,int_val:4},fbb:{root_index:3,int_val:3},g:{root_index:4,int_val:7},gn:{root_index:4,int_val:7},"g#":{root_index:4,int_val:8},"g##":{root_index:4,int_val:9},gb:{root_index:4,int_val:6},gbb:{root_index:4,int_val:5},a:{root_index:5,int_val:9},an:{root_index:5,int_val:9},"a#":{root_index:5,int_val:10},"a##":{root_index:5,int_val:11},ab:{root_index:5,int_val:8},abb:{root_index:5,int_val:7},b:{root_index:6,int_val:11},bn:{root_index:6,int_val:11},"b#":{root_index:6,int_val:0},"b##":{root_index:6,int_val:1},bb:{root_index:6,int_val:10},bbb:{root_index:6,int_val:9}}}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NoteSubGroup=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25),a=n(14),u=n(18);function c(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}e.NoteSubGroup=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=c(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","NoteSubGroup"),n.note=null,n.index=null,n.position=s.Modifier.Position.LEFT,n.subNotes=t,n.subNotes.forEach(function(t){t.ignore_ticks=!1}),n.width=0,n.preFormatted=!1,n.formatter=new a.Formatter,n.voice=new u.Voice({num_beats:4,beat_value:4,resolution:o.Flow.RESOLUTION}).setStrict(!1),n.voice.addTickables(n.subNotes),c(n,n)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Modifier),i(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var r=t[i];r.preFormat(),n+=r.getWidth()}return e.left_shift+=n,!0}},{key:"CATEGORY",get:function(){return"notesubgroup"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}},{key:"setNote",value:function(t){this.note=t}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){return this.width}},{key:"draw",value:function(){var t=this;this.checkContext();var e=this.getNote();if(!e||null===this.index)throw new r.Vex.RuntimeError("NoAttachedNote","Can't draw notes without a parent note and parent note index.");this.setRendered();!function(e,n){var i=n.getTickContext(),r=i.getExtraPx(),o=i.getX()-r.left-r.extraLeft+t.getSpacingFromNextModifier();e.forEach(function(t){var e=t.getTickContext(),i=e.getX();t.setStave(n.stave),e.setX(o+i)})}(this.subNotes,e,this.width),this.subNotes.forEach(function(e){return e.setContext(t.context).draw()})}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GraceNoteGroup=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25),a=n(14),u=n(18),c=n(15),l=n(33),h=n(34),f=n(20);function p(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function d(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];b.DEBUG&&r.Vex.L("Vex.Flow.GraceNoteGroup",e)}var b=e.GraceNoteGroup=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=p(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.setAttribute("type","GraceNoteGroup"),i.note=null,i.index=null,i.position=s.Modifier.Position.LEFT,i.grace_notes=t,i.width=0,i.preFormatted=!1,i.show_slur=n,i.slur=null,i.formatter=new a.Formatter,i.voice=new u.Voice({num_beats:4,beat_value:4,resolution:o.Flow.RESOLUTION}).setStrict(!1),i.render_options={slur_y_shift:0},i.voice.addTickables(i.grace_notes),p(i,i)}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Modifier),i(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=[],i=null,r=0,o=0;o<t.length;++o){var s=t[o],a=s.getNote(),u=a.getCategory()===f.StaveNote.CATEGORY,c=u?4:0;if(u&&a!==i){for(var l=0;l<a.keys.length;++l){r=a.getKeyProps()[l].displaced?a.getExtraLeftPx():r}i=a}n.push({shift:r,gracenote_group:s,spacing:c})}for(var h=n[0].shift,p=void 0,d=0;d<n.length;++d){var b=n[d].gracenote_group;b.preFormat(),p=b.getWidth()+n[d].spacing,h=Math.max(p,h)}for(var y=0;y<n.length;++y){var m=n[y].gracenote_group;p=m.getWidth()+n[y].spacing,m.setSpacingFromNextModifier(h-Math.min(p,h))}return e.left_shift+=h,!0}},{key:"CATEGORY",get:function(){return"gracenotegroups"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){this.preFormatted||(this.formatter.joinVoices([this.voice]).format([this.voice],0),this.setWidth(this.formatter.getMinTotalWidth()),this.preFormatted=!0)}},{key:"beamNotes",value:function(){if(this.grace_notes.length>1){var t=new c.Beam(this.grace_notes);t.render_options.beam_width=3,t.render_options.partial_beam_length=4,this.beam=t}return this}},{key:"setNote",value:function(t){this.note=t}},{key:"setWidth",value:function(t){this.width=t}},{key:"getWidth",value:function(){return this.width}},{key:"getGraceNotes",value:function(){return this.grace_notes}},{key:"draw",value:function(){var t=this;this.checkContext();var e=this.getNote();if(d("Drawing grace note group for:",e),!e||null===this.index)throw new r.Vex.RuntimeError("NoAttachedNote","Can't draw grace note without a parent note and parent note index.");this.setRendered();var n=this;if(function(t,e){var i=e.getTickContext(),r=i.getExtraPx(),o=i.getX()-r.left-r.extraLeft+n.getSpacingFromNextModifier();t.forEach(function(t){var n=t.getTickContext(),i=n.getX();t.setStave(e.stave),n.setX(o+i)})}(this.grace_notes,e,this.width),this.grace_notes.forEach(function(e){e.setContext(t.context).draw()}),this.beam&&this.beam.setContext(this.context).draw(),this.show_slur){var i=this.getNote().getCategory()===f.StaveNote.CATEGORY,o=i?l.StaveTie:h.TabTie;this.slur=new o({last_note:this.grace_notes[0],first_note:e,first_indices:[0],last_indices:[0]}),this.slur.render_options.cp2=12,this.slur.render_options.y_shift=(i?7:5)+this.render_options.slur_y_shift,this.slur.setContext(this.context).draw()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveTie=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5);e.StaveTie=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.setAttribute("type","StaveTie"),i.notes=t,i.context=null,i.text=n,i.direction=null,i.render_options={cp1:8,cp2:12,text_shift_x:0,first_x_shift:0,last_x_shift:0,y_shift:7,tie_spacing:0,font:{family:"Arial",size:10,style:""}},i.font=i.render_options.font,i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,[{key:"setFont",value:function(t){return this.font=t,this}},{key:"setDirection",value:function(t){return this.direction=t,this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new r.Vex.RuntimeError("BadArguments","Tie needs to have either first_note or last_note set.");if(t.first_indices||(t.first_indices=[0]),t.last_indices||(t.last_indices=[0]),t.first_indices.length!==t.last_indices.length)throw new r.Vex.RuntimeError("BadArguments","Tied notes must have similar index sizes");return this.first_note=t.first_note,this.first_indices=t.first_indices,this.last_note=t.last_note,this.last_indices=t.last_indices,this}},{key:"isPartial",value:function(){return!this.first_note||!this.last_note}},{key:"renderTie",value:function(t){if(0===t.first_ys.length||0===t.last_ys.length)throw new r.Vex.RERR("BadArguments","No Y-values to render");var e=this.context,n=this.render_options.cp1,i=this.render_options.cp2;Math.abs(t.last_x_px-t.first_x_px)<10&&(n=2,i=8);for(var o=this.render_options.first_x_shift,s=this.render_options.last_x_shift,a=this.render_options.y_shift*t.direction,u=0;u<this.first_indices.length;++u){var c=(t.last_x_px+s+(t.first_x_px+o))/2,l=t.first_ys[this.first_indices[u]]+a,h=t.last_ys[this.last_indices[u]]+a;if(isNaN(l)||isNaN(h))throw new r.Vex.RERR("BadArguments","Bad indices for tie rendering.");var f=(l+h)/2+n*t.direction,p=(l+h)/2+i*t.direction;e.beginPath(),e.moveTo(t.first_x_px+o,l),e.quadraticCurveTo(c,f,t.last_x_px+s,h),e.quadraticCurveTo(c,p,t.first_x_px+o,l),e.closePath(),e.fill()}}},{key:"renderText",value:function(t,e){if(this.text){var n=(t+e)/2;n-=this.context.measureText(this.text).width/2,this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.style),this.context.fillText(this.text,n+this.render_options.text_shift_x,(this.first_note||this.last_note).getStave().getYForTopText()-1),this.context.restore()}}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.first_note,e=this.last_note,n=void 0,i=void 0,r=void 0,o=void 0,s=void 0;return t?(n=t.getTieRightX()+this.render_options.tie_spacing,s=t.getStemDirection(),r=t.getYs()):(n=e.getStave().getTieStartX(),r=e.getYs(),this.first_indices=this.last_indices),e?(i=e.getTieLeftX()+this.render_options.tie_spacing,s=e.getStemDirection(),o=e.getYs()):(i=t.getStave().getTieEndX(),o=t.getYs(),this.last_indices=this.first_indices),this.direction&&(s=this.direction),this.renderTie({first_x_px:n,last_x_px:i,first_ys:r,last_ys:o,direction:s}),this.renderText(n,i),!0}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TabTie=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(33);e.TabTie=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n));return i.setAttribute("type","TabTie"),i.render_options.cp1=9,i.render_options.cp2=11,i.render_options.y_shift=3,i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.StaveTie),i(e,null,[{key:"createHammeron",value:function(t){return new e(t,"H")}},{key:"createPulloff",value:function(t){return new e(t,"P")}}]),i(e,[{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.first_note,e=this.last_note,n=void 0,i=void 0,r=void 0,o=void 0;return t?(n=t.getTieRightX()+this.render_options.tie_spacing,r=t.getYs()):(n=e.getStave().getTieStartX(),r=e.getYs(),this.first_indices=this.last_indices),e?(i=e.getTieLeftX()+this.render_options.tie_spacing,o=e.getYs()):(i=t.getStave().getTieEndX(),o=t.getYs(),this.last_indices=this.first_indices),this.renderTie({first_x_px:n,last_x_px:i,first_ys:r,last_ys:o,direction:-1}),this.renderText(n,i),!0}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Stroke=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25),s=n(20),a=n(4);e.Stroke=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.setAttribute("type","Stroke"),i.note=null,i.options=r.Vex.Merge({},n),i.all_voices=!("all_voices"in i.options)||i.options.all_voices,i.note_end=null,i.index=null,i.type=t,i.position=o.Modifier.Position.LEFT,i.render_options={font_scale:38,stroke_px:3,stroke_spacing:10},i.font={family:"serif",size:10,weight:"bold italic"},i.setXShift(0),i.setWidth(10),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"format",value:function(t,e){var n=e.left_shift;if(!t||0===t.length)return this;var i=n,r=t.map(function(t){var e=t.getNote();if(e instanceof s.StaveNote){var n=e.getKeyProps()[t.getIndex()];return{line:n.line,shift:n.displaced?e.getExtraLeftPx():0,stroke:t}}return{line:e.getPositions()[t.getIndex()].str,shift:0,stroke:t}}).reduce(function(t,e){var n=e.stroke,r=e.shift;return n.setXShift(i+r),Math.max(n.getWidth()+0,t)},0);return e.left_shift+=r,!0}},{key:"CATEGORY",get:function(){return"strokes"}},{key:"Type",get:function(){return{BRUSH_DOWN:1,BRUSH_UP:2,ROLL_DOWN:3,ROLL_UP:4,RASQUEDO_DOWN:5,RASQUEDO_UP:6}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getPosition",value:function(){return this.position}},{key:"addEndNote",value:function(t){return this.note_end=t,this}},{key:"draw",value:function(){if(this.checkContext(),this.setRendered(),!this.note||null==this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw stroke without a note and index.");for(var t=this.note.getModifierStartXY(this.position,this.index),n=this.note.getYs(),i=t.y,o=t.y,u=t.x-5,c=this.note.stave.options.spacing_between_lines_px,l=this.getModifierContext().getModifiers(this.note.getCategory()),h=0;h<l.length;h++){n=l[h].getYs();for(var f=0;f<n.length;f++)(this.note===l[h]||this.all_voices)&&(i=r.Vex.Min(i,n[f]),o=r.Vex.Max(o,n[f]))}var p=void 0,d=void 0,b=void 0,y=void 0,m=void 0;switch(this.type){case e.Type.BRUSH_DOWN:p="vc3",d=-3,b=i-c/2+10,o+=c/2;break;case e.Type.BRUSH_UP:p="v11",d=.5,b=o+c/2,i-=c/2;break;case e.Type.ROLL_DOWN:case e.Type.RASQUEDO_DOWN:p="vc3",d=-3,y=this.x_shift+d-2,this.note instanceof s.StaveNote?(b=(i+=1.5*c)-c,m=(o+=(o-i)%2!=0?.5*c:c)+c+2):(b=(i+=1.5*c)-.75*c,m=(o+=c)+.25*c);break;case e.Type.ROLL_UP:case e.Type.RASQUEDO_UP:p="v52",d=-4,y=this.x_shift+d-1,this.note instanceof s.StaveNote?(b=c/2,(o-(i+=.5*c))%2==0&&(o+=c/2),b=o+.5*c,m=i-1.25*c):(b=(o+=.5*c)+.25*c,m=(i+=.25*c)-c);break;default:throw new r.Vex.RERR("InvalidType","The stroke type "+this.type+" does not exist")}if(this.type===e.Type.BRUSH_DOWN||this.type===e.Type.BRUSH_UP)this.context.fillRect(u+this.x_shift,i,1,o-i);else if(this.note instanceof s.StaveNote)for(var v=i;v<=o;v+=c)a.Glyph.renderGlyph(this.context,u+this.x_shift-4,v,this.render_options.font_scale,"va3");else{var g=void 0;for(g=i;g<=o;g+=10)a.Glyph.renderGlyph(this.context,u+this.x_shift-4,g,this.render_options.font_scale,"va3");this.type===e.Type.RASQUEDO_DOWN&&(m=g+.25*c)}a.Glyph.renderGlyph(this.context,u+this.x_shift+d,b,this.render_options.font_scale,p),this.type!==e.Type.RASQUEDO_DOWN&&this.type!==e.Type.RASQUEDO_UP||(this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight),this.context.fillText("R",u+y,m),this.context.restore())}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StringNumber=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25),s=n(10),a=n(20);e.StringNumber=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","StringNumber"),n.note=null,n.last_note=null,n.index=null,n.string_number=t,n.setWidth(20),n.position=o.Modifier.Position.ABOVE,n.x_shift=0,n.y_shift=0,n.x_offset=0,n.y_offset=0,n.dashed=!0,n.leg=s.Renderer.LineEndType.NONE,n.radius=8,n.font={family:"sans-serif",size:10,weight:"bold"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"format",value:function(t,e){var n=e.left_shift,i=e.right_shift;if(!t||0===t.length)return this;var r=[],s=null,a=0,u=0,c=void 0,l=void 0,h=void 0,f=void 0,p=void 0;for(c=0;c<t.length;++c)for(h=(l=t[c]).getNote(),c=0;c<t.length;++c){h=(l=t[c]).getNote(),f=l.getPosition();var d=h.getKeyProps()[l.getIndex()];if(h!==s){for(var b=0;b<h.keys.length;++b)p=h.getKeyProps()[b],0===n&&(a=p.displaced?h.getExtraLeftPx():a),0===i&&(u=p.displaced?h.getExtraRightPx():u);s=h}r.push({pos:f,note:h,num:l,line:d.line,shiftL:a,shiftR:u})}r.sort(function(t,e){return e.line-t.line});var y=0,m=0,v=0,g=null,_=null;for(c=0;c<r.length;++c){var S=0;h=r[c].note,f=r[c].pos,l=r[c].num;var x=r[c].line,w=r[c].shiftL,E=r[c].shiftR;x===g&&h===_||(n+w,y=i+E);var P=l.getWidth()+1;f===o.Modifier.Position.LEFT?(l.setXShift(n),m=(S=a+P)>m?S:m):f===o.Modifier.Position.RIGHT&&(l.setXShift(y),v=(S+=P)>v?S:v),g=x,_=h}return e.left_shift+=m,e.right_shift+=v,!0}},{key:"CATEGORY",get:function(){return"stringnumber"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getNote",value:function(){return this.note}},{key:"setNote",value:function(t){return this.note=t,this}},{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(t){return this.index=t,this}},{key:"setLineEndType",value:function(t){return t>=s.Renderer.LineEndType.NONE&&t<=s.Renderer.LineEndType.DOWN&&(this.leg=t),this}},{key:"setStringNumber",value:function(t){return this.string_number=t,this}},{key:"setOffsetX",value:function(t){return this.x_offset=t,this}},{key:"setOffsetY",value:function(t){return this.y_offset=t,this}},{key:"setLastNote",value:function(t){return this.last_note=t,this}},{key:"setDashed",value:function(t){return this.dashed=t,this}},{key:"draw",value:function(){var t=this.checkContext();if(!this.note||null==this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw string number without a note and index.");this.setRendered();var e=this.note.stave.options.spacing_between_lines_px,n=this.note.getModifierStartXY(this.position,this.index),i=n.x+this.x_shift+this.x_offset,u=n.y+this.y_shift+this.y_offset;switch(this.position){case o.Modifier.Position.ABOVE:case o.Modifier.Position.BELOW:var c=this.note.getStemExtents(),l=c.topY,h=c.baseY+2;this.note.stem_direction===a.StaveNote.STEM_DOWN&&(l=c.baseY,h=c.topY-2),u=this.position===o.Modifier.Position.ABOVE?this.note.hasStem()?l-1.75*e:n.y-1.75*e:this.note.hasStem()?h+1.5*e:n.y+1.75*e,u+=this.y_shift+this.y_offset;break;case o.Modifier.Position.LEFT:i-=this.radius/2+5;break;case o.Modifier.Position.RIGHT:i+=this.radius/2+6;break;default:throw new r.Vex.RERR("InvalidPosition","The position "+this.position+" is invalid")}t.save(),t.beginPath(),t.arc(i,u,this.radius,0,2*Math.PI,!1),t.lineWidth=1.5,t.stroke(),t.setFont(this.font.family,this.font.size,this.font.weight);var f=i-t.measureText(this.string_number).width/2;if(t.fillText(""+this.string_number,f,u+4.5),null!=this.last_note){var p=this.last_note.getStemX()-this.note.getX()+5;t.strokeStyle="#000000",t.lineCap="round",t.lineWidth=.6,this.dashed?s.Renderer.drawDashedLine(t,i+10,u,i+p,u,[3,3]):s.Renderer.drawDashedLine(t,i+10,u,i+p,u,[3,0]);var d=void 0,b=void 0;switch(this.leg){case s.Renderer.LineEndType.UP:d=-10,b=this.dashed?[3,3]:[3,0],s.Renderer.drawDashedLine(t,i+p,u,i+p,u+d,b);break;case s.Renderer.LineEndType.DOWN:d=10,b=this.dashed?[3,3]:[3,0],s.Renderer.drawDashedLine(t,i+p,u,i+p,u+d,b)}}t.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Articulation=void 0;var i=function(){return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,e){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){r=!0,o=t}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(2),a=n(25),u=n(4),c=n(17);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function h(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function f(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];g.DEBUG&&o.Vex.L("Vex.Flow.Articulation",e)}var p=a.Modifier.Position,d=p.ABOVE,b=p.BELOW,y=function(t,e){return.5*t(e/.5)},m=function(t,e){return e===d?t<=5:t>=1},v=function(t,e){return m(t,e)?e===d?Math.ceil:Math.floor:Math.round},g=e.Articulation=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(n.setAttribute("type","Articulation"),n.note=null,n.index=null,n.type=t,n.position=b,n.render_options={font_scale:38},n.articulation=s.Flow.articulationCodes(n.type),!n.articulation)throw new o.Vex.RERR("ArgumentError","Articulation not found: "+n.type);return n.glyph=new u.Glyph(n.articulation.code,n.render_options.font_scale),n.setWidth(n.glyph.getMetrics().width),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.Modifier),r(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;var n=function(t,e,n){return y(v(e,n),t.glyph.getMetrics().height/10+.5)};t.filter(function(t){return t.getPosition()===d}).forEach(function(t){t.setTextLine(e.top_text_line),e.top_text_line+=n(t,e.top_text_line,d)}),t.filter(function(t){return t.getPosition()===b}).forEach(function(t){t.setTextLine(e.text_line),e.text_line+=n(t,e.text_line,b)});var i=t.map(function(t){return t.getWidth()}).reduce(function(t,e){return Math.max(e,t)});return e.left_shift+=i/2,e.right_shift+=i/2,!0}},{key:"easyScoreHook",value:function(t,e,n){var r=t.articulations;if(r){var o={staccato:"a.",tenuto:"a-"};r.split(",").map(function(t){return t.trim().split(".")}).map(function(t){var e=i(t,2),r=e[0],s=e[1],u={type:o[r]};return s&&(u.position=a.Modifier.PositionString[s]),n.getFactory().Articulation(u)}).map(function(t){return e.addModifier(0,t)})}}},{key:"CATEGORY",get:function(){return"articulations"}},{key:"INITIAL_OFFSET",get:function(){return-.5}}]),r(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){var t,n=this.note,i=this.index,r=this.position,s=this.glyph,a=this.articulation.between_lines,u=this.text_line,p=this.context;if(this.checkContext(),!n||null==i)throw new o.Vex.RERR("NoAttachedNote","Can't draw Articulation without a note and index.");this.setRendered();var g=n.getStave(),_=g.getSpacingBetweenLines(),S="tabnotes"===n.getCategory(),x=n.getModifierStartXY(r,i).x,w=!a||S,E=function(t,e){var n=e===d&&t.getStemDirection()===c.Stem.UP||e===b&&t.getStemDirection()===c.Stem.DOWN;return"stavenotes"===t.getCategory()?t.hasStem()&&n?.5:1:t.hasStem()&&n?1:0}(n,r),P=(t={},l(t,d,function(){s.setOrigin(.5,1);var t=function(t,e){var n=t.getStave(),i=t.getStemDirection(),r=t.getStemExtents(),s=r.topY,a=r.baseY;if("stavenotes"===t.getCategory())return t.hasStem()?i===c.Stem.UP?s:a:Math.min.apply(Math,h(t.getYs()));if("tabnotes"===t.getCategory())return t.hasStem()&&i===c.Stem.UP?s:n.getYForTopText(e);throw new o.Vex.RERR("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}(n,u)-(u+E)*_;return w?Math.min(g.getYForTopText(e.INITIAL_OFFSET),t):t}),l(t,b,function(){s.setOrigin(.5,0);var t=function(t,e){var n=t.getStave(),i=t.getStemDirection(),r=t.getStemExtents(),s=r.topY,a=r.baseY;if("stavenotes"===t.getCategory())return t.hasStem()?i===c.Stem.UP?a:s:Math.max.apply(Math,h(t.getYs()));if("tabnotes"===t.getCategory())return t.hasStem()?i===c.Stem.UP?n.getYForBottomText(e):s:n.getYForBottomText(e);throw new o.Vex.RERR("UnknownCategory","Only can get the top and bottom ys of stavenotes and tabnotes")}(n,u)+(u+E)*_;return w?Math.max(g.getYForBottomText(e.INITIAL_OFFSET),t):t}),t)[r]();if(!S){var T=r===d?-1:1,M=S?n.positions[i].str:n.getKeyProps()[i].line,k=(n.getYs()[i]-P)/_+M,O=function(t,e,n,i){var r=y(v(e,n),e);if(t&&m(r,n)&&r%1==0)return r+.5*-i;return r}(a,k,r,T);m(O,r)&&s.setOrigin(.5,.5),P+=Math.abs(O-k)*_*T}f("Rendering articulation at (x: "+x+", y: "+P+")"),s.render(p,x,P)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Ornament=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25),a=n(39),u=n(20),c=n(4);function l(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];h.DEBUG&&r.Vex.L("Vex.Flow.Ornament",e)}var h=e.Ornament=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(n.setAttribute("type","Ornament"),n.note=null,n.index=null,n.type=t,n.position=s.Modifier.Position.ABOVE,n.delayed=!1,n.accidentalUpper=null,n.accidentalLower=null,n.render_options={font_scale:38,accidentalLowerPadding:3,accidentalUpperPadding:3},n.ornament=o.Flow.ornamentCodes(n.type),!n.ornament)throw new r.Vex.RERR("ArgumentError","Ornament not found: '"+n.type+"'");return n.glyph=new c.Glyph(n.ornament.code,n.render_options.font_scale),n.glyph.setOrigin(.5,1),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Modifier),i(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var r=t[i];n=Math.max(r.getWidth(),n),r.getPosition()===s.Modifier.Position.ABOVE?(r.setTextLine(e.top_text_line),e.top_text_line+=2):(r.setTextLine(e.text_line),e.text_line+=2)}return e.left_shift+=n/2,e.right_shift+=n/2,!0}},{key:"CATEGORY",get:function(){return"ornaments"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setDelayed",value:function(t){return this.delayed=t,this}},{key:"setUpperAccidental",value:function(t){var e=this.render_options.font_scale/1.3;return this.accidentalUpper=new c.Glyph(o.Flow.accidentalCodes(t).code,e),this.accidentalUpper.setOrigin(.5,1),this}},{key:"setLowerAccidental",value:function(t){var e=this.render_options.font_scale/1.3;return this.accidentalLower=new c.Glyph(o.Flow.accidentalCodes(t).code,e),this.accidentalLower.setOrigin(.5,1),this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw Ornament without a note and index.");this.setRendered();var t=this.context,e=this.note.getStemDirection(),n=this.note.getStave(),i=this.note.getStem().getExtents(),o=e===u.StaveNote.STEM_DOWN?i.baseY:i.topY;"tabnotes"===this.note.getCategory()&&(this.note.hasStem()?e===u.StaveNote.STEM_DOWN&&(o=n.getYForTopText(this.text_line)):o=n.getYForTopText(this.text_line));var s=e===u.StaveNote.STEM_DOWN,c=n.getSpacingBetweenLines(),h=1;!s&&this.note.beam&&(h+=.5);var f=o-c*(this.text_line+h),p=this.note.getModifierStartXY(this.position,this.index).x,d=Math.min(n.getYForTopText(this.text_line),f);if(d+=this.y_shift,this.delayed){p+=this.glyph.getMetrics().width;var b=a.TickContext.getNextContext(this.note.getTickContext());p+=b?.5*(b.getX()-p):.5*(n.x+n.width-p)}l("Rendering ornament: ",this.ornament,p,d),this.accidentalLower&&(this.accidentalLower.render(t,p,d),d-=this.accidentalLower.getMetrics().height,d-=this.render_options.accidentalLowerPadding),this.glyph.render(t,p,d),d-=this.glyph.getMetrics().height,this.accidentalUpper&&(d-=this.render_options.accidentalUpperPadding,this.accidentalUpper.render(t,p,d))}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TickContext=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(23),s=n(3);e.TickContext=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","TickContext"),t.currentTick=new s.Fraction(0,1),t.maxTicks=new s.Fraction(0,1),t.minTicks=null,t.padding=3,t.x=0,t.tickables=[],t.notePx=0,t.extraLeftPx=0,t.extraRightPx=0,t.tContexts=[],t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Tickable),i(e,null,[{key:"getNextContext",value:function(t){var e=t.tContexts;return e[e.indexOf(t)+1]}}]),i(e,[{key:"getX",value:function(){return this.x}},{key:"setX",value:function(t){return this.x=t,this}},{key:"getWidth",value:function(){return this.width+2*this.padding}},{key:"setPadding",value:function(t){return this.padding=t,this}},{key:"getMaxTicks",value:function(){return this.maxTicks}},{key:"getMinTicks",value:function(){return this.minTicks}},{key:"getTickables",value:function(){return this.tickables}},{key:"getCenterAlignedTickables",value:function(){return this.tickables.filter(function(t){return t.isCenterAligned()})}},{key:"getMetrics",value:function(){return{width:this.width,notePx:this.notePx,extraLeftPx:this.extraLeftPx,extraRightPx:this.extraRightPx}}},{key:"getCurrentTick",value:function(){return this.currentTick}},{key:"setCurrentTick",value:function(t){this.currentTick=t,this.preFormatted=!1}},{key:"getExtraPx",value:function(){for(var t=0,e=0,n=0,i=0,r=0;r<this.tickables.length;r++){n=Math.max(this.tickables[r].extraLeftPx||0,n),i=Math.max(this.tickables[r].extraRightPx||0,i);var o=this.tickables[r].modifierContext;o&&null!=o&&(t=Math.max(t,o.state.left_shift),e=Math.max(e,o.state.right_shift))}return{left:t,right:e,extraLeft:n,extraRight:i}}},{key:"addTickable",value:function(t){if(!t)throw new r.Vex.RERR("BadArgument","Invalid tickable added.");if(!t.shouldIgnoreTicks()){this.ignore_ticks=!1;var e=t.getTicks();e.greaterThan(this.maxTicks)&&(this.maxTicks=e.clone()),null==this.minTicks?this.minTicks=e.clone():e.lessThan(this.minTicks)&&(this.minTicks=e.clone())}return t.setTickContext(this),this.tickables.push(t),this.preFormatted=!1,this}},{key:"preFormat",value:function(){if(this.preFormatted)return this;for(var t=0;t<this.tickables.length;++t){var e=this.tickables[t];e.preFormat();var n=e.getMetrics();this.extraLeftPx=Math.max(this.extraLeftPx,n.extraLeftPx+n.modLeftPx),this.extraRightPx=Math.max(this.extraRightPx,n.extraRightPx+n.modRightPx),this.notePx=Math.max(this.notePx,n.noteWidth),this.width=this.notePx+this.extraLeftPx+this.extraRightPx}return this}},{key:"postFormat",value:function(){return this.postFormatted?this:(this.postFormatted=!0,this)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Annotation=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.Annotation",e)}var u=e.Annotation=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","Annotation"),n.note=null,n.index=null,n.text=t,n.justification=e.Justify.CENTER,n.vert_justification=e.VerticalJustify.TOP,n.font={family:"Arial",size:10,weight:""},n.setWidth(o.Flow.textWidth(t)),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Modifier),i(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=0;i<t.length;++i){var r=t[i];n=Math.max(r.getWidth(),n),r.getPosition()===s.Modifier.Position.ABOVE?(r.setTextLine(e.top_text_line),e.top_text_line++):(r.setTextLine(e.text_line),e.text_line++)}return e.left_shift+=n/2,e.right_shift+=n/2,!0}},{key:"CATEGORY",get:function(){return"annotations"}},{key:"Justify",get:function(){return{LEFT:1,CENTER:2,RIGHT:3,CENTER_STEM:4}}},{key:"JustifyString",get:function(){return{left:e.Justify.LEFT,right:e.Justify.RIGHT,center:e.Justify.CENTER,centerStem:e.Justify.CENTER_STEM}}},{key:"VerticalJustify",get:function(){return{TOP:1,CENTER:2,BOTTOM:3,CENTER_STEM:4}}},{key:"VerticalJustifyString",get:function(){return{above:e.VerticalJustify.TOP,top:e.VerticalJustify.TOP,below:e.VerticalJustify.BOTTOM,bottom:e.VerticalJustify.BOTTOM,center:e.VerticalJustify.CENTER,centerStem:e.VerticalJustify.CENTER_STEM}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setFont",value:function(t,e,n){return this.font={family:t,size:e,weight:n},this}},{key:"setVerticalJustification",value:function(t){return this.vert_justification="string"==typeof t?e.VerticalJustifyString[t]:t,this}},{key:"getJustification",value:function(){return this.justification}},{key:"setJustification",value:function(t){return this.justification="string"==typeof t?e.JustifyString[t]:t,this}},{key:"draw",value:function(){if(this.checkContext(),!this.note)throw new r.Vex.RERR("NoNoteForAnnotation","Can't draw text annotation without an attached note.");this.setRendered();var t=this.note.getModifierStartXY(s.Modifier.Position.ABOVE,this.index);this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var n=this.context.measureText(this.text).width,i=this.context.measureText("m").width,u=void 0,c=void 0;u=this.justification===e.Justify.LEFT?t.x:this.justification===e.Justify.RIGHT?t.x-n:this.justification===e.Justify.CENTER?t.x-n/2:this.note.getStemX()-n/2;var l=void 0,h=void 0,f=this.note.hasStem(),p=this.note.getStave();if(f&&(l=this.note.getStem().getExtents(),h=p.getSpacingBetweenLines()),this.vert_justification===e.VerticalJustify.BOTTOM){if(c=p.getYForBottomText(this.text_line+o.Flow.TEXT_HEIGHT_OFFSET_HACK),f){var d=1===this.note.getStemDirection()?l.baseY:l.topY;c=Math.max(c,d+h*(this.text_line+2))}}else if(this.vert_justification===e.VerticalJustify.CENTER){var b=this.note.getYForTopText(this.text_line)-1;c=b+(p.getYForBottomText(this.text_line)-b)/2+i/2}else if(this.vert_justification===e.VerticalJustify.TOP)c=Math.min(p.getYForTopText(this.text_line),this.note.getYs()[0]-10),f&&(c=Math.min(c,l.topY-5-h*this.text_line));else{var y=this.note.getStemExtents();c=y.topY+(y.baseY-y.topY)/2+i/2}a("Rendering annotation: ",this.text,u,c),this.context.fillText(this.text,u,c),this.context.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Bend=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25);e.Bend=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","Bend"),r.text=t,r.x_shift=0,r.release=n||!1,r.font="10pt Arial",r.render_options={line_width:1.5,line_style:"#777777",bend_width:8,release_width:8},i?r.phrase=i:(r.phrase=[{type:e.UP,text:r.text}],r.release&&r.phrase.push({type:e.DOWN,text:""})),r.updateWidth(),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Modifier),i(e,null,[{key:"format",value:function(t,e){if(!t||0===t.length)return!1;for(var n=0,i=e.top_text_line,r=0;r<t.length;++r){var o=t[r];o.setXShift(n),n=o.getWidth(),o.setTextLine(i)}return e.right_shift+=n,e.top_text_line+=1,!0}},{key:"CATEGORY",get:function(){return"bends"}},{key:"UP",get:function(){return 0}},{key:"DOWN",get:function(){return 1}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setXShift",value:function(t){this.x_shift=t,this.updateWidth()}},{key:"setFont",value:function(t){return this.font=t,this}},{key:"getText",value:function(){return this.text}},{key:"updateWidth",value:function(){var t=this;for(var n,i=0,s=0;s<this.phrase.length;++s){var a=this.phrase[s];if("width"in a)i+=a.width;else{var u=a.type===e.UP?this.render_options.bend_width:this.render_options.release_width;a.width=r.Vex.Max(u,(n=a.text,t.context?t.context.measureText(n).width:o.Flow.textWidth(n)))+3,a.draw_width=a.width/2,i+=a.width}}return this.setWidth(i+this.x_shift),this}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new r.Vex.RERR("NoNoteForBend","Can't draw bend without a note or index.");this.setRendered();var t=this.note.getModifierStartXY(s.Modifier.Position.RIGHT,this.index);t.x+=3,t.y+=.5;var n=this.x_shift,i=this.context,o=this.note.getStave().getYForTopText(this.text_line)+3,a=this.note.getStave().getYForTopText(this.text_line)-1,u=this;function c(t,e,n,r){i.save(),i.beginPath(),i.setLineWidth(u.render_options.line_width),i.setStrokeStyle(u.render_options.line_style),i.setFillStyle(u.render_options.line_style),i.moveTo(t,r),i.quadraticCurveTo(t+n,r,t+n,e),i.stroke(),i.restore()}function l(t,e,n){var r=n||1;i.beginPath(),i.moveTo(t,e),i.lineTo(t-4,e+4*r),i.lineTo(t+4,e+4*r),i.closePath(),i.fill()}function h(t,e){i.save(),i.setRawFont(u.font);var n=t-i.measureText(e).width/2;i.fillText(e,n,a),i.restore()}for(var f,p,d,b,y,m,v=null,g=0,_=0;_<this.phrase.length;++_){var S=this.phrase[_];0===_&&(S.draw_width+=n),g=S.draw_width+(v?v.draw_width:0)-(1===_?n:0),S.type===e.UP&&(v&&v.type===e.UP&&l(t.x,o),f=t.x,p=t.y,b=o,void 0,void 0,y=f+(d=g),m=p,i.save(),i.beginPath(),i.setLineWidth(u.render_options.line_width),i.setStrokeStyle(u.render_options.line_style),i.setFillStyle(u.render_options.line_style),i.moveTo(f,p),i.quadraticCurveTo(y,m,f+d,b),i.stroke(),i.restore()),S.type===e.DOWN&&(v&&v.type===e.UP&&c(t.x,t.y,g,o),v&&v.type===e.DOWN&&(l(t.x,t.y,-1),c(t.x,t.y,g,o)),null===v&&(g=S.draw_width,c(t.x,t.y,g,o))),h(t.x+g,S.text),(v=S).x=t.x,t.x+=g}v.type===e.UP?l(v.x+g,o):v.type===e.DOWN&&l(v.x+g,t.y,-1)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Vibrato=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25),s=n(41);e.Vibrato=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","Vibrato"),t.position=o.Modifier.Position.RIGHT,t.render_options={harsh:!1,vibrato_width:20,wave_height:6,wave_width:4,wave_girth:2},t.setVibratoWidth(t.render_options.vibrato_width),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"format",value:function(t,e,n){if(!t||0===t.length)return!1;var i=e.top_text_line,r=0,o=e.right_shift-7,a=n.getModifiers(s.Bend.CATEGORY);a&&a.length>0&&i--;for(var u=0;u<t.length;++u){var c=t[u];c.setXShift(o),c.setTextLine(i),o+=r+=c.getWidth()}return e.right_shift+=r,e.top_text_line+=1,!0}},{key:"CATEGORY",get:function(){return"vibratos"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setHarsh",value:function(t){return this.render_options.harsh=t,this}},{key:"setVibratoWidth",value:function(t){return this.render_options.vibrato_width=t,this.setWidth(t),this}},{key:"draw",value:function(){var t=this.checkContext();if(!this.note)throw new r.Vex.RERR("NoNoteForVibrato","Can't draw vibrato without an attached note.");this.setRendered();var n=this.note.getModifierStartXY(o.Modifier.Position.RIGHT,this.index).x+this.x_shift,i=this.note.getYForTopText(this.text_line)+2;e.renderVibrato(t,n,i,this.render_options)}}],[{key:"renderVibrato",value:function(t,e,n,i){var r=i.harsh,o=i.vibrato_width,s=i.wave_width,a=i.wave_girth,u=i.wave_height,c=o/s;t.beginPath();var l=void 0;if(r){for(t.moveTo(e,n+a+1),l=0;l<c/2;++l)t.lineTo(e+s,n-u/2),e+=s,t.lineTo(e+s,n+u/2),e+=s;for(l=0;l<c/2;++l)t.lineTo(e-s,n-u/2+a+1),e-=s,t.lineTo(e-s,n+u/2+a+1),e-=s;t.fill()}else{for(t.moveTo(e,n+a),l=0;l<c/2;++l)t.quadraticCurveTo(e+s/2,n-u/2,e+s,n),e+=s,t.quadraticCurveTo(e+s/2,n+u/2,e+s,n),e+=s;for(l=0;l<c/2;++l)t.quadraticCurveTo(e-s/2,n+u/2+a,e-s,n+a),e-=s,t.quadraticCurveTo(e-s/2,n-u/2+a,e-s,n+a),e-=s;t.fill()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Stave=void 0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(5),a=n(2),u=n(44),c=n(45),l=n(46),h=n(47),f=n(48),p=n(49),d=n(8),b=n(51),y=n(52),m=n(53),v=n(54);e.Stave=function(t){function e(t,n,i,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var s=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));s.setAttribute("type","Stave"),s.x=t,s.y=n,s.width=i,s.formatted=!1,s.start_x=t+5,s.end_x=t+i,s.modifiers=[],s.measure=0,s.clef="treble",s.font={family:"sans-serif",size:8,weight:""},s.options={vertical_bar_width:10,glyph_spacing_px:10,num_lines:5,fill_style:"#999999",left_bar:!0,right_bar:!0,spacing_between_lines_px:10,space_above_staff_ln:4,space_below_staff_ln:4,top_text_position:1},s.bounds={x:s.x,y:s.y,w:s.width,h:0},o.Vex.Merge(s.options,r),s.resetLines();var a=u.Barline.type;return s.addModifier(new u.Barline(s.options.left_bar?a.SINGLE:a.NONE)),s.addEndModifier(new u.Barline(s.options.right_bar?a.SINGLE:a.NONE)),s}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Element),r(e,[{key:"space",value:function(t){return this.options.spacing_between_lines_px*t}},{key:"resetLines",value:function(){this.options.line_config=[];for(var t=0;t<this.options.num_lines;t++)this.options.line_config.push({visible:!0});this.height=(this.options.num_lines+this.options.space_above_staff_ln)*this.options.spacing_between_lines_px,this.options.bottom_text_position=this.options.num_lines}},{key:"getOptions",value:function(){return this.options}},{key:"setNoteStartX",value:function(t){return this.formatted||this.format(),this.start_x=t,this}},{key:"getNoteStartX",value:function(){return this.formatted||this.format(),this.start_x}},{key:"getNoteEndX",value:function(){return this.formatted||this.format(),this.end_x}},{key:"getTieStartX",value:function(){return this.start_x}},{key:"getTieEndX",value:function(){return this.x+this.width}},{key:"getX",value:function(){return this.x}},{key:"getNumLines",value:function(){return this.options.num_lines}},{key:"setNumLines",value:function(t){return this.options.num_lines=parseInt(t,10),this.resetLines(),this}},{key:"setY",value:function(t){return this.y=t,this}},{key:"getTopLineTopY",value:function(){return this.getYForLine(0)-a.Flow.STAVE_LINE_THICKNESS/2}},{key:"getBottomLineBottomY",value:function(){return this.getYForLine(this.getNumLines()-1)+a.Flow.STAVE_LINE_THICKNESS/2}},{key:"setX",value:function(t){var e=t-this.x;this.formatted=!1,this.x=t,this.start_x+=e,this.end_x+=e;for(var n=0;n<this.modifiers.length;n++){var i=this.modifiers[n];void 0!==i.x&&(i.x+=e)}return this}},{key:"setWidth",value:function(t){return this.formatted=!1,this.width=t,this.end_x=this.x+t,this}},{key:"getWidth",value:function(){return this.width}},{key:"getStyle",value:function(){return i({fillStyle:this.options.fill_style,strokeStyle:this.options.fill_style,lineWidth:a.Flow.STAVE_LINE_THICKNESS},this.style||{})}},{key:"setMeasure",value:function(t){return this.measure=t,this}},{key:"getModifierXShift",value:function(){if("number"!=typeof(arguments.length<=0||void 0===arguments[0]?0:arguments[0]))throw new o.Vex.RERR("InvalidIndex","Must be of number type");if(this.formatted||this.format(),1===this.getModifiers(c.StaveModifier.Position.BEGIN).length)return 0;var t=this.start_x-this.x,e=this.modifiers[0];return e.getType()===u.Barline.type.REPEAT_BEGIN&&t>e.getWidth()&&(t-=e.getWidth()),t}},{key:"setRepetitionTypeLeft",value:function(t,e){return this.modifiers.push(new l.Repetition(t,this.x,e)),this}},{key:"setRepetitionTypeRight",value:function(t,e){return this.modifiers.push(new l.Repetition(t,this.x,e)),this}},{key:"setVoltaType",value:function(t,e,n){return this.modifiers.push(new v.Volta(t,e,this.x,n)),this}},{key:"setSection",value:function(t,e){return this.modifiers.push(new h.StaveSection(t,this.x,e)),this}},{key:"setTempo",value:function(t,e){return this.modifiers.push(new f.StaveTempo(t,this.x,e)),this}},{key:"setText",value:function(t,e,n){return this.modifiers.push(new p.StaveText(t,e,n)),this}},{key:"getHeight",value:function(){return this.height}},{key:"getSpacingBetweenLines",value:function(){return this.options.spacing_between_lines_px}},{key:"getBoundingBox",value:function(){return new d.BoundingBox(this.x,this.y,this.width,this.getBottomY()-this.y)}},{key:"getBottomY",value:function(){var t=this.options,e=t.spacing_between_lines_px;return this.getYForLine(t.num_lines)+t.space_below_staff_ln*e}},{key:"getBottomLineY",value:function(){return this.getYForLine(this.options.num_lines)}},{key:"getYForLine",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return this.y+t*n+i*n}},{key:"getLineForY",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return(t-this.y)/n-i}},{key:"getYForTopText",value:function(t){var e=t||0;return this.getYForLine(-e-this.options.top_text_position)}},{key:"getYForBottomText",value:function(t){var e=t||0;return this.getYForLine(this.options.bottom_text_position+e)}},{key:"getYForNote",value:function(t){var e=this.options,n=e.spacing_between_lines_px,i=e.space_above_staff_ln;return this.y+i*n+5*n-t*n}},{key:"getYForGlyphs",value:function(){return this.getYForLine(3)}},{key:"addModifier",value:function(t,e){return void 0!==e&&t.setPosition(e),t.setStave(this),this.formatted=!1,this.modifiers.push(t),this}},{key:"addEndModifier",value:function(t){return this.addModifier(t,c.StaveModifier.Position.END),this}},{key:"setBegBarType",value:function(t){var e=u.Barline.type,n=e.SINGLE,i=e.REPEAT_BEGIN,r=e.NONE;return t!==n&&t!==i&&t!==r||(this.modifiers[0].setType(t),this.formatted=!1),this}},{key:"setEndBarType",value:function(t){return t!==u.Barline.type.REPEAT_BEGIN&&(this.modifiers[1].setType(t),this.formatted=!1),this}},{key:"setClef",value:function(t,e,n,i){void 0===i&&(i=c.StaveModifier.Position.BEGIN),this.clef=t;var r=this.getModifiers(i,b.Clef.CATEGORY);return 0===r.length?this.addClef(t,e,n,i):r[0].setType(t,e,n),this}},{key:"setEndClef",value:function(t,e,n){return this.setClef(t,e,n,c.StaveModifier.Position.END),this}},{key:"setKeySignature",value:function(t,e,n){void 0===n&&(n=c.StaveModifier.Position.BEGIN);var i=this.getModifiers(n,y.KeySignature.CATEGORY);return 0===i.length?this.addKeySignature(t,e,n):i[0].setKeySig(t,e),this}},{key:"setEndKeySignature",value:function(t,e){return this.setKeySignature(t,e,c.StaveModifier.Position.END),this}},{key:"setTimeSignature",value:function(t,e,n){void 0===n&&(n=c.StaveModifier.Position.BEGIN);var i=this.getModifiers(n,m.TimeSignature.CATEGORY);return 0===i.length?this.addTimeSignature(t,e,n):i[0].setTimeSig(t),this}},{key:"setEndTimeSignature",value:function(t,e){return this.setTimeSignature(t,e,c.StaveModifier.Position.END),this}},{key:"addKeySignature",value:function(t,e,n){return this.addModifier(new y.KeySignature(t,e),n),this}},{key:"addClef",value:function(t,e,n,i){return void 0!==i&&i!==c.StaveModifier.Position.BEGIN||(this.clef=t),this.addModifier(new b.Clef(t,e,n),i),this}},{key:"addEndClef",value:function(t,e,n){return this.addClef(t,e,n,c.StaveModifier.Position.END),this}},{key:"addTimeSignature",value:function(t,e,n){return this.addModifier(new m.TimeSignature(t,e),n),this}},{key:"addEndTimeSignature",value:function(t,e){return this.addTimeSignature(t,e,c.StaveModifier.Position.END),this}},{key:"addTrebleGlyph",value:function(){return this.addClef("treble"),this}},{key:"getModifiers",value:function(t,e){return void 0===t?this.modifiers:this.modifiers.filter(function(n){return t===n.getPosition()&&(void 0===e||e===n.getCategory())})}},{key:"sortByCategory",value:function(t,e){for(var n=t.length-1;n>=0;n--)for(var i=0;i<n;i++)if(e[t[i].getCategory()]>e[t[i+1].getCategory()]){var r=t[i];t[i]=t[i+1],t[i+1]=r}}},{key:"format",value:function(){var t=this.modifiers[0],e=this.modifiers[1],n=this.getModifiers(c.StaveModifier.Position.BEGIN),i=this.getModifiers(c.StaveModifier.Position.END);this.sortByCategory(n,{barlines:0,clefs:1,keysignatures:2,timesignatures:3}),this.sortByCategory(i,{timesignatures:0,keysignatures:1,barlines:2,clefs:3}),n.length>1&&t.getType()===u.Barline.type.REPEAT_BEGIN&&(n.push(n.splice(0,1)[0]),n.splice(0,0,new u.Barline(u.Barline.type.SINGLE))),i.indexOf(e)>0&&i.splice(0,0,new u.Barline(u.Barline.type.NONE));for(var r=void 0,o=void 0,s=void 0,a=0,l=this.x,h=0;h<n.length;h++)o=(s=n[h]).getPadding(h+a),r=s.getWidth(),l+=o,s.setX(l),l+=r,o+r===0&&a--;this.start_x=l,l=this.x+this.width;for(var f=0;f<i.length;f++)l-=(s=i[f]).getPadding(f),0!==f&&(l-=s.getWidth()),s.setX(l),0===f&&(l-=s.getWidth());this.end_x=1===i.length?this.x+this.width:l,this.formatted=!0}},{key:"draw",value:function(){this.checkContext(),this.setRendered(),this.formatted||this.format();for(var t=this.options.num_lines,e=this.width,n=this.x,i=void 0,r=0;r<t;r++)i=this.getYForLine(r),this.applyStyle(),this.options.line_config[r].visible&&(this.context.beginPath(),this.context.moveTo(n,i),this.context.lineTo(n+e,i),this.context.stroke()),this.restoreStyle();for(var o=0;o<this.modifiers.length;o++)"function"==typeof this.modifiers[o].draw&&this.modifiers[o].draw(this,this.getModifierXShift(o));if(this.measure>0){this.context.save(),this.context.setFont(this.font.family,this.font.size,this.font.weight);var s=this.context.measureText(""+this.measure).width;i=this.getYForTopText(0)+3,this.context.fillText(""+this.measure,this.x-s/2,i),this.context.restore()}return this}},{key:"drawVertical",value:function(t,e){this.drawVerticalFixed(this.x+t,e)}},{key:"drawVerticalFixed",value:function(t,e){this.checkContext();var n=this.getYForLine(0),i=this.getYForLine(this.options.num_lines-1);e&&this.context.fillRect(t-3,n,1,i-n+1),this.context.fillRect(t,n,1,i-n+1)}},{key:"drawVerticalBar",value:function(t){this.drawVerticalBarFixed(this.x+t,!1)}},{key:"drawVerticalBarFixed",value:function(t){this.checkContext();var e=this.getYForLine(0),n=this.getYForLine(this.options.num_lines-1);this.context.fillRect(t,e,1,n-e+1)}},{key:"getConfigForLines",value:function(){return this.options.line_config}},{key:"setConfigForLine",value:function(t,e){if(t>=this.options.num_lines||t<0)throw new o.Vex.RERR("StaveConfigError","The line number must be within the range of the number of lines in the Stave.");if(void 0===e.visible)throw new o.Vex.RERR("StaveConfigError","The line configuration object is missing the 'visible' property.");if("boolean"!=typeof e.visible)throw new o.Vex.RERR("StaveConfigError","The line configuration objects 'visible' property must be true or false.");return this.options.line_config[t]=e,this}},{key:"setConfigForLines",value:function(t){if(t.length!==this.options.num_lines)throw new o.Vex.RERR("StaveConfigError","The length of the lines configuration array must match the number of lines in the Stave");for(var e in t)t[e]||(t[e]=this.options.line_config[e]),o.Vex.Merge(this.options.line_config[e],t[e]);return this.options.line_config=t,this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Barline=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(2),o=n(45);e.Barline=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));n.setAttribute("type","Barline"),n.thickness=r.Flow.STAVE_LINE_THICKNESS;var i=e.type;return n.widths={},n.widths[i.SINGLE]=5,n.widths[i.DOUBLE]=5,n.widths[i.END]=5,n.widths[i.REPEAT_BEGIN]=5,n.widths[i.REPEAT_END]=5,n.widths[i.REPEAT_BOTH]=5,n.widths[i.NONE]=5,n.paddings={},n.paddings[i.SINGLE]=0,n.paddings[i.DOUBLE]=0,n.paddings[i.END]=0,n.paddings[i.REPEAT_BEGIN]=15,n.paddings[i.REPEAT_END]=15,n.paddings[i.REPEAT_BOTH]=15,n.paddings[i.NONE]=0,n.setPosition(o.StaveModifier.Position.BEGIN),n.setType(t),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"barlines"}},{key:"type",get:function(){return{SINGLE:1,DOUBLE:2,END:3,REPEAT_BEGIN:4,REPEAT_END:5,REPEAT_BOTH:6,NONE:7}}},{key:"typeString",get:function(){return{single:e.type.SINGLE,double:e.type.DOUBLE,end:e.type.END,repeatBegin:e.type.REPEAT_BEGIN,repeatEnd:e.type.REPEAT_END,repeatBoth:e.type.REPEAT_BOTH,none:e.type.NONE}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"getType",value:function(){return this.type}},{key:"setType",value:function(t){return this.type="string"==typeof t?e.typeString[t]:t,this.setWidth(this.widths[this.type]),this.setPadding(this.paddings[this.type]),this}},{key:"draw",value:function(t){switch(t.checkContext(),this.setRendered(),this.type){case e.type.SINGLE:this.drawVerticalBar(t,this.x,!1);break;case e.type.DOUBLE:this.drawVerticalBar(t,this.x,!0);break;case e.type.END:this.drawVerticalEndBar(t,this.x);break;case e.type.REPEAT_BEGIN:this.drawRepeatBar(t,this.x,!0),t.getX()!==this.x&&this.drawVerticalBar(t,t.getX());break;case e.type.REPEAT_END:this.drawRepeatBar(t,this.x,!1);break;case e.type.REPEAT_BOTH:this.drawRepeatBar(t,this.x,!1),this.drawRepeatBar(t,this.x,!0)}}},{key:"drawVerticalBar",value:function(t,e,n){t.checkContext();var i=t.getTopLineTopY(),r=t.getBottomLineBottomY();n&&t.context.fillRect(e-3,i,1,r-i),t.context.fillRect(e,i,1,r-i)}},{key:"drawVerticalEndBar",value:function(t,e){t.checkContext();var n=t.getTopLineTopY(),i=t.getBottomLineBottomY();t.context.fillRect(e-5,n,1,i-n),t.context.fillRect(e-2,n,3,i-n)}},{key:"drawRepeatBar",value:function(t,e,n){t.checkContext();var i=t.getTopLineTopY(),r=t.getBottomLineBottomY(),o=3;n||(o=-5),t.context.fillRect(e+o,i,1,r-i),t.context.fillRect(e-2,i,3,r-i);n?o+=4:o-=4;var s=e+o+1,a=(t.getNumLines()-1)*t.getSpacingBetweenLines(),u=i+(a=a/2-t.getSpacingBetweenLines()/2)+1;t.context.beginPath(),t.context.arc(s,u,2,0,2*Math.PI,!1),t.context.fill(),u+=t.getSpacingBetweenLines(),t.context.beginPath(),t.context.arc(s,u,2,0,2*Math.PI,!1),t.context.fill()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveModifier=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(5);e.StaveModifier=function(t){function e(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return t.setAttribute("type","StaveModifier"),t.padding=10,t.position=e.Position.ABOVE,t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.Element),i(e,null,[{key:"Position",get:function(){return{LEFT:1,RIGHT:2,ABOVE:3,BELOW:4,BEGIN:5,END:6}}}]),i(e,[{key:"getPosition",value:function(){return this.position}},{key:"setPosition",value:function(t){return this.position=t,this}},{key:"getStave",value:function(){return this.stave}},{key:"setStave",value:function(t){return this.stave=t,this}},{key:"getWidth",value:function(){return this.width}},{key:"setWidth",value:function(t){return this.width=t,this}},{key:"getX",value:function(){return this.x}},{key:"setX",value:function(t){return this.x=t,this}},{key:"getCategory",value:function(){return""}},{key:"makeSpacer",value:function(t){return{getContext:function(){return!0},setStave:function(){},renderToStave:function(){},getMetrics:function(){return{width:t}}}}},{key:"placeGlyphOnLine",value:function(t,e,n){t.setYShift(e.getYForLine(n)-e.getYForGlyphs())}},{key:"getPadding",value:function(t){return void 0!==t&&t<2?0:this.padding}},{key:"setPadding",value:function(t){return this.padding=t,this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Repetition=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(45),o=n(4);e.Repetition=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","Repetition"),r.symbol_type=t,r.x=n,r.x_shift=0,r.y_shift=i,r.font={family:"times",size:12,weight:"bold italic"},r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"repetitions"}},{key:"type",get:function(){return{NONE:1,CODA_LEFT:2,CODA_RIGHT:3,SEGNO_LEFT:4,SEGNO_RIGHT:5,DC:6,DC_AL_CODA:7,DC_AL_FINE:8,DS:9,DS_AL_CODA:10,DS_AL_FINE:11,FINE:12}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setShiftX",value:function(t){return this.x_shift=t,this}},{key:"setShiftY",value:function(t){return this.y_shift=t,this}},{key:"draw",value:function(t,n){switch(this.setRendered(),this.symbol_type){case e.type.CODA_RIGHT:this.drawCodaFixed(t,n+t.width);break;case e.type.CODA_LEFT:this.drawSymbolText(t,n,"Coda",!0);break;case e.type.SEGNO_LEFT:this.drawSignoFixed(t,n);break;case e.type.SEGNO_RIGHT:this.drawSignoFixed(t,n+t.width);break;case e.type.DC:this.drawSymbolText(t,n,"D.C.",!1);break;case e.type.DC_AL_CODA:this.drawSymbolText(t,n,"D.C. al",!0);break;case e.type.DC_AL_FINE:this.drawSymbolText(t,n,"D.C. al Fine",!1);break;case e.type.DS:this.drawSymbolText(t,n,"D.S.",!1);break;case e.type.DS_AL_CODA:this.drawSymbolText(t,n,"D.S. al",!0);break;case e.type.DS_AL_FINE:this.drawSymbolText(t,n,"D.S. al Fine",!1);break;case e.type.FINE:this.drawSymbolText(t,n,"Fine",!1)}return this}},{key:"drawCodaFixed",value:function(t,e){var n=t.getYForTopText(t.options.num_lines)+this.y_shift;return o.Glyph.renderGlyph(t.context,this.x+e+this.x_shift,n+25,40,"v4d",!0),this}},{key:"drawSignoFixed",value:function(t,e){var n=t.getYForTopText(t.options.num_lines)+this.y_shift;return o.Glyph.renderGlyph(t.context,this.x+e+this.x_shift,n+25,30,"v8c",!0),this}},{key:"drawSymbolText",value:function(t,n,i,r){var s=t.checkContext();s.save(),s.setFont(this.font.family,this.font.size,this.font.weight);var a=0+this.x_shift,u=n+this.x_shift;this.symbol_type===e.type.CODA_LEFT?u=(a=this.x+t.options.vertical_bar_width)+s.measureText(i).width+12:a=(u=this.x+n+t.width-5+this.x_shift)-+s.measureText(i).width-12;var c=t.getYForTopText(t.options.num_lines)+this.y_shift;return r&&o.Glyph.renderGlyph(s,u,c,40,"v4d",!0),s.fillText(i,a,c+5),s.restore(),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveSection=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(45);e.StaveSection=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","StaveSection"),r.setWidth(16),r.section=t,r.x=n,r.shift_x=0,r.shift_y=i,r.font={family:"sans-serif",size:12,weight:"bold"},r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"stavesection"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setStaveSection",value:function(t){return this.section=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"draw",value:function(t,e){var n=t.checkContext();this.setRendered(),n.save(),n.lineWidth=2,n.setFont(this.font.family,this.font.size,this.font.weight);var i=n.measureText(""+this.section).width,r=i+6;r<18&&(r=18);var o=t.getYForTopText(3)+this.shift_y,s=this.x+e;return n.beginPath(),n.lineWidth=2,n.rect(s,o,r,20),n.stroke(),s+=(r-i)/2,n.fillText(""+this.section,s,o+16),n.restore(),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveTempo=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(2),o=n(25),s=n(45),a=n(4);e.StaveTempo=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","StaveTempo"),r.tempo=t,r.position=o.Modifier.Position.ABOVE,r.x=n,r.shift_x=10,r.shift_y=i,r.font={family:"times",size:14,weight:"bold"},r.render_options={glyph_font_scale:30},r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"stavetempo"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setTempo",value:function(t){return this.tempo=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"draw",value:function(t,e){var n=t.checkContext();this.setRendered();var i=this.render_options,o=i.glyph_font_scale/38,s=this.tempo.name,u=this.tempo.duration,c=this.tempo.dots,l=this.tempo.bpm,h=this.font,f=this.x+this.shift_x+e,p=t.getYForTopText(1)+this.shift_y;if(n.save(),s&&(n.setFont(h.family,h.size,h.weight),n.fillText(s,f,p),f+=n.measureText(s).width),u&&l){n.setFont(h.family,h.size,"normal"),s&&(f+=n.measureText(" ").width,n.fillText("(",f,p),f+=n.measureText("(").width);var d=r.Flow.durationToGlyph(u);if(f+=3*o,a.Glyph.renderGlyph(n,f,p,i.glyph_font_scale,d.code_head),f+=d.getWidth()*o,d.stem){var b=30;d.beam_count&&(b+=3*(d.beam_count-1));var y=p-(b*=o);n.fillRect(f-o,y,o,b),d.flag&&(a.Glyph.renderGlyph(n,f,y,i.glyph_font_scale,d.code_flag_upstem),c||(f+=6*o))}for(var m=0;m<c;m++)f+=6*o,n.beginPath(),n.arc(f,p+2*o,2*o,0,2*Math.PI,!1),n.fill();n.fillText(" = "+l+(s?")":""),f+3*o,p)}return n.restore(),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveText=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(45),s=n(50);e.StaveText=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var o=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.setAttribute("type","StaveText"),o.setWidth(16),o.text=t,o.position=n,o.options={shift_x:0,shift_y:0,justification:s.TextNote.Justification.CENTER},r.Vex.Merge(o.options,i),o.font={family:"times",size:16,weight:"normal"},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"stavetext"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setStaveText",value:function(t){return this.text=t,this}},{key:"setShiftX",value:function(t){return this.shift_x=t,this}},{key:"setShiftY",value:function(t){return this.shift_y=t,this}},{key:"setFont",value:function(t){r.Vex.Merge(this.font,t)}},{key:"setText",value:function(t){this.text=t}},{key:"draw",value:function(t){var e=t.checkContext();this.setRendered(),e.save(),e.lineWidth=2,e.setFont(this.font.family,this.font.size,this.font.weight);var n=e.measureText(""+this.text).width,i=void 0,a=void 0,u=o.StaveModifier.Position,c=s.TextNote.Justification;switch(this.position){case u.LEFT:case u.RIGHT:a=(t.getYForLine(0)+t.getBottomLineY())/2+this.options.shift_y,i=this.position===u.LEFT?t.getX()-n-24+this.options.shift_x:t.getX()+t.getWidth()+24+this.options.shift_x;break;case u.ABOVE:case u.BELOW:i=t.getX()+this.options.shift_x,this.options.justification===c.CENTER?i+=t.getWidth()/2-n/2:this.options.justification===c.RIGHT&&(i+=t.getWidth()-n),a=this.position===u.ABOVE?t.getYForTopText(2)+this.options.shift_y:t.getYForBottomText(2)+this.options.shift_y;break;default:throw new r.Vex.RERR("InvalidPosition","Value Must be in Modifier.Position.")}return e.fillText(""+this.text,i,a+4),e.restore(),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(22),a=n(4);e.TextNote=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));if(n.setAttribute("type","TextNote"),n.text=t.text,n.superscript=t.superscript,n.subscript=t.subscript,n.glyph_type=t.glyph,n.glyph=null,n.font={family:"Arial",size:12,weight:""},t.font&&(n.font=t.font),n.glyph_type){var i=e.GLYPHS[n.glyph_type];if(!i)throw new r.Vex.RERR("Invalid glyph type: "+n.glyph_type);n.glyph=new a.Glyph(i.code,i.point,{cache:!1}),i.width?n.setWidth(i.width):n.setWidth(n.glyph.getMetrics().width),n.glyph_struct=i}else n.setWidth(o.Flow.textWidth(n.text));return n.line=t.line||0,n.smooth=t.smooth||!1,n.ignore_ticks=t.ignore_ticks||!1,n.justification=e.Justification.LEFT,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Note),i(e,null,[{key:"Justification",get:function(){return{LEFT:1,CENTER:2,RIGHT:3}}},{key:"GLYPHS",get:function(){return{segno:{code:"v8c",point:40,x_shift:0,y_shift:-10},tr:{code:"v1f",point:40,x_shift:0,y_shift:0},mordent_upper:{code:"v1e",point:40,x_shift:0,y_shift:0},mordent_lower:{code:"v45",point:40,x_shift:0,y_shift:0},f:{code:"vba",point:40,x_shift:0,y_shift:0},p:{code:"vbf",point:40,x_shift:0,y_shift:0},m:{code:"v62",point:40,x_shift:0,y_shift:0},s:{code:"v4a",point:40,x_shift:0,y_shift:0},z:{code:"v80",point:40,x_shift:0,y_shift:0},coda:{code:"v4d",point:40,x_shift:0,y_shift:-8},pedal_open:{code:"v36",point:40,x_shift:0,y_shift:0},pedal_close:{code:"v5d",point:40,x_shift:0,y_shift:3},caesura_straight:{code:"v34",point:40,x_shift:0,y_shift:2},caesura_curved:{code:"v4b",point:40,x_shift:0,y_shift:2},breath:{code:"v6c",point:40,x_shift:0,y_shift:0},tick:{code:"v6f",point:50,x_shift:0,y_shift:0},turn:{code:"v72",point:40,x_shift:0,y_shift:0},turn_inverted:{code:"v33",point:40,x_shift:0,y_shift:0},mordent:{code:"v1e",point:40,x_shift:0,y_shift:0}}}}]),i(e,[{key:"setJustification",value:function(t){return this.justification=t,this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"preFormat",value:function(){this.checkContext(),this.preFormatted||(this.smooth?this.setWidth(0):this.glyph||this.setWidth(this.context.measureText(this.text).width),this.justification===e.Justification.CENTER?this.extraLeftPx=this.width/2:this.justification===e.Justification.RIGHT&&(this.extraLeftPx=this.width),this.setPreFormatted(!0))}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new r.Vex.RERR("NoStave","Can't draw without a stave.");this.setRendered();var t=this.context,n=this.getAbsoluteX();this.justification===e.Justification.CENTER?n-=this.getWidth()/2:this.justification===e.Justification.RIGHT&&(n-=this.getWidth());var i=void 0;if(this.glyph)i=this.stave.getYForLine(this.line+-3),this.glyph.render(this.context,n+this.glyph_struct.x_shift,i+this.glyph_struct.y_shift);else{i=this.stave.getYForLine(this.line+-3),t.save(),t.setFont(this.font.family,this.font.size,this.font.weight),t.fillText(this.text,n,i);var o=t.measureText("M").width,s=t.measureText(this.text).width;this.superscript&&(t.setFont(this.font.family,this.font.size/1.3,this.font.weight),t.fillText(this.superscript,n+s+2,i-o/2.2)),this.subscript&&(t.setFont(this.font.family,this.font.size/1.3,this.font.weight),t.fillText(this.subscript,n+s+2,i+o/2.2-1)),t.restore()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Clef=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(45),s=n(4);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.Clef",e)}var u=e.Clef=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","Clef"),r.setPosition(o.StaveModifier.Position.BEGIN),r.setType(t,n,i),r.setWidth(r.glyph.getMetrics().width),a("Creating clef:",t),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"clefs"}},{key:"types",get:function(){return{treble:{code:"v83",line:3},bass:{code:"v79",line:1},alto:{code:"vad",line:2},tenor:{code:"vad",line:1},percussion:{code:"v59",line:2},soprano:{code:"vad",line:4},"mezzo-soprano":{code:"vad",line:3},"baritone-c":{code:"vad",line:0},"baritone-f":{code:"v79",line:2},subbass:{code:"v79",line:0},french:{code:"v83",line:4},tab:{code:"v2f"}}}},{key:"sizes",get:function(){return{default:40,small:32}}},{key:"annotations",get:function(){return{"8va":{code:"v8",sizes:{default:{point:20,attachments:{treble:{line:-1.2,x_shift:11}}},small:{point:18,attachments:{treble:{line:-.4,x_shift:8}}}}},"8vb":{code:"v8",sizes:{default:{point:20,attachments:{treble:{line:6.3,x_shift:10},bass:{line:4,x_shift:1}}},small:{point:18,attachments:{treble:{line:5.8,x_shift:6},bass:{line:3.5,x_shift:.5}}}}}}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setType",value:function(t,n,i){if(this.type=t,this.clef=e.types[t],this.size=void 0===n?"default":n,this.clef.point=e.sizes[this.size],this.glyph=new s.Glyph(this.clef.code,this.clef.point),void 0!==i){var r=e.annotations[i];this.annotation={code:r.code,point:r.sizes[this.size].point,line:r.sizes[this.size].attachments[this.type].line,x_shift:r.sizes[this.size].attachments[this.type].x_shift},this.attachment=new s.Glyph(this.annotation.code,this.annotation.point),this.attachment.metrics.x_max=0,this.attachment.setXShift(this.annotation.x_shift)}else this.annotation=void 0;return this}},{key:"getWidth",value:function(){if("tab"===this.type&&!this.stave)throw new r.Vex.RERR("ClefError","Can't get width without stave.");return this.width}},{key:"setStave",value:function(t){if(this.stave=t,"tab"!==this.type)return this;var e=void 0,n=void 0,i=this.stave.getOptions().num_lines;switch(i){case 8:e=55,n=14;break;case 7:e=47,n=8;break;case 6:e=40,n=1;break;case 5:e=30,n=-6;break;case 4:e=23,n=-12;break;default:throw new r.Vex.RERR("ClefError","Invalid number of lines: "+i)}return this.glyph.setPoint(e),this.glyph.setYShift(n),this}},{key:"draw",value:function(){if(!this.x)throw new r.Vex.RERR("ClefError","Can't draw clef without x.");if(!this.stave)throw new r.Vex.RERR("ClefError","Can't draw clef without stave.");this.setRendered(),this.glyph.setStave(this.stave),this.glyph.setContext(this.stave.context),void 0!==this.clef.line&&this.placeGlyphOnLine(this.glyph,this.stave,this.clef.line),this.glyph.renderToStave(this.x),void 0!==this.annotation&&(this.placeGlyphOnLine(this.attachment,this.stave,this.annotation.line),this.attachment.setStave(this.stave),this.attachment.setContext(this.stave.context),this.attachment.renderToStave(this.x))}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.KeySignature=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(45),a=n(4);e.KeySignature=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return r.setAttribute("type","KeySignature"),r.setKeySig(t,n,i),r.setPosition(s.StaveModifier.Position.BEGIN),r.glyphFontScale=38,r.glyphs=[],r.xPositions=[],r.paddingForced=!1,r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"keysignatures"}},{key:"accidentalSpacing",get:function(){return{"#":{above:6,below:4},b:{above:4,below:7},n:{above:4,below:1},"##":{above:6,below:4},bb:{above:4,below:7},db:{above:4,below:7},d:{above:4,below:7},bbs:{above:4,below:7},"++":{above:6,below:4},"+":{above:6,below:4},"+-":{above:6,below:4},"++-":{above:6,below:4},bs:{above:4,below:10},bss:{above:4,below:10}}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"convertToGlyph",value:function(t,n){var i=o.Flow.accidentalCodes(t.type),r=new a.Glyph(i.code,this.glyphFontScale),s=1;if("n"===t.type&&n){var u=e.accidentalSpacing[n.type];if(u)s=n.line>=t.line?u.above:u.below}this.placeGlyphOnLine(r,this.stave,t.line),this.glyphs.push(r);var c=this.xPositions[this.xPositions.length-1],l=r.getMetrics().width+s;this.xPositions.push(c+l),this.width+=l}},{key:"cancelKey",value:function(t){return this.formatted=!1,this.cancelKeySpec=t,this}},{key:"convertToCancelAccList",value:function(t){var e=o.Flow.keySignature(t),n=this.accList.length>0&&e.length>0&&e[0].type!==this.accList[0].type,i=n?e.length:e.length-this.accList.length;if(!(i<1)){for(var r=[],s=0;s<i;s++){var a=s;n||(a=e.length-i+s);var u=e[a];r.push({type:"n",line:u.line})}this.accList=r.concat(this.accList)}}},{key:"addToStave",value:function(t){return this.paddingForced=!0,t.addModifier(this),this}},{key:"convertAccLines",value:function(t,e){var n=0,i=void 0;switch(t){case"soprano":"#"===e?i=[2.5,.5,2,0,1.5,-.5,1]:n=-1;break;case"mezzo-soprano":"b"===e?i=[0,2,.5,2.5,1,3,1.5]:n=1.5;break;case"alto":n=.5;break;case"tenor":"#"===e?i=[3,1,2.5,.5,2,0,1.5]:n=-.5;break;case"baritone-f":case"baritone-c":"b"===e?i=[.5,2.5,1,3,1.5,3.5,2]:n=2;break;case"bass":case"french":n=1}var r=void 0;if(void 0!==i)for(r=0;r<this.accList.length;++r)this.accList[r].line=i[r];else if(0!==n)for(r=0;r<this.accList.length;++r)this.accList[r].line+=n}},{key:"getPadding",value:function(t){return this.formatted||this.format(),0===this.glyphs.length||!this.paddingForced&&t<2?0:this.padding}},{key:"getWidth",value:function(){return this.formatted||this.format(),this.width}},{key:"setKeySig",value:function(t,e,n){return this.formatted=!1,this.keySpec=t,this.cancelKeySpec=e,this.alterKeySpec=n,this}},{key:"alterKey",value:function(t){return this.formatted=!1,this.alterKeySpec=t,this}},{key:"convertToAlterAccList",value:function(t){for(var e=Math.min(t.length,this.accList.length),n=0;n<e;++n)t[n]&&(this.accList[n].type=t[n])}},{key:"format",value:function(){if(!this.stave)throw new r.Vex.RERR("KeySignatureError","Can't draw key signature without stave.");this.width=0,this.glyphs=[],this.xPositions=[0],this.accList=o.Flow.keySignature(this.keySpec),this.cancelKeySpec&&this.convertToCancelAccList(this.cancelKeySpec);var t=this.accList.length>0?this.accList[0].type:null;if(this.alterKeySpec&&this.convertToAlterAccList(this.alterKeySpec),this.accList.length>0){this.convertAccLines(this.stave.clef,t);for(var e=0;e<this.accList.length;++e)this.convertToGlyph(this.accList[e],this.accList[e+1])}this.formatted=!0}},{key:"draw",value:function(){if(!this.x)throw new r.Vex.RERR("KeySignatureError","Can't draw key signature without x.");if(!this.stave)throw new r.Vex.RERR("KeySignatureError","Can't draw key signature without stave.");this.formatted||this.format(),this.setRendered();for(var t=0;t<this.glyphs.length;t++){var e=this.glyphs[t],n=this.x+this.xPositions[t];e.setStave(this.stave),e.setContext(this.stave.context),e.renderToStave(n)}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TimeSignature=void 0;var i=function(){return function(t,e){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,e){var n=[],i=!0,r=!1,o=void 0;try{for(var s,a=t[Symbol.iterator]();!(i=(s=a.next()).done)&&(n.push(s.value),!e||n.length!==e);i=!0);}catch(t){r=!0,o=t}finally{try{!i&&a.return&&a.return()}finally{if(r)throw o}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(4),a=n(45);function u(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}e.TimeSignature=function(t){function e(){var t=arguments.length<=0||void 0===arguments[0]?null:arguments[0],n=arguments.length<=1||void 0===arguments[1]?15:arguments[1];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=u(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));if(i.setAttribute("type","TimeSignature"),null===t)return u(i);var r=n;return i.point=40,i.topLine=2,i.bottomLine=4,i.setPosition(a.StaveModifier.Position.BEGIN),i.setTimeSig(t),i.setWidth(i.timeSig.glyph.getMetrics().width),i.setPadding(r),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.StaveModifier),r(e,null,[{key:"CATEGORY",get:function(){return"timesignatures"}},{key:"glyphs",get:function(){return{C:{code:"v41",point:40,line:2},"C|":{code:"vb6",point:40,line:2}}}}]),r(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"parseTimeSpec",value:function(t){if("C"===t||"C|"===t){var n=e.glyphs[t],r=n.line,a=n.code,u=n.point;return{line:r,num:!1,glyph:new s.Glyph(a,u)}}!function(t){var e=t.split("/").filter(function(t){return""!==t});if(2!==e.length)throw new o.Vex.RERR("BadTimeSignature","Invalid time spec: "+t+'. Must be in the form "<numerator>/<denominator>"');e.forEach(function(e){if(isNaN(Number(e)))throw new o.Vex.RERR("BadTimeSignature","Invalid time spec: "+t+". Must contain two valid numbers.")})}(t);var c=t.split("/").map(function(t){return t.split("")}),l=i(c,2),h=l[0],f=l[1];return{num:!0,glyph:this.makeTimeSignatureGlyph(h,f)}}},{key:"makeTimeSignatureGlyph",value:function(t,e){var n=new s.Glyph("v0",this.point);n.topGlyphs=[],n.botGlyphs=[];for(var i=0,r=0;r<t.length;++r){var o=t[r],a=new s.Glyph("v"+o,this.point);n.topGlyphs.push(a),i+=a.getMetrics().width}for(var u=0,c=0;c<e.length;++c){var l=e[c],h=new s.Glyph("v"+l,this.point);n.botGlyphs.push(h),u+=h.getMetrics().width}var f=i>u?i:u,p=n.getMetrics().x_min;n.getMetrics=function(){return{x_min:p,x_max:p+f,width:f}};var d=(f-i)/2,b=(f-u)/2,y=this;return n.renderToStave=function(t){for(var e=t+d,n=0;n<this.topGlyphs.length;++n){var i=this.topGlyphs[n];s.Glyph.renderOutline(this.context,i.metrics.outline,i.scale,e+i.x_shift,this.stave.getYForLine(y.topLine)+1),e+=i.getMetrics().width}e=t+b;for(var r=0;r<this.botGlyphs.length;++r){var o=this.botGlyphs[r];y.placeGlyphOnLine(o,this.stave,o.line),s.Glyph.renderOutline(this.context,o.metrics.outline,o.scale,e+o.x_shift,this.stave.getYForLine(y.bottomLine)+1),e+=o.getMetrics().width}},n}},{key:"getTimeSig",value:function(){return this.timeSig}},{key:"setTimeSig",value:function(t){return this.timeSig=this.parseTimeSpec(t),this}},{key:"draw",value:function(){if(!this.x)throw new o.Vex.RERR("TimeSignatureError","Can't draw time signature without x.");if(!this.stave)throw new o.Vex.RERR("TimeSignatureError","Can't draw time signature without stave.");this.setRendered(),this.timeSig.glyph.setStave(this.stave),this.timeSig.glyph.setContext(this.stave.context),this.placeGlyphOnLine(this.timeSig.glyph,this.stave,this.timeSig.line),this.timeSig.glyph.renderToStave(this.x)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Volta=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(45);e.Volta=function(t){function e(t,n,i,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var o=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.setAttribute("type","Volta"),o.volta=t,o.x=i,o.y_shift=r,o.number=n,o.font={family:"sans-serif",size:9,weight:"bold"},o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,r.StaveModifier),i(e,null,[{key:"CATEGORY",get:function(){return"voltas"}},{key:"type",get:function(){return{NONE:1,BEGIN:2,MID:3,END:4,BEGIN_END:5}}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setShiftY",value:function(t){return this.y_shift=t,this}},{key:"draw",value:function(t,n){var i=t.checkContext();this.setRendered();var r=t.width,o=t.getYForTopText(t.options.num_lines)+this.y_shift,s=1.5*t.options.spacing_between_lines_px;switch(this.volta){case e.type.BEGIN:i.fillRect(this.x+n,o,1,s);break;case e.type.END:r-=5,i.fillRect(this.x+n+r,o,1,s);break;case e.type.BEGIN_END:r-=3,i.fillRect(this.x+n,o,1,s),i.fillRect(this.x+n+r,o,1,s)}return this.volta!==e.type.BEGIN&&this.volta!==e.type.BEGIN_END||(i.save(),i.setFont(this.font.family,this.font.size,this.font.weight),i.fillText(this.number,this.x+n+5,o+15),i.restore()),i.fillRect(this.x+n,o,r,1),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TabStave=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(43);e.TabStave=function(t){function e(t,n,i,o){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var s={spacing_between_lines_px:13,num_lines:6,top_text_position:1};r.Vex.Merge(s,o);var a=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,n,i,s));return a.setAttribute("type","TabStave"),a}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Stave),i(e,[{key:"getYForGlyphs",value:function(){return this.getYForLine(2.5)}},{key:"addTabGlyph",value:function(){return this.addClef("tab"),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TabNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2),s=n(25),a=n(17),u=n(24),c=n(26),l=n(4);e.TabNote=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));if(i.setAttribute("type","TabNote"),i.ghost=!1,i.positions=t.positions,r.Vex.Merge(i.render_options,{glyph_font_scale:o.Flow.DEFAULT_TABLATURE_FONT_SCALE,draw_stem:n,draw_dots:n,draw_stem_through_stave:!1,y_shift:0,scale:1,font:"10pt Arial"}),i.glyph=o.Flow.durationToGlyph(i.duration,i.noteType),!i.glyph)throw new r.Vex.RuntimeError("BadArguments","Invalid note initialization data (No glyph found): "+JSON.stringify(t));return i.buildStem(),t.stem_direction?i.setStemDirection(t.stem_direction):i.setStemDirection(a.Stem.UP),i.ghost=!1,i.updateWidth(),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,u.StemmableNote),i(e,null,[{key:"CATEGORY",get:function(){return"tabnotes"}}]),i(e,[{key:"reset",value:function(){this.stave&&this.setStave(this.stave)}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"setGhost",value:function(t){return this.ghost=t,this.updateWidth(),this}},{key:"hasStem",value:function(){return this.render_options.draw_stem}},{key:"getStemExtension",value:function(){var t=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:t?1===this.getStemDirection()?t.tabnote_stem_up_extension:t.tabnote_stem_down_extension:0}},{key:"addDot",value:function(){var t=new c.Dot;return this.dots+=1,this.addModifier(t,0)}},{key:"updateWidth",value:function(){var t=this;this.glyphs=[],this.width=0;for(var e=0;e<this.positions.length;++e){var n=this.positions[e].fret;this.ghost&&(n="("+n+")");var i=o.Flow.tabToGlyph(n,this.render_options.scale);this.glyphs.push(i),this.width=Math.max(i.getWidth(),this.width)}this.glyph.getWidth=function(){return t.width}}},{key:"setStave",value:function(t){var n=this;(function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0})(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setStave",this).call(this,t),this.context=t.context;var i=void 0;if(this.context){var r=this.context;this.width=0;var o=function(){var t=n.glyphs[i],e=""+t.text;"X"!==e.toUpperCase()&&(r.save(),r.setRawFont(n.render_options.font),t.width=r.measureText(e).width,r.restore(),t.getWidth=function(){return t.width}),n.width=Math.max(t.getWidth(),n.width)};for(i=0;i<this.glyphs.length;++i)o();this.glyph.getWidth=function(){return n.width}}var s=this.positions.map(function(e){var n=e.str;return t.getYForLine(n-1)});return this.setYs(s),this.stem&&this.stem.setYBounds(this.getStemY(),this.getStemY()),this}},{key:"getPositions",value:function(){return this.positions}},{key:"addToModifierContext",value:function(t){this.setModifierContext(t);for(var e=0;e<this.modifiers.length;++e)this.modifierContext.addModifier(this.modifiers[e]);return this.modifierContext.addModifier(this),this.preFormatted=!1,this}},{key:"getTieRightX",value:function(){var t=this.getAbsoluteX();return t+=this.glyph.getWidth()/2,t+=-this.width/2+this.width+2}},{key:"getTieLeftX",value:function(){var t=this.getAbsoluteX();return t+=this.glyph.getWidth()/2,t-=this.width/2+2}},{key:"getModifierStartXY",value:function(t,e){if(!this.preFormatted)throw new r.Vex.RERR("UnformattedNote","Can't call GetModifierStartXY on an unformatted note");if(0===this.ys.length)throw new r.Vex.RERR("NoYValues","No Y-Values calculated for this note.");var n=0;if(t===s.Modifier.Position.LEFT)n=-2;else if(t===s.Modifier.Position.RIGHT)n=this.width+2;else if(t===s.Modifier.Position.BELOW||t===s.Modifier.Position.ABOVE){n=this.glyph.getWidth()/2}return{x:this.getAbsoluteX()+n,y:this.ys[e]}}},{key:"getLineForRest",value:function(){return this.positions[0].str}},{key:"preFormat",value:function(){this.preFormatted||(this.modifierContext&&this.modifierContext.preFormat(),this.setPreFormatted(!0))}},{key:"getStemX",value:function(){return this.getCenterGlyphX()}},{key:"getStemY",value:function(){var t=this.stave.getNumLines()-.5,e=a.Stem.UP===this.stem_direction?-.5:t;return this.stave.getYForLine(e)}},{key:"getStemExtents",value:function(){return this.stem.getExtents()}},{key:"drawFlag",value:function(){var t=this.beam,e=this.glyph,n=this.context,i=this.stem,r=this.stem_direction,o=this.render_options,s=o.draw_stem,u=o.glyph_font_scale,c=null==t&&s;if(e.flag&&c){var h=this.getStemX()+1,f=this.getStemY()-i.getHeight(),p=r===a.Stem.DOWN?e.code_flag_downstem:e.code_flag_upstem;l.Glyph.renderGlyph(n,h,f,u,p)}}},{key:"drawModifiers",value:function(){var t=this;this.modifiers.forEach(function(e){("dots"!==e.getCategory()||t.render_options.draw_dots)&&(e.setContext(t.context),e.draw())})}},{key:"drawStemThrough",value:function(){var t=this.getStemX(),e=this.getStemY(),n=this.context,i=this.render_options.draw_stem_through_stave;if(this.render_options.draw_stem&&i){var r=function(t,e,n,i){var r=1!==i,o=-1!==i,s=n.getSpacingBetweenLines(),a=n.getNumLines(),u=[];return e.forEach(function(e){var c=e.indexOf(a)>-1,l=e.indexOf(1)>-1;if(!(r&&l||o&&c)){1===e.length&&e.push(e[0]);var h=[];e.forEach(function(e,r,o){var u=1===e,c=e===a,l=n.getYForLine(e-1);0!==r||u?r!==o.length-1||c||(l+=s/2-1):l-=s/2-1,h.push(l),1===i&&u?h.push(t-2):-1===i&&c&&h.push(t+2)}),u.push(h.sort(function(t,e){return t-e}))}}),u}(e,function(t,e){for(var n=[],i=[],r=1;r<=t;r++)e.indexOf(r)>-1?(n.push(i),i=[]):i.push(r);return i.length>0&&n.push(i),n}(this.stave.getNumLines(),this.positions.map(function(t){return t.str})),this.getStave(),this.getStemDirection());n.save(),n.setLineWidth(a.Stem.WIDTH),r.forEach(function(e){0!==e.length&&(n.beginPath(),n.moveTo(t,e[0]),n.lineTo(t,e[e.length-1]),n.stroke(),n.closePath())}),n.restore()}}},{key:"drawPositions",value:function(){for(var t=this.context,e=this.getAbsoluteX(),n=this.ys,i=0;i<this.positions.length;++i){var r=n[i]+this.render_options.y_shift,o=this.glyphs[i],s=e+this.glyph.getWidth()/2-o.getWidth()/2;if(t.clearRect(s-2,r-3,o.getWidth()+4,6),o.code)l.Glyph.renderGlyph(t,s,r,this.render_options.glyph_font_scale*this.render_options.scale,o.code);else{t.save(),t.setRawFont(this.render_options.font);var a=o.text.toString();t.fillText(a,s,r+5*this.render_options.scale),t.restore()}}}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new r.Vex.RERR("NoStave","Can't draw without a stave.");if(0===this.ys.length)throw new r.Vex.RERR("NoYValues","Can't draw note without Y values.");this.setRendered();var t=null==this.beam&&this.render_options.draw_stem;this.drawPositions(),this.drawStemThrough();var e=this.getStemX();this.stem.setNoteHeadXBounds(e,e),t&&(this.context.openGroup("stem",null,{pointerBBox:!0}),this.stem.setContext(this.context).draw(),this.context.closeGroup()),this.drawFlag(),this.drawModifiers()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.VibratoBracket=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(42);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.VibratoBracket",e)}var u=e.VibratoBracket=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","VibratoBracket"),n.start=t.start,n.stop=t.stop,n.line=1,n.render_options={harsh:!1,wave_height:6,wave_width:4,wave_girth:2},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,[{key:"setLine",value:function(t){return this.line=t,this}},{key:"setHarsh",value:function(t){return this.render_options.harsh=t,this}},{key:"draw",value:function(){var t=this.context;this.setRendered();var e=this.start?this.start.getStave().getYForTopText(this.line):this.stop.getStave().getYForTopText(this.line),n=this.start?this.start.getAbsoluteX():this.stop.getStave().getTieStartX(),i=this.stop?this.stop.getAbsoluteX()-this.stop.getWidth()-5:this.start.getStave().getTieEndX()-10;this.render_options.vibrato_width=i-n,a("Rendering VibratoBracket: start_x:",n,"stop_x:",i,"y:",e),s.Vibrato.renderVibrato(t,n,e,this.render_options)}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ClefNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(8),s=n(22),a=n(51),u=n(4);e.ClefNote=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,{duration:"b"}));return r.setAttribute("type","ClefNote"),r.setType(t,n,i),r.ignore_ticks=!0,r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.Note),i(e,null,[{key:"CATEGORY",get:function(){return"clefnote"}}]),i(e,[{key:"setType",value:function(t,e,n){return this.type=t,this.clef_obj=new a.Clef(t,e,n),this.clef=this.clef_obj.clef,this.glyph=new u.Glyph(this.clef.code,this.clef.point),this.setWidth(this.glyph.getMetrics().width),this}},{key:"getClef",value:function(){return this.clef}},{key:"setContext",value:function(t){return this.context=t,this.glyph.setContext(this.context),this}},{key:"getBoundingBox",value:function(){return new o.BoundingBox(0,0,0,0)}},{key:"addToModifierContext",value:function(){return this}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(!this.stave)throw new r.Vex.RERR("NoStave","Can't draw without a stave.");this.glyph.getContext()||this.glyph.setContext(this.context),this.setRendered();var t=this.getAbsoluteX();if(this.glyph.setStave(this.stave),this.glyph.setYShift(this.stave.getYForLine(this.clef.line)-this.stave.getYForGlyphs()),this.glyph.renderToStave(t),void 0!==this.clef_obj.annotation){var e=new u.Glyph(this.clef_obj.annotation.code,this.clef_obj.annotation.point);e.getContext()||e.setContext(this.context),e.setStave(this.stave),e.setYShift(this.stave.getYForLine(this.clef_obj.annotation.line)-this.stave.getYForGlyphs()),e.setXShift(this.clef_obj.annotation.x_shift),e.renderToStave(t)}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TimeSigNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(8),o=n(22),s=n(53);e.TimeSigNote=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,{duration:"b"}));i.setAttribute("type","TimeSigNote");var r=new s.TimeSignature(t,n);return i.timeSig=r.getTimeSig(),i.setWidth(i.timeSig.glyph.getMetrics().width),i.ignore_ticks=!0,i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Note),i(e,[{key:"getBoundingBox",value:function(){return new r.BoundingBox(0,0,0,0)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){this.stave.checkContext(),this.setRendered(),this.timeSig.glyph.getContext()||this.timeSig.glyph.setContext(this.context),this.timeSig.glyph.setStave(this.stave),this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line)-this.stave.getYForGlyphs()),this.timeSig.glyph.renderToStave(this.getAbsoluteX())}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TabSlide=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(34);e.TabSlide=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,"sl."));if(i.setAttribute("type","TabSlide"),!n){var r=t.first_note.getPositions()[0].fret,o=t.last_note.getPositions()[0].fret;n=parseInt(r,10)>parseInt(o,10)?e.SLIDE_DOWN:e.SLIDE_UP}return i.slide_direction=n,i.render_options.cp1=11,i.render_options.cp2=14,i.render_options.y_shift=.5,i.setFont({font:"Times",size:10,style:"bold italic"}),i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.TabTie),i(e,null,[{key:"createSlideUp",value:function(t){return new e(t,e.SLIDE_UP)}},{key:"createSlideDown",value:function(t){return new e(t,e.SLIDE_DOWN)}},{key:"SLIDE_UP",get:function(){return 1}},{key:"SLIDE_DOWN",get:function(){return-1}}]),i(e,[{key:"renderTie",value:function(t){if(0===t.first_ys.length||0===t.last_ys.length)throw new r.Vex.RERR("BadArguments","No Y-values to render");var n=this.context,i=t.first_x_px,o=t.first_ys,s=t.last_x_px,a=this.slide_direction;if(a!==e.SLIDE_UP&&a!==e.SLIDE_DOWN)throw new r.Vex.RERR("BadSlide","Invalid slide direction");for(var u=0;u<this.first_indices.length;++u){var c=o[this.first_indices[u]]+this.render_options.y_shift;if(isNaN(c))throw new r.Vex.RERR("BadArguments","Bad indices for slide rendering.");n.beginPath(),n.moveTo(i,c+3*a),n.lineTo(s,c-3*a),n.closePath(),n.stroke()}this.setRendered()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GraceNote=void 0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(20),s=n(2);e.GraceNote=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,i(t,{glyph_font_scale:s.Flow.DEFAULT_NOTATION_FONT_SCALE*e.SCALE,stroke_px:e.LEDGER_LINE_OFFSET})));return n.setAttribute("type","GraceNote"),n.slash=t.slash,n.slur=!0,n.buildNoteHeads(),n.width=3,n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.StaveNote),r(e,null,[{key:"CATEGORY",get:function(){return"gracenotes"}},{key:"LEDGER_LINE_OFFSET",get:function(){return 2}},{key:"SCALE",get:function(){return.66}}]),r(e,[{key:"getStemExtension",value:function(){var t=this.getGlyph();return null!=this.stem_extension_override?this.stem_extension_override:t?1===this.getStemDirection()?t.gracenote_stem_up_extension:t.gracenote_stem_down_extension:0}},{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){(function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0})(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"draw",this).call(this),this.setRendered();var t=this.context,n=this.getStemDirection();if(this.slash){t.beginPath();var i=this.getAbsoluteX(),r=this.getYs()[0]-this.stem.getHeight()/2.8;1===n?(i+=1,t.moveTo(i,r),t.lineTo(i+13,r-9)):-1===n&&(i-=4,r+=1,t.moveTo(i,r),t.lineTo(i+13,r+9)),t.closePath(),t.stroke()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GraceTabNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(56);e.GraceTabNote=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t,!1));return n.setAttribute("type","GraceTabNote"),r.Vex.Merge(n.render_options,{y_shift:.3,scale:.6,font:"7.5pt Arial"}),n.updateWidth(),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.TabNote),i(e,null,[{key:"CATEGORY",get:function(){return"gracetabnotes"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){(function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0})(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"draw",this).call(this),this.setRendered()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tuning=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(2);e.Tuning=function(){function t(){var e=arguments.length<=0||void 0===arguments[0]?"E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2":arguments[0];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.setTuning(e)}return i(t,null,[{key:"names",get:function(){return{standard:"E/5,B/4,G/4,D/4,A/3,E/3",dagdad:"D/5,A/4,G/4,D/4,A/3,D/3",dropd:"E/5,B/4,G/4,D/4,A/3,D/3",eb:"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3",standardBanjo:"D/5,B/4,G/4,D/4,G/5"}}}]),i(t,[{key:"noteToInteger",value:function(t){return o.Flow.keyProperties(t).int_value}},{key:"setTuning",value:function(e){t.names[e]&&(e=t.names[e]),this.tuningString=e,this.tuningValues=[],this.numStrings=0;var n=e.split(/\s*,\s*/);if(0===n.length)throw new r.Vex.RERR("BadArguments","Invalid tuning string: "+e);this.numStrings=n.length;for(var i=0;i<this.numStrings;++i)this.tuningValues[i]=this.noteToInteger(n[i])}},{key:"getValueForString",value:function(t){var e=parseInt(t,10);if(e<1||e>this.numStrings)throw new r.Vex.RERR("BadArguments","String number must be between 1 and "+this.numStrings+":"+t);return this.tuningValues[e-1]}},{key:"getValueForFret",value:function(t,e){var n=this.getValueForString(e),i=parseInt(t,10);if(i<0)throw new r.Vex.RERR("BadArguments","Fret number must be 0 or higher: "+t);return n+i}},{key:"getNoteForFret",value:function(t,e){var n=this.getValueForFret(t,e),i=Math.floor(n/12),r=n%12;return o.Flow.integerToNote(r)+"/"+i}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.KeyManager=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(30);e.KeyManager=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.music=new o.Music,this.setKey(e)}return i(t,[{key:"setKey",value:function(t){return this.key=t,this.reset(),this}},{key:"getKey",value:function(){return this.key}},{key:"reset",value:function(){if(this.keyParts=this.music.getKeyParts(this.key),this.keyString=this.keyParts.root,this.keyParts.accidental&&(this.keyString+=this.keyParts.accidental),!o.Music.scaleTypes[this.keyParts.type])throw new r.Vex.RERR("BadArguments","Unsupported key type: "+this.key);this.scale=this.music.getScaleTones(this.music.getNoteValue(this.keyString),o.Music.scaleTypes[this.keyParts.type]),this.scaleMap={},this.scaleMapByValue={},this.originalScaleMapByValue={};for(var t=o.Music.root_indices[this.keyParts.root],e=0;e<o.Music.roots.length;++e){var n=(t+e)%o.Music.roots.length,i=o.Music.roots[n],s=this.music.getRelativeNoteName(i,this.scale[e]);this.scaleMap[i]=s,this.scaleMapByValue[this.scale[e]]=s,this.originalScaleMapByValue[this.scale[e]]=s}return this}},{key:"getAccidental",value:function(t){var e=this.music.getKeyParts(t).root,n=this.music.getNoteParts(this.scaleMap[e]);return{note:this.scaleMap[e],accidental:n.accidental}}},{key:"selectNote",value:function(t){t=t.toLowerCase();var e=this.music.getNoteParts(t),n=this.scaleMap[e.root],i=this.music.getNoteParts(n);if(n===t)return{note:n,accidental:e.accidental,change:!1};var r=this.scaleMapByValue[this.music.getNoteValue(t)];if(null!=r)return{note:r,accidental:this.music.getNoteParts(r).accidental,change:!1};var o=this.originalScaleMapByValue[this.music.getNoteValue(t)];return null!=o?(this.scaleMap[i.root]=o,delete this.scaleMapByValue[this.music.getNoteValue(n)],this.scaleMapByValue[this.music.getNoteValue(t)]=o,{note:o,accidental:this.music.getNoteParts(o).accidental,change:!0}):i.root===t?(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(i.root)]=i.root,this.scaleMap[i.root]=i.root,{note:i.root,accidental:null,change:!0}):(delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[e.root])],this.scaleMapByValue[this.music.getNoteValue(t)]=t,delete this.scaleMap[i.root],this.scaleMap[i.root]=t,{note:t,accidental:e.accidental,change:!0})}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveHairpin=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(25);e.StaveHairpin=function(t){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return i.setAttribute("type","StaveHairpin"),i.notes=t,i.hairpin=n,i.position=s.Modifier.Position.BELOW,i.render_options={height:10,y_shift:0,left_shift_px:0,right_shift_px:0},i.setNotes(t),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"FormatByTicksAndDraw",value:function(t,n,i,o,s,a){var u=n.pixelsPerTick;if(null==u)throw new r.Vex.RuntimeError("BadArguments","A valid Formatter must be provide to draw offsets by ticks.");var c=u*a.left_shift_ticks,l=u*a.right_shift_ticks,h={height:a.height,y_shift:a.y_shift,left_shift_px:c,right_shift_px:l};new e({first_note:i.first_note,last_note:i.last_note},o).setContext(t).setRenderOptions(h).setPosition(s).draw()}},{key:"type",get:function(){return{CRESC:1,DECRESC:2}}}]),i(e,[{key:"setPosition",value:function(t){return t!==s.Modifier.Position.ABOVE&&t!==s.Modifier.Position.BELOW||(this.position=t),this}},{key:"setRenderOptions",value:function(t){return null!=t.height&&null!=t.y_shift&&null!=t.left_shift_px&&null!=t.right_shift_px&&(this.render_options=t),this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new r.Vex.RuntimeError("BadArguments","Hairpin needs to have either first_note or last_note set.");return this.first_note=t.first_note,this.last_note=t.last_note,this}},{key:"renderHairpin",value:function(t){var n=this.checkContext(),i=this.render_options.y_shift+20,r=t.first_y;this.position===s.Modifier.Position.ABOVE&&(i=30-i,r=t.first_y-t.staff_height);var o=this.render_options.left_shift_px,a=this.render_options.right_shift_px;switch(n.beginPath(),this.hairpin){case e.type.CRESC:n.moveTo(t.last_x+a,r+i),n.lineTo(t.first_x+o,r+this.render_options.height/2+i),n.lineTo(t.last_x+a,r+this.render_options.height+i);break;case e.type.DECRESC:n.moveTo(t.first_x+o,r+i),n.lineTo(t.last_x+a,r+this.render_options.height/2+i),n.lineTo(t.first_x+o,r+this.render_options.height+i)}n.stroke(),n.closePath()}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.first_note,e=this.last_note,n=t.getModifierStartXY(this.position,0),i=e.getModifierStartXY(this.position,0);return this.renderHairpin({first_x:n.x,last_x:i.x,first_y:t.getStave().y+t.getStave().height,last_y:e.getStave().y+e.getStave().height,staff_height:t.getStave().height}),!0}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Curve=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5);e.Curve=function(t){function e(t,n,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var o=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.setAttribute("type","Curve"),o.render_options={spacing:2,thickness:2,x_shift:0,y_shift:10,position:e.Position.NEAR_HEAD,position_end:e.Position.NEAR_HEAD,invert:!1,cps:[{x:0,y:10},{x:0,y:10}]},r.Vex.Merge(o.render_options,i),o.setNotes(t,n),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"Position",get:function(){return{NEAR_HEAD:1,NEAR_TOP:2}}},{key:"PositionString",get:function(){return{nearHead:e.Position.NEAR_HEAD,nearTop:e.Position.NEAR_TOP}}}]),i(e,[{key:"setNotes",value:function(t,e){if(!t&&!e)throw new r.Vex.RuntimeError("BadArguments","Curve needs to have either first_note or last_note set.");return this.from=t,this.to=e,this}},{key:"isPartial",value:function(){return!this.from||!this.to}},{key:"renderCurve",value:function(t){var e=this.context,n=this.render_options.cps,i=this.render_options.x_shift,r=this.render_options.y_shift*t.direction,o=t.first_x+i,s=t.first_y+r,a=t.last_x-i,u=t.last_y+r,c=this.render_options.thickness,l=(a-o)/(n.length+2);e.beginPath(),e.moveTo(o,s),e.bezierCurveTo(o+l+n[0].x,s+n[0].y*t.direction,a-l+n[1].x,u+n[1].y*t.direction,a,u),e.bezierCurveTo(a-l+n[1].x,u+(n[1].y+c)*t.direction,o+l+n[0].x,s+(n[0].y+c)*t.direction,o,s),e.stroke(),e.closePath(),e.fill()}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.from,n=this.to,i=void 0,r=void 0,o=void 0,s=void 0,a=void 0,u="baseY",c="baseY";function l(t){return"string"==typeof t?e.PositionString[t]:t}var h=l(this.render_options.position),f=l(this.render_options.position_end);return h===e.Position.NEAR_TOP&&(u="topY",c="topY"),f===e.Position.NEAR_HEAD?c="baseY":f===e.Position.NEAR_TOP&&(c="topY"),t?(i=t.getTieRightX(),a=t.getStemDirection(),o=t.getStemExtents()[u]):(i=n.getStave().getTieStartX(),o=n.getStemExtents()[u]),n?(r=n.getTieLeftX(),a=n.getStemDirection(),s=n.getStemExtents()[c]):(r=t.getStave().getTieEndX(),s=t.getStemExtents()[c]),this.renderCurve({first_x:i,last_x:r,first_y:o,last_y:s,direction:a*(!0===this.render_options.invert?-1:1)}),!0}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextDynamics=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(22),s=n(4);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.TextDynamics",e)}var u=e.TextDynamics=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.setAttribute("type","TextDynamics"),n.sequence=t.text.toLowerCase(),n.line=t.line||0,n.glyphs=[],r.Vex.Merge(n.render_options,{glyph_font_size:40}),a("New Dynamics Text: ",n.sequence),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Note),i(e,null,[{key:"GLYPHS",get:function(){return{f:{code:"vba",width:12},p:{code:"vbf",width:14},m:{code:"v62",width:17},s:{code:"v4a",width:10},z:{code:"v80",width:12},r:{code:"vb1",width:12}}}}]),i(e,[{key:"setLine",value:function(t){return this.line=t,this}},{key:"preFormat",value:function(){var t=this,n=0;return this.sequence.split("").forEach(function(i){var o=e.GLYPHS[i];if(!o)throw new r.Vex.RERR("Invalid dynamics character: "+i);var a=t.render_options.glyph_font_size,u=new s.Glyph(o.code,a);t.glyphs.push(u),n+=o.width}),this.setWidth(n),this.preFormatted=!0,this}},{key:"draw",value:function(){var t=this;this.setRendered();var n=this.getAbsoluteX(),i=this.stave.getYForLine(this.line+-3);a("Rendering Dynamics: ",this.sequence);var r=n;this.glyphs.forEach(function(n,o){var s=t.sequence[o];n.render(t.context,r,i),r+=e.GLYPHS[s].width})}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.StaveLine=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(2);function a(t,e,n,i,r,o,s){t.beginPath(),t.moveTo(e,n),t.lineTo(i,r),t.lineTo(o,s),t.lineTo(e,n),t.closePath(),t.fill()}e.StaveLine=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","StaveLine"),n.notes=t,n.text="",n.font={family:"Arial",size:10,weight:""},n.render_options={padding_left:4,padding_right:3,line_width:1,line_dash:null,rounded_end:!0,color:null,draw_start_arrow:!1,draw_end_arrow:!1,arrowhead_length:10,arrowhead_angle:Math.PI/8,text_position_vertical:e.TextVerticalPosition.TOP,text_justification:e.TextJustification.CENTER},n.setNotes(t),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"TextVerticalPosition",get:function(){return{TOP:1,BOTTOM:2}}},{key:"TextJustification",get:function(){return{LEFT:1,CENTER:2,RIGHT:3}}}]),i(e,[{key:"setFont",value:function(t){return this.font=t,this}},{key:"setText",value:function(t){return this.text=t,this}},{key:"setNotes",value:function(t){if(!t.first_note&&!t.last_note)throw new r.Vex.RuntimeError("BadArguments","Notes needs to have either first_note or last_note set.");if(t.first_indices||(t.first_indices=[0]),t.last_indices||(t.last_indices=[0]),t.first_indices.length!==t.last_indices.length)throw new r.Vex.RuntimeError("BadArguments","Connected notes must have similar index sizes");return this.first_note=t.first_note,this.first_indices=t.first_indices,this.last_note=t.last_note,this.last_indices=t.last_indices,this}},{key:"applyLineStyle",value:function(){var t=this.checkContext(),e=this.render_options;e.line_dash&&t.setLineDash(e.line_dash),e.line_width&&t.setLineWidth(e.line_width),e.rounded_end?t.setLineCap("round"):t.setLineCap("square")}},{key:"applyFontStyle",value:function(){var t=this.checkContext();this.font&&t.setFont(this.font.family,this.font.size,this.font.weight),this.render_options.color&&(t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color))}},{key:"draw",value:function(){var t=this,n=this.checkContext();this.setRendered();var i=this.first_note,r=this.last_note,o=this.render_options;n.save(),this.applyLineStyle();var u=void 0,c=void 0;this.first_indices.forEach(function(e,s){var l=t.last_indices[s];u=i.getModifierStartXY(2,e),c=r.getModifierStartXY(1,l);var h=u.y>c.y;u.x+=i.getMetrics().modRightPx+o.padding_left,c.x-=r.getMetrics().modLeftPx+o.padding_right;var f=i.getGlyph().getWidth();i.getKeyProps()[e].displaced&&1===i.getStemDirection()&&(u.x+=f+o.padding_left),r.getKeyProps()[l].displaced&&-1===r.getStemDirection()&&(c.x-=f+o.padding_right),u.y+=h?-3:1,c.y+=h?2:0,function(t,e,n,i){var r=i.draw_start_arrow&&i.draw_end_arrow,o=e.x,s=e.y,u=n.x,c=n.y,l=Math.sqrt((u-o)*(u-o)+(c-s)*(c-s)),h=(l-i.arrowhead_length/3)/l,f=void 0,p=void 0,d=void 0,b=void 0;i.draw_end_arrow||r?(f=Math.round(o+(u-o)*h),p=Math.round(s+(c-s)*h)):(f=u,p=c),i.draw_start_arrow||r?(d=o+(u-o)*(1-h),b=s+(c-s)*(1-h)):(d=o,b=s),i.color&&(t.setStrokeStyle(i.color),t.setFillStyle(i.color)),t.beginPath(),t.moveTo(d,b),t.lineTo(f,p),t.stroke(),t.closePath();var y=Math.atan2(c-s,u-o),m=Math.abs(i.arrowhead_length/Math.cos(i.arrowhead_angle)),v=void 0,g=void 0,_=void 0,S=void 0;(i.draw_end_arrow||r)&&(v=y+Math.PI+i.arrowhead_angle,_=u+Math.cos(v)*m,S=c+Math.sin(v)*m,g=y+Math.PI-i.arrowhead_angle,a(t,_,S,u,c,u+Math.cos(g)*m,c+Math.sin(g)*m)),(i.draw_start_arrow||r)&&(v=y+i.arrowhead_angle,_=o+Math.cos(v)*m,S=s+Math.sin(v)*m,g=y-i.arrowhead_angle,a(t,_,S,o,s,o+Math.cos(g)*m,s+Math.sin(g)*m))}(n,u,c,t.render_options)}),n.restore();var l=n.measureText(this.text).width,h=o.text_justification,f=0;if(h===e.TextJustification.LEFT)f=u.x;else if(h===e.TextJustification.CENTER){f=(c.x-u.x)/2+u.x-l/2}else h===e.TextJustification.RIGHT&&(f=c.x-l);var p=void 0,d=o.text_position_vertical;return d===e.TextVerticalPosition.TOP?p=i.getStave().getYForTopText():d===e.TextVerticalPosition.BOTTOM&&(p=i.getStave().getYForBottomText(s.Flow.TEXT_HEIGHT_OFFSET_HACK)),n.save(),this.applyFontStyle(),n.fillText(this.text,f,p),n.restore(),this}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.PedalMarking=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(5),s=n(4);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];c.DEBUG&&r.Vex.L("Vex.Flow.PedalMarking",e)}function u(t,e,n,i,r){var o=c.GLYPHS[t];new s.Glyph(o.code,r).render(e,n+o.x_shift,i+o.y_shift)}var c=e.PedalMarking=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","PedalMarking"),n.notes=t,n.style=e.TEXT,n.line=0,n.custom_depress_text="",n.custom_release_text="",n.font={family:"Times New Roman",size:12,weight:"italic bold"},n.render_options={bracket_height:10,text_margin_right:6,bracket_line_width:1,glyph_point_size:40,color:"black"},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,null,[{key:"createSustain",value:function(t){return new e(t)}},{key:"createSostenuto",value:function(t){var n=new e(t);return n.setStyle(e.Styles.MIXED),n.setCustomText("Sost. Ped."),n}},{key:"createUnaCorda",value:function(t){var n=new e(t);return n.setStyle(e.Styles.TEXT),n.setCustomText("una corda","tre corda"),n}},{key:"GLYPHS",get:function(){return{pedal_depress:{code:"v36",x_shift:-10,y_shift:0},pedal_release:{code:"v5d",x_shift:-2,y_shift:3}}}},{key:"Styles",get:function(){return{TEXT:1,BRACKET:2,MIXED:3}}},{key:"StylesString",get:function(){return{text:e.Styles.TEXT,bracket:e.Styles.BRACKET,mixed:e.Styles.MIXED}}}]),i(e,[{key:"setCustomText",value:function(t,e){return this.custom_depress_text=t||"",this.custom_release_text=e||"",this}},{key:"setStyle",value:function(t){if(t<1&&t>3)throw new r.Vex.RERR("InvalidParameter","The style must be one found in PedalMarking.Styles");return this.style=t,this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"drawBracketed",value:function(){var t=this.context,n=!1,i=void 0,o=void 0,s=this;this.notes.forEach(function(a,c,l){n=!n;var h=a.getAbsoluteX(),f=a.getStave().getYForBottomText(s.line+3);if(h<i)throw new r.Vex.RERR("InvalidConfiguration","The notes provided must be in order of ascending x positions");var p=l[c+1]===a,d=l[c-1]===a,b=0;if(n)if(b=d?5:0,s.style!==e.Styles.MIXED||d)t.beginPath(),t.moveTo(h,f-s.render_options.bracket_height),t.lineTo(h+b,f),t.stroke(),t.closePath();else if(s.custom_depress_text){var y=t.measureText(s.custom_depress_text).width;t.fillText(s.custom_depress_text,h-y/2,f),b=y/2+s.render_options.text_margin_right}else u("pedal_depress",t,h,f,s.render_options.glyph_point_size),b=20+s.render_options.text_margin_right;else b=p?-5:0,t.beginPath(),t.moveTo(i,o),t.lineTo(h+b,f),t.lineTo(h,f-s.render_options.bracket_height),t.stroke(),t.closePath();i=h+b,o=f})}},{key:"drawText",value:function(){var t=this.context,e=!1,n=this,i=n.render_options.glyph_point_size;this.notes.forEach(function(r){e=!e;var o=r.getStave(),s=r.getAbsoluteX(),a=o.getYForBottomText(n.line+3),c=0;e?n.custom_depress_text?(c=t.measureText(n.custom_depress_text).width,t.fillText(n.custom_depress_text,s-c/2,a)):u("pedal_depress",t,s,a,i):n.custom_release_text?(c=t.measureText(n.custom_release_text).width,t.fillText(n.custom_release_text,s-c/2,a)):u("pedal_release",t,s,a,i)})}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered(),t.save(),t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color),t.setFont(this.font.family,this.font.size,this.font.weight),a("Rendering Pedal Marking"),this.style===e.Styles.BRACKET||this.style===e.Styles.MIXED?(t.setLineWidth(this.render_options.bracket_line_width),this.drawBracketed()):this.style===e.Styles.TEXT&&this.drawText(),t.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextBracket=void 0;var i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(2),a=n(5),u=n(10);function c(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];l.DEBUG&&o.Vex.L("Vex.Flow.TextBracket",e)}var l=e.TextBracket=function(t){function e(t){var n=t.start,i=t.stop,r=t.text,o=void 0===r?"":r,s=t.superscript,a=void 0===s?"":s,u=t.position,c=void 0===u?e.Positions.TOP:u;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var l=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return l.setAttribute("type","TextBracket"),l.start=n,l.stop=i,l.text=o,l.superscript=a,l.position="string"==typeof c?e.PositionString[c]:c,l.line=1,l.font={family:"Serif",size:15,weight:"italic"},l.render_options={dashed:!0,dash:[5],color:"black",line_width:1,show_bracket:!0,bracket_height:8,underline_superscript:!0},l}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,a.Element),r(e,null,[{key:"Positions",get:function(){return{TOP:1,BOTTOM:-1}}},{key:"PositionString",get:function(){return{top:e.Positions.TOP,bottom:e.Positions.BOTTOM}}}]),r(e,[{key:"applyStyle",value:function(t){return t.setFont(this.font.family,this.font.size,this.font.weight),t.setStrokeStyle(this.render_options.color),t.setFillStyle(this.render_options.color),t.setLineWidth(this.render_options.line_width),this}},{key:"setDashed",value:function(t,e){return this.render_options.dashed=t,e&&(this.render_options.dash=e),this}},{key:"setFont",value:function(t){return this.font=i({},this.font,t),this}},{key:"setLine",value:function(t){return this.line=t,this}},{key:"draw",value:function(){var t=this.context;this.setRendered();var n=0;switch(this.position){case e.Positions.TOP:n=this.start.getStave().getYForTopText(this.line);break;case e.Positions.BOTTOM:n=this.start.getStave().getYForBottomText(this.line+s.Flow.TEXT_HEIGHT_OFFSET_HACK);break;default:throw new o.Vex.RERR("InvalidPosition","The position "+this.position+" is invalid")}var i={x:this.start.getAbsoluteX(),y:n},r={x:this.stop.getAbsoluteX(),y:n};c("Rendering TextBracket: start:",i,"stop:",r,"y:",n);var a=this.render_options.bracket_height*this.position;t.save(),this.applyStyle(t),t.fillText(this.text,i.x,i.y);var l=t.measureText(this.text).width,h=t.measureText("M").width,f=i.y-h/2.5;t.setFont(this.font.family,this.font.size/1.4,this.font.weight),t.fillText(this.superscript,i.x+l+1,f);var p=t.measureText(this.superscript).width,d=t.measureText("M").width,b=i.x,y=f,m=r.x+this.stop.getGlyph().getWidth();this.position===e.Positions.TOP?(b+=l+p+5,y-=d/2.7):this.position===e.Positions.BOTTOM&&(y+=d/2.7,b+=l+2,this.render_options.underline_superscript||(b+=p)),this.render_options.dashed?(u.Renderer.drawDashedLine(t,b,y,m,y,this.render_options.dash),this.render_options.show_bracket&&u.Renderer.drawDashedLine(t,m,y+1*this.position,m,y+a,this.render_options.dash)):(t.beginPath(),t.moveTo(b,y),t.lineTo(m,y),this.render_options.show_bracket&&t.lineTo(m,y+a),t.stroke(),t.closePath()),t.restore()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BarNote=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(22),s=n(44),a=n(8);function u(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];l.DEBUG&&r.Vex.L("Vex.Flow.BarNote",e)}var l=e.BarNote=function(t){function e(){var t,n=arguments.length<=0||void 0===arguments[0]?s.Barline.type.SINGLE:arguments[0];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,{duration:"b"}));i.setAttribute("type","BarNote"),i.metrics={widths:{}};var r=s.Barline.type;return i.metrics.widths=(u(t={},r.SINGLE,8),u(t,r.DOUBLE,12),u(t,r.END,15),u(t,r.REPEAT_BEGIN,14),u(t,r.REPEAT_END,14),u(t,r.REPEAT_BOTH,18),u(t,r.NONE,0),t),i.ignore_ticks=!0,i.setType(n),i}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Note),i(e,[{key:"getType",value:function(){return this.type}},{key:"setType",value:function(t){return this.type="string"==typeof t?s.Barline.typeString[t]:t,this.setWidth(this.metrics.widths[this.type]),this}},{key:"getBoundingBox",value:function(){return new a.BoundingBox(0,0,0,0)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(this.checkContext(),!this.stave)throw new r.Vex.RERR("NoStave","Can't draw without a stave.");c("Rendering bar line at: ",this.getAbsoluteX());var t=new s.Barline(this.type);t.setX(this.getAbsoluteX()),t.draw(this.stave),this.setRendered()}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GhostNote=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),o=n(1),s=n(24);e.GhostNote=function(t){function e(t){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new o.Vex.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");var n=void 0;if("string"==typeof t)n={duration:t};else{if("object"!==(void 0===t?"undefined":i(t)))throw new o.Vex.RuntimeError("BadArguments","Ghost note must have valid initialization data to identify duration.");n=t}var r=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,n));return r.setAttribute("type","GhostNote"),r.setWidth(0),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,s.StemmableNote),r(e,[{key:"isRest",value:function(){return!0}},{key:"setStave",value:function(t){(function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0})(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setStave",this).call(this,t)}},{key:"addToModifierContext",value:function(){return this}},{key:"preFormat",value:function(){return this.setPreFormatted(!0),this}},{key:"draw",value:function(){if(!this.stave)throw new o.Vex.RERR("NoStave","Can't draw without a stave.");this.setRendered();for(var t=0;t<this.modifiers.length;++t){var e=this.modifiers[t];e.setContext(this.context),e.draw()}}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tremolo=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(25),s=n(4);e.Tremolo=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","Tremolo"),n.num=t,n.note=null,n.index=null,n.position=o.Modifier.Position.CENTER,n.code="v74",n.shift_right=-2,n.y_spacing=4,n.render_options={font_scale:35,stroke_px:3,stroke_spacing:10},n.font={family:"Arial",size:16,weight:""},n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Modifier),i(e,null,[{key:"CATEGORY",get:function(){return"tremolo"}}]),i(e,[{key:"getCategory",value:function(){return e.CATEGORY}},{key:"draw",value:function(){if(this.checkContext(),!this.note||null==this.index)throw new r.Vex.RERR("NoAttachedNote","Can't draw Tremolo without a note and index.");this.setRendered();var t=this.note.getModifierStartXY(this.position,this.index),e=t.x,n=t.y;e+=this.shift_right;for(var i=0;i<this.num;++i)s.Glyph.renderGlyph(this.context,e,n,this.render_options.font_scale,this.code),n+=this.y_spacing}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Crescendo=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),o=n(22),s=n(39);function a(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.Crescendo",e)}var u=e.Crescendo=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.setAttribute("type","Crescendo"),n.decrescendo=!1,n.line=t.line||0,n.height=15,r.Vex.Merge(n.render_options,{extend_left:0,extend_right:0,y_shift:0}),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Note),i(e,[{key:"setLine",value:function(t){return this.line=t,this}},{key:"setHeight",value:function(t){return this.height=t,this}},{key:"setDecrescendo",value:function(t){return this.decrescendo=t,this}},{key:"preFormat",value:function(){return this.preFormatted=!0,this}},{key:"draw",value:function(){this.checkContext(),this.setRendered();var t=this.getTickContext(),e=s.TickContext.getNextContext(t),n=this.getAbsoluteX(),i=e?e.getX():this.stave.x+this.stave.width,r=this.stave.getYForLine(this.line+-3)+1;a("Drawing ",this.decrescendo?"decrescendo ":"crescendo ",this.height,"x",n-i),function(t,e){var n=e.begin_x,i=e.end_x,r=e.y,o=e.height/2;t.beginPath(),e.reverse?(t.moveTo(n,r-o),t.lineTo(i,r),t.lineTo(n,r+o)):(t.moveTo(i,r-o),t.lineTo(n,r),t.lineTo(i,r+o)),t.stroke(),t.closePath()}(this.context,{begin_x:n-this.render_options.extend_left,end_x:i+this.render_options.extend_right,y:r+this.render_options.y_shift,height:this.height,reverse:this.decrescendo})}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.System=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},o=n(5),s=n(76),a=n(14),u=n(22);function c(t,e){var n=e.options;return(t=r(e,t)).options=r(n,t.options),t}e.System=function(t){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return n.setAttribute("type","System"),n.setOptions(t),n.parts=[],n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.Element),i(e,[{key:"setOptions",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options=c(t,{x:10,y:10,width:500,connector:null,spaceBetweenStaves:12,factory:null,debugFormatter:!1,formatIterations:0,options:{}}),this.factory=this.options.factory||new s.Factory({renderer:{el:null}})}},{key:"setContext",value:function(t){return function t(e,n,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,n);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,i)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(i):void 0}(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),"setContext",this).call(this,t),this.factory.setContext(t),this}},{key:"addConnector",value:function(){var t=arguments.length<=0||void 0===arguments[0]?"double":arguments[0];return this.connector=this.factory.StaveConnector({top_stave:this.parts[0].stave,bottom_stave:this.parts[this.parts.length-1].stave,type:t}),this.connector}},{key:"addStave",value:function(t){var e=this;if(!(t=c(t,{stave:null,voices:[],spaceAbove:0,spaceBelow:0,debugNoteMetrics:!1,options:{}})).stave){t.stave=this.factory.Stave({x:this.options.x,y:this.options.y,width:this.options.width,options:{left_bar:!1}})}return t.voices.forEach(function(n){return n.setContext(e.context).setStave(t.stave).getTickables().forEach(function(e){return e.setStave(t.stave)})}),this.parts.push(t),t.stave}},{key:"format",value:function(){var t=this,e=new a.Formatter;this.formatter=e;var n=this.options.y,i=0,r=[],o=[];this.parts.forEach(function(s){n+=s.stave.space(s.spaceAbove),s.stave.setY(n),e.joinVoices(s.voices),n+=s.stave.space(s.spaceBelow),n+=s.stave.space(t.options.spaceBetweenStaves),s.debugNoteMetrics&&(o.push({y:n,voice:s.voices[0]}),n+=15),r=r.concat(s.voices),i=Math.max(i,s.stave.getNoteStartX())}),this.parts.forEach(function(t){return t.stave.setNoteStartX(i)});var s=this.options.width-(i-this.options.x)-u.Note.STAVEPADDING;e.format(r,s);for(var c=0;c<this.options.formatIterations;c++)e.tune();this.startX=i,this.debugNoteMetricsYs=o,this.lastY=n}},{key:"draw",value:function(){var t=this.checkContext();this.setRendered(),this.options.debugFormatter&&a.Formatter.plotDebugging(t,this.formatter,this.startX,this.options.y,this.lastY),this.debugNoteMetricsYs.forEach(function(e){e.voice.getTickables().forEach(function(n){return u.Note.plotMetrics(t,n,e.y)})})}}]),e}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Factory=e.X=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},o=n(1),s=n(29),a=n(37),u=n(40),c=n(14),l=n(28),h=n(36),f=n(67),p=n(27),d=n(10),b=n(43),y=n(33),m=n(68),v=n(20),g=n(19),_=n(75),S=n(39),x=n(16),w=n(18),E=n(15),P=n(66),T=n(61),M=n(32),k=n(31),O=n(77),A=n(59),C=n(58),L=n(69),I=n(70),R=n(57),N=n(72),F=n(71),B=n(56),D=n(55),V=n(50);function j(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];U.DEBUG&&o.Vex.L("Vex.Flow.Factory",e)}var G=e.X=o.Vex.MakeException("FactoryError");function W(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e=arguments[1],n=e.options;return(t=r(e,t)).options=r(n,t.options),t}var U=e.Factory=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),j("New factory: ",e);var n={stave:{space:10},renderer:{context:null,elementId:"",backend:d.Renderer.Backends.SVG,width:500,height:200,background:"#FFF"},font:{face:"Arial",point:10,style:""}};this.options=n,this.setOptions(e)}return i(t,[{key:"reset",value:function(){this.renderQ=[],this.systems=[],this.staves=[],this.voices=[],this.stave=null}},{key:"getOptions",value:function(){return this.options}},{key:"setOptions",value:function(t){for(var e=["stave","renderer","font"],n=0;n<e.length;n++){var i=e[n];r(this.options[i],t[i])}(null!==this.options.renderer.elementId||this.options.renderer.context)&&this.initRenderer(),this.reset()}},{key:"initRenderer",value:function(){var t=this.options.renderer,e=t.elementId,n=t.backend,i=t.width,r=t.height,o=t.background;if(""===e)throw new G("HTML DOM element not set in Factory");this.context=d.Renderer.buildContext(e,n,i,r,o)}},{key:"getContext",value:function(){return this.context}},{key:"setContext",value:function(t){return this.context=t,this}},{key:"getStave",value:function(){return this.stave}},{key:"getVoices",value:function(){return this.voices}},{key:"space",value:function(t){return this.options.stave.space*t}},{key:"Stave",value:function(t){t=W(t,{x:0,y:0,width:this.options.renderer.width-this.space(1),options:{spacing_between_lines_px:this.options.stave.space}});var e=new b.Stave(t.x,t.y,t.width,t.options);return this.staves.push(e),e.setContext(this.context),this.stave=e,e}},{key:"TabStave",value:function(t){t=W(t,{x:0,y:0,width:this.options.renderer.width-this.space(1),options:{spacing_between_lines_px:1.3*this.options.stave.space}});var e=new D.TabStave(t.x,t.y,t.width,t.options);return this.staves.push(e),e.setContext(this.context),this.stave=e,e}},{key:"StaveNote",value:function(t){var e=new v.StaveNote(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"GhostNote",value:function(t){var e=new N.GhostNote(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TextNote",value:function(t){var e=new V.TextNote(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"BarNote",value:function(t){t=W(t,{type:"single",options:{}});var e=new F.BarNote(t.type);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"ClefNote",value:function(t){t=W(t,{type:"treble",options:{size:"default"}});var e=new C.ClefNote(t.type,t.options.size,t.options.annotation);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TimeSigNote",value:function(t){t=W(t,{time:"4/4",options:{}});var e=new A.TimeSigNote(t.time);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TabNote",value:function(t){var e=new B.TabNote(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"GraceNote",value:function(t){var e=new T.GraceNote(t);return this.stave&&e.setStave(this.stave),e.setContext(this.context),e}},{key:"GraceNoteGroup",value:function(t){var e=new M.GraceNoteGroup(t.notes,t.slur);return e.setContext(this.context),e}},{key:"Accidental",value:function(t){t=W(t,{type:null,options:{}});var e=new s.Accidental(t.type);return e.setContext(this.context),e}},{key:"Annotation",value:function(t){t=W(t,{text:"p",vJustify:"below",hJustify:"center",fontFamily:"Times",fontSize:14,fontWeight:"bold italic",options:{}});var e=new u.Annotation(t.text);return e.setJustification(t.hJustify),e.setVerticalJustification(t.vJustify),e.setFont(t.fontFamily,t.fontSize,t.fontWeight),e.setContext(this.context),e}},{key:"Articulation",value:function(t){t=W(t,{type:"a.",position:"above",options:{}});var e=new a.Articulation(t.type);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"TextDynamics",value:function(t){t=W(t,{text:"p",duration:"q",dots:0,line:0,options:{}});var e=new f.TextDynamics({text:t.text,line:t.line,duration:t.duration,dots:t.dots});return this.stave&&e.setStave(this.stave),e.setContext(this.context),this.renderQ.push(e),e}},{key:"Fingering",value:function(t){t=W(t,{number:"0",position:"left",options:{}});var e=new l.FretHandFinger(t.number);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"StringNumber",value:function(t){t=W(t,{number:"0",position:"left",options:{}});var e=new h.StringNumber(t.number);return e.setPosition(t.position),e.setContext(this.context),e}},{key:"TickContext",value:function(){return(new S.TickContext).setContext(this.context)}},{key:"ModifierContext",value:function(){return new p.ModifierContext}},{key:"Voice",value:function(t){t=W(t,{time:"4/4",options:{}});var e=new w.Voice(t.time);return this.voices.push(e),e}},{key:"StaveConnector",value:function(t){t=W(t,{top_stave:null,bottom_stave:null,type:"double",options:{}});var e=new g.StaveConnector(t.top_stave,t.bottom_stave);return e.setType(t.type).setContext(this.context),this.renderQ.push(e),e}},{key:"Formatter",value:function(){return new c.Formatter}},{key:"Tuplet",value:function(t){t=W(t,{notes:[],options:{}});var e=new x.Tuplet(t.notes,t.options).setContext(this.context);return this.renderQ.push(e),e}},{key:"Beam",value:function(t){t=W(t,{notes:[],options:{autoStem:!1,secondaryBeamBreaks:[]}});var e=new E.Beam(t.notes,t.options.autoStem).setContext(this.context);return e.breakSecondaryAt(t.options.secondaryBeamBreaks),this.renderQ.push(e),e}},{key:"Curve",value:function(t){t=W(t,{from:null,to:null,options:{}});var e=new P.Curve(t.from,t.to,t.options).setContext(this.context);return this.renderQ.push(e),e}},{key:"StaveTie",value:function(t){t=W(t,{from:null,to:null,first_indices:[0],last_indices:[0],text:null,options:{direction:void 0}});var e=new y.StaveTie({first_note:t.from,last_note:t.to,first_indices:t.first_indices,last_indices:t.last_indices},t.text);return t.options.direction&&e.setDirection(t.options.direction),e.setContext(this.context),this.renderQ.push(e),e}},{key:"StaveLine",value:function(t){t=W(t,{from:null,to:null,first_indices:[0],last_indices:[0],options:{}});var e=new m.StaveLine({first_note:t.from,last_note:t.to,first_indices:t.first_indices,last_indices:t.last_indices});return t.options.text&&e.setText(t.options.text),t.options.font&&e.setFont(t.options.font),e.setContext(this.context),this.renderQ.push(e),e}},{key:"VibratoBracket",value:function(t){t=W(t,{from:null,to:null,options:{harsh:!1}});var e=new R.VibratoBracket({start:t.from,stop:t.to});return t.options.line&&e.setLine(t.options.line),t.options.harsh&&e.setHarsh(t.options.harsh),e.setContext(this.context),this.renderQ.push(e),e}},{key:"TextBracket",value:function(t){t=W(t,{from:null,to:null,text:"",options:{superscript:"",position:1}});var e=new I.TextBracket({start:t.from,stop:t.to,text:t.text,superscript:t.options.superscript,position:t.options.position});return t.options.line&&e.setLine(t.options.line),t.options.font&&e.setFont(t.options.font),e.setContext(this.context),this.renderQ.push(e),e}},{key:"System",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];t.factory=this;var e=new _.System(t).setContext(this.context);return this.systems.push(e),e}},{key:"EasyScore",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t.factory=this,new O.EasyScore(t)}},{key:"PedalMarking",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];t=W(t,{notes:[],options:{style:"mixed"}});var e=new L.PedalMarking(t.notes);return e.setStyle(L.PedalMarking.StylesString[t.options.style]),e.setContext(this.context),this.renderQ.push(e),e}},{key:"NoteSubGroup",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];t=W(t,{notes:[],options:{}});var e=new k.NoteSubGroup(t.notes);return e.setContext(this.context),e}},{key:"draw",value:function(){var t=this;this.systems.forEach(function(e){return e.setContext(t.context).format()}),this.staves.forEach(function(e){return e.setContext(t.context).draw()}),this.voices.forEach(function(e){return e.setContext(t.context).draw()}),this.renderQ.forEach(function(e){e.isRendered()||e.setContext(t.context).draw()}),this.systems.forEach(function(e){return e.setContext(t.context).draw()}),this.reset()}}],[{key:"newFromElementId",value:function(e){return new t({renderer:{elementId:e,width:arguments.length<=1||void 0===arguments[1]?500:arguments[1],height:arguments.length<=2||void 0===arguments[2]?200:arguments[2]}})}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.EasyScore=e.X=void 0;var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t},r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=n(1),a=n(20),u=n(78),c=n(37);function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];m.DEBUG&&s.Vex.L("Vex.Flow.EasyScore",e)}var f=e.X=s.Vex.MakeException("EasyScoreError"),p=function(){function t(e){l(this,t),this.builder=e}return o(t,[{key:"begin",value:function(){return this.LINE}},{key:"LINE",value:function(){return{expect:[this.PIECE,this.PIECES,this.EOL]}}},{key:"PIECE",value:function(){var t=this;return{expect:[this.CHORDORNOTE,this.PARAMS],run:function(){return t.builder.commitPiece()}}}},{key:"PIECES",value:function(){return{expect:[this.COMMA,this.PIECE],zeroOrMore:!0}}},{key:"PARAMS",value:function(){return{expect:[this.DURATION,this.TYPE,this.DOTS,this.OPTS]}}},{key:"CHORDORNOTE",value:function(){return{expect:[this.CHORD,this.SINGLENOTE],or:!0}}},{key:"CHORD",value:function(){var t=this;return{expect:[this.LPAREN,this.NOTES,this.RPAREN],run:function(e){return t.builder.addChord(e.matches[1])}}}},{key:"NOTES",value:function(){return{expect:[this.NOTE],oneOrMore:!0}}},{key:"NOTE",value:function(){return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE]}}},{key:"SINGLENOTE",value:function(){var t=this;return{expect:[this.NOTENAME,this.ACCIDENTAL,this.OCTAVE],run:function(e){return t.builder.addSingleNote(e.matches[0],e.matches[1],e.matches[2])}}}},{key:"ACCIDENTAL",value:function(){return{expect:[this.ACCIDENTALS],maybe:!0}}},{key:"DOTS",value:function(){var t=this;return{expect:[this.DOT],zeroOrMore:!0,run:function(e){return t.builder.setNoteDots(e.matches[0])}}}},{key:"TYPE",value:function(){var t=this;return{expect:[this.SLASH,this.MAYBESLASH,this.TYPES],maybe:!0,run:function(e){return t.builder.setNoteType(e.matches[2])}}}},{key:"DURATION",value:function(){var t=this;return{expect:[this.SLASH,this.DURATIONS],maybe:!0,run:function(e){return t.builder.setNoteDuration(e.matches[1])}}}},{key:"OPTS",value:function(){return{expect:[this.LBRACKET,this.KEYVAL,this.KEYVALS,this.RBRACKET],maybe:!0}}},{key:"KEYVALS",value:function(){return{expect:[this.COMMA,this.KEYVAL],zeroOrMore:!0}}},{key:"KEYVAL",value:function(){var t=this;return{expect:[this.KEY,this.EQUALS,this.VAL],run:function(e){return t.builder.addNoteOption(e.matches[0],e.matches[2].slice(1,-1))}}}},{key:"VAL",value:function(){return{expect:[this.SVAL,this.DVAL],or:!0}}},{key:"KEY",value:function(){return{token:"[a-zA-Z][a-zA-Z0-9]*"}}},{key:"DVAL",value:function(){return{token:'["][^"]*["]'}}},{key:"SVAL",value:function(){return{token:"['][^']*[']"}}},{key:"NOTENAME",value:function(){return{token:"[a-gA-G]"}}},{key:"OCTAVE",value:function(){return{token:"[0-9]+"}}},{key:"ACCIDENTALS",value:function(){return{token:"bbs|bb|bss|bs|b|db|d|##|#|n|\\+\\+-|\\+-|\\+\\+|\\+|k|o"}}},{key:"DURATIONS",value:function(){return{token:"[0-9whq]+"}}},{key:"TYPES",value:function(){return{token:"[rRsSxX]"}}},{key:"LPAREN",value:function(){return{token:"[(]"}}},{key:"RPAREN",value:function(){return{token:"[)]"}}},{key:"COMMA",value:function(){return{token:"[,]"}}},{key:"DOT",value:function(){return{token:"[.]"}}},{key:"SLASH",value:function(){return{token:"[/]"}}},{key:"MAYBESLASH",value:function(){return{token:"[/]?"}}},{key:"EQUALS",value:function(){return{token:"[=]"}}},{key:"LBRACKET",value:function(){return{token:"\\["}}},{key:"RBRACKET",value:function(){return{token:"\\]"}}},{key:"EOL",value:function(){return{token:"$"}}}]),t}(),d=function(){function t(e){l(this,t),this.factory=e,this.commitHooks=[],this.reset()}return o(t,[{key:"reset",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options={stem:"auto",clef:"treble"},this.elements={notes:[],accidentals:[]},this.rollingDuration="8",this.resetPiece(),r(this.options,t)}},{key:"getFactory",value:function(){return this.factory}},{key:"getElements",value:function(){return this.elements}},{key:"addCommitHook",value:function(t){this.commitHooks.push(t)}},{key:"resetPiece",value:function(){h("resetPiece"),this.piece={chord:[],duration:this.rollingDuration,dots:0,type:void 0,options:{}}}},{key:"setNoteDots",value:function(t){h("setNoteDots:",t),t&&(this.piece.dots=t.length)}},{key:"setNoteDuration",value:function(t){h("setNoteDuration:",t),this.rollingDuration=this.piece.duration=t||this.rollingDuration}},{key:"setNoteType",value:function(t){h("setNoteType:",t),t&&(this.piece.type=t)}},{key:"addNoteOption",value:function(t,e){h("addNoteOption: key:",t,"value:",e),this.piece.options[t]=e}},{key:"addNote",value:function(t,e,n){h("addNote:",t,e,n),this.piece.chord.push({key:t,accid:e,octave:n})}},{key:"addSingleNote",value:function(t,e,n){h("addSingleNote:",t,e,n),this.addNote(t,e,n)}},{key:"addChord",value:function(t){var e=this;h("startChord"),"object"!==i(t[0])?this.addSingleNote(t[0]):t.forEach(function(t){t&&e.addNote.apply(e,function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}(t))}),h("endChord")}},{key:"commitPiece",value:function(){var t=this;h("commitPiece");var e=this.factory;if(e){var n=r({},this.options,this.piece.options),i=n.stem,o=n.clef,s="auto"===i.toLowerCase(),u=s||"up"!==i.toLowerCase()?a.StaveNote.STEM_DOWN:a.StaveNote.STEM_UP,c=this.piece,l=c.chord,f=c.duration,p=c.dots,d=c.type,b=l.map(function(t){return t.key+"/"+t.octave}),y=e.StaveNote({keys:b,duration:f,dots:p,type:d,clef:o,auto_stem:s});s||y.setStemDirection(u);var m=l.map(function(t){return t.accid||null});m.forEach(function(t,n){t&&y.addAccidental(n,e.Accidental({type:t}))});for(var v=0;v<p;v++)y.addDotToAll();this.commitHooks.forEach(function(e){return e(n,y,t)}),this.elements.notes.push(y),this.elements.accidentals.concat(m),this.resetPiece()}}}]),t}();function b(t,e){var n=t.id;void 0!==n&&e.setAttribute("id",n)}function y(t,e){if(t.class){t.class.split(/\s*,\s*/).forEach(function(t){return e.addClass(t)})}}var m=e.EasyScore=function(){function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];l(this,t),this.setOptions(e),this.defaults={clef:"treble",time:"4/4",stem:"auto"}}return o(t,[{key:"set",value:function(t){return r(this.defaults,t),this}},{key:"setOptions",value:function(t){var e=this;return this.options=r({factory:null,builder:null,commitHooks:[b,y,c.Articulation.easyScoreHook],throwOnError:!1},t),this.factory=this.options.factory,this.builder=this.options.builder||new d(this.factory),this.grammar=new p(this.builder),this.parser=new u.Parser(this.grammar),this.options.commitHooks.forEach(function(t){return e.addCommitHook(t)}),this}},{key:"setContext",value:function(t){return this.factory&&this.factory.setContext(t),this}},{key:"parse",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];this.builder.reset(e);var n=this.parser.parse(t);if(!n.success&&this.options.throwOnError)throw new f("Error parsing line: "+t,n);return n}},{key:"beam",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return this.factory.Beam({notes:t,options:e}),t}},{key:"tuplet",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return this.factory.Tuplet({notes:t,options:e}),t}},{key:"notes",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e=r({clef:this.defaults.clef,stem:this.defaults.stem},e),this.parse(t,e),this.builder.getElements().notes}},{key:"voice",value:function(t,e){return e=r({time:this.defaults.time},e),this.factory.Voice(e).addTickables(t)}},{key:"addCommitHook",value:function(t){return this.builder.addCommitHook(t)}}]),t}()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Parser=e.X=void 0;var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1);function o(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];u.DEBUG&&r.Vex.L("Vex.Flow.Parser",e)}var s=e.X=r.Vex.MakeException("ParserError");function a(t){return void 0!==t.matchedString?t.matchedString:t.results?a(t.results):1===t.length?a(t[0]):0===t.length?null:t.map(a)}var u=e.Parser=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.grammar=e}return i(t,[{key:"parse",value:function(t){this.line=t,this.pos=0,this.errorPos=-1;var e=this.expect(this.grammar.begin());return e.errorPos=this.errorPos,e}},{key:"matchFail",value:function(t){-1===this.errorPos&&(this.errorPos=this.pos),this.pos=t}},{key:"matchSuccess",value:function(){this.errorPos=-1}},{key:"matchToken",value:function(t){var e=!(arguments.length<=1||void 0===arguments[1])&&arguments[1]?new RegExp("^(("+t+"))"):new RegExp("^(("+t+")\\s*)"),n=this.line.slice(this.pos).match(e);return null!==n?{success:!0,matchedString:n[2],incrementPos:n[1].length,pos:this.pos}:{success:!1,pos:this.pos}}},{key:"expectOne",value:function(t){var e=!(arguments.length<=1||void 0===arguments[1])&&arguments[1],n=[],i=this.pos,r=!0,o=!1;e=!0===e||!0===t.maybe;for(var s=0;s<t.expect.length;s++){var a=t.expect[s],u=this.pos,c=this.expect(a);if(c.success){if(n.push(c),o=!0,t.or)break}else if(r=!1,!t.or){this.pos=u;break}}var l=t.or&&o||r,h=l||!0===e;return e&&!l&&(this.pos=i),h?this.matchSuccess():this.matchFail(i),{success:h,results:n,numMatches:l?1:0}}},{key:"expectOneOrMore",value:function(t){var e=!(arguments.length<=1||void 0===arguments[1])&&arguments[1],n=[],i=this.pos,r=0,o=!0;do{var s=this.expectOne(t);s.success?(r++,n.push(s.results)):o=!1}while(o);var a=r>0||!0===e;return!e||r>0||(this.pos=i),a?this.matchSuccess():this.matchFail(i),{success:a,results:n,numMatches:r}}},{key:"expectZeroOrMore",value:function(t){return this.expectOneOrMore(t,!0)}},{key:"expect",value:function(t){o("Evaluating rules:",t);var e=void 0;if(!t)throw new s("Invalid Rule: "+t,t);var n=t.bind(this.grammar)();if(n.token)(e=this.matchToken(n.token,!0===n.noSpace)).success&&(this.pos+=e.incrementPos);else{if(!n.expect)throw new s("Bad grammar! No `token` or `expect` property",n);e=n.oneOrMore?this.expectOneOrMore(n):n.zeroOrMore?this.expectZeroOrMore(n):this.expectOne(n)}return e.matches=[],e.results&&e.results.forEach(function(t){return e.matches.push(a(t))}),n.run&&e.success&&n.run(e),e}}]),t}()}])},t.exports=i()},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(e,n){var i=t.call(this,void 0)||this;return i.rhythm=e,i.numerator=e.Numerator,i.denominator=e.Denominator,i.symbolEnum=n,i}return r(e,t),Object.defineProperty(e.prototype,"Rhythm",{get:function(){return this.rhythm},set:function(t){this.rhythm=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"SymbolEnum",{get:function(){return this.symbolEnum},set:function(t){this.symbolEnum=t},enumerable:!0,configurable:!0}),e.prototype.clone=function(){return new e(this.rhythm.clone(),this.symbolEnum)},e.prototype.OperatorEquals=function(t){return this===t||void 0!==this&&void 0!==t&&(this.numerator===t.numerator&&this.denominator===t.denominator)},e.prototype.OperatorNotEqual=function(t){return!(this===t)},e.prototype.ToString=function(){return"Rhythm: "+this.rhythm.toString()},e}(n(61).AbstractNotationInstruction);e.RhythmInstruction=o,function(t){t[t.NONE=0]="NONE",t[t.COMMON=1]="COMMON",t[t.CUT=2]="CUT"}(e.RhythmSymbolEnum||(e.RhythmSymbolEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){return function(t,e){this.message=t,void 0!==e&&(this.message+=" "+e.toString())}}();e.MusicSheetReadingException=i;var r=function(){return function(t){this.message=t}}();e.ArgumentOutOfRangeException=r;var o=function(){return function(t){this.message=t}}();e.InvalidEnumArgumentException=o},function(t,e,n){"use strict";var i=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e};t.exports=h;var r=n(53),o=n(29);o.inherits=n(21);var s=n(86),a=n(52);o.inherits(h,s);for(var u=i(a.prototype),c=0;c<u.length;c++){var l=u[c];h.prototype[l]||(h.prototype[l]=a.prototype[l])}function h(t){if(!(this instanceof h))return new h(t);s.call(this,t),a.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",f)}function f(){this.allowHalfOpen||this._writableState.ended||r(p,this)}function p(t){t.end()}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.LeftTop=0]="LeftTop",t[t.LeftCenter=1]="LeftCenter",t[t.LeftBottom=2]="LeftBottom",t[t.CenterTop=3]="CenterTop",t[t.CenterCenter=4]="CenterCenter",t[t.CenterBottom=5]="CenterBottom",t[t.RightTop=6]="RightTop",t[t.RightCenter=7]="RightCenter",t[t.RightBottom=8]="RightBottom"}(e.TextAlignment||(e.TextAlignment={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(113),r=n(1),o=n(59),s=n(8),a=n(58),u=n(27),c=n(234),l=n(5),h=n(34),f=n(33),p=n(19),d=n(12),b=n(105),y=n(4),m=n(232),v=n(231),g=n(8),_=n(3),S=n(10),x=n(45),w=n(26),E=n(103),P=function(){function t(){this.staffEntriesWithGraphicalTies=[],this.staffEntriesWithOrnaments=[],this.staffEntriesWithChordSymbols=[],this.staffLinesWithLyricWords=[],this.staffLinesWithGraphicalExpressions=[],this.graphicalLyricWords=[]}return Object.defineProperty(t,"TextMeasurer",{get:function(){return t.textMeasurer},set:function(e){t.textMeasurer=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"leadSheet",{get:function(){return this.graphicalMusicSheet.LeadSheet},enumerable:!0,configurable:!0}),t.setMeasuresMinStaffEntriesWidth=function(t,e){for(var n=0,i=t.length;n<i;++n){t[n].minimumStaffEntriesWidth=e}},t.prototype.initialize=function(t){this.graphicalMusicSheet=t,this.rules=t.ParentMusicSheet.rules,this.prepareGraphicalMusicSheet()},t.prototype.prepareGraphicalMusicSheet=function(){var t=this.graphicalMusicSheet.ParentMusicSheet;this.staffEntriesWithGraphicalTies=[],this.staffEntriesWithOrnaments=[],this.staffEntriesWithChordSymbols=[],this.staffLinesWithLyricWords=[],this.staffLinesWithGraphicalExpressions=[],this.graphicalMusicSheet.Initialize();for(var e=this.graphicalMusicSheet.MeasureList,n=this.createAccidentalCalculators(),i=this.graphicalMusicSheet.initializeActiveClefs(),r=[],o=t.getCompleteNumberOfStaves(),s=[],a=0;a<o;a++)s.push(void 0);for(var u=0,c=t.SourceMeasures.length;u<c;++u){var l=t.SourceMeasures[u],h=this.createGraphicalMeasuresForSourceMeasure(l,n,r,s,i);e.push(h)}this.handleStaffEntries(),this.calculateVerticalContainersList(),this.setIndecesToVerticalGraphicalContainers()},t.prototype.calculate=function(){this.clearSystemsAndMeasures(),this.clearRecreatedObjects(),this.createGraphicalTies(),this.calculateSheetLabelBoundingBoxes(),this.calculateXLayout(this.graphicalMusicSheet,this.maxInstrNameLabelLength()),this.graphicalMusicSheet.MusicPages.length=0,this.calculateMusicSystems(),this.formatMeasures(),this.calculateLyricsPosition(),this.graphicalMusicSheet.MusicPages[0].PositionAndShape.BorderMarginBottom+=9,i.GraphicalMusicSheet.transformRelativeToAbsolutePosition(this.graphicalMusicSheet)},t.prototype.calculateXLayout=function(e,n){var i=0,r=this.rules.MaxInstructionsConstValue;if(this.graphicalMusicSheet.MeasureList.length>0){var o=this.graphicalMusicSheet.MeasureList[0],s=this.calculateMeasureXLayout(o);t.setMeasuresMinStaffEntriesWidth(o,s),i=1.2*s+n+r;for(var a=1;a<this.graphicalMusicSheet.MeasureList.length;a++)o=this.graphicalMusicSheet.MeasureList[a],s=this.calculateMeasureXLayout(o),t.setMeasuresMinStaffEntriesWidth(o,s),i=Math.max(i,1.2*s+r)}this.graphicalMusicSheet.MinAllowedSystemWidth=i},t.prototype.formatMeasures=function(){throw new Error("abstract, not implemented")},t.prototype.calculateMeasureXLayout=function(t){throw new Error("abstract, not implemented")},t.prototype.calculateSystemYLayout=function(){throw new Error("abstract, not implemented")},t.prototype.initStaffMeasuresCreation=function(){throw new Error("abstract, not implemented")},t.prototype.handleBeam=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.handleTiedGraphicalNote=function(t,e,n,i,r,o,s,a){throw new Error("abstract, not implemented")},t.prototype.handleVoiceEntryLyrics=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.handleVoiceEntryOrnaments=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.handleVoiceEntryArticulations=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.handleVoiceEntryTechnicalInstructions=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.handleTuplet=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.layoutVoiceEntry=function(t,e,n,i,r){throw new Error("abstract, not implemented")},t.prototype.layoutStaffEntry=function(t){throw new Error("abstract, not implemented")},t.prototype.createGraphicalTie=function(t,e,n,i,r){throw new Error("abstract, not implemented")},t.prototype.updateStaffLineBorders=function(t){throw new Error("abstract, not implemented")},t.prototype.calculateMeasureNumberPlacement=function(t){for(var e=t.StaffLines[0],n=e.Measures[0].MeasureNumber,i=0,r=e.Measures;i<r.length;i++){var o=r[i];0!==o.MeasureNumber&&1!==o.MeasureNumber||(n=o.MeasureNumber),o.MeasureNumber!==n&&o.MeasureNumber!==n+this.rules.MeasureNumberLabelOffset||o.parentSourceMeasure.ImplicitMeasure||((1!==o.MeasureNumber||1===o.MeasureNumber&&o!==e.Measures[0])&&this.calculateSingleMeasureNumberPlacement(o,e,t),n=o.MeasureNumber)}},t.prototype.calculateSingleMeasureNumberPlacement=function(t,e,n){var i=t.MeasureNumber.toString(),r=new f.GraphicalLabel(new w.Label(i),this.rules.MeasureNumberLabelHeight,p.TextAlignment.LeftBottom);r.setLabelPositionAndShapeBorders(),r.PositionAndShape.Parent=n.PositionAndShape;var o,s=e.PositionAndShape.RelativePosition.x+t.PositionAndShape.RelativePosition.x-r.PositionAndShape.BorderMarginLeft;r.PositionAndShape.BorderLeft,r.PositionAndShape.BorderMarginRight;e===n.StaffLines[0]&&n===n.Parent.MusicSystems[0]&&(e.PositionAndShape.RelativePosition.x,e.PositionAndShape.RelativePosition.x);if(t===e.Measures[0]){var a=0;if(n.GroupBrackets.length>0)for(var u=0,c=n.GroupBrackets;u<c.length;u++){var h=c[u];a=Math.min(a,h.PositionAndShape.BorderTop)}o=Math.min(0,a)}else o=0;o=Math.min(0,o),r.PositionAndShape.RelativePosition=new l.PointF2D(s,o),n.MeasureNumberLabels.push(r)},t.prototype.layoutGraphicalTie=function(t,e){throw new Error("abstract, not implemented")},t.prototype.calculateSingleStaffLineLyricsPosition=function(t,e){for(var n=0,i=this.rules.StaffHeight+6,r=[],o=t.Measures.length,s=0;s<o;++s)for(var a=t.Measures[s],u=a.PositionAndShape.RelativePosition,c=a.staffEntries.length,h=0;h<c;++h){if((v=a.staffEntries[h]).LyricsEntries.length>0){r.push(v),n=Math.max(n,v.LyricsEntries.length);for(var f=v.PositionAndShape.RelativePosition.x+u.x,p=Number.MAX_VALUE,d=Number.MAX_VALUE,b=0;b<v.LyricsEntries.length;b++){var y=v.LyricsEntries[b].GraphicalLabel;p=Math.min(p,f+y.PositionAndShape.BorderMarginLeft),d=Math.max(d,f+y.PositionAndShape.BorderMarginRight)}i=Math.max(i,0)}}var m=4;o=r.length;for(s=0;s<o;++s){var v=r[s];for(b=0;b<v.LyricsEntries.length;b++){var g=v.LyricsEntries[b],_=(y=g.GraphicalLabel,g.GetLyricsEntry.VerseNumber),S=e.indexOf(_),x=i+this.rules.LyricsHeight+(this.rules.VerticalBetweenLyricsDistance+this.rules.LyricsHeight)*S;this.leadSheet&&(x=3.4+(this.rules.VerticalBetweenLyricsDistance+this.rules.LyricsHeight)*S),y.PositionAndShape.RelativePosition=new l.PointF2D(0,x),m=Math.max(m,x)}}if(r.length>0){var w=0;m-=this.rules.StaffHeight;for(var E=t.NextStaffLine,P=0;void 0!==E;)E.PositionAndShape.RelativePosition.y+=m,E=E.NextStaffLine,P+=m,w+=m;if(0!==P){P-=this.rules.BetweenStaffDistance;for(var T=t.ParentMusicSystem.NextSystem;void 0!==T;)T.PositionAndShape.RelativePosition.y+=P,T=T.NextSystem,w+=P;t.ParentMusicSystem.Parent.PositionAndShape.BorderBottom+=w}t.ParentMusicSystem.setMusicSystemLabelsYPosition()}return r},t.prototype.calculateLyricsExtendsAndDashes=function(t){for(var e=0,n=t.length;e<n;++e)for(var i=t[e],r=0;r<i.LyricsEntries.length;r++){var o=i.LyricsEntries[r];void 0!==o.ParentLyricWord&&o.ParentLyricWord.GraphicalLyricsEntries[o.ParentLyricWord.GraphicalLyricsEntries.length-1]!==o&&this.calculateSingleLyricWord(o),o.GetLyricsEntry.extend&&this.calculateLyricExtend(o)}},t.prototype.calculateSingleOctaveShift=function(t,e,n,i){throw new Error("abstract, not implemented")},t.prototype.calculateWordRepetitionInstruction=function(t,e){throw new Error("abstract, not implemented")},t.prototype.calculateMoodAndUnknownExpression=function(t,e,n){throw new Error("abstract, not implemented")},t.prototype.clearRecreatedObjects=function(){for(var t=0,e=this.staffEntriesWithGraphicalTies.length;t<e;++t){this.staffEntriesWithGraphicalTies[t].GraphicalTies.length=0}this.staffEntriesWithGraphicalTies.length=0},t.prototype.handleStaffEntryLink=function(t,e){_.debug("handleStaffEntryLink not implemented")},t.prototype.calculateMusicSystems=function(){if(void 0!==this.graphicalMusicSheet.MeasureList){var t=this.graphicalMusicSheet.MeasureList;if(void 0!==t){for(var e=[],n=0,i=t.length;n<i;++n){for(var r=[],o=0,s=t[n].length;o<s;++o){var a=t[n][o];a.isVisible()&&r.push(a)}e.push(r)}var u=0;for(n=0,i=e.length;n<i;++n){var h=e[n];u=Math.max(h.length,u);break}if(0!==u){var f=new c.MusicSystemBuilder;f.initialize(this.graphicalMusicSheet,e,u),f.buildMusicSystems(),this.checkMeasuresForWholeRestNotes(),this.leadSheet||(this.calculateBeams(),this.optimizeRestPlacement(),this.calculateStaffEntryArticulationMarks(),this.calculateTieCurves()),this.calculateSkyBottomLines(),this.calculateTupletNumbers();for(n=0,i=this.graphicalMusicSheet.MusicPages.length;n<i;++n)for(o=0,s=(m=this.graphicalMusicSheet.MusicPages[n]).MusicSystems.length;o<s;++o){var p=m.MusicSystems[o];this.calculateMeasureNumberPlacement(p)}this.leadSheet||this.calculateSlurs(),this.leadSheet||this.calculateOrnaments(),this.updateSkyBottomLines(),this.calculateChordSymbols(),this.leadSheet||(this.calculateDynamicExpressions(),this.optimizeStaffLineDynamicExpressionsPositions(),this.calculateMoodAndUnknownExpressions(),this.calculateOctaveShifts(),this.calculateWordRepetitionInstructions()),this.calculateRepetitionEndings(),this.leadSheet||this.calculateTempoExpressions();for(n=0,i=this.graphicalMusicSheet.MusicPages.length;n<i;++n)for(o=0,s=(m=this.graphicalMusicSheet.MusicPages[n]).MusicSystems.length;o<s;++o)for(var d=0,b=(p=m.MusicSystems[o]).StaffLines.length;d<b;++d){var y=p.StaffLines[d];this.updateStaffLineBorders(y)}this.calculateComments(),this.calculateSystemYLayout(),this.calculateMarkedAreas();for(n=0,i=this.graphicalMusicSheet.MusicPages.length;n<i;++n){var m;for(o=0,s=(m=this.graphicalMusicSheet.MusicPages[n]).MusicSystems.length;o<s;++o){(p=m.MusicSystems[o]).setMusicSystemLabelsYPosition(),this.leadSheet?p===p.Parent.MusicSystems[0]&&p.createSystemLeftLine(this.rules.SystemThinLineWidth,this.rules.SystemLabelsRightMargin):(p.setYPositionsToVerticalLineObjectsAndCreateLines(this.rules),p.createSystemLeftLine(this.rules.SystemThinLineWidth,this.rules.SystemLabelsRightMargin),p.createInstrumentBrackets(this.graphicalMusicSheet.ParentMusicSheet.Instruments,this.rules.StaffHeight),p.createGroupBrackets(this.graphicalMusicSheet.ParentMusicSheet.InstrumentalGroups,this.rules.StaffHeight,0),p.alignBeginInstructions()),p.calculateBorders(this.rules)}var v=m.MusicSystems[0].PositionAndShape.BorderTop;for(o=0,s=m.MusicSystems.length;o<s;++o){(p=m.MusicSystems[o]).PositionAndShape.RelativePosition=new l.PointF2D(p.PositionAndShape.RelativePosition.x,p.PositionAndShape.RelativePosition.y-v)}for(o=0,s=m.MusicSystems.length;o<s;++o)for(d=0,b=(p=m.MusicSystems[o]).StaffLines.length;d<b;++d){(y=p.StaffLines[d]).addActivitySymbolClickArea()}m===this.graphicalMusicSheet.MusicPages[0]&&this.calculatePageLabels(m),m.PositionAndShape.calculateTopBottomBorders()}}}}},t.prototype.updateSkyBottomLine=function(t){},t.prototype.calculateSkyBottomLine=function(t){},t.prototype.calculateMarkedAreas=function(){},t.prototype.calculateComments=function(){},t.prototype.optimizeStaffLineDynamicExpressionsPositions=function(){},t.prototype.calculateChordSymbols=function(){},t.prototype.layoutMeasureWithWholeRest=function(t,e,n){},t.prototype.layoutBeams=function(t){},t.prototype.layoutArticulationMarks=function(t,e,n){},t.prototype.layoutOrnament=function(t,e,n){},t.prototype.calculateRestNotePlacementWithinGraphicalBeam=function(t,e,n,i,r){},t.prototype.calculateTupletNumbers=function(){},t.prototype.calculateSlurs=function(){},t.prototype.calculateDynamicExpressionsForSingleMultiExpression=function(t,e,n){},t.prototype.calcGraphicalRepetitionEndingsRecursively=function(t){},t.prototype.layoutSingleRepetitionEnding=function(t,e,n,i,r,o){},t.prototype.calculateTempoExpressionsForSingleMultiTempoExpression=function(t,e,n){},t.prototype.staffMeasureCreatedCalculations=function(t){},t.prototype.clearSystemsAndMeasures=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t){for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i){for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s){for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c){var h,f=u.Measures[c];if(void 0!==f.FirstInstructionStaffEntry)(h=f.PositionAndShape.ChildElements.indexOf(f.FirstInstructionStaffEntry.PositionAndShape))>-1&&f.PositionAndShape.ChildElements.splice(h,1),f.FirstInstructionStaffEntry=void 0,f.beginInstructionsWidth=0;if(void 0!==f.LastInstructionStaffEntry)(h=f.PositionAndShape.ChildElements.indexOf(f.LastInstructionStaffEntry.PositionAndShape))>-1&&f.PositionAndShape.ChildElements.splice(h,1),f.LastInstructionStaffEntry=void 0,f.endInstructionsWidth=0}u.Measures=[],u.PositionAndShape.ChildElements=[]}o.StaffLines.length=0,o.PositionAndShape.ChildElements=[]}n.MusicSystems=[],n.PositionAndShape.ChildElements=[]}this.graphicalMusicSheet.MusicPages=[]},t.prototype.handleVoiceEntry=function(e,n,i,r,o,s,a,u,c,l,h){void 0===c&&(c=!1),void 0===l&&(l=void 0),void 0===h&&(h=void 0),this.calculateStemDirectionFromVoices(e);for(var f=n.findOrCreateGraphicalVoiceEntry(e),p=0,d=e.Notes.length;p<d;++p){var b=e.Notes[p];if(!(void 0!==h&&void 0!==h.Link&&void 0!==l&&l.indexOf(b)>-1)){var y=void 0;y=c?t.symbolFactory.createGraceNote(b,f,o,u):t.symbolFactory.createNote(b,f,o,u,void 0),void 0!==b.Pitch&&this.checkNoteForAccidental(y,i,o,u,c),this.resetYPositionForLeadSheet(y.PositionAndShape),n.addGraphicalNoteToListAtCorrectYPosition(f,y),y.PositionAndShape.calculateBoundingBox(),this.leadSheet||(void 0!==b.NoteBeam&&this.handleBeam(y,b.NoteBeam,a),void 0!==b.NoteTuplet&&this.handleTuplet(y,b.NoteTuplet,s))}}return e.Articulations.length>0&&this.handleVoiceEntryArticulations(e.Articulations,e,n),e.TechnicalInstructions.length>0&&this.handleVoiceEntryTechnicalInstructions(e.TechnicalInstructions,e,n),e.LyricsEntries.size()>0&&this.handleVoiceEntryLyrics(e,n,r),void 0!==e.OrnamentContainer&&this.handleVoiceEntryOrnaments(e.OrnamentContainer,e,n),u},t.prototype.handleVoiceEntryGraceNotes=function(e,n,i,r,o,s,a,u,c){if(void 0!==e)for(var l=0,h=e.length;l<h;++l){var f=e[l],p=t.symbolFactory.createGraceStaffEntry(i,i.parentMeasure);n.push(p),this.handleVoiceEntry(f,p,r,a,o,u,c,s,!0)}},t.prototype.resetYPositionForLeadSheet=function(t){this.leadSheet&&(t.RelativePosition=new l.PointF2D(t.RelativePosition.x,0))},t.prototype.layoutVoiceEntries=function(t){if(t.PositionAndShape.RelativePosition=new l.PointF2D(0,0),!this.leadSheet)for(var e=void 0!==t.staffEntryParent,n=0,i=t.graphicalVoiceEntries;n<i.length;n++){var r=i[n].notes;if(0!==r.length){var o=r[0].sourceNote.ParentVoiceEntry,s=void 0!==r[0].sourceNote.Pitch;this.layoutVoiceEntry(o,r,t,s,e)}}},t.prototype.maxInstrNameLabelLength=function(){for(var t=0,e=0,n=this.graphicalMusicSheet.ParentMusicSheet.Instruments;e<n.length;e++){var i=n[e];if(i.Voices.length>0&&i.Voices[0].Visible){var r=new f.GraphicalLabel(i.NameLabel,this.rules.InstrumentLabelTextHeight,p.TextAlignment.LeftCenter);r.setLabelPositionAndShapeBorders(),t=Math.max(t,r.PositionAndShape.MarginSize.width)}}return t},t.prototype.calculateSheetLabelBoundingBoxes=function(){var t=this.graphicalMusicSheet.ParentMusicSheet;if(void 0!==t.Title){var e=new f.GraphicalLabel(t.Title,this.rules.SheetTitleHeight,p.TextAlignment.CenterBottom);this.graphicalMusicSheet.Title=e,e.setLabelPositionAndShapeBorders()}if(void 0!==t.Subtitle){var n=new f.GraphicalLabel(t.Subtitle,this.rules.SheetSubtitleHeight,p.TextAlignment.CenterCenter);this.graphicalMusicSheet.Subtitle=n,n.setLabelPositionAndShapeBorders()}if(void 0!==t.Composer){var i=new f.GraphicalLabel(t.Composer,this.rules.SheetComposerHeight,p.TextAlignment.RightCenter);this.graphicalMusicSheet.Composer=i,i.setLabelPositionAndShapeBorders()}if(void 0!==t.Lyricist){var r=new f.GraphicalLabel(t.Lyricist,this.rules.SheetAuthorHeight,p.TextAlignment.LeftCenter);this.graphicalMusicSheet.Lyricist=r,r.setLabelPositionAndShapeBorders()}},t.prototype.checkMeasuresForWholeRestNotes=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,o=n.MusicSystems.length;i<o;++i)for(var s=n.MusicSystems[i],a=0,u=s.StaffLines.length;a<u;++a)for(var c=s.StaffLines[a],l=0,h=c.Measures.length;l<h;++l){var f=c.Measures[l];if(1===f.staffEntries.length){var p=f.staffEntries[0];if(p.graphicalVoiceEntries.length>0&&1===p.graphicalVoiceEntries[0].notes.length){var d=p.graphicalVoiceEntries[0].notes[0];void 0===d.sourceNote.Pitch&&new r.Fraction(1,2).lt(d.sourceNote.Length)&&this.layoutMeasureWithWholeRest(d,p,f)}}}},t.prototype.optimizeRestNotePlacement=function(t,e){if(0!==t.graphicalVoiceEntries.length){var n=t.graphicalVoiceEntries[0].notes;if(0!==n.length){var i=n[0],r=void 0===i.sourceNote.Pitch;if(2===t.graphicalVoiceEntries.length){var o=!1,s=t.graphicalVoiceEntries[1].notes;if(s.length>0)o=void 0===s[0].sourceNote.Pitch;r&&o?this.calculateTwoRestNotesPlacementWithCollisionDetection(t):(r||o)&&this.calculateRestNotePlacementWithCollisionDetectionFromGraphicalNote(t)}else if(r&&t!==e.staffEntries[0]&&t!==e.staffEntries[e.staffEntries.length-1]){var a=e.staffEntries.indexOf(t),u=e.staffEntries[a-1],c=e.staffEntries[a+1];if(1===u.graphicalVoiceEntries.length){var l=u.graphicalVoiceEntries[0].notes[0];if(void 0!==l.sourceNote.NoteBeam&&1===c.graphicalVoiceEntries.length){var h=c.graphicalVoiceEntries[0].notes[0];void 0!==h.sourceNote.NoteBeam&&l.sourceNote.NoteBeam===h.sourceNote.NoteBeam&&(this.calculateRestNotePlacementWithinGraphicalBeam(t,i,l,c,h),t.PositionAndShape.calculateBoundingBox())}}}}}},t.prototype.getRelativePositionInStaffLineFromTimestamp=function(t,e,n,i,o){void 0===o&&(o=0);var s=new l.PointF2D,a=void 0,u=void 0,c=this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length,h=this.graphicalMusicSheet.GetInterpolatedIndexInVerticalContainers(t),f=Math.min(Math.floor(h),c-1),p=Math.min(Math.ceil(h),c-1);if(f<0||e<0)return s;if(a=this.getFirstLeftNotNullStaffEntryFromContainer(f,e,i),u=this.getFirstRightNotNullStaffEntryFromContainer(p,e,i),void 0!==a&&void 0!==u){var d=a.parentMeasure.PositionAndShape.RelativePosition.x;o>0&&(d=o);var b=a.PositionAndShape.RelativePosition.x+d,y=u.PositionAndShape.RelativePosition.x+u.parentMeasure.PositionAndShape.RelativePosition.x;o>0&&(y=u.PositionAndShape.RelativePosition.x+d);var m=0;if(a!==u){var v=a.getAbsoluteTimestamp(),g=u.getAbsoluteTimestamp();m=r.Fraction.minus(t,v).RealValue/r.Fraction.minus(g,v).RealValue}a.parentMeasure.ParentStaffLine!==u.parentMeasure.ParentStaffLine&&(a.parentMeasure.ParentStaffLine===n?y=n.PositionAndShape.Size.width:b=n.PositionAndShape.RelativePosition.x),s=new l.PointF2D(b+(y-b)*m,0)}return s},t.prototype.getRelativeXPositionFromTimestamp=function(t){var e=this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length,n=this.graphicalMusicSheet.GetInterpolatedIndexInVerticalContainers(t),i=Math.max(0,Math.min(Math.round(n),e-1)),r=this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].getFirstNonNullStaffEntry();return r.PositionAndShape.RelativePosition.x+r.parentMeasure.PositionAndShape.RelativePosition.x},t.prototype.calculatePageLabels=function(t){var e=10;if(t.MusicSystems.length>0){var n=t.MusicSystems[0];e=n.PositionAndShape.RelativePosition.y+n.PositionAndShape.BorderTop}if(void 0!==this.graphicalMusicSheet.Title){var i=this.graphicalMusicSheet.Title;i.PositionAndShape.Parent=t.PositionAndShape,(s=new l.PointF2D).x=this.graphicalMusicSheet.ParentMusicSheet.pageWidth/2,s.y=this.rules.TitleTopDistance+this.rules.SheetTitleHeight,i.PositionAndShape.RelativePosition=s,t.Labels.push(i)}if(void 0!==this.graphicalMusicSheet.Subtitle){var r=this.graphicalMusicSheet.Subtitle;r.PositionAndShape.Parent=t.PositionAndShape,(s=new l.PointF2D).x=this.graphicalMusicSheet.ParentMusicSheet.pageWidth/2,s.y=this.rules.TitleTopDistance+this.rules.SheetTitleHeight+this.rules.SheetMinimumDistanceBetweenTitleAndSubtitle,r.PositionAndShape.RelativePosition=s,t.Labels.push(r)}if(void 0!==this.graphicalMusicSheet.Composer){var o=this.graphicalMusicSheet.Composer;o.PositionAndShape.Parent=t.PositionAndShape,o.setLabelPositionAndShapeBorders(),(s=new l.PointF2D).x=this.graphicalMusicSheet.ParentMusicSheet.pageWidth-this.rules.PageRightMargin,s.y=e-this.rules.SystemComposerDistance,o.PositionAndShape.RelativePosition=s,t.Labels.push(o)}if(void 0!==this.graphicalMusicSheet.Lyricist){var s,a=this.graphicalMusicSheet.Lyricist;a.PositionAndShape.Parent=t.PositionAndShape,a.setLabelPositionAndShapeBorders(),(s=new l.PointF2D).x=this.rules.PageLeftMargin,s.y=e-this.rules.SystemComposerDistance,a.PositionAndShape.RelativePosition=s,t.Labels.push(a)}},t.prototype.createGraphicalTies=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++)for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0;n<e.CompleteNumberOfStaves;n++)for(var i=0;i<e.VerticalSourceStaffEntryContainers.length;i++){var r=e.VerticalSourceStaffEntryContainers[i].StaffEntries[n];if(void 0!==r)for(var o=this.graphicalMusicSheet.findGraphicalStaffEntryFromMeasureList(n,t,r),s=0,a=r.VoiceEntries.length;s<a;++s)for(var u=r.VoiceEntries[s],c=0,l=u.Notes.length;c<l;++c){var h=u.Notes[c];if(void 0!==h.NoteTie){var f=h.NoteTie;this.handleTie(f,o,n,t)}}}},t.prototype.handleTie=function(t,e,n,i){for(var r=e,o=r.findEndTieGraphicalNoteFromNote(t.StartNote),s=void 0,a=void 0,u=1;u<t.Notes.length;u++){if(o=r.findEndTieGraphicalNoteFromNote(t.Notes[u-1]),a=(s=this.graphicalMusicSheet.GetGraphicalFromSourceStaffEntry(t.Notes[u].ParentStaffEntry)).findEndTieGraphicalNoteFromNote(t.Notes[u]),void 0!==o&&void 0!==a&&void 0!==s){var c=this.createGraphicalTie(t,r,s,o,a);r.GraphicalTies.push(c),this.staffEntriesWithGraphicalTies.indexOf(r)>=0&&this.staffEntriesWithGraphicalTies.push(r)}r=s}},t.prototype.createAccidentalCalculators=function(){var t=[],e=this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure();if(void 0!==e)for(var n=0;n<e.CompleteNumberOfStaves;n++){var i=new v.AccidentalCalculator;if(t.push(i),void 0!==e.FirstInstructionsStaffEntries[n])for(var r=0,o=e.FirstInstructionsStaffEntries[n].Instructions.length;r<o;++r){var s=e.FirstInstructionsStaffEntries[n].Instructions[r];if(s instanceof d.KeyInstruction){var a=s;i.ActiveKeyInstruction=a}}}return t},t.prototype.calculateVerticalContainersList=function(){for(var t=this.graphicalMusicSheet.MeasureList[0].length,e=0;e<this.graphicalMusicSheet.MeasureList.length;e++)for(var n=0;n<t;n++)for(var i=this.graphicalMusicSheet.MeasureList[e][n],r=0,o=i.staffEntries.length;r<o;++r){var s=i.staffEntries[r],a=this.graphicalMusicSheet.getOrCreateVerticalContainer(s.getAbsoluteTimestamp());void 0!==a&&(a.StaffEntries[n]=s,s.parentVerticalContainer=a)}},t.prototype.setIndecesToVerticalGraphicalContainers=function(){for(var t=0;t<this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length;t++)this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[t].Index=t},t.prototype.createGraphicalMeasuresForSourceMeasure=function(t,e,n,i,r){this.initStaffMeasuresCreation();for(var o=[],s=[],a=[],u=[],c=0;c<t.CompleteNumberOfStaves;c++){var l=this.createGraphicalMeasure(t,a,s,e[c],r,i,n,c,u);this.staffMeasureCreatedCalculations(l),o.push(l)}return this.graphicalMusicSheet.sourceToGraphicalMeasureLinks.setValue(t,o),o},t.prototype.createGraphicalMeasure=function(e,n,i,c,l,f,p,b,y){var v=this.graphicalMusicSheet.ParentMusicSheet.getStaffFromIndex(b),_=t.symbolFactory.createStaffMeasure(e,v);if(_.hasError=e.getErrorInMeasure(b),void 0!==e.FirstInstructionsStaffEntries[b])for(var S=0,x=e.FirstInstructionsStaffEntries[b].Instructions.length;S<x;++S){var w=e.FirstInstructionsStaffEntries[b].Instructions[S];if(w instanceof d.KeyInstruction){var P=d.KeyInstruction.copy(w);0!==this.graphicalMusicSheet.ParentMusicSheet.Transpose&&_.ParentStaff.ParentInstrument.MidiInstrumentId!==g.MidiInstrument.Percussion&&void 0!==t.transposeCalculator&&t.transposeCalculator.transposeKey(P,this.graphicalMusicSheet.ParentMusicSheet.Transpose),c.ActiveKeyInstruction=P}}for(S=0,x=e.StaffLinkedExpressions[b].length;S<x;++S){if(void 0!==(F=e.StaffLinkedExpressions[b][S]).OctaveShiftStart){var T=F.OctaveShiftStart;f[b]=new m.OctaveShiftParams(T,F.AbsoluteTimestamp,T.ParentEndMultiExpression.AbsoluteTimestamp)}}for(var M=0;M<e.VerticalSourceStaffEntryContainers.length;M++){if(void 0!==(B=e.VerticalSourceStaffEntryContainers[M].StaffEntries[b])){for(S=0,x=B.Instructions.length;S<x;++S){(N=B.Instructions[S])instanceof s.ClefInstruction&&(l[b]=N)}var k=t.symbolFactory.createStaffEntry(B,_);_.staffEntries.length>M?_.addGraphicalStaffEntryAtTimestamp(k):_.addGraphicalStaffEntry(k);var O=[];void 0!==B.Link&&(B.findLinkedNotes(O),this.handleStaffEntryLink(k,y));var A=a.OctaveEnum.NONE;if(void 0!==f[b]){var C=f[b];C.getAbsoluteStartTimestamp.lte(B.AbsoluteTimestamp)&&B.AbsoluteTimestamp.lte(C.getAbsoluteEndTimestamp)&&(A=C.getOpenOctaveShift.Type)}for(S=0,x=B.VoiceEntries.length;S<x;++S){var L=B.VoiceEntries[S];this.handleVoiceEntryGraceNotes(L.graceVoiceEntriesBefore,k.graceStaffEntriesBefore,k,c,l[b],A,p,n,i),A=this.handleVoiceEntry(L,k,c,p,l[b],n,i,A,!1,O,B),this.handleVoiceEntryGraceNotes(L.graceVoiceEntriesAfter,k.graceStaffEntriesAfter,k,c,l[b],A,p,n,i)}if(B.Instructions.length>0){var I=B.Instructions[0];t.symbolFactory.createInStaffClef(k,I)}void 0!==B.ChordContainer&&(B.ParentStaff.ParentInstrument.HasChordSymbols=!0,t.symbolFactory.createChordSymbol(B,k,this.graphicalMusicSheet.ParentMusicSheet.Transpose))}}if(c.doCalculationsAtEndOfMeasure(),void 0!==e.LastInstructionsStaffEntries[b]){var R=e.LastInstructionsStaffEntries[b];for(S=0,x=R.Instructions.length;S<x;++S){var N;(N=R.Instructions[S])instanceof s.ClefInstruction&&(l[b]=N)}}for(S=0,x=e.StaffLinkedExpressions[b].length;S<x;++S){var F;void 0!==(F=e.StaffLinkedExpressions[b][S]).OctaveShiftEnd&&void 0!==f[b]&&F.OctaveShiftEnd===f[b].getOpenOctaveShift&&(f[b]=void 0)}if(0===_.staffEntries.length){var B=new h.SourceStaffEntry(new E.VerticalSourceStaffEntryContainer(_.parentSourceMeasure,_.parentSourceMeasure.AbsoluteTimestamp,_.parentSourceMeasure.CompleteNumberOfStaves),v),D=(L=new u.VoiceEntry(new r.Fraction(0,1),v.Voices[0],B),new o.Note(L,B,r.Fraction.createFromFraction(e.Duration),void 0));L.Notes.push(D);k=t.symbolFactory.createStaffEntry(B,_);_.addGraphicalStaffEntry(k),k.relInMeasureTimestamp=L.Timestamp;var V=t.symbolFactory.createVoiceEntry(L,k);k.graphicalVoiceEntries.push(V);var j=t.symbolFactory.createNote(D,V,new s.ClefInstruction,a.OctaveEnum.NONE,void 0);V.notes.push(j)}return _},t.prototype.checkNoteForAccidental=function(t,e,n,i,r){void 0===r&&(r=!1);var o=t.sourceNote.Pitch,s=this.graphicalMusicSheet.ParentMusicSheet.Transpose;0!==s&&t.sourceNote.ParentStaffEntry.ParentStaff.ParentInstrument.MidiInstrumentId!==g.MidiInstrument.Percussion&&(o=t.Transpose(e.ActiveKeyInstruction,n,s,i)),t.sourceNote.halfTone=o.getHalfTone();var a=1;r&&(a=this.rules.GraceNoteScalingFactor),e.checkAccidental(t,o,r,a)},t.prototype.updateSkyBottomLines=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s){var u=o.StaffLines[s];this.updateSkyBottomLine(u)}},t.prototype.handleStaffEntries=function(){for(var t=0,e=this.graphicalMusicSheet.MeasureList.length;t<e;++t)for(var n=this.graphicalMusicSheet.MeasureList[t],i=0,r=n.length;i<r;++i)for(var o=0,s=n[i].staffEntries;o<s.length;o++){var a=s[o];void 0!==a.parentMeasure&&a.graphicalVoiceEntries.length>0&&a.graphicalVoiceEntries[0].notes.length>0&&(this.layoutVoiceEntries(a),this.layoutStaffEntry(a))}},t.prototype.calculateSkyBottomLines=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s){var u=o.StaffLines[s];this.calculateSkyBottomLine(u)}},t.prototype.calculateBeams=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s)for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c)for(var h=u.Measures[c],f=0,p=h.staffEntries.length;f<p;++f){var d=h.staffEntries[f];this.layoutBeams(d)}},t.prototype.calculateStaffEntryArticulationMarks=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s)for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c)for(var h=u.Measures[c],f=0,p=h.staffEntries.length;f<p;++f)for(var d=h.staffEntries[f],b=0,y=d.sourceStaffEntry.VoiceEntries.length;b<y;++b){var m=d.sourceStaffEntry.VoiceEntries[b];m.Articulations.length>0&&this.layoutArticulationMarks(m.Articulations,m,d)}},t.prototype.calculateOrnaments=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s)for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c)for(var h=u.Measures[c],f=0,p=h.staffEntries.length;f<p;++f)for(var d=h.staffEntries[f],b=0,y=d.sourceStaffEntry.VoiceEntries.length;b<y;++b){var m=d.sourceStaffEntry.VoiceEntries[b];if(void 0!==m.OrnamentContainer){if(m.hasTie()&&!d.relInMeasureTimestamp.Equals(m.Timestamp))continue;this.layoutOrnament(m.OrnamentContainer,m,d),-1===this.staffEntriesWithOrnaments.indexOf(d)&&this.staffEntriesWithOrnaments.push(d)}}},t.prototype.optimizeRestPlacement=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s)for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c)for(var h=u.Measures[c],f=0,p=h.staffEntries.length;f<p;++f){var d=h.staffEntries[f];this.optimizeRestNotePlacement(d,h)}},t.prototype.calculateTwoRestNotesPlacementWithCollisionDetection=function(t){var e=t.graphicalVoiceEntries[0].notes[0],n=t.graphicalVoiceEntries[1].notes[0];n.PositionAndShape.RelativePosition=new l.PointF2D(0,2.5),t.PositionAndShape.calculateAbsolutePositionsRecursiveWithoutTopelement(),e.PositionAndShape.computeNonOverlappingPositionWithMargin(t.PositionAndShape,y.ColDirEnum.Up,new l.PointF2D(0,n.PositionAndShape.RelativePosition.y));var i=e.PositionAndShape.RelativePosition;i.y-=1,e.PositionAndShape.RelativePosition=i,t.PositionAndShape.calculateBoundingBox()},t.prototype.calculateRestNotePlacementWithCollisionDetectionFromGraphicalNote=function(t){var e,n;void 0===t.graphicalVoiceEntries[0].notes[0].sourceNote.Pitch?(e=t.graphicalVoiceEntries[0].notes[0],n=t.graphicalVoiceEntries[1].notes):(n=t.graphicalVoiceEntries[0].notes,e=t.graphicalVoiceEntries[1].notes[0]);var i=!1;t.PositionAndShape.calculateAbsolutePositionsRecursiveWithoutTopelement();for(var r=0,o=n.length;r<o;++r){var s=n[r];if(e.PositionAndShape.marginCollisionDetection(s.PositionAndShape)){i=!0;break}}if(i)if(e.sourceNote.ParentVoiceEntry.ParentVoice instanceof b.LinkedVoice){var a=n[0].PositionAndShape.BorderMarginBottom+n[0].PositionAndShape.RelativePosition.y;e.PositionAndShape.RelativePosition=new l.PointF2D(0,a-e.PositionAndShape.BorderMarginTop+.5)}else{var u=n[n.length-1],c=u.PositionAndShape.BorderMarginTop+u.PositionAndShape.RelativePosition.y;if(n[0].sourceNote.ParentVoiceEntry.ParentVoice instanceof b.LinkedVoice)e.PositionAndShape.RelativePosition=new l.PointF2D(0,c-e.PositionAndShape.BorderMarginBottom-.5);else{a=n[0].PositionAndShape.BorderMarginBottom+n[0].PositionAndShape.RelativePosition.y;e.PositionAndShape.RelativePosition=a<2?new l.PointF2D(0,a-e.PositionAndShape.BorderMarginTop+.5):new l.PointF2D(0,c-e.PositionAndShape.BorderMarginBottom-0)}}t.PositionAndShape.calculateBoundingBox()},t.prototype.calculateTieCurves=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t)for(var n=this.graphicalMusicSheet.MusicPages[t],i=0,r=n.MusicSystems.length;i<r;++i)for(var o=n.MusicSystems[i],s=0,a=o.StaffLines.length;s<a;++s)for(var u=o.StaffLines[s],c=0,l=u.Measures.length;c<l;++c)for(var h=u.Measures[c],f=0,p=h.staffEntries.length;f<p;++f)for(var d=h.staffEntries[f],b=d.GraphicalTies,y=0,m=b.length;y<m;++y){var v=b[y];if(void 0!==v.StartNote&&v.StartNote.parentVoiceEntry.parentStaffEntry===d){var g=v.StartNote.parentVoiceEntry.parentStaffEntry.parentMeasure.ParentStaffLine!==v.EndNote.parentVoiceEntry.parentStaffEntry.parentMeasure.ParentStaffLine;this.layoutGraphicalTie(v,g)}}},t.prototype.calculateLyricsPosition=function(){for(var t=new S.default,e=0,n=this.graphicalMusicSheet.ParentMusicSheet.Instruments.length;e<n;++e){var i=this.graphicalMusicSheet.ParentMusicSheet.Instruments[e];i.HasLyrics&&i.LyricVersesNumbers.length>0&&i.LyricVersesNumbers.sort()}for(e=0,n=this.graphicalMusicSheet.MusicPages.length;e<n;++e)for(var r=0,o=(l=this.graphicalMusicSheet.MusicPages[e]).MusicSystems.length;r<o;++r)for(var s=0,a=(h=l.MusicSystems[r]).StaffLines.length;s<a;++s){var u=h.StaffLines[s],c=this.calculateSingleStaffLineLyricsPosition(u,u.ParentStaff.ParentInstrument.LyricVersesNumbers);t.setValue(u,c),this.calculateLyricsExtendsAndDashes(t.getValue(u))}for(e=0,n=this.graphicalMusicSheet.MusicPages.length;e<n;++e){var l;for(r=0,o=(l=this.graphicalMusicSheet.MusicPages[e]).MusicSystems.length;r<o;++r){var h;for(s=0,a=(h=l.MusicSystems[r]).StaffLines.length;s<a;++s){u=h.StaffLines[s];this.calculateLyricsExtendsAndDashes(t.getValue(u))}}}},t.prototype.calculateSingleLyricWord=function(t){var e=t.ParentLyricWord,n=e.GraphicalLyricsEntries.indexOf(t),i=void 0;if(n>=0&&(i=e.GraphicalLyricsEntries[n+1]),void 0!==i){var r=t.StaffEntryParent.parentMeasure.ParentStaffLine,o=i.StaffEntryParent.parentMeasure.ParentStaffLine,s=t.StaffEntryParent,a=i.StaffEntryParent;if(t.StaffEntryParent.parentMeasure.ParentStaffLine===i.StaffEntryParent.parentMeasure.ParentStaffLine){var u=s.parentMeasure.PositionAndShape.RelativePosition.x+s.PositionAndShape.RelativePosition.x+t.GraphicalLabel.PositionAndShape.BorderMarginRight,c=a.parentMeasure.PositionAndShape.RelativePosition.x+a.PositionAndShape.RelativePosition.x+i.GraphicalLabel.PositionAndShape.BorderMarginLeft,l=t.GraphicalLabel.PositionAndShape.RelativePosition.y,h=1;c-u>this.rules.BetweenSyllabelMaximumDistance&&(h=Math.ceil((c-u)/this.rules.BetweenSyllabelMaximumDistance)),1===h?this.calculateSingleDashForLyricWord(r,u,c,l):this.calculateDashes(r,u,c,l)}else{u=s.parentMeasure.PositionAndShape.RelativePosition.x+s.PositionAndShape.RelativePosition.x+t.GraphicalLabel.PositionAndShape.BorderMarginRight;var f=r.Measures[r.Measures.length-1];c=f.PositionAndShape.RelativePosition.x+f.PositionAndShape.Size.width,l=t.GraphicalLabel.PositionAndShape.RelativePosition.y;if(this.calculateDashes(r,u,c,l),a!==a.parentMeasure.staffEntries[0]||a.parentMeasure!==a.parentMeasure.ParentStaffLine.Measures[0]){var p=o.Measures[0].staffEntries[0].PositionAndShape.RelativePosition.x,d=a.parentMeasure.PositionAndShape.RelativePosition.x+a.PositionAndShape.RelativePosition.x+i.GraphicalLabel.PositionAndShape.BorderMarginLeft;l=i.GraphicalLabel.PositionAndShape.RelativePosition.y,this.calculateDashes(o,p,d,l)}}}},t.prototype.calculateDashes=function(t,e,n,i){var r=n-e;if(r<this.rules.MinimumDistanceBetweenDashes)this.calculateSingleDashForLyricWord(t,e,n,i);else{var o=Math.floor(r/this.rules.MinimumDistanceBetweenDashes),s=r/this.rules.MinimumDistanceBetweenDashes,a=0;for(e+=s/2,n-=s/2;a<=Math.floor(o/2)&&n>e;)r=this.calculateRightAndLeftDashesForLyricWord(t,e,n,i),e+=s,n-=s,a++;r>s&&this.calculateSingleDashForLyricWord(t,e,n,i)}},t.prototype.calculateSingleDashForLyricWord=function(t,e,n,i){var r=new f.GraphicalLabel(new w.Label("-"),this.rules.LyricsHeight,p.TextAlignment.CenterBottom);r.setLabelPositionAndShapeBorders(),t.LyricsDashes.push(r),-1===this.staffLinesWithLyricWords.indexOf(t)&&this.staffLinesWithLyricWords.push(t),r.PositionAndShape.Parent=t.PositionAndShape;var o=new l.PointF2D(e+(n-e)/2,i);r.PositionAndShape.RelativePosition=o},t.prototype.calculateLyricExtend=function(t){for(var e=t.GraphicalLabel.PositionAndShape.RelativePosition.y,n=t.StaffEntryParent,i=t.StaffEntryParent.parentMeasure.ParentStaffLine,r=void 0,o=void 0,s=n.parentMeasure.ParentStaff.idInMusicSheet,a=n.parentVerticalContainer.Index+1;a<this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length;++a){var u=this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[a].StaffEntries[s];if(void 0!==u){if(u.hasOnlyRests())break;if(u.LyricsEntries.length>0)break;o=(r=u).parentMeasure.ParentStaffLine}}if(void 0!==r)if(i===o){var c=n.parentMeasure.PositionAndShape.RelativePosition.x+n.PositionAndShape.RelativePosition.x+t.GraphicalLabel.PositionAndShape.BorderMarginRight,l=r.parentMeasure.PositionAndShape.RelativePosition.x+r.PositionAndShape.RelativePosition.x+r.PositionAndShape.BorderMarginRight;e-=t.GraphicalLabel.PositionAndShape.Size.height/4,this.calculateSingleLyricWordWithUnderscore(i,c,l,e)}else{var h=i.Measures[i.Measures.length-1].PositionAndShape;c=n.parentMeasure.PositionAndShape.RelativePosition.x+n.PositionAndShape.RelativePosition.x+t.GraphicalLabel.PositionAndShape.BorderMarginRight,l=h.RelativePosition.x+h.Size.width;if(e-=t.GraphicalLabel.PositionAndShape.Size.height/4,this.calculateSingleLyricWordWithUnderscore(i,c,l,e),void 0===r)return;if(r!==r.parentMeasure.staffEntries[0]||r.parentMeasure!==r.parentMeasure.ParentStaffLine.Measures[0]){var f=o.Measures[0].staffEntries[0].PositionAndShape.RelativePosition.x,p=r.parentMeasure.PositionAndShape.RelativePosition.x+r.PositionAndShape.RelativePosition.x+r.PositionAndShape.BorderMarginRight;this.calculateSingleLyricWordWithUnderscore(o,f,p,e)}}},t.prototype.calculateSingleLyricWordWithUnderscore=function(t,e,n,i){var r=new l.PointF2D(e,i),o=new l.PointF2D(n,i),s=new x.GraphicalLine(r,o,this.rules.LyricUnderscoreLineWidth);t.LyricLines.push(s),-1===this.staffLinesWithLyricWords.indexOf(t)&&this.staffLinesWithLyricWords.push(t)},t.prototype.calculateRightAndLeftDashesForLyricWord=function(t,e,n,i){var r=new f.GraphicalLabel(new w.Label("-"),this.rules.LyricsHeight,p.TextAlignment.CenterBottom);r.setLabelPositionAndShapeBorders(),t.LyricsDashes.push(r),-1===this.staffLinesWithLyricWords.indexOf(t)&&this.staffLinesWithLyricWords.push(t),r.PositionAndShape.Parent=t.PositionAndShape;var o=new l.PointF2D(e,i);r.PositionAndShape.RelativePosition=o;var s=new f.GraphicalLabel(new w.Label("-"),this.rules.LyricsHeight,p.TextAlignment.CenterBottom);s.setLabelPositionAndShapeBorders(),t.LyricsDashes.push(s),s.PositionAndShape.Parent=t.PositionAndShape;var a=new l.PointF2D(n,i);return s.PositionAndShape.RelativePosition=a,s.PositionAndShape.RelativePosition.x-r.PositionAndShape.RelativePosition.x},t.prototype.calculateDynamicExpressions=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++)for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0;n<e.StaffLinkedExpressions.length;n++)if(this.graphicalMusicSheet.MeasureList[t][n].ParentStaff.ParentInstrument.Visible)for(var i=0;i<e.StaffLinkedExpressions[n].length;i++)(void 0!==e.StaffLinkedExpressions[n][i].InstantaniousDynamic||void 0!==e.StaffLinkedExpressions[n][i].StartingContinuousDynamic&&e.StaffLinkedExpressions[n][i].StartingContinuousDynamic.StartMultiExpression===e.StaffLinkedExpressions[n][i]&&0===e.StaffLinkedExpressions[n][i].UnknownList.length)&&this.calculateDynamicExpressionsForSingleMultiExpression(e.StaffLinkedExpressions[n][i],t,n)},t.prototype.calculateOctaveShifts=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++)for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0;n<e.StaffLinkedExpressions.length;n++)if(this.graphicalMusicSheet.MeasureList[t][n].ParentStaff.ParentInstrument.Visible)for(var i=0;i<e.StaffLinkedExpressions[n].length;i++)void 0!==e.StaffLinkedExpressions[n][i].OctaveShiftStart&&this.calculateSingleOctaveShift(e,e.StaffLinkedExpressions[n][i],t,n)},t.prototype.getFirstLeftNotNullStaffEntryFromContainer=function(t,e,n){if(void 0!==this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[t].StaffEntries[e])return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[t].StaffEntries[e];for(var i=t-1;i>=0;i--)if(void 0!==this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[e])return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[e]},t.prototype.getFirstRightNotNullStaffEntryFromContainer=function(t,e,n){if(void 0!==this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[t].StaffEntries[e])return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[t].StaffEntries[e];for(var i=t+1;i<this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers.length;i++)if(void 0!==this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[e])return this.graphicalMusicSheet.VerticalGraphicalStaffEntryContainers[i].StaffEntries[e]},t.prototype.calculateWordRepetitionInstructions=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++){for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0,i=e.FirstRepetitionInstructions.length;n<i;++n){var r=e.FirstRepetitionInstructions[n];this.calculateWordRepetitionInstruction(r,t)}for(n=0,i=e.LastRepetitionInstructions.length;n<i;++n){r=e.LastRepetitionInstructions[n];this.calculateWordRepetitionInstruction(r,t)}}},t.prototype.calculateRepetitionEndings=function(){for(var t=this.graphicalMusicSheet.ParentMusicSheet,e=0,n=t.Repetitions.length;e<n;++e){var i=t.Repetitions[e];this.calcGraphicalRepetitionEndingsRecursively(i)}},t.prototype.calculateTempoExpressions=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++)for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0;n<e.TempoExpressions.length;n++)this.calculateTempoExpressionsForSingleMultiTempoExpression(e,e.TempoExpressions[n],t)},t.prototype.calculateMoodAndUnknownExpressions=function(){for(var t=0;t<this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length;t++)for(var e=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures[t],n=0;n<e.StaffLinkedExpressions.length;n++)if(this.graphicalMusicSheet.MeasureList[t][n].ParentStaff.ParentInstrument.Visible)for(var i=0;i<e.StaffLinkedExpressions[n].length;i++)(e.StaffLinkedExpressions[n][i].MoodList.length>0||e.StaffLinkedExpressions[n][i].UnknownList.length>0)&&this.calculateMoodAndUnknownExpression(e.StaffLinkedExpressions[n][i],t,n)},t.prototype.calculateStemDirectionFromVoices=function(t){if(void 0!==t.ParentSourceStaffEntry.Link)return t===t.ParentSourceStaffEntry.VoiceEntries[0]?void(t.StemDirection=u.StemDirectionType.Up):void(t.StemDirection=u.StemDirectionType.Down);if(t.ParentVoice instanceof b.LinkedVoice?t.StemDirection=u.StemDirectionType.Down:t.ParentSourceStaffEntry.VoiceEntries.length>1&&(t.StemDirection=u.StemDirectionType.Up),t.StemDirection===u.StemDirectionType.Undefined&&t.Notes.length>0){var e=t.Notes[0].NoteBeam;if(void 0!==e)for(var n=0,i=e.Notes;n<i.length;n++){var r=i[n];if(r.ParentVoiceEntry!==t&&r.ParentVoiceEntry.StemDirection!==u.StemDirectionType.Undefined){t.StemDirection=r.ParentVoiceEntry.StemDirection;break}}}},t}();e.MusicSheetCalculator=P},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){"use strict";for(var i=n(0),r=n(14),o=n(39),s=n(6),a=new Array(256),u=0;u<256;u++)a[u]=u>=252?6:u>=248?5:u>=240?4:u>=224?3:u>=192?2:1;a[254]=a[254]=1;function c(){s.call(this,"utf-8 decode"),this.leftOver=null}function l(){s.call(this,"utf-8 encode")}e.utf8encode=function(t){return r.nodebuffer?o.newBufferFrom(t,"utf-8"):function(t){var e,n,i,o,s,a=t.length,u=0;for(o=0;o<a;o++)55296==(64512&(n=t.charCodeAt(o)))&&o+1<a&&56320==(64512&(i=t.charCodeAt(o+1)))&&(n=65536+(n-55296<<10)+(i-56320),o++),u+=n<128?1:n<2048?2:n<65536?3:4;for(e=r.uint8array?new Uint8Array(u):new Array(u),s=0,o=0;s<u;o++)55296==(64512&(n=t.charCodeAt(o)))&&o+1<a&&56320==(64512&(i=t.charCodeAt(o+1)))&&(n=65536+(n-55296<<10)+(i-56320),o++),n<128?e[s++]=n:n<2048?(e[s++]=192|n>>>6,e[s++]=128|63&n):n<65536?(e[s++]=224|n>>>12,e[s++]=128|n>>>6&63,e[s++]=128|63&n):(e[s++]=240|n>>>18,e[s++]=128|n>>>12&63,e[s++]=128|n>>>6&63,e[s++]=128|63&n);return e}(t)},e.utf8decode=function(t){return r.nodebuffer?i.transformTo("nodebuffer",t).toString("utf-8"):function(t){var e,n,r,o,s=t.length,u=new Array(2*s);for(n=0,e=0;e<s;)if((r=t[e++])<128)u[n++]=r;else if((o=a[r])>4)u[n++]=65533,e+=o-1;else{for(r&=2===o?31:3===o?15:7;o>1&&e<s;)r=r<<6|63&t[e++],o--;o>1?u[n++]=65533:r<65536?u[n++]=r:(r-=65536,u[n++]=55296|r>>10&1023,u[n++]=56320|1023&r)}return u.length!==n&&(u.subarray?u=u.subarray(0,n):u.length=n),i.applyFromCharCode(u)}(t=i.transformTo(r.uint8array?"uint8array":"array",t))},i.inherits(c,s),c.prototype.processChunk=function(t){var n=i.transformTo(r.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(r.uint8array){var o=n;(n=new Uint8Array(o.length+this.leftOver.length)).set(this.leftOver,0),n.set(o,this.leftOver.length)}else n=this.leftOver.concat(n);this.leftOver=null}var s=function(t,e){var n;for((e=e||t.length)>t.length&&(e=t.length),n=e-1;n>=0&&128==(192&t[n]);)n--;return n<0?e:0===n?e:n+a[t[n]]>e?n:e}(n),u=n;s!==n.length&&(r.uint8array?(u=n.subarray(0,s),this.leftOver=n.subarray(s,n.length)):(u=n.slice(0,s),this.leftOver=n.slice(s,n.length))),this.push({data:e.utf8decode(u),meta:t.meta})},c.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:e.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},e.Utf8DecodeWorker=c,i.inherits(l,s),l.prototype.processChunk=function(t){this.push({data:e.utf8encode(t.data),meta:t.meta})},e.Utf8EncodeWorker=l},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.Compare=function(t,e){if(void 0!==t.parentRepetition&&void 0!==e.parentRepetition){if(t.alignment===o.End&&e.alignment===o.End){if(t.parentRepetition.StartIndex<e.parentRepetition.StartIndex)return 1;if(t.parentRepetition.StartIndex>e.parentRepetition.StartIndex)return-1}if(t.alignment===o.Begin&&e.alignment===o.Begin){if(t.parentRepetition.EndIndex<e.parentRepetition.EndIndex)return 1;if(t.parentRepetition.EndIndex>e.parentRepetition.EndIndex)return-1}}return 0},t}();e.RepetitionInstructionComparer=i;var r,o,s=function(){function t(t,e,n,i,r){void 0===n&&(n=o.End),void 0===i&&(i=void 0),void 0===r&&(r=void 0),this.endingIndices=void 0,this.measureIndex=t,void 0!==r&&(this.endingIndices=r.slice()),this.type=e,this.alignment=n,this.parentRepetition=i}return t.prototype.CompareTo=function(t){var e=t;if(this.measureIndex>e.measureIndex)return 1;if(this.measureIndex<e.measureIndex)return-1;if(this.alignment===o.Begin){if(e.alignment===o.End)return-1;switch(this.type){case r.Ending:return 1;case r.StartLine:return e.type===r.Ending?-1:1;case r.Coda:case r.Segno:return e.type===r.Coda?1:-1}}else{if(e.alignment===o.Begin)return 1;switch(this.type){case r.Ending:return-1;case r.Fine:case r.ToCoda:return e.type===r.Ending?1:-1;case r.ForwardJump:switch(e.type){case r.Ending:case r.Fine:case r.ToCoda:return 1}return-1;case r.DalSegnoAlFine:case r.DaCapoAlFine:case r.DalSegnoAlCoda:case r.DaCapoAlCoda:case r.DaCapo:case r.DalSegno:case r.BackJumpLine:return 1}}return 0},t.prototype.equals=function(t){if(this.measureIndex!==t.measureIndex||this.type!==t.type||this.alignment!==t.alignment)return!1;if(this.endingIndices===t.endingIndices)return!0;if(void 0===this.endingIndices||void 0===t.endingIndices||this.endingIndices.length!==t.endingIndices.length)return!1;for(var e=0;e<this.endingIndices.length;e++)if(this.endingIndices[e]!==t.endingIndices[e])return!1;return!0},t}();e.RepetitionInstruction=s,function(t){t[t.StartLine=0]="StartLine",t[t.ForwardJump=1]="ForwardJump",t[t.BackJumpLine=2]="BackJumpLine",t[t.Ending=3]="Ending",t[t.DaCapo=4]="DaCapo",t[t.DalSegno=5]="DalSegno",t[t.Fine=6]="Fine",t[t.ToCoda=7]="ToCoda",t[t.DalSegnoAlFine=8]="DalSegnoAlFine",t[t.DaCapoAlFine=9]="DaCapoAlFine",t[t.DalSegnoAlCoda=10]="DalSegnoAlCoda",t[t.DaCapoAlCoda=11]="DaCapoAlCoda",t[t.Coda=12]="Coda",t[t.Segno=13]="Segno",t[t.None=14]="None"}(r=e.RepetitionInstructionEnum||(e.RepetitionInstructionEnum={})),function(t){t[t.Begin=0]="Begin",t[t.End=1]="End"}(o=e.AlignmentType||(e.AlignmentType={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(15),r=n(8),o=n(1),s=n(16),a=n(12),u=n(2),c=n(2),l=n(35),h=n(225),f=n(104),p=n(37),d=n(3),b=n(27),y=n(43),m=function(){function t(){}return t.duration=function(t,e){var n=t.RealValue;return n>=1?"w":n<1&&n>=.5?e?"w":"h":n<.5&&n>=.25?e&&n>.25?"h":"q":n<.25&&n>=.125?e&&n>.125?"q":"8":n<.125&&n>=.0625?e&&n>.0625?"8":"16":n<.0625&&n>=.03125?e&&n>.03125?"16":"32":n<.03125&&n>=.015625?e&&n>.015625?"32":"64":e?"64":"128"},t.pitch=function(e,n){return[c.NoteEnum[e.FundamentalNote].toLowerCase()+"n/"+(e.Octave-n.OctaveOffset+3),t.accidental(e.Accidental),n]},t.accidental=function(t){var e;switch(t){case u.AccidentalEnum.NONE:e="n";break;case u.AccidentalEnum.FLAT:e="b";break;case u.AccidentalEnum.SHARP:e="#";break;case u.AccidentalEnum.DOUBLESHARP:e="##";break;case u.AccidentalEnum.DOUBLEFLAT:e="bb"}return e},t.GhostNote=function(e){return new i.Flow.GhostNote({duration:t.duration(e,!1)})},t.StaveNote=function(e){var n=e.notes.reverse(),r=n[0];void 0===r.sourceNote.Pitch&&new o.Fraction(1,2).lt(r.sourceNote.Length);for(var s=[],a=[],u=r.graphicalNoteLength,c=void 0!==r.sourceNote.NoteTuplet,l=t.duration(u,c),h=void 0,f=r.numberOfDots,p=!1,d=0,y=0,m=n;y<m.length;y++){var v=m[y];if(f<v.numberOfDots&&(f=v.numberOfDots),v.sourceNote.isRest()){v.parentVoiceEntry.parentStaffEntry.parentMeasure.parentSourceMeasure.Duration.RealValue<=u.RealValue&&(l="w",f=0,p=!0,d=-25),s=["b/4"],l+="r";break}var g=v.vfpitch;if(s.push(g[0]),a.push(g[1]),!h)h=t.Clef(g[2]).type}for(var _=0,S=f;_<S;++_)l+="d";var x=new i.Flow.StaveNote({align_center:p,auto_stem:!0,clef:h,duration:l,keys:s});if(x.x_shift=d,void 0!==e.parentVoiceEntry)switch(e.parentVoiceEntry.StemDirection){case b.StemDirectionType.Up:x.setStemDirection(i.Flow.Stem.UP);break;case b.StemDirectionType.Down:x.setStemDirection(i.Flow.Stem.DOWN)}for(_=0,S=n.length;_<S;_+=1)n[_].setIndex(x,_),a[_]&&x.addAccidental(_,new i.Flow.Accidental(a[_]));for(_=0,S=f;_<S;++_)x.addDotToAll();return x},t.generateArticulations=function(t,e){var n=i.Flow.Modifier.Position.ABOVE;t.getStemDirection()===i.Flow.Stem.UP&&(n=i.Flow.Modifier.Position.BELOW);for(var r=0,o=e;r<o.length;r++){var s=void 0;switch(o[r]){case b.ArticulationEnum.accent:s=new i.Flow.Articulation("a>");break;case b.ArticulationEnum.downbow:s=new i.Flow.Articulation("am");break;case b.ArticulationEnum.fermata:s=new i.Flow.Articulation("a@a"),n=i.Flow.Modifier.Position.ABOVE;break;case b.ArticulationEnum.invertedfermata:s=new i.Flow.Articulation("a@u"),n=i.Flow.Modifier.Position.BELOW;break;case b.ArticulationEnum.lefthandpizzicato:s=new i.Flow.Articulation("a+");break;case b.ArticulationEnum.snappizzicato:s=new i.Flow.Articulation("ao");break;case b.ArticulationEnum.staccatissimo:s=new i.Flow.Articulation("av");break;case b.ArticulationEnum.staccato:s=new i.Flow.Articulation("a.");break;case b.ArticulationEnum.tenuto:s=new i.Flow.Articulation("a-");break;case b.ArticulationEnum.upbow:s=new i.Flow.Articulation("a|");break;case b.ArticulationEnum.strongaccent:s=new i.Flow.Articulation("a^")}void 0!==s&&(s.setPosition(n),t.addModifier(0,s))}},t.Clef=function(t,e){var n,i;switch(void 0===e&&(e="default"),"default"!==e&&"small"!==e&&(d.warn('Invalid VexFlow clef size "'+e+'" specified. Using "default".'),e="default"),t.ClefType){case r.ClefEnum.G:switch(t.Line){case 1:n="french";break;case 2:n="treble";break;default:n="treble",d.error("Clef "+r.ClefEnum[t.ClefType]+" on line "+t.Line+' not supported by VexFlow. Using default value "'+n+'".')}break;case r.ClefEnum.F:switch(t.Line){case 4:n="bass";break;case 3:n="baritone-f";break;case 5:n="subbass";break;default:n="bass",d.error("Clef "+r.ClefEnum[t.ClefType]+" on line "+t.Line+' not supported by VexFlow. Using default value "'+n+'".')}break;case r.ClefEnum.C:switch(t.Line){case 3:n="alto";break;case 4:n="tenor";break;case 1:n="soprano";break;case 2:n="mezzo-soprano";break;default:n="alto",d.error("Clef "+r.ClefEnum[t.ClefType]+" on line "+t.Line+' not supported by VexFlow. Using default value "'+n+'".')}break;case r.ClefEnum.percussion:n="percussion";break;case r.ClefEnum.TAB:n="tab"}return 1===t.OctaveOffset&&"bass"!==n?i="8va":-1===t.OctaveOffset&&(i="8vb"),{type:n,size:e,annotation:i}},t.TimeSignature=function(t){var e;switch(t.SymbolEnum){case s.RhythmSymbolEnum.NONE:e=t.Rhythm.Numerator+"/"+t.Rhythm.Denominator;break;case s.RhythmSymbolEnum.COMMON:e="C";break;case s.RhythmSymbolEnum.CUT:e="C|"}return new i.Flow.TimeSignature(e)},t.keySignature=function(e){if(void 0!==e){var n;switch(e.Mode){case a.KeyEnum.minor:n=t.minorMap[e.Key]+"m";break;case a.KeyEnum.major:n=t.majorMap[e.Key];break;case a.KeyEnum.none:default:n="C"}return n}},t.line=function(t,e){switch(t){case l.SystemLinesEnum.SingleThin:return e===y.SystemLinePosition.MeasureBegin?i.Flow.StaveConnector.type.SINGLE:i.Flow.StaveConnector.type.SINGLE_RIGHT;case l.SystemLinesEnum.DoubleThin:return i.Flow.StaveConnector.type.DOUBLE;case l.SystemLinesEnum.ThinBold:return i.Flow.StaveConnector.type.BOLD_DOUBLE_RIGHT;case l.SystemLinesEnum.BoldThinDots:return i.Flow.StaveConnector.type.BOLD_DOUBLE_LEFT;case l.SystemLinesEnum.DotsThinBold:case l.SystemLinesEnum.DotsBoldBoldDots:return i.Flow.StaveConnector.type.BOLD_DOUBLE_RIGHT;case l.SystemLinesEnum.None:return i.Flow.StaveConnector.type.NONE}},t.font=function(t,e,n){void 0===e&&(e=h.FontStyles.Regular),void 0===n&&(n=f.Fonts.TimesNewRoman);var i="normal",r="normal";switch(e){case h.FontStyles.Bold:r="bold";break;case h.FontStyles.Italic:i="italic";break;case h.FontStyles.BoldItalic:i="italic",r="bold";break;case h.FontStyles.Underlined:}switch(n){case f.Fonts.Kokila:}return i+" "+r+" "+Math.floor(t)+"px 'Times New Roman'"},t.fontStyle=function(t){switch(t){case h.FontStyles.Bold:return"bold";case h.FontStyles.Italic:return"italic";case h.FontStyles.BoldItalic:return"italic bold";default:return"normal"}},t.style=function(t){return p.OUTLINE_AND_FILL_STYLE_DICT.getValue(t)},t.majorMap={"-1":"F","-2":"Bb","-3":"Eb","-4":"Ab","-5":"Db","-6":"Gb","-7":"Cb","-8":"Fb",0:"C",1:"G",2:"D",3:"A",4:"E",5:"B",6:"F#",7:"C#",8:"G#"},t.minorMap={"-1":"D","-2":"G","-3":"C","-4":"F","-5":"Bb","-6":"Eb","-7":"Ab","-8":"Db",0:"A",1:"E",2:"B",3:"F#",4:"C#",5:"G#",6:"D#",7:"A#",8:"E#"},t}();e.VexFlowConverter=m,function(t){t[t.NONE=1]="NONE",t[t.CODA_LEFT=2]="CODA_LEFT",t[t.CODA_RIGHT=3]="CODA_RIGHT",t[t.SEGNO_LEFT=4]="SEGNO_LEFT",t[t.SEGNO_RIGHT=5]="SEGNO_RIGHT",t[t.DC=6]="DC",t[t.DC_AL_CODA=7]="DC_AL_CODA",t[t.DC_AL_FINE=8]="DC_AL_FINE",t[t.DS=9]="DS",t[t.DS_AL_CODA=10]="DS_AL_CODA",t[t.DS_AL_FINE=11]="DS_AL_FINE",t[t.FINE=12]="FINE"}(e.VexFlowRepetitionType||(e.VexFlowRepetitionType={})),function(t){t[t.SINGLE=1]="SINGLE",t[t.DOUBLE=2]="DOUBLE",t[t.END=3]="END",t[t.REPEAT_BEGIN=4]="REPEAT_BEGIN",t[t.REPEAT_END=5]="REPEAT_END",t[t.REPEAT_BOTH=6]="REPEAT_BOTH",t[t.NONE=7]="NONE"}(e.VexFlowBarlineType||(e.VexFlowBarlineType={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(19),r=n(104),o=function(){function t(t,e,n){void 0===t&&(t=""),void 0===e&&(e=i.TextAlignment.LeftBottom),void 0===n&&(n=r.Fonts.TimesNewRoman),this.text=t,this.textAlignment=e,this.font=n}return t.prototype.ToString=function(){return this.text},t}();e.Label=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,r,o=n(1),s=n(59),a=n(2),u=n(107),c=n(2),l=n(10),h=function(){function t(t,e,n){this.notes=[],this.articulations=[],this.technicalInstructions=[],this.lyricsEntries=new l.default,this.arpeggiosNotesIndices=[],this.stemDirection=r.Undefined,this.timestamp=t,this.parentVoice=e,this.parentSourceStaffEntry=n}return Object.defineProperty(t.prototype,"ParentSourceStaffEntry",{get:function(){return this.parentSourceStaffEntry},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentVoice",{get:function(){return this.parentVoice},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Timestamp",{get:function(){return this.timestamp},set:function(t){this.timestamp=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Notes",{get:function(){return this.notes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Articulations",{get:function(){return this.articulations},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TechnicalInstructions",{get:function(){return this.technicalInstructions},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LyricsEntries",{get:function(){return this.lyricsEntries},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ArpeggiosNotesIndices",{get:function(){return this.arpeggiosNotesIndices},set:function(t){this.arpeggiosNotesIndices=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OrnamentContainer",{get:function(){return this.ornamentContainer},set:function(t){this.ornamentContainer=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemDirection",{get:function(){return this.stemDirection},set:function(t){this.stemDirection=t},enumerable:!0,configurable:!0}),t.isSupportedArticulation=function(t){switch(t){case i.accent:case i.strongaccent:case i.invertedstrongaccent:case i.staccato:case i.staccatissimo:case i.spiccato:case i.tenuto:case i.fermata:case i.invertedfermata:case i.breathmark:case i.caesura:case i.lefthandpizzicato:case i.naturalharmonic:case i.snappizzicato:case i.upbow:case i.downbow:return!0;default:return!1}},t.prototype.hasTie=function(){for(var t=0,e=this.Notes.length;t<e;++t){if(void 0!==this.Notes[t].NoteTie)return!0}return!1},t.prototype.hasSlur=function(){for(var t=0,e=this.Notes.length;t<e;++t){if(this.Notes[t].NoteSlurs.length>0)return!0}return!1},t.prototype.isStaccato=function(){for(var t=0,e=this.Articulations.length;t<e;++t){if(this.Articulations[t]===i.staccato)return!0}return!1},t.prototype.isAccent=function(){for(var t=0,e=this.Articulations.length;t<e;++t){var n=this.Articulations[t];if(n===i.accent||n===i.strongaccent)return!0}return!1},t.prototype.getVerseNumberForLyricEntry=function(t){var e=1;return this.lyricsEntries.forEach(function(n,i){t===i&&(e=n)}),e},t.prototype.createVoiceEntriesForOrnament=function(t,e){void 0===t&&(t=this);var n=[];if(void 0!==t.ornamentContainer){var i=this.notes[0],r=i.Length,s=t.ParentVoice,a=t.Timestamp,l=o.Fraction.createFromFraction(a);switch(t.ornamentContainer.GetOrnament){case u.OrnamentEnum.Trill:var h=new o.Fraction(r.Numerator,8*r.Denominator),f=i.Pitch.getTransposedPitch(1),p=e.getAlterationForPitch(f);t.OrnamentContainer.AccidentalAbove!==c.AccidentalEnum.NONE&&(p=t.ornamentContainer.AccidentalAbove);for(var d=0;d<8;d++)l=o.Fraction.plus(a,new o.Fraction(d*h.Numerator,h.Denominator)),d%2==0?this.createBaseVoiceEntry(l,h,s,i,n):this.createAlteratedVoiceEntry(l,h,s,f,p,n);break;case u.OrnamentEnum.Turn:var b=new o.Fraction(r.Numerator,4*r.Denominator),y=i.Pitch.getTransposedPitch(-1),m=e.getAlterationForPitch(y),v=(f=i.Pitch.getTransposedPitch(1),e.getAlterationForPitch(f));this.createAlteratedVoiceEntry(l,b,s,f,v,n),l.Add(b),this.createBaseVoiceEntry(l,b,s,i,n),l.Add(b),this.createAlteratedVoiceEntry(l,b,s,y,m,n),l.Add(b),this.createBaseVoiceEntry(l,b,s,i,n);break;case u.OrnamentEnum.InvertedTurn:var g=new o.Fraction(r.Numerator,4*r.Denominator);y=i.Pitch.getTransposedPitch(-1),m=e.getAlterationForPitch(y),f=i.Pitch.getTransposedPitch(1),v=e.getAlterationForPitch(f);this.createAlteratedVoiceEntry(l,g,s,y,m,n),l.Add(g),this.createBaseVoiceEntry(l,g,s,i,n),l.Add(g),this.createAlteratedVoiceEntry(l,g,s,f,v,n),l.Add(g),this.createBaseVoiceEntry(l,g,s,i,n);break;case u.OrnamentEnum.DelayedTurn:var _=new o.Fraction(r.Numerator,2*r.Denominator);y=i.Pitch.getTransposedPitch(-1),m=e.getAlterationForPitch(y),f=i.Pitch.getTransposedPitch(1),v=e.getAlterationForPitch(f);this.createBaseVoiceEntry(l,_,s,i,n),l=o.Fraction.plus(a,_),_.Denominator=8*r.Denominator,this.createAlteratedVoiceEntry(l,_,s,f,v,n),l.Add(_),this.createBaseVoiceEntry(l,_,s,i,n),l.Add(_),this.createAlteratedVoiceEntry(l,_,s,y,m,n),l.Add(_),this.createBaseVoiceEntry(l,_,s,i,n);break;case u.OrnamentEnum.DelayedInvertedTurn:var S=new o.Fraction(r.Numerator,2*r.Denominator);y=i.Pitch.getTransposedPitch(-1),m=e.getAlterationForPitch(y),f=i.Pitch.getTransposedPitch(1),v=e.getAlterationForPitch(f);this.createBaseVoiceEntry(l,S,s,i,n),l=o.Fraction.plus(a,S),S.Denominator=8*r.Denominator,this.createAlteratedVoiceEntry(l,S,s,y,m,n),l.Add(S),this.createBaseVoiceEntry(l,S,s,i,n),l.Add(S),this.createAlteratedVoiceEntry(l,S,s,f,v,n),l.Add(S),this.createBaseVoiceEntry(l,S,s,i,n);break;case u.OrnamentEnum.Mordent:var x=new o.Fraction(r.Numerator,4*r.Denominator);f=i.Pitch.getTransposedPitch(1),p=e.getAlterationForPitch(f);this.createBaseVoiceEntry(l,x,s,i,n),l.Add(x),this.createAlteratedVoiceEntry(l,x,s,f,p,n),x.Denominator=2*r.Denominator,l=o.Fraction.plus(a,x),this.createBaseVoiceEntry(l,x,s,i,n);break;case u.OrnamentEnum.InvertedMordent:var w=new o.Fraction(r.Numerator,4*r.Denominator);y=i.Pitch.getTransposedPitch(-1),p=e.getAlterationForPitch(y);this.createBaseVoiceEntry(l,w,s,i,n),l.Add(w),this.createAlteratedVoiceEntry(l,w,s,y,p,n),w.Denominator=2*r.Denominator,l=o.Fraction.plus(a,w),this.createBaseVoiceEntry(l,w,s,i,n);break;default:throw new RangeError}return n}},t.prototype.createBaseVoiceEntry=function(e,n,i,r,o){var u=new t(e,i,r.ParentStaffEntry),c=new a.Pitch(r.Pitch.FundamentalNote,r.Pitch.Octave,r.Pitch.Accidental),l=new s.Note(u,void 0,n,c);u.Notes.push(l),o.push(u)},t.prototype.createAlteratedVoiceEntry=function(e,n,i,r,o,u){var c=new t(e,i,void 0),l=new a.Pitch(r.FundamentalNote,r.Octave,o),h=new s.Note(c,void 0,n,l);c.Notes.push(h),u.push(c)},t}();e.VoiceEntry=h,function(t){t[t.accent=0]="accent",t[t.strongaccent=1]="strongaccent",t[t.invertedstrongaccent=2]="invertedstrongaccent",t[t.staccato=3]="staccato",t[t.staccatissimo=4]="staccatissimo",t[t.spiccato=5]="spiccato",t[t.tenuto=6]="tenuto",t[t.fermata=7]="fermata",t[t.invertedfermata=8]="invertedfermata",t[t.breathmark=9]="breathmark",t[t.caesura=10]="caesura",t[t.lefthandpizzicato=11]="lefthandpizzicato",t[t.naturalharmonic=12]="naturalharmonic",t[t.snappizzicato=13]="snappizzicato",t[t.upbow=14]="upbow",t[t.downbow=15]="downbow",t[t.scoop=16]="scoop",t[t.plop=17]="plop",t[t.doit=18]="doit",t[t.falloff=19]="falloff",t[t.stress=20]="stress",t[t.unstress=21]="unstress",t[t.detachedlegato=22]="detachedlegato",t[t.otherarticulation=23]="otherarticulation"}(i=e.ArticulationEnum||(e.ArticulationEnum={})),function(t){t[t.Undefined=-1]="Undefined",t[t.Up=0]="Up",t[t.Down=1]="Down",t[t.None=2]="None"}(r=e.StemDirectionType||(e.StemDirectionType={}))},function(t,e,n){"use strict";var i=null;i="undefined"!=typeof Promise?Promise:n(139),t.exports={Promise:i}},function(t,e,n){(function(t){function n(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):"[object Array]"===n(t)},e.isBoolean=function(t){return"boolean"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return"number"==typeof t},e.isString=function(t){return"string"==typeof t},e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return"[object RegExp]"===n(t)},e.isObject=function(t){return"object"==typeof t&&null!==t},e.isDate=function(t){return"[object Date]"===n(t)},e.isError=function(t){return"[object Error]"===n(t)||t instanceof Error},e.isFunction=function(t){return"function"==typeof t},e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,n(11).Buffer)},function(t,e){var n,i,r=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{i="function"==typeof clearTimeout?clearTimeout:s}catch(t){i=s}}();var u,c=[],l=!1,h=-1;function f(){l&&u&&(l=!1,u.length?c=u.concat(c):h=-1,c.length&&p())}function p(){if(!l){var t=a(f);l=!0;for(var e=c.length;e;){for(u=c,c=[];++h<e;)u&&u[h].run();h=-1,e=c.length}u=null,l=!1,function(t){if(i===clearTimeout)return clearTimeout(t);if((i===s||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(t);try{i(t)}catch(e){try{return i.call(null,t)}catch(e){return i.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function b(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||l||a(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=b,r.addListener=b,r.once=b,r.off=b,r.removeListener=b,r.removeAllListeners=b,r.emit=b,r.prependListener=b,r.prependOnceListener=b,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.translateText=function(t,e){if(void 0===this.defaultTextTranslation)return e},t}();e.ITextTranslation=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(224),s=n(60),a=n(5),u=n(99),c=n(37);e.unitInPixels=10;var l=function(t){function n(e,n,i){void 0===i&&(i=!1);var r=t.call(this,new u.VexFlowTextMeasurer,i)||this;return r.zoom=1,r.backend=n,r}return r(n,t),n.prototype.clear=function(){this.backend.clear()},n.prototype.scale=function(t){this.zoom=t,this.backend.scale(this.zoom)},n.prototype.resize=function(t,e){this.backend.resize(t,e)},n.prototype.translate=function(t,e){this.backend.translate(t,e)},n.prototype.calculatePixelDistance=function(t){return t*e.unitInPixels},n.prototype.drawMeasure=function(t){for(var n in t.setAbsoluteCoordinates(t.PositionAndShape.AbsolutePosition.x*e.unitInPixels,t.PositionAndShape.AbsolutePosition.y*e.unitInPixels),t.draw(this.backend.getContext()),t.vfVoices)if(t.vfVoices.hasOwnProperty(n))for(var i=0,r=t.vfVoices[n].tickables;i<r.length;i++){var o=r[i];o.getAttribute("type"),0}for(var s=0,a=t.staffEntries;s<a.length;s++){var u=a[s];this.drawStaffEntry(u)}},n.prototype.drawStaffEntry=function(t){void 0!==t.graphicalChordContainer&&this.drawLabel(t.graphicalChordContainer.GetGraphicalLabel,c.GraphicalLayers.Notes),t.LyricsEntries.length>0&&this.drawLyrics(t.LyricsEntries,c.GraphicalLayers.Notes)},n.prototype.drawLyrics=function(t,e){var n=this;t.forEach(function(t){return n.drawLabel(t.GraphicalLabel,e)})},n.prototype.drawInstrumentBrace=function(t,e){t.draw(this.backend.getContext())},n.prototype.drawGroupBracket=function(t,e){t.draw(this.backend.getContext())},n.prototype.renderLabel=function(t,n,i,r,o,s){var a=t.Label.fontHeight*e.unitInPixels,u=t.Label,c=u.fontStyle,l=u.font,h=u.text;this.backend.renderText(a,c,l,h,o,s)},n.prototype.renderRectangle=function(t,e,n,i){this.backend.renderRectangle(t,n,i)},n.prototype.applyScreenTransformation=function(t){return new a.PointF2D(t.x*e.unitInPixels,t.y*e.unitInPixels)},n.prototype.applyScreenTransformationForRect=function(t){return new s.RectangleF2D(t.x*e.unitInPixels,t.y*e.unitInPixels,t.width*e.unitInPixels,t.height*e.unitInPixels)},n}(o.MusicSheetDrawer);e.VexFlowMusicSheetDrawer=l},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(19),s=n(233),a=n(4),u=n(57),c=n(20),l=function(t){function e(e,n,i,r){void 0===r&&(r=void 0);var o=t.call(this)||this;return o.label=e,o.boundingBox=new a.BoundingBox(o,r),o.label.fontHeight=n,o.label.textAlignment=i,o}return r(e,t),Object.defineProperty(e.prototype,"Label",{get:function(){return this.label},enumerable:!0,configurable:!0}),e.prototype.toString=function(){return this.label.text},e.prototype.setLabelPositionAndShapeBorders=function(){if(""!==this.Label.text.trim()){var t=u.EngravingRules.Rules.LabelMarginBorderFactor,e=c.MusicSheetCalculator.TextMeasurer.computeTextWidthToHeightRatio(this.Label.text,this.Label.font,this.Label.fontStyle),n=this.Label.fontHeight,i=n*e,r=this.PositionAndShape;switch(this.Label.textAlignment){case o.TextAlignment.CenterBottom:r.BorderTop=-n,r.BorderLeft=-i/2,r.BorderBottom=0,r.BorderRight=i/2;break;case o.TextAlignment.CenterCenter:r.BorderTop=-n/2,r.BorderLeft=-i/2,r.BorderBottom=n/2,r.BorderRight=i/2;break;case o.TextAlignment.CenterTop:r.BorderTop=0,r.BorderLeft=-i/2,r.BorderBottom=n,r.BorderRight=i/2;break;case o.TextAlignment.LeftBottom:r.BorderTop=-n,r.BorderLeft=0,r.BorderBottom=0,r.BorderRight=i;break;case o.TextAlignment.LeftCenter:r.BorderTop=-n/2,r.BorderLeft=0,r.BorderBottom=n/2,r.BorderRight=i;break;case o.TextAlignment.LeftTop:r.BorderTop=0,r.BorderLeft=0,r.BorderBottom=n,r.BorderRight=i;break;case o.TextAlignment.RightBottom:r.BorderTop=-n,r.BorderLeft=-i,r.BorderBottom=0,r.BorderRight=0;break;case o.TextAlignment.RightCenter:r.BorderTop=-n/2,r.BorderLeft=-i,r.BorderBottom=n/2,r.BorderRight=0;break;case o.TextAlignment.RightTop:r.BorderTop=0,r.BorderLeft=-i,r.BorderBottom=n,r.BorderRight=0}r.BorderMarginTop=r.BorderTop-n*t,r.BorderMarginLeft=r.BorderLeft-n*t,r.BorderMarginBottom=r.BorderBottom+n*t,r.BorderMarginRight=r.BorderRight+n*t}},e}(s.Clickable);e.GraphicalLabel=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=n(8),o=n(12),s=n(16),a=function(){function t(t,e){this.voiceEntries=[],this.instructions=[],this.verticalContainerParent=t,this.parentStaff=e}return Object.defineProperty(t.prototype,"ParentStaff",{get:function(){return this.parentStaff},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VerticalContainerParent",{get:function(){return this.verticalContainerParent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Timestamp",{get:function(){if(void 0!==this.VerticalContainerParent)return this.VerticalContainerParent.Timestamp},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AbsoluteTimestamp",{get:function(){if(void 0!==this.VerticalContainerParent)return i.Fraction.plus(this.VerticalContainerParent.ParentMeasure.AbsoluteTimestamp,this.VerticalContainerParent.Timestamp)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VoiceEntries",{get:function(){return this.voiceEntries},set:function(t){this.voiceEntries=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Link",{get:function(){return this.staffEntryLink},set:function(t){this.staffEntryLink=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Instructions",{get:function(){return this.instructions},set:function(t){this.instructions=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ChordContainer",{get:function(){return this.chordSymbolContainer},set:function(t){this.chordSymbolContainer=t},enumerable:!0,configurable:!0}),t.prototype.removeAllInstructionsOfTypeClefInstruction=function(){for(var t=0,e=0;t<this.instructions.length;)this.instructions[t]instanceof r.ClefInstruction?(this.instructions.splice(t,1),e++):t++;return e},t.prototype.removeFirstInstructionOfTypeClefInstruction=function(){for(var t=0;t<this.instructions.length;t++)if(this.instructions[t]instanceof r.ClefInstruction)return this.instructions.splice(t,1),!0;return!1},t.prototype.removeAllInstructionsOfTypeKeyInstruction=function(){for(var t=0,e=0;t<this.instructions.length;)this.instructions[t]instanceof o.KeyInstruction?(this.instructions.splice(t,1),e++):t++;return e},t.prototype.removeFirstInstructionOfTypeKeyInstruction=function(){for(var t=0;t<this.instructions.length;t++)if(this.instructions[t]instanceof o.KeyInstruction)return this.instructions.splice(t,1),!0;return!1},t.prototype.removeAllInstructionsOfTypeRhythmInstruction=function(){for(var t=0,e=0;t<this.instructions.length;)this.instructions[t]instanceof s.RhythmInstruction?(this.instructions.splice(t,1),e++):t++;return e},t.prototype.removeFirstInstructionOfTypeRhythmInstruction=function(){for(var t=0;t<this.instructions.length;t++)if(this.instructions[t]instanceof s.RhythmInstruction)return this.instructions.splice(t,1),!0;return!1},t.prototype.calculateMinNoteLength=function(){for(var t=new i.Fraction(Number.MAX_VALUE,1),e=0,n=this.VoiceEntries.length;e<n;++e)for(var r=this.VoiceEntries[e],o=0,s=r.Notes.length;o<s;++o){var a=r.Notes[o];a.Length.lt(t)&&(t=a.Length)}return t},t.prototype.calculateMaxNoteLength=function(){for(var t=new i.Fraction(0,1),e=0,n=this.VoiceEntries.length;e<n;++e)for(var r=this.VoiceEntries[e],o=0,s=r.Notes.length;o<s;++o){var a=r.Notes[o];if(void 0!==a.NoteTie){for(var u=i.Fraction.createFromFraction(a.Length),c=!1,l=0,h=a.NoteTie.Notes;l<h.length;l++){var f=h[l];f!==a?c&&u.Add(f.Length):c=!0}t.lt(a.NoteTie.Duration)&&(t=a.NoteTie.Duration)}else t.lt(a.Length)&&(t=a.Length)}return t},t.prototype.hasNotes=function(){for(var t=0,e=this.VoiceEntries.length;t<e;++t){if(this.VoiceEntries[t].Notes.length>0)return!0}return!1},t.prototype.hasTie=function(){for(var t=0,e=this.VoiceEntries.length;t<e;++t){if(this.VoiceEntries[t].hasTie())return!0}return!1},t.prototype.findLinkedNotes=function(t){for(var e=0,n=this.voiceEntries.length;e<n;++e)for(var i=this.voiceEntries[e],r=0,o=i.Notes.length;r<o;++r){var s=i.Notes[r];s.ParentStaffEntry===this&&t.push(s)}},t}();e.SourceStaffEntry=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.SingleThin=0]="SingleThin",t[t.DoubleThin=1]="DoubleThin",t[t.ThinBold=2]="ThinBold",t[t.BoldThinDots=3]="BoldThinDots",t[t.DotsThinBold=4]="DotsThinBold",t[t.DotsBoldBoldDots=5]="DotsBoldBoldDots",t[t.None=6]="None"}(e.SystemLinesEnum||(e.SystemLinesEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9);function r(t,e,n){for(var r=n||i.defaultEquals,o=t.length,s=0;s<o;s++)if(r(t[s],e))return s;return-1}e.indexOf=r,e.lastIndexOf=function(t,e,n){for(var r=n||i.defaultEquals,o=t.length-1;o>=0;o--)if(r(t[o],e))return o;return-1},e.contains=function(t,e,n){return r(t,e,n)>=0},e.remove=function(t,e,n){var i=r(t,e,n);return!(i<0||(t.splice(i,1),0))},e.frequency=function(t,e,n){for(var r=n||i.defaultEquals,o=t.length,s=0,a=0;a<o;a++)r(t[a],e)&&s++;return s},e.equals=function(t,e,n){var r=n||i.defaultEquals;if(t.length!==e.length)return!1;for(var o=t.length,s=0;s<o;s++)if(!r(t[s],e[s]))return!1;return!0},e.copy=function(t){return t.concat()},e.swap=function(t,e,n){if(e<0||e>=t.length||n<0||n>=t.length)return!1;var i=t[e];return t[e]=t[n],t[n]=i,!0},e.toString=function(t){return"["+t.toString()+"]"},e.forEach=function(t,e){for(var n=0,i=t;n<i.length;n++)if(!1===e(i[n]))return}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,r=n(242);!function(t){t[t.BaseWritingColor=0]="BaseWritingColor",t[t.FollowingCursor=1]="FollowingCursor",t[t.AlternativeFollowingCursor=2]="AlternativeFollowingCursor",t[t.PlaybackCursor=3]="PlaybackCursor",t[t.Highlighted=4]="Highlighted",t[t.ErrorUnderlay=5]="ErrorUnderlay",t[t.Selected=6]="Selected",t[t.SelectionSymbol=7]="SelectionSymbol",t[t.DebugColor1=8]="DebugColor1",t[t.DebugColor2=9]="DebugColor2",t[t.DebugColor3=10]="DebugColor3",t[t.SplitScreenDivision=11]="SplitScreenDivision",t[t.GreyTransparentOverlay=12]="GreyTransparentOverlay",t[t.MarkedArea1=13]="MarkedArea1",t[t.MarkedArea2=14]="MarkedArea2",t[t.MarkedArea3=15]="MarkedArea3",t[t.MarkedArea4=16]="MarkedArea4",t[t.MarkedArea5=17]="MarkedArea5",t[t.MarkedArea6=18]="MarkedArea6",t[t.MarkedArea7=19]="MarkedArea7",t[t.MarkedArea8=20]="MarkedArea8",t[t.MarkedArea9=21]="MarkedArea9",t[t.MarkedArea10=22]="MarkedArea10",t[t.Comment1=23]="Comment1",t[t.Comment2=24]="Comment2",t[t.Comment3=25]="Comment3",t[t.Comment4=26]="Comment4",t[t.Comment5=27]="Comment5",t[t.Comment6=28]="Comment6",t[t.Comment7=29]="Comment7",t[t.Comment8=30]="Comment8",t[t.Comment9=31]="Comment9",t[t.Comment10=32]="Comment10"}(i=e.OutlineAndFillStyleEnum||(e.OutlineAndFillStyleEnum={})),e.OUTLINE_AND_FILL_STYLE_DICT=new r.Dictionary,e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.BaseWritingColor,"Thistle"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.FollowingCursor,"Aqua"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.AlternativeFollowingCursor,"Azure"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.PlaybackCursor,"Bisque"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Highlighted,"CadetBlue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.ErrorUnderlay,"DarkBlue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Selected,"DarkGoldenRod"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.SelectionSymbol,"BlanchedAlmond"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.DebugColor1,"Chartreuse"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.DebugColor2,"DarkGreen"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.DebugColor3,"DarkOrange"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.SplitScreenDivision,"FireBrick"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.GreyTransparentOverlay,"DarkSalmon"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea1,"DarkSeaGreen"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea2,"DarkOrchid"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea3,"Aquamarine"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea4,"DarkKhaki"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea5,"ForestGreen"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea6,"AliceBlue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea7,"DeepPink"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea8,"Coral"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea9,"DarkOliveGreen"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.MarkedArea10,"Chocolate"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment1,"DodgerBlue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment2,"Blue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment3,"Beige"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment4,"Crimson"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment5,"Fuchsia"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment6,"Brown"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment7,"BlanchedAlmond"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment8,"CornflowerBlue"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment9,"Cornsilk"),e.OUTLINE_AND_FILL_STYLE_DICT.setValue(i.Comment10,"DarkGrey"),function(t){t[t.MarkedArea=0]="MarkedArea",t[t.Comment=1]="Comment"}(e.StyleSets||(e.StyleSets={})),function(t){t[t.Background=0]="Background",t[t.Highlight=1]="Highlight",t[t.MeasureError=2]="MeasureError",t[t.SelectionSymbol=3]="SelectionSymbol",t[t.Cursor=4]="Cursor",t[t.PSI_Debug=5]="PSI_Debug",t[t.Notes=6]="Notes",t[t.Comment=7]="Comment",t[t.Debug_above=8]="Debug_above"}(e.GraphicalLayers||(e.GraphicalLayers={})),function(t){t[t.Normal=0]="Normal",t[t.Selected=1]="Selected",t[t.Follow_Confirmed=2]="Follow_Confirmed",t[t.QFeedback_NotFound=3]="QFeedback_NotFound",t[t.QFeedback_OK=4]="QFeedback_OK",t[t.QFeedback_Perfect=5]="QFeedback_Perfect",t[t.Debug1=6]="Debug1",t[t.Debug2=7]="Debug2",t[t.Debug3=8]="Debug3"}(e.NoteState||(e.NoteState={}))},function(t,e){var n=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=n)},function(t,e,n){"use strict";(function(e){t.exports={isNode:void 0!==e,newBufferFrom:function(t,n){return new e(t,n)},allocBuffer:function(t){return e.alloc?e.alloc(t):new e(t)},isBuffer:function(t){return e.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}}).call(this,n(11).Buffer)},function(t,e){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(t){return"function"==typeof t}function r(t){return"object"==typeof t&&null!==t}function o(t){return void 0===t}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},n.prototype.emit=function(t){var e,n,s,a,u,c;if(this._events||(this._events={}),"error"===t&&(!this._events.error||r(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var l=new Error('Uncaught, unspecified "error" event. ('+e+")");throw l.context=e,l}if(o(n=this._events[t]))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),n.apply(this,a)}else if(r(n))for(a=Array.prototype.slice.call(arguments,1),s=(c=n.slice()).length,u=0;u<s;u++)c[u].apply(this,a);return!0},n.prototype.addListener=function(t,e){var s;if(!i(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,i(e.listener)?e.listener:e),this._events[t]?r(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,r(this._events[t])&&!this._events[t].warned&&(s=o(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&s>0&&this._events[t].length>s&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(t,e){if(!i(e))throw TypeError("listener must be a function");var n=!1;function r(){this.removeListener(t,r),n||(n=!0,e.apply(this,arguments))}return r.listener=e,this.on(t,r),this},n.prototype.removeListener=function(t,e){var n,o,s,a;if(!i(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(s=(n=this._events[t]).length,o=-1,n===e||i(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(r(n)){for(a=s;a-- >0;)if(n[a]===e||n[a].listener&&n[a].listener===e){o=a;break}if(o<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(o,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},n.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(i(n=this._events[t]))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},n.prototype.listeners=function(t){return this._events&&this._events[t]?i(this._events[t])?[this._events[t]]:this._events[t].slice():[]},n.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(i(e))return 1;if(e)return e.length}return 0},n.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,n){t.exports=r;var i=n(40).EventEmitter;function r(){i.call(this)}n(21)(r,i),r.Readable=n(163),r.Writable=n(157),r.Duplex=n(156),r.Transform=n(155),r.PassThrough=n(154),r.Stream=r,r.prototype.pipe=function(t,e){var n=this;function r(e){t.writable&&!1===t.write(e)&&n.pause&&n.pause()}function o(){n.readable&&n.resume&&n.resume()}n.on("data",r),t.on("drain",o),t._isStdio||e&&!1===e.end||(n.on("end",a),n.on("close",u));var s=!1;function a(){s||(s=!0,t.end())}function u(){s||(s=!0,"function"==typeof t.destroy&&t.destroy())}function c(t){if(l(),0===i.listenerCount(this,"error"))throw t}function l(){n.removeListener("data",r),t.removeListener("drain",o),n.removeListener("end",a),n.removeListener("close",u),n.removeListener("error",c),t.removeListener("error",c),n.removeListener("end",l),n.removeListener("close",l),t.removeListener("close",l)}return n.on("error",c),t.on("error",c),n.on("end",l),n.on("close",l),t.on("close",l),t.emit("pipe",n),t}},function(t,e,n){"use strict";var i,r,o,s=n(195),a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";function u(){o=!1}function c(t){if(t){if(t!==i){if(t.length!==a.length)throw new Error("Custom alphabet for shortid must be "+a.length+" unique characters. You submitted "+t.length+" characters: "+t);var e=t.split("").filter(function(t,e,n){return e!==n.lastIndexOf(t)});if(e.length)throw new Error("Custom alphabet for shortid must be "+a.length+" unique characters. These characters were not unique: "+e.join(", "));i=t,u()}}else i!==a&&(i=a,u())}function l(){return o||(o=function(){i||c(a);for(var t,e=i.split(""),n=[],r=s.nextValue();e.length>0;)r=s.nextValue(),t=Math.floor(r*e.length),n.push(e.splice(t,1)[0]);return n.join("")}())}t.exports={characters:function(t){return c(t),i},seed:function(t){s.seed(t),r!==t&&(u(),r=t)},lookup:function(t){return l()[t]},shuffled:l}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.MeasureBegin=0]="MeasureBegin",t[t.MeasureEnd=1]="MeasureEnd"}(e.SystemLinePosition||(e.SystemLinePosition={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.contains2=function(t,e){for(var n=0;n<t.length;n++)if(t[n]===e)return!0;return!1},t.last=function(t){return t[t.length-1]},t.removeDictElementIfTrue=function(t,e,n){var i=[];e.forEach(function(e,r){n(t,e,r)&&i.push(e)});for(var r=0;r<i.length;r++)e.remove(i[r])},t.getLastElement=function(t){return t[t.length-1]},t.binarySearch=function(t,e,n,i,r){void 0===i&&(i=0),void 0===r&&(r=t.length-1);for(var o=1;i<r;){var s=n(t[o=Math.floor((i+r)/2)],e);if(0===s)return o;s<0&&(i=o+1),0<s&&(r=o)}return-o},t}();e.CollectionUtil=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(37),r=function(){function t(t,e,n,r){void 0===n&&(n=0),void 0===r&&(r=i.OutlineAndFillStyleEnum.BaseWritingColor),this.start=t,this.end=e,this.width=n,this.styleId=r}return Object.defineProperty(t.prototype,"Start",{get:function(){return this.start},set:function(t){this.start=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"End",{get:function(){return this.end},set:function(t){this.end=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Width",{get:function(){return this.width},set:function(t){this.width=t},enumerable:!0,configurable:!0}),t}();e.GraphicalLine=r},function(t,e,n){"use strict";t.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},function(t,e,n){"use strict";var i=n(0);var r=function(){for(var t,e=[],n=0;n<256;n++){t=n;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[n]=t}return e}();t.exports=function(t,e){return void 0!==t&&t.length?"string"!==i.getTypeOf(t)?function(t,e,n,i){var o=r,s=i+n;t^=-1;for(var a=i;a<s;a++)t=t>>>8^o[255&(t^e[a])];return-1^t}(0|e,t,t.length,0):function(t,e,n,i){var o=r,s=i+n;t^=-1;for(var a=i;a<s;a++)t=t>>>8^o[255&(t^e.charCodeAt(a))];return-1^t}(0|e,t,t.length,0):0}},function(t,e,n){"use strict";var i=n(28),r=n(76),o=n(75),s=n(74);o=n(75);function a(t,e,n,i,r){this.compressedSize=t,this.uncompressedSize=e,this.crc32=n,this.compression=i,this.compressedContent=r}a.prototype={getContentWorker:function(){var t=new r(i.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new o("data_length")),e=this;return t.on("end",function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),t},getCompressedWorker:function(){return new r(i.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},a.createWorkerFrom=function(t,e,n){return t.pipe(new s).pipe(new o("uncompressedSize")).pipe(e.compressWorker(n)).pipe(new o("compressedSize")).withStreamInfo("compression",e)},t.exports=a},function(t,e,n){t.exports=!n(80)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){"use strict";t.exports=s;var i=n(18),r=n(29);function o(t){this.afterTransform=function(e,n){return function(t,e,n){var i=t._transformState;i.transforming=!1;var r=i.writecb;if(!r)return t.emit("error",new Error("no writecb in Transform class"));i.writechunk=null,i.writecb=null,null!==n&&void 0!==n&&t.push(n);r(e);var o=t._readableState;o.reading=!1,(o.needReadable||o.length<o.highWaterMark)&&t._read(o.highWaterMark)}(t,e,n)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null,this.writeencoding=null}function s(t){if(!(this instanceof s))return new s(t);i.call(this,t),this._transformState=new o(this);var e=this;this._readableState.needReadable=!0,this._readableState.sync=!1,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.once("prefinish",function(){"function"==typeof this._flush?this._flush(function(t){a(e,t)}):a(e)})}function a(t,e){if(e)return t.emit("error",e);var n=t._writableState,i=t._transformState;if(n.length)throw new Error("calling transform done when ws.length != 0");if(i.transforming)throw new Error("calling transform done when still transforming");return t.push(null)}r.inherits=n(21),r.inherits(s,i),s.prototype.push=function(t,e){return this._transformState.needTransform=!1,i.prototype.push.call(this,t,e)},s.prototype._transform=function(t,e,n){throw new Error("not implemented")},s.prototype._write=function(t,e,n){var i=this._transformState;if(i.writecb=n,i.writechunk=t,i.writeencoding=e,!i.transforming){var r=this._readableState;(i.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},s.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0}},function(t,e,n){"use strict";(function(e,i){t.exports=p;var r=n(53),o=!e.browser&&["v0.10","v0.9."].indexOf(e.version.slice(0,5))>-1?i:r,s=n(11).Buffer;p.WritableState=f;var a=n(29);a.inherits=n(21);var u,c={deprecate:n(159)};!function(){try{u=n(41)}catch(t){}finally{u||(u=n(40).EventEmitter)}}();var l;s=n(11).Buffer;function h(){}function f(t,e){l=l||n(18),t=t||{},this.objectMode=!!t.objectMode,e instanceof l&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var i=t.highWaterMark,s=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:s,this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var a=!1===t.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var n=t._writableState,i=n.sync,s=n.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(n),e)!function(t,e,n,i,o){--e.pendingcb,n?r(o,i):o(i);t._writableState.errorEmitted=!0,t.emit("error",i)}(t,n,i,e,s);else{var a=m(n);a||n.corked||n.bufferProcessing||!n.bufferedRequest||y(t,n),i?o(b,t,n,a,s):b(t,n,a,s)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new _(this),this.corkedRequestsFree.next=new _(this)}function p(t){if(l=l||n(18),!(this instanceof p||this instanceof l))return new p(t);this._writableState=new f(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev)),u.call(this)}function d(t,e,n,i,r,o,s){e.writelen=i,e.writecb=s,e.writing=!0,e.sync=!0,n?t._writev(r,e.onwrite):t._write(r,o,e.onwrite),e.sync=!1}function b(t,e,n,i){n||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}(t,e),e.pendingcb--,i(),g(t,e)}function y(t,e){e.bufferProcessing=!0;var n=e.bufferedRequest;if(t._writev&&n&&n.next){var i=e.bufferedRequestCount,r=new Array(i),o=e.corkedRequestsFree;o.entry=n;for(var s=0;n;)r[s]=n,n=n.next,s+=1;d(t,e,!0,e.length,r,"",o.finish),e.pendingcb++,e.lastBufferedRequest=null,e.corkedRequestsFree=o.next,o.next=null}else{for(;n;){var a=n.chunk,u=n.encoding,c=n.callback;if(d(t,e,!1,e.objectMode?1:a.length,a,u,c),n=n.next,e.writing)break}null===n&&(e.lastBufferedRequest=null)}e.bufferedRequestCount=0,e.bufferedRequest=n,e.bufferProcessing=!1}function m(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function v(t,e){e.prefinished||(e.prefinished=!0,t.emit("prefinish"))}function g(t,e){var n=m(e);return n&&(0===e.pendingcb?(v(t,e),e.finished=!0,t.emit("finish")):v(t,e)),n}function _(t){var e=this;this.next=null,this.entry=null,this.finish=function(n){var i=e.entry;for(e.entry=null;i;){var r=i.callback;t.pendingcb--,r(n),i=i.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}}a.inherits(p,u),f.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(f.prototype,"buffer",{get:c.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.")})}catch(t){}}(),p.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe. Not readable."))},p.prototype.write=function(t,e,n){var i=this._writableState,o=!1;return"function"==typeof e&&(n=e,e=null),s.isBuffer(t)?e="buffer":e||(e=i.defaultEncoding),"function"!=typeof n&&(n=h),i.ended?function(t,e){var n=new Error("write after end");t.emit("error",n),r(e,n)}(this,n):function(t,e,n,i){var o=!0;if(!s.isBuffer(n)&&"string"!=typeof n&&null!==n&&void 0!==n&&!e.objectMode){var a=new TypeError("Invalid non-string/buffer chunk");t.emit("error",a),r(i,a),o=!1}return o}(this,i,t,n)&&(i.pendingcb++,o=function(t,e,n,i,r){n=function(t,e,n){return t.objectMode||!1===t.decodeStrings||"string"!=typeof e||(e=new s(e,n)),e}(e,n,i),s.isBuffer(n)&&(i="buffer");var o=e.objectMode?1:n.length;e.length+=o;var a=e.length<e.highWaterMark;a||(e.needDrain=!0);if(e.writing||e.corked){var u=e.lastBufferedRequest;e.lastBufferedRequest=new function(t,e,n){this.chunk=t,this.encoding=e,this.callback=n,this.next=null}(n,i,r),u?u.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else d(t,e,!1,o,n,i,r);return a}(this,i,t,e,n)),o},p.prototype.cork=function(){this._writableState.corked++},p.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||y(this,t))},p.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=t.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((t+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+t);this._writableState.defaultEncoding=t},p.prototype._write=function(t,e,n){n(new Error("not implemented"))},p.prototype._writev=null,p.prototype.end=function(t,e,n){var i=this._writableState;"function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!==t&&void 0!==t&&this.write(t,e),i.corked&&(i.corked=1,this.uncork()),i.ending||i.finished||function(t,e,n){e.ending=!0,g(t,e),n&&(e.finished?r(n):t.once("finish",n));e.ended=!0,t.writable=!1}(this,i,n)}}).call(this,n(30),n(161).setImmediate)},function(t,e,n){"use strict";(function(e){!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports=function(t,n,i,r){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var o,s,a=arguments.length;switch(a){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick(function(){t.call(null,n)});case 3:return e.nextTick(function(){t.call(null,n,i)});case 4:return e.nextTick(function(){t.call(null,n,i,r)});default:for(o=new Array(a-1),s=0;s<o.length;)o[s++]=arguments[s];return e.nextTick(function(){t.apply(null,o)})}}:t.exports=e.nextTick}).call(this,n(30))},function(t,e,n){(function(e,i){var r;
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.2+97478eb6
 */
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.2+97478eb6
 */
r=function(){"use strict";function t(t){return"function"==typeof t}var r=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},o=0,s=void 0,a=void 0,u=function(t,e){b[o]=t,b[o+1]=e,2===(o+=2)&&(a?a(y):S())};var c="undefined"!=typeof window?window:void 0,l=c||{},h=l.MutationObserver||l.WebKitMutationObserver,f="undefined"==typeof self&&void 0!==e&&"[object process]"==={}.toString.call(e),p="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function d(){var t=setTimeout;return function(){return t(y,1)}}var b=new Array(1e3);function y(){for(var t=0;t<o;t+=2){(0,b[t])(b[t+1]),b[t]=void 0,b[t+1]=void 0}o=0}var m,v,g,_,S=void 0;function x(t,e){var n=this,i=new this.constructor(P);void 0===i[E]&&W(i);var r=n._state;if(r){var o=arguments[r-1];u(function(){return j(r,i,o,n._result)})}else F(n,i,t,e);return i}function w(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=new this(P);return L(e,t),e}f?S=function(){return e.nextTick(y)}:h?(v=0,g=new h(y),_=document.createTextNode(""),g.observe(_,{characterData:!0}),S=function(){_.data=v=++v%2}):p?((m=new MessageChannel).port1.onmessage=y,S=function(){return m.port2.postMessage(0)}):S=void 0===c?function(){try{var t=n(168);return void 0!==(s=t.runOnLoop||t.runOnContext)?function(){s(y)}:d()}catch(t){return d()}}():d();var E=Math.random().toString(36).substring(16);function P(){}var T=void 0,M=1,k=2,O=new D;function A(t){try{return t.then}catch(t){return O.error=t,O}}function C(e,n,i){n.constructor===e.constructor&&i===x&&n.constructor.resolve===w?function(t,e){e._state===M?R(t,e._result):e._state===k?N(t,e._result):F(e,void 0,function(e){return L(t,e)},function(e){return N(t,e)})}(e,n):i===O?(N(e,O.error),O.error=null):void 0===i?R(e,n):t(i)?function(t,e,n){u(function(t){var i=!1,r=function(t,e,n,i){try{t.call(e,n,i)}catch(t){return t}}(n,e,function(n){i||(i=!0,e!==n?L(t,n):R(t,n))},function(e){i||(i=!0,N(t,e))},t._label);!i&&r&&(i=!0,N(t,r))},t)}(e,n,i):R(e,n)}function L(t,e){var n,i;t===e?N(t,new TypeError("You cannot resolve a promise with itself")):(i=typeof(n=e),null===n||"object"!==i&&"function"!==i?R(t,e):C(t,e,A(e)))}function I(t){t._onerror&&t._onerror(t._result),B(t)}function R(t,e){t._state===T&&(t._result=e,t._state=M,0!==t._subscribers.length&&u(B,t))}function N(t,e){t._state===T&&(t._state=k,t._result=e,u(I,t))}function F(t,e,n,i){var r=t._subscribers,o=r.length;t._onerror=null,r[o]=e,r[o+M]=n,r[o+k]=i,0===o&&t._state&&u(B,t)}function B(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var i=void 0,r=void 0,o=t._result,s=0;s<e.length;s+=3)i=e[s],r=e[s+n],i?j(n,i,r,o):r(o);t._subscribers.length=0}}function D(){this.error=null}var V=new D;function j(e,n,i,r){var o=t(i),s=void 0,a=void 0,u=void 0,c=void 0;if(o){if((s=function(t,e){try{return t(e)}catch(t){return V.error=t,V}}(i,r))===V?(c=!0,a=s.error,s.error=null):u=!0,n===s)return void N(n,new TypeError("A promises callback cannot return that same promise."))}else s=r,u=!0;n._state!==T||(o&&u?L(n,s):c?N(n,a):e===M?R(n,s):e===k&&N(n,s))}var G=0;function W(t){t[E]=G++,t._state=void 0,t._result=void 0,t._subscribers=[]}var U=function(){function t(t,e){this._instanceConstructor=t,this.promise=new t(P),this.promise[E]||W(this.promise),r(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?R(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&R(this.promise,this._result))):N(this.promise,new Error("Array Methods must be provided an Array"))}return t.prototype._enumerate=function(t){for(var e=0;this._state===T&&e<t.length;e++)this._eachEntry(t[e],e)},t.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,i=n.resolve;if(i===w){var r=A(t);if(r===x&&t._state!==T)this._settledAt(t._state,e,t._result);else if("function"!=typeof r)this._remaining--,this._result[e]=t;else if(n===H){var o=new n(P);C(o,t,r),this._willSettleAt(o,e)}else this._willSettleAt(new n(function(e){return e(t)}),e)}else this._willSettleAt(i(t),e)},t.prototype._settledAt=function(t,e,n){var i=this.promise;i._state===T&&(this._remaining--,t===k?N(i,n):this._result[e]=n),0===this._remaining&&R(i,this._result)},t.prototype._willSettleAt=function(t,e){var n=this;F(t,void 0,function(t){return n._settledAt(M,e,t)},function(t){return n._settledAt(k,e,t)})},t}();var H=function(){function t(e){this[E]=G++,this._result=this._state=void 0,this._subscribers=[],P!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof t?function(t,e){try{e(function(e){L(t,e)},function(e){N(t,e)})}catch(e){N(t,e)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return t.prototype.catch=function(t){return this.then(null,t)},t.prototype.finally=function(t){var e=this.constructor;return this.then(function(n){return e.resolve(t()).then(function(){return n})},function(n){return e.resolve(t()).then(function(){throw n})})},t}();return H.prototype.then=x,H.all=function(t){return new U(this,t).promise},H.race=function(t){var e=this;return r(t)?new e(function(n,i){for(var r=t.length,o=0;o<r;o++)e.resolve(t[o]).then(n,i)}):new e(function(t,e){return e(new TypeError("You must pass an array to race."))})},H.resolve=w,H.reject=function(t){var e=new this(P);return N(e,t),e},H._setScheduler=function(t){a=t},H._setAsap=function(t){u=t},H._asap=u,H.polyfill=function(){var t=void 0;if(void 0!==i)t=i;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment")}var e=t.Promise;if(e){var n=null;try{n=Object.prototype.toString.call(e.resolve())}catch(t){}if("[object Promise]"===n&&!e.cast)return}t.Promise=H},H.Promise=H,H},t.exports=r()}).call(this,n(30),n(23))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.isStringInStringList=function(t,e){for(var n=0,i=t.length;n<i;++n){var r=t[n];if(e.toLowerCase()===r.toLowerCase().trim())return!0}return!1},t}();e.AbstractExpression=i,function(t){t[t.Above=0]="Above",t[t.Below=1]="Below",t[t.NotYetDefined=2]="NotYetDefined"}(e.PlacementEnum||(e.PlacementEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.voiceEntries=[],this.volume=1,this.parent=t,this.visible=!0,this.audible=!0,this.following=!0,this.voiceId=e}return Object.defineProperty(t.prototype,"VoiceEntries",{get:function(){return this.voiceEntries},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Parent",{get:function(){return this.parent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Visible",{get:function(){return this.visible},set:function(t){this.visible=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Audible",{get:function(){return this.audible},set:function(t){this.audible=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Following",{get:function(){return this.following},set:function(t){this.following=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VoiceId",{get:function(){return this.voiceId},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Volume",{get:function(){return this.volume},set:function(t){this.volume=t},enumerable:!0,configurable:!0}),t}();e.Voice=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(106),r=n(3),o=function(){function t(){this.noteDistances=[1,1,1.3,1.6,2,2.5,3,4],this.noteDistancesScalingFactors=[1,2,4,8,16,32,64,128],this.durationDistanceDict={},this.durationScalingDistanceDict={},this.samplingUnit=3*t.unit,this.sheetTitleHeight=4,this.sheetSubtitleHeight=2,this.sheetMinimumDistanceBetweenTitleAndSubtitle=1,this.sheetComposerHeight=2,this.sheetAuthorHeight=2,this.pagePlacementEnum=i.PagePlacementEnum.Down,this.pageHeight=100001,this.pageTopMargin=5,this.pageBottomMargin=5,this.pageLeftMargin=5,this.pageRightMargin=5,this.titleTopDistance=9,this.titleBottomDistance=1,this.staffDistance=7,this.betweenStaffDistance=5,this.staffHeight=4,this.betweenStaffLinesDistance=t.unit,this.systemDistance=10,this.systemLeftMargin=0,this.systemRightMargin=0,this.firstSystemMargin=15,this.systemLabelsRightMargin=2,this.systemComposerDistance=2,this.instrumentLabelTextHeight=2,this.minimumAllowedDistanceBetweenSystems=3,this.lastSystemMaxScalingFactor=1.4,this.beamWidth=t.unit/2,this.beamSpaceWidth=t.unit/3,this.beamForwardLength=1.25*t.unit,this.clefLeftMargin=.5,this.clefRightMargin=.75,this.betweenKeySymbolsDistance=.2,this.keyRightMargin=.75,this.rhythmRightMargin=1.25,this.inStaffClefScalingFactor=.8,this.distanceBetweenNaturalAndSymbolWhenCancelling=.4,this.noteHelperLinesOffset=.25,this.measureLeftMargin=.7,this.measureRightMargin=0,this.distanceBetweenLastInstructionAndRepetitionBarline=1,this.arpeggioDistance=.6,this.staccatoShorteningFactor=2,this.idealStemLength=3,this.stemNoteHeadBorderYOffset=.2,this.stemWidth=.13,this.stemMargin=.2,this.stemMinLength=2.5,this.stemMaxLength=4.5,this.beamSlopeMaxAngle=10,this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine=1,this.graceNoteScalingFactor=.6,this.graceNoteXOffset=.2,this.wedgeOpeningLength=1.2,this.wedgeMeasureEndOpeningLength=.75,this.wedgeMeasureBeginOpeningLength=.75,this.wedgePlacementAboveY=-1.5,this.wedgePlacementBelowY=1.5,this.wedgeHorizontalMargin=.6,this.wedgeVerticalMargin=.5,this.distanceOffsetBetweenTwoHorizontallyCrossedWedges=.3,this.wedgeMinLength=2,this.distanceBetweenAdjacentDynamics=.75,this.tempoChangeMeasureValitidy=4,this.tempoContinousFactor=.7,this.staccatoScalingFactor=.8,this.betweenDotsDistance=.8,this.ornamentAccidentalScalingFactor=.65,this.chordSymbolTextHeight=2,this.fingeringLabelFontHeight=1.7,this.measureNumberLabelHeight=1.5*t.unit,this.measureNumberLabelOffset=2,this.tupletNumberLabelHeight=1.5*t.unit,this.tupletNumberYOffset=.5,this.labelMarginBorderFactor=.1,this.tupletVerticalLineLength=.5,this.bezierCurveStepSize=1e3,this.calculateCurveParametersArrays(),this.tieGhostObjectWidth=.75,this.tieYPositionOffsetFactor=.3,this.minimumNeededXspaceForTieGhostObject=1,this.tieHeightMinimum=.28,this.tieHeightMaximum=1.2,this.tieHeightInterpolationK=.0288,this.tieHeightInterpolationD=.136,this.slurNoteHeadYOffset=.5,this.slurStemXOffset=.3,this.slurSlopeMaxAngle=15,this.slurTangentMinAngle=30,this.slurTangentMaxAngle=80,this.slursStartingAtSameStaffEntryYOffset=.8,this.repetitionEndingLabelHeight=2,this.repetitionEndingLabelXOffset=.5,this.repetitionEndingLabelYOffset=.3,this.repetitionEndingLineYLowerOffset=.5,this.repetitionEndingLineYUpperOffset=.3,this.lyricsHeight=2,this.verticalBetweenLyricsDistance=.5,this.betweenSyllabelMaximumDistance=10,this.minimumDistanceBetweenDashes=5,this.instantaniousTempoTextHeight=2.3,this.continuousDynamicTextHeight=2.3,this.moodTextHeight=2.3,this.unknownTextHeight=2,this.continuousTempoTextHeight=2.3,this.staffLineWidth=.12,this.ledgerLineWidth=.12,this.wedgeLineWidth=.12,this.tupletLineWidth=.12,this.lyricUnderscoreLineWidth=.12,this.systemThinLineWidth=.12,this.systemBoldLineWidth=t.unit/2,this.systemRepetitionEndingLineWidth=.12,this.systemDotWidth=t.unit/5,this.distanceBetweenVerticalSystemLines=.35,this.distanceBetweenDotAndLine=.7,this.octaveShiftLineWidth=.12,this.octaveShiftVerticalLineLength=t.unit,this.graceLineWidth=this.staffLineWidth*this.GraceNoteScalingFactor,this.minimumStaffLineDistance=1,this.minimumCrossedBeamDifferenceMargin=1e-4,this.displacedNoteMargin=.1,this.minNoteDistance=2,this.subMeasureXSpacingThreshold=35,this.measureDynamicsMaxScalingFactor=2.5,this.populateDictionaries();try{this.maxInstructionsConstValue=this.ClefLeftMargin+this.ClefRightMargin+this.KeyRightMargin+this.RhythmRightMargin+11}catch(t){r.info("EngravingRules()",t)}}return Object.defineProperty(t,"Rules",{get:function(){return void 0!==t.rules?t.rules:t.rules=new t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SamplingUnit",{get:function(){return this.samplingUnit},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetTitleHeight",{get:function(){return this.sheetTitleHeight},set:function(t){this.sheetTitleHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetSubtitleHeight",{get:function(){return this.sheetSubtitleHeight},set:function(t){this.sheetSubtitleHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetMinimumDistanceBetweenTitleAndSubtitle",{get:function(){return this.sheetMinimumDistanceBetweenTitleAndSubtitle},set:function(t){this.sheetMinimumDistanceBetweenTitleAndSubtitle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetComposerHeight",{get:function(){return this.sheetComposerHeight},set:function(t){this.sheetComposerHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetAuthorHeight",{get:function(){return this.sheetAuthorHeight},set:function(t){this.sheetAuthorHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PagePlacement",{get:function(){return this.pagePlacementEnum},set:function(t){this.pagePlacementEnum=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PageHeight",{get:function(){return this.pageHeight},set:function(t){this.pageHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PageTopMargin",{get:function(){return this.pageTopMargin},set:function(t){this.pageTopMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PageBottomMargin",{get:function(){return this.pageBottomMargin},set:function(t){this.pageBottomMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PageLeftMargin",{get:function(){return this.pageLeftMargin},set:function(t){this.pageLeftMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PageRightMargin",{get:function(){return this.pageRightMargin},set:function(t){this.pageRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TitleTopDistance",{get:function(){return this.titleTopDistance},set:function(t){this.titleTopDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TitleBottomDistance",{get:function(){return this.titleBottomDistance},set:function(t){this.titleBottomDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemComposerDistance",{get:function(){return this.systemComposerDistance},set:function(t){this.systemComposerDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"InstrumentLabelTextHeight",{get:function(){return this.instrumentLabelTextHeight},set:function(t){this.instrumentLabelTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemDistance",{get:function(){return this.systemDistance},set:function(t){this.systemDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemLeftMargin",{get:function(){return this.systemLeftMargin},set:function(t){this.systemLeftMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemRightMargin",{get:function(){return this.systemRightMargin},set:function(t){this.systemRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FirstSystemMargin",{get:function(){return this.firstSystemMargin},set:function(t){this.firstSystemMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemLabelsRightMargin",{get:function(){return this.systemLabelsRightMargin},set:function(t){this.systemLabelsRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinimumAllowedDistanceBetweenSystems",{get:function(){return this.minimumAllowedDistanceBetweenSystems},set:function(t){this.minimumAllowedDistanceBetweenSystems=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LastSystemMaxScalingFactor",{get:function(){return this.lastSystemMaxScalingFactor},set:function(t){this.lastSystemMaxScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffDistance",{get:function(){return this.staffDistance},set:function(t){this.staffDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BetweenStaffDistance",{get:function(){return this.betweenStaffDistance},set:function(t){this.betweenStaffDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffHeight",{get:function(){return this.staffHeight},set:function(t){this.staffHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BetweenStaffLinesDistance",{get:function(){return this.betweenStaffLinesDistance},set:function(t){this.betweenStaffLinesDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BeamWidth",{get:function(){return this.beamWidth},set:function(t){this.beamWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BeamSpaceWidth",{get:function(){return this.beamSpaceWidth},set:function(t){this.beamSpaceWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BeamForwardLength",{get:function(){return this.beamForwardLength},set:function(t){this.beamForwardLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BetweenKeySymbolsDistance",{get:function(){return this.betweenKeySymbolsDistance},set:function(t){this.betweenKeySymbolsDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ClefLeftMargin",{get:function(){return this.clefLeftMargin},set:function(t){this.clefLeftMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ClefRightMargin",{get:function(){return this.clefRightMargin},set:function(t){this.clefRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"KeyRightMargin",{get:function(){return this.keyRightMargin},set:function(t){this.keyRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RhythmRightMargin",{get:function(){return this.rhythmRightMargin},set:function(t){this.rhythmRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"InStaffClefScalingFactor",{get:function(){return this.inStaffClefScalingFactor},set:function(t){this.inStaffClefScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceBetweenNaturalAndSymbolWhenCancelling",{get:function(){return this.distanceBetweenNaturalAndSymbolWhenCancelling},set:function(t){this.distanceBetweenNaturalAndSymbolWhenCancelling=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteHelperLinesOffset",{get:function(){return this.noteHelperLinesOffset},set:function(t){this.noteHelperLinesOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureLeftMargin",{get:function(){return this.measureLeftMargin},set:function(t){this.measureLeftMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureRightMargin",{get:function(){return this.measureRightMargin},set:function(t){this.measureRightMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceBetweenLastInstructionAndRepetitionBarline",{get:function(){return this.distanceBetweenLastInstructionAndRepetitionBarline},set:function(t){this.distanceBetweenLastInstructionAndRepetitionBarline=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ArpeggioDistance",{get:function(){return this.arpeggioDistance},set:function(t){this.arpeggioDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaccatoShorteningFactor",{get:function(){return this.staccatoShorteningFactor},set:function(t){this.staccatoShorteningFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"IdealStemLength",{get:function(){return this.idealStemLength},set:function(t){this.idealStemLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemNoteHeadBorderYOffset",{get:function(){return this.stemNoteHeadBorderYOffset},set:function(t){this.stemNoteHeadBorderYOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemWidth",{get:function(){return this.stemWidth},set:function(t){this.stemWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemMargin",{get:function(){return this.stemMargin},set:function(t){this.stemMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemMinLength",{get:function(){return this.stemMinLength},set:function(t){this.stemMinLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemMaxLength",{get:function(){return this.stemMaxLength},set:function(t){this.stemMaxLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BeamSlopeMaxAngle",{get:function(){return this.beamSlopeMaxAngle},set:function(t){this.beamSlopeMaxAngle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StemMinAllowedDistanceBetweenNoteHeadAndBeamLine",{get:function(){return this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine},set:function(t){this.stemMinAllowedDistanceBetweenNoteHeadAndBeamLine=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GraceNoteScalingFactor",{get:function(){return this.graceNoteScalingFactor},set:function(t){this.graceNoteScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GraceNoteXOffset",{get:function(){return this.graceNoteXOffset},set:function(t){this.graceNoteXOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeOpeningLength",{get:function(){return this.wedgeOpeningLength},set:function(t){this.wedgeOpeningLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeMeasureEndOpeningLength",{get:function(){return this.wedgeMeasureEndOpeningLength},set:function(t){this.wedgeMeasureEndOpeningLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeMeasureBeginOpeningLength",{get:function(){return this.wedgeMeasureBeginOpeningLength},set:function(t){this.wedgeMeasureBeginOpeningLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgePlacementAboveY",{get:function(){return this.wedgePlacementAboveY},set:function(t){this.wedgePlacementAboveY=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgePlacementBelowY",{get:function(){return this.wedgePlacementBelowY},set:function(t){this.wedgePlacementBelowY=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeHorizontalMargin",{get:function(){return this.wedgeHorizontalMargin},set:function(t){this.wedgeHorizontalMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeVerticalMargin",{get:function(){return this.wedgeVerticalMargin},set:function(t){this.wedgeVerticalMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceOffsetBetweenTwoHorizontallyCrossedWedges",{get:function(){return this.distanceOffsetBetweenTwoHorizontallyCrossedWedges},set:function(t){this.distanceOffsetBetweenTwoHorizontallyCrossedWedges=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeMinLength",{get:function(){return this.wedgeMinLength},set:function(t){this.wedgeMinLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceBetweenAdjacentDynamics",{get:function(){return this.distanceBetweenAdjacentDynamics},set:function(t){this.distanceBetweenAdjacentDynamics=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TempoChangeMeasureValitidy",{get:function(){return this.tempoChangeMeasureValitidy},set:function(t){this.tempoChangeMeasureValitidy=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TempoContinousFactor",{get:function(){return this.tempoContinousFactor},set:function(t){this.tempoContinousFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaccatoScalingFactor",{get:function(){return this.staccatoScalingFactor},set:function(t){this.staccatoScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BetweenDotsDistance",{get:function(){return this.betweenDotsDistance},set:function(t){this.betweenDotsDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OrnamentAccidentalScalingFactor",{get:function(){return this.ornamentAccidentalScalingFactor},set:function(t){this.ornamentAccidentalScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ChordSymbolTextHeight",{get:function(){return this.chordSymbolTextHeight},set:function(t){this.chordSymbolTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FingeringLabelFontHeight",{get:function(){return this.fingeringLabelFontHeight},set:function(t){this.fingeringLabelFontHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureNumberLabelHeight",{get:function(){return this.measureNumberLabelHeight},set:function(t){this.measureNumberLabelHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureNumberLabelOffset",{get:function(){return this.measureNumberLabelOffset},set:function(t){this.measureNumberLabelOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TupletNumberLabelHeight",{get:function(){return this.tupletNumberLabelHeight},set:function(t){this.tupletNumberLabelHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TupletNumberYOffset",{get:function(){return this.tupletNumberYOffset},set:function(t){this.tupletNumberYOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LabelMarginBorderFactor",{get:function(){return this.labelMarginBorderFactor},set:function(t){this.labelMarginBorderFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TupletVerticalLineLength",{get:function(){return this.tupletVerticalLineLength},set:function(t){this.tupletVerticalLineLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RepetitionEndingLabelHeight",{get:function(){return this.repetitionEndingLabelHeight},set:function(t){this.repetitionEndingLabelHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RepetitionEndingLabelXOffset",{get:function(){return this.repetitionEndingLabelXOffset},set:function(t){this.repetitionEndingLabelXOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RepetitionEndingLabelYOffset",{get:function(){return this.repetitionEndingLabelYOffset},set:function(t){this.repetitionEndingLabelYOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RepetitionEndingLineYLowerOffset",{get:function(){return this.repetitionEndingLineYLowerOffset},set:function(t){this.repetitionEndingLineYLowerOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"RepetitionEndingLineYUpperOffset",{get:function(){return this.repetitionEndingLineYUpperOffset},set:function(t){this.repetitionEndingLineYUpperOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LyricsHeight",{get:function(){return this.lyricsHeight},set:function(t){this.lyricsHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VerticalBetweenLyricsDistance",{get:function(){return this.verticalBetweenLyricsDistance},set:function(t){this.verticalBetweenLyricsDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BetweenSyllabelMaximumDistance",{get:function(){return this.betweenSyllabelMaximumDistance},set:function(t){this.betweenSyllabelMaximumDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinimumDistanceBetweenDashes",{get:function(){return this.minimumDistanceBetweenDashes},set:function(t){this.minimumDistanceBetweenDashes=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BezierCurveStepSize",{get:function(){return this.bezierCurveStepSize},set:function(t){this.bezierCurveStepSize=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TPow3",{get:function(){return this.tPower3},set:function(t){this.tPower3=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OneMinusTPow3",{get:function(){return this.oneMinusTPower3},set:function(t){this.oneMinusTPower3=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BezierFactorOne",{get:function(){return this.factorOne},set:function(t){this.factorOne=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BezierFactorTwo",{get:function(){return this.factorTwo},set:function(t){this.factorTwo=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieGhostObjectWidth",{get:function(){return this.tieGhostObjectWidth},set:function(t){this.tieGhostObjectWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieYPositionOffsetFactor",{get:function(){return this.tieYPositionOffsetFactor},set:function(t){this.tieYPositionOffsetFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinimumNeededXspaceForTieGhostObject",{get:function(){return this.minimumNeededXspaceForTieGhostObject},set:function(t){this.minimumNeededXspaceForTieGhostObject=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieHeightMinimum",{get:function(){return this.tieHeightMinimum},set:function(t){this.tieHeightMinimum=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieHeightMaximum",{get:function(){return this.tieHeightMaximum},set:function(t){this.tieHeightMaximum=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieHeightInterpolationK",{get:function(){return this.tieHeightInterpolationK},set:function(t){this.tieHeightInterpolationK=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TieHeightInterpolationD",{get:function(){return this.tieHeightInterpolationD},set:function(t){this.tieHeightInterpolationD=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlurNoteHeadYOffset",{get:function(){return this.slurNoteHeadYOffset},set:function(t){this.slurNoteHeadYOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlurStemXOffset",{get:function(){return this.slurStemXOffset},set:function(t){this.slurStemXOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlurSlopeMaxAngle",{get:function(){return this.slurSlopeMaxAngle},set:function(t){this.slurSlopeMaxAngle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlurTangentMinAngle",{get:function(){return this.slurTangentMinAngle},set:function(t){this.slurTangentMinAngle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlurTangentMaxAngle",{get:function(){return this.slurTangentMaxAngle},set:function(t){this.slurTangentMaxAngle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SlursStartingAtSameStaffEntryYOffset",{get:function(){return this.slursStartingAtSameStaffEntryYOffset},set:function(t){this.slursStartingAtSameStaffEntryYOffset=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"InstantaniousTempoTextHeight",{get:function(){return this.instantaniousTempoTextHeight},set:function(t){this.instantaniousTempoTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ContinuousDynamicTextHeight",{get:function(){return this.continuousDynamicTextHeight},set:function(t){this.continuousDynamicTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MoodTextHeight",{get:function(){return this.moodTextHeight},set:function(t){this.moodTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ContinuousTempoTextHeight",{get:function(){return this.continuousTempoTextHeight},set:function(t){this.continuousTempoTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"UnknownTextHeight",{get:function(){return this.unknownTextHeight},set:function(t){this.unknownTextHeight=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffLineWidth",{get:function(){return this.staffLineWidth},set:function(t){this.staffLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LedgerLineWidth",{get:function(){return this.ledgerLineWidth},set:function(t){this.ledgerLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"WedgeLineWidth",{get:function(){return this.wedgeLineWidth},set:function(t){this.wedgeLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TupletLineWidth",{get:function(){return this.tupletLineWidth},set:function(t){this.tupletLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LyricUnderscoreLineWidth",{get:function(){return this.lyricUnderscoreLineWidth},set:function(t){this.lyricUnderscoreLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemThinLineWidth",{get:function(){return this.systemThinLineWidth},set:function(t){this.systemThinLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemBoldLineWidth",{get:function(){return this.systemBoldLineWidth},set:function(t){this.systemBoldLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemRepetitionEndingLineWidth",{get:function(){return this.systemRepetitionEndingLineWidth},set:function(t){this.systemRepetitionEndingLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SystemDotWidth",{get:function(){return this.systemDotWidth},set:function(t){this.systemDotWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceBetweenVerticalSystemLines",{get:function(){return this.distanceBetweenVerticalSystemLines},set:function(t){this.distanceBetweenVerticalSystemLines=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DistanceBetweenDotAndLine",{get:function(){return this.distanceBetweenDotAndLine},set:function(t){this.distanceBetweenDotAndLine=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OctaveShiftLineWidth",{get:function(){return this.octaveShiftLineWidth},set:function(t){this.octaveShiftLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OctaveShiftVerticalLineLength",{get:function(){return this.octaveShiftVerticalLineLength},set:function(t){this.octaveShiftVerticalLineLength=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GraceLineWidth",{get:function(){return this.graceLineWidth},set:function(t){this.graceLineWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinimumStaffLineDistance",{get:function(){return this.minimumStaffLineDistance},set:function(t){this.minimumStaffLineDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinimumCrossedBeamDifferenceMargin",{get:function(){return this.minimumCrossedBeamDifferenceMargin},set:function(t){this.minimumCrossedBeamDifferenceMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DisplacedNoteMargin",{get:function(){return this.displacedNoteMargin},set:function(t){this.displacedNoteMargin=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinNoteDistance",{get:function(){return this.minNoteDistance},set:function(t){this.minNoteDistance=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SubMeasureXSpacingThreshold",{get:function(){return this.subMeasureXSpacingThreshold},set:function(t){this.subMeasureXSpacingThreshold=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureDynamicsMaxScalingFactor",{get:function(){return this.measureDynamicsMaxScalingFactor},set:function(t){this.measureDynamicsMaxScalingFactor=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MaxInstructionsConstValue",{get:function(){return this.maxInstructionsConstValue},set:function(t){this.maxInstructionsConstValue=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteDistances",{get:function(){return this.noteDistances},set:function(t){this.noteDistances=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteDistancesScalingFactors",{get:function(){return this.noteDistancesScalingFactors},set:function(t){this.noteDistancesScalingFactors=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DurationDistanceDict",{get:function(){return this.durationDistanceDict},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DurationScalingDistanceDict",{get:function(){return this.durationScalingDistanceDict},enumerable:!0,configurable:!0}),t.prototype.populateDictionaries=function(){for(var t=0;t<this.noteDistances.length;t++)switch(t){case 0:this.durationDistanceDict[.015625]=this.noteDistances[t],this.durationScalingDistanceDict[.015625]=this.noteDistancesScalingFactors[t];break;case 1:this.durationDistanceDict[.03125]=this.noteDistances[t],this.durationScalingDistanceDict[.03125]=this.noteDistancesScalingFactors[t];break;case 2:this.durationDistanceDict[.0625]=this.noteDistances[t],this.durationScalingDistanceDict[.0625]=this.noteDistancesScalingFactors[t];break;case 3:this.durationDistanceDict[.125]=this.noteDistances[t],this.durationScalingDistanceDict[.125]=this.noteDistancesScalingFactors[t];break;case 4:this.durationDistanceDict[.25]=this.noteDistances[t],this.durationScalingDistanceDict[.25]=this.noteDistancesScalingFactors[t];break;case 5:this.durationDistanceDict[.5]=this.noteDistances[t],this.durationScalingDistanceDict[.5]=this.noteDistancesScalingFactors[t];break;case 6:this.durationDistanceDict[1]=this.noteDistances[t],this.durationScalingDistanceDict[1]=this.noteDistancesScalingFactors[t];break;case 7:this.durationDistanceDict[2]=this.noteDistances[t],this.durationScalingDistanceDict[2]=this.noteDistancesScalingFactors[t]}},t.prototype.calculateCurveParametersArrays=function(){this.tPower3=new Array(this.bezierCurveStepSize),this.oneMinusTPower3=new Array(this.bezierCurveStepSize),this.factorOne=new Array(this.bezierCurveStepSize),this.factorTwo=new Array(this.bezierCurveStepSize);for(var t=0;t<this.bezierCurveStepSize;t++){var e=t/this.bezierCurveStepSize;this.tPower3[t]=Math.pow(e,3),this.oneMinusTPower3[t]=Math.pow(1-e,3),this.factorOne[t]=3*Math.pow(1-e,2)*e,this.factorTwo[t]=3*(1-e)*Math.pow(e,2)}},t.unit=1,t}();e.EngravingRules=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,r=function(){function t(t,e){this.setOctaveShiftValue(t,e)}return Object.defineProperty(t.prototype,"Type",{get:function(){return this.octaveValue},set:function(t){this.octaveValue=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffNumber",{get:function(){return this.staffNumber},set:function(t){this.staffNumber=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentStartMultiExpression",{get:function(){return this.startMultiExpression},set:function(t){this.startMultiExpression=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentEndMultiExpression",{get:function(){return this.endMultiExpression},set:function(t){this.endMultiExpression=t},enumerable:!0,configurable:!0}),t.prototype.setOctaveShiftValue=function(t,e){this.octaveValue=1===e&&"down"===t?i.VA8:1===e&&"up"===t?i.VB8:2===e&&"down"===t?i.MA15:2===e&&"up"===t?i.MB15:i.NONE},t}();e.OctaveShift=r,function(t){t[t.VA8=0]="VA8",t[t.VB8=1]="VB8",t[t.MA15=2]="MA15",t[t.MB15=3]="MB15",t[t.NONE=4]="NONE"}(i=e.OctaveEnum||(e.OctaveEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=function(){function t(t,e,n,i){this.slurs=[],this.graceNoteSlash=!1,this.playbackInstrumentId=void 0,this.voiceEntry=t,this.parentStaffEntry=e,this.length=n,this.pitch=i,this.halfTone=void 0!==i?i.getHalfTone():0}return Object.defineProperty(t.prototype,"GraceNoteSlash",{get:function(){return this.graceNoteSlash},set:function(t){this.graceNoteSlash=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentVoiceEntry",{get:function(){return this.voiceEntry},set:function(t){this.voiceEntry=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentStaffEntry",{get:function(){return this.parentStaffEntry},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentStaff",{get:function(){return this.parentStaffEntry.ParentStaff},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Length",{get:function(){return this.length},set:function(t){this.length=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Pitch",{get:function(){return this.pitch},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteBeam",{get:function(){return this.beam},set:function(t){this.beam=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteTuplet",{get:function(){return this.tuplet},set:function(t){this.tuplet=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteTie",{get:function(){return this.tie},set:function(t){this.tie=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NoteSlurs",{get:function(){return this.slurs},set:function(t){this.slurs=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"PlaybackInstrumentId",{get:function(){return this.playbackInstrumentId},set:function(t){this.playbackInstrumentId=t},enumerable:!0,configurable:!0}),t.prototype.isRest=function(){return void 0===this.Pitch},t.prototype.ToString=function(){return void 0!==this.pitch?this.Pitch.ToString()+", length: "+this.length.toString():"rest note, length: "+this.length.toString()},t.prototype.getAbsoluteTimestamp=function(){return i.Fraction.plus(this.voiceEntry.Timestamp,this.parentStaffEntry.VerticalContainerParent.ParentMeasure.AbsoluteTimestamp)},t.prototype.checkForDoubleSlur=function(t){for(var e=0,n=this.slurs.length;e<n;++e){var i=this.slurs[e];if(void 0!==i.StartNote&&void 0!==i.EndNote&&void 0!==t.StartNote&&t.StartNote===i.StartNote&&i.EndNote===this)return!0}return!1},t}();e.Note=r,function(t){t[t.Normal=0]="Normal",t[t.Grace=1]="Grace",t[t.Cue=2]="Cue"}(e.Appearance||(e.Appearance={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(108),r=n(5),o=function(){function t(t,e,n,i){this.x=0,this.y=0,this.width=0,this.height=0,this.x=t,this.y=e,this.width=n,this.height=i}return t.createFromLocationAndSize=function(e,n){return new t(e.x,e.y,n.width,n.height)},Object.defineProperty(t.prototype,"Location",{get:function(){return new r.PointF2D(this.x,this.y)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Size",{get:function(){return new i.SizeF2D(this.width,this.height)},enumerable:!0,configurable:!0}),t}();e.RectangleF2D=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.parent=t}return Object.defineProperty(t.prototype,"Parent",{get:function(){return this.parent},set:function(t){this.parent=t},enumerable:!0,configurable:!0}),t}();e.AbstractNotationInstruction=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(36),o=function(){function t(){this.firstNode=null,this.lastNode=null,this.nElements=0}return t.prototype.add=function(t,e){if(i.isUndefined(e)&&(e=this.nElements),e<0||e>this.nElements||i.isUndefined(t))return!1;var n=this.createNode(t);if(0===this.nElements)this.firstNode=n,this.lastNode=n;else if(e===this.nElements)this.lastNode.next=n,this.lastNode=n;else if(0===e)n.next=this.firstNode,this.firstNode=n;else{var r=this.nodeAtIndex(e-1);n.next=r.next,r.next=n}return this.nElements++,!0},t.prototype.first=function(){if(null!==this.firstNode)return this.firstNode.element},t.prototype.last=function(){if(null!==this.lastNode)return this.lastNode.element},t.prototype.elementAtIndex=function(t){var e=this.nodeAtIndex(t);if(null!==e)return e.element},t.prototype.indexOf=function(t,e){var n=e||i.defaultEquals;if(i.isUndefined(t))return-1;for(var r=this.firstNode,o=0;null!==r;){if(n(r.element,t))return o;o++,r=r.next}return-1},t.prototype.contains=function(t,e){return this.indexOf(t,e)>=0},t.prototype.remove=function(t,e){var n=e||i.defaultEquals;if(this.nElements<1||i.isUndefined(t))return!1;for(var r=null,o=this.firstNode;null!==o;){if(n(o.element,t))return o===this.firstNode?(this.firstNode=this.firstNode.next,o===this.lastNode&&(this.lastNode=null)):o===this.lastNode?(this.lastNode=r,r.next=o.next,o.next=null):(r.next=o.next,o.next=null),this.nElements--,!0;r=o,o=o.next}return!1},t.prototype.clear=function(){this.firstNode=null,this.lastNode=null,this.nElements=0},t.prototype.equals=function(e,n){var r=n||i.defaultEquals;return e instanceof t&&(this.size()===e.size()&&this.equalsAux(this.firstNode,e.firstNode,r))},t.prototype.equalsAux=function(t,e,n){for(;null!==t;){if(!n(t.element,e.element))return!1;t=t.next,e=e.next}return!0},t.prototype.removeElementAtIndex=function(t){if(!(t<0||t>=this.nElements)){var e;if(1===this.nElements)e=this.firstNode.element,this.firstNode=null,this.lastNode=null;else{var n=this.nodeAtIndex(t-1);null===n?(e=this.firstNode.element,this.firstNode=this.firstNode.next):n.next===this.lastNode&&(e=this.lastNode.element,this.lastNode=n),null!==n&&(e=n.next.element,n.next=n.next.next)}return this.nElements--,e}},t.prototype.forEach=function(t){for(var e=this.firstNode;null!==e&&!1!==t(e.element);)e=e.next},t.prototype.reverse=function(){for(var t=null,e=this.firstNode,n=null;null!==e;)n=e.next,e.next=t,t=e,e=n;n=this.firstNode,this.firstNode=this.lastNode,this.lastNode=n},t.prototype.toArray=function(){for(var t=[],e=this.firstNode;null!==e;)t.push(e.element),e=e.next;return t},t.prototype.size=function(){return this.nElements},t.prototype.isEmpty=function(){return this.nElements<=0},t.prototype.toString=function(){return r.toString(this.toArray())},t.prototype.nodeAtIndex=function(t){if(t<0||t>=this.nElements)return null;if(t===this.nElements-1)return this.lastNode;for(var e=this.firstNode,n=0;n<t;n++)e=e.next;return e},t.prototype.createNode=function(t){return{element:t,next:null}},t}();e.default=o},function(t,e,n){"use strict";var i=n(65);function r(t){i.call(this,t)}n(0).inherits(r,i),r.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},t.exports=r},function(t,e,n){"use strict";var i=n(0);function r(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}r.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(t){},readInt:function(t){var e,n=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)n=(n<<8)+this.byteAt(e);return this.index+=t,n},readString:function(t){return i.transformTo("string",this.readData(t))},readData:function(t){},lastIndexOfSignature:function(t){},readAndCheckSignature:function(t){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},t.exports=r},function(t,e,n){"use strict";var i=n(64);function r(t){i.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}n(0).inherits(r,i),r.prototype.byteAt=function(t){return this.data[this.zero+t]},r.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),n=t.charCodeAt(1),i=t.charCodeAt(2),r=t.charCodeAt(3),o=this.length-4;o>=0;--o)if(this.data[o]===e&&this.data[o+1]===n&&this.data[o+2]===i&&this.data[o+3]===r)return o-this.zero;return-1},r.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),n=t.charCodeAt(1),i=t.charCodeAt(2),r=t.charCodeAt(3),o=this.readData(4);return e===o[0]&&n===o[1]&&i===o[2]&&r===o[3]},r.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},t.exports=r},function(t,e,n){"use strict";var i=n(0),r=n(14),o=n(65),s=n(119),a=n(118),u=n(63);t.exports=function(t){var e=i.getTypeOf(t);return i.checkSupport(e),"string"!==e||r.uint8array?"nodebuffer"===e?new a(t):r.uint8array?new u(i.transformTo("uint8array",t)):new o(i.transformTo("array",t)):new s(t)}},function(t,e,n){"use strict";e.LOCAL_FILE_HEADER="PK",e.CENTRAL_FILE_HEADER="PK",e.CENTRAL_DIRECTORY_END="PK",e.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",e.ZIP64_CENTRAL_DIRECTORY_END="PK",e.DATA_DESCRIPTOR="PK\b"},function(t,e,n){"use strict";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(t,e,n){"use strict";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},function(t,e,n){"use strict";var i=n(13),r=!0,o=!0;try{String.fromCharCode.apply(null,[0])}catch(t){r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){o=!1}for(var s=new i.Buf8(256),a=0;a<256;a++)s[a]=a>=252?6:a>=248?5:a>=240?4:a>=224?3:a>=192?2:1;function u(t,e){if(e<65537&&(t.subarray&&o||!t.subarray&&r))return String.fromCharCode.apply(null,i.shrinkBuf(t,e));for(var n="",s=0;s<e;s++)n+=String.fromCharCode(t[s]);return n}s[254]=s[254]=1,e.string2buf=function(t){var e,n,r,o,s,a=t.length,u=0;for(o=0;o<a;o++)55296==(64512&(n=t.charCodeAt(o)))&&o+1<a&&56320==(64512&(r=t.charCodeAt(o+1)))&&(n=65536+(n-55296<<10)+(r-56320),o++),u+=n<128?1:n<2048?2:n<65536?3:4;for(e=new i.Buf8(u),s=0,o=0;s<u;o++)55296==(64512&(n=t.charCodeAt(o)))&&o+1<a&&56320==(64512&(r=t.charCodeAt(o+1)))&&(n=65536+(n-55296<<10)+(r-56320),o++),n<128?e[s++]=n:n<2048?(e[s++]=192|n>>>6,e[s++]=128|63&n):n<65536?(e[s++]=224|n>>>12,e[s++]=128|n>>>6&63,e[s++]=128|63&n):(e[s++]=240|n>>>18,e[s++]=128|n>>>12&63,e[s++]=128|n>>>6&63,e[s++]=128|63&n);return e},e.buf2binstring=function(t){return u(t,t.length)},e.binstring2buf=function(t){for(var e=new i.Buf8(t.length),n=0,r=e.length;n<r;n++)e[n]=t.charCodeAt(n);return e},e.buf2string=function(t,e){var n,i,r,o,a=e||t.length,c=new Array(2*a);for(i=0,n=0;n<a;)if((r=t[n++])<128)c[i++]=r;else if((o=s[r])>4)c[i++]=65533,n+=o-1;else{for(r&=2===o?31:3===o?15:7;o>1&&n<a;)r=r<<6|63&t[n++],o--;o>1?c[i++]=65533:r<65536?c[i++]=r:(r-=65536,c[i++]=55296|r>>10&1023,c[i++]=56320|1023&r)}return u(c,i)},e.utf8border=function(t,e){var n;for((e=e||t.length)>t.length&&(e=t.length),n=e-1;n>=0&&128==(192&t[n]);)n--;return n<0?e:0===n?e:n+s[t[n]]>e?n:e}},function(t,e,n){"use strict";var i=function(){for(var t,e=[],n=0;n<256;n++){t=n;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[n]=t}return e}();t.exports=function(t,e,n,r){var o=i,s=r+n;t^=-1;for(var a=r;a<s;a++)t=t>>>8^o[255&(t^e[a])];return-1^t}},function(t,e,n){"use strict";t.exports=function(t,e,n,i){for(var r=65535&t|0,o=t>>>16&65535|0,s=0;0!==n;){n-=s=n>2e3?2e3:n;do{o=o+(r=r+e[i++]|0)|0}while(--s);r%=65521,o%=65521}return r|o<<16|0}},function(t,e,n){"use strict";var i=n(6);e.STORE={magic:"\0\0",compressWorker:function(t){return new i("STORE compression")},uncompressWorker:function(){return new i("STORE decompression")}},e.DEFLATE=n(133)},function(t,e,n){"use strict";var i=n(6),r=n(47);function o(){i.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}n(0).inherits(o,i),o.prototype.processChunk=function(t){this.streamInfo.crc32=r(t.data,this.streamInfo.crc32||0),this.push(t)},t.exports=o},function(t,e,n){"use strict";var i=n(0),r=n(6);function o(t){r.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}i.inherits(o,r),o.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}r.prototype.processChunk.call(this,t)},t.exports=o},function(t,e,n){"use strict";var i=n(0),r=n(6);function o(t){r.call(this,"DataWorker");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then(function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=i.getTypeOf(t),e.isPaused||e._tickAndRepeat()},function(t){e.error(t)})}i.inherits(o,r),o.prototype.cleanUp=function(){r.prototype.cleanUp.call(this),this.data=null},o.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,i.delay(this._tickAndRepeat,[],this)),!0)},o.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(i.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},o.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,e);break;case"uint8array":t=this.data.subarray(this.index,e);break;case"array":case"nodebuffer":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=o},function(t,e,n){"use strict";e.base64=!1,e.binary=!1,e.dir=!1,e.createFolders=!0,e.date=null,e.compression=null,e.compressionOptions=null,e.comment=null,e.unixPermissions=null,e.dosPermissions=null},function(t,e,n){"use strict";(function(e){var i=n(0),r=n(137),o=n(6),s=n(83),a=n(14),u=n(28),c=null;if(a.nodestream)try{c=n(136)}catch(t){}function l(t,n){return new u.Promise(function(r,o){var a=[],u=t._internalType,c=t._outputType,l=t._mimeType;t.on("data",function(t,e){a.push(t),n&&n(e)}).on("error",function(t){a=[],o(t)}).on("end",function(){try{var t=function(t,e,n){switch(t){case"blob":return i.newBlob(i.transformTo("arraybuffer",e),n);case"base64":return s.encode(e);default:return i.transformTo(t,e)}}(c,function(t,n){var i,r=0,o=null,s=0;for(i=0;i<n.length;i++)s+=n[i].length;switch(t){case"string":return n.join("");case"array":return Array.prototype.concat.apply([],n);case"uint8array":for(o=new Uint8Array(s),i=0;i<n.length;i++)o.set(n[i],r),r+=n[i].length;return o;case"nodebuffer":return e.concat(n);default:throw new Error("concat : unsupported type '"+t+"'")}}(u,a),l);r(t)}catch(t){o(t)}a=[]}).resume()})}function h(t,e,n){var s=e;switch(e){case"blob":case"arraybuffer":s="uint8array";break;case"base64":s="string"}try{this._internalType=s,this._outputType=e,this._mimeType=n,i.checkSupport(s),this._worker=t.pipe(new r(s)),t.lock()}catch(t){this._worker=new o("error"),this._worker.error(t)}}h.prototype={accumulate:function(t){return l(this,t)},on:function(t,e){var n=this;return"data"===t?this._worker.on(t,function(t){e.call(n,t.data,t.meta)}):this._worker.on(t,function(){i.delay(e,arguments,n)}),this},resume:function(){return i.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(i.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new c(this,{objectMode:"nodebuffer"!==this._outputType},t)}},t.exports=h}).call(this,n(11).Buffer)},function(t,e,n){var i=n(50),r=n(38).document,o=i(r)&&i(r.createElement);t.exports=function(t){return o?r.createElement(t):{}}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var i=n(150);t.exports=function(t,e,n){if(i(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,r){return t.call(e,n,i,r)}}return function(){return t.apply(e,arguments)}}},function(t,e){var n=t.exports={version:"2.3.0"};"number"==typeof __e&&(__e=n)},function(t,e,n){"use strict";var i=n(0),r=n(14),o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";e.encode=function(t){for(var e,n,r,s,a,u,c,l=[],h=0,f=t.length,p=f,d="string"!==i.getTypeOf(t);h<t.length;)p=f-h,d?(e=t[h++],n=h<f?t[h++]:0,r=h<f?t[h++]:0):(e=t.charCodeAt(h++),n=h<f?t.charCodeAt(h++):0,r=h<f?t.charCodeAt(h++):0),s=e>>2,a=(3&e)<<4|n>>4,u=p>1?(15&n)<<2|r>>6:64,c=p>2?63&r:64,l.push(o.charAt(s)+o.charAt(a)+o.charAt(u)+o.charAt(c));return l.join("")},e.decode=function(t){var e,n,i,s,a,u,c=0,l=0;if("data:"===t.substr(0,"data:".length))throw new Error("Invalid base64 input, it looks like a data url.");var h,f=3*(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"")).length/4;if(t.charAt(t.length-1)===o.charAt(64)&&f--,t.charAt(t.length-2)===o.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(h=r.uint8array?new Uint8Array(0|f):new Array(0|f);c<t.length;)e=o.indexOf(t.charAt(c++))<<2|(s=o.indexOf(t.charAt(c++)))>>4,n=(15&s)<<4|(a=o.indexOf(t.charAt(c++)))>>2,i=(3&a)<<6|(u=o.indexOf(t.charAt(c++))),h[l++]=e,64!==a&&(h[l++]=n),64!==u&&(h[l++]=i);return h}},function(t,e,n){"use strict";t.exports=o;var i=n(51),r=n(29);function o(t){if(!(this instanceof o))return new o(t);i.call(this,t)}r.inherits=n(21),r.inherits(o,i),o.prototype._transform=function(t,e,n){n(null,t)}},function(t,e,n){"use strict";var i=n(158).Buffer,r=i.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function o(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(i.isEncoding===r||!r(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=u,this.end=c,e=4;break;case"utf8":this.fillLast=a,e=4;break;case"base64":this.text=l,this.end=h,e=3;break;default:return this.write=f,void(this.end=p)}this.lastNeed=0,this.lastTotal=0,this.lastChar=i.allocUnsafe(e)}function s(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function a(t){var e=this.lastTotal-this.lastNeed,n=function(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var i=n.charCodeAt(n.length-1);if(i>=55296&&i<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function c(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function l(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function h(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function f(t){return t.toString(this.encoding)}function p(t){return t&&t.length?this.write(t):""}e.StringDecoder=o,o.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},o.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},o.prototype.text=function(t,e){var n=function(t,e,n){var i=e.length-1;if(i<n)return 0;var r=s(e[i]);if(r>=0)return r>0&&(t.lastNeed=r-1),r;if(--i<n||-2===r)return 0;if((r=s(e[i]))>=0)return r>0&&(t.lastNeed=r-2),r;if(--i<n||-2===r)return 0;if((r=s(e[i]))>=0)return r>0&&(2===r?r=0:t.lastNeed=r-3),r;return 0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=n;var i=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,i),t.toString("utf8",e,i)},o.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,n){"use strict";(function(e){t.exports=d;var i=n(53),r=n(88),o=n(11).Buffer;d.ReadableState=p;n(40);var s,a=function(t,e){return t.listeners(e).length};!function(){try{s=n(41)}catch(t){}finally{s||(s=n(40).EventEmitter)}}();o=n(11).Buffer;var u=n(29);u.inherits=n(21);var c,l,h=n(162),f=void 0;function p(t,e){l=l||n(18),t=t||{},this.objectMode=!!t.objectMode,e instanceof l&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var i=t.highWaterMark,r=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:r,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(c||(c=n(85).StringDecoder),this.decoder=new c(t.encoding),this.encoding=t.encoding)}function d(t){if(l=l||n(18),!(this instanceof d))return new d(t);this._readableState=new p(t,this),this.readable=!0,t&&"function"==typeof t.read&&(this._read=t.read),s.call(this)}function b(t,e,n,r,s){var a=function(t,e){var n=null;o.isBuffer(e)||"string"==typeof e||null===e||void 0===e||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk"));return n}(e,n);if(a)t.emit("error",a);else if(null===n)e.reading=!1,function(t,e){if(e.ended)return;if(e.decoder){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,v(t)}(t,e);else if(e.objectMode||n&&n.length>0)if(e.ended&&!s){var u=new Error("stream.push() after EOF");t.emit("error",u)}else if(e.endEmitted&&s){u=new Error("stream.unshift() after end event");t.emit("error",u)}else{var c;!e.decoder||s||r||(n=e.decoder.write(n),c=!e.objectMode&&0===n.length),s||(e.reading=!1),c||(e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,s?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&v(t))),function(t,e){e.readingMore||(e.readingMore=!0,i(_,t,e))}(t,e)}else s||(e.reading=!1);return function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(e)}f=h&&h.debuglog?h.debuglog("stream"):function(){},u.inherits(d,s),d.prototype.push=function(t,e){var n=this._readableState;return n.objectMode||"string"!=typeof t||(e=e||n.defaultEncoding)!==n.encoding&&(t=new o(t,e),e=""),b(this,n,t,e,!1)},d.prototype.unshift=function(t){return b(this,this._readableState,t,"",!0)},d.prototype.isPaused=function(){return!1===this._readableState.flowing},d.prototype.setEncoding=function(t){return c||(c=n(85).StringDecoder),this._readableState.decoder=new c(t),this._readableState.encoding=t,this};var y=8388608;function m(t,e){return 0===e.length&&e.ended?0:e.objectMode?0===t?0:1:null===t||isNaN(t)?e.flowing&&e.buffer.length?e.buffer[0].length:e.length:t<=0?0:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=y?t=y:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t>e.length?e.ended?e.length:(e.needReadable=!0,0):t)}function v(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(f("emitReadable",e.flowing),e.emittedReadable=!0,e.sync?i(g,t):g(t))}function g(t){f("emit readable"),t.emit("readable"),w(t)}function _(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(f("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function S(t){f("readable nexttick read 0"),t.read(0)}function x(t,e){e.reading||(f("resume read 0"),t.read(0)),e.resumeScheduled=!1,t.emit("resume"),w(t),e.flowing&&!e.reading&&t.read(0)}function w(t){var e=t._readableState;if(f("flow",e.flowing),e.flowing)do{var n=t.read()}while(null!==n&&e.flowing)}function E(t,e){var n,i=e.buffer,r=e.length,s=!!e.decoder,a=!!e.objectMode;if(0===i.length)return null;if(0===r)n=null;else if(a)n=i.shift();else if(!t||t>=r)n=s?i.join(""):1===i.length?i[0]:o.concat(i,r),i.length=0;else{if(t<i[0].length)n=(h=i[0]).slice(0,t),i[0]=h.slice(t);else if(t===i[0].length)n=i.shift();else{n=s?"":new o(t);for(var u=0,c=0,l=i.length;c<l&&u<t;c++){var h=i[0],f=Math.min(t-u,h.length);s?n+=h.slice(0,f):h.copy(n,u,0,f),f<h.length?i[0]=h.slice(f):i.shift(),u+=f}}}return n}function P(t){var e=t._readableState;if(e.length>0)throw new Error("endReadable called on non-empty stream");e.endEmitted||(e.ended=!0,i(T,e,t))}function T(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit("end"))}d.prototype.read=function(t){f("read",t);var e=this._readableState,n=t;if(("number"!=typeof t||t>0)&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return f("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?P(this):v(this),null;if(0===(t=m(t,e))&&e.ended)return 0===e.length&&P(this),null;var i,r=e.needReadable;return f("need readable",r),(0===e.length||e.length-t<e.highWaterMark)&&f("length less than watermark",r=!0),(e.ended||e.reading)&&f("reading or ended",r=!1),r&&(f("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1),r&&!e.reading&&(t=m(n,e)),null===(i=t>0?E(t,e):null)&&(e.needReadable=!0,t=0),e.length-=t,0!==e.length||e.ended||(e.needReadable=!0),n!==t&&e.ended&&0===e.length&&P(this),null!==i&&this.emit("data",i),i},d.prototype._read=function(t){this.emit("error",new Error("not implemented"))},d.prototype.pipe=function(t,n){var o=this,s=this._readableState;switch(s.pipesCount){case 0:s.pipes=t;break;case 1:s.pipes=[s.pipes,t];break;default:s.pipes.push(t)}s.pipesCount+=1,f("pipe count=%d opts=%j",s.pipesCount,n);var u=(!n||!1!==n.end)&&t!==e.stdout&&t!==e.stderr?l:d;function c(t){f("onunpipe"),t===o&&d()}function l(){f("onend"),t.end()}s.endEmitted?i(u):o.once("end",u),t.on("unpipe",c);var h=function(t){return function(){var e=t._readableState;f("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&a(t,"data")&&(e.flowing=!0,w(t))}}(o);t.on("drain",h);var p=!1;function d(){f("cleanup"),t.removeListener("close",m),t.removeListener("finish",v),t.removeListener("drain",h),t.removeListener("error",y),t.removeListener("unpipe",c),o.removeListener("end",l),o.removeListener("end",d),o.removeListener("data",b),p=!0,!s.awaitDrain||t._writableState&&!t._writableState.needDrain||h()}function b(e){f("ondata"),!1===t.write(e)&&(1!==s.pipesCount||s.pipes[0]!==t||1!==o.listenerCount("data")||p||(f("false write response, pause",o._readableState.awaitDrain),o._readableState.awaitDrain++),o.pause())}function y(e){f("onerror",e),g(),t.removeListener("error",y),0===a(t,"error")&&t.emit("error",e)}function m(){t.removeListener("finish",v),g()}function v(){f("onfinish"),t.removeListener("close",m),g()}function g(){f("unpipe"),o.unpipe(t)}return o.on("data",b),t._events&&t._events.error?r(t._events.error)?t._events.error.unshift(y):t._events.error=[y,t._events.error]:t.on("error",y),t.once("close",m),t.once("finish",v),t.emit("pipe",o),s.flowing||(f("pipe resume"),o.resume()),t},d.prototype.unpipe=function(t){var e=this._readableState;if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this),this);if(!t){var n=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var r=0;r<i;r++)n[r].emit("unpipe",this);return this}var o=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1}(e.pipes,t);return-1===o?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this),this)},d.prototype.on=function(t,e){var n=s.prototype.on.call(this,t,e);if("data"===t&&!1!==this._readableState.flowing&&this.resume(),"readable"===t&&!this._readableState.endEmitted){var r=this._readableState;r.readableListening||(r.readableListening=!0,r.emittedReadable=!1,r.needReadable=!0,r.reading?r.length&&v(this):i(S,this))}return n},d.prototype.addListener=d.prototype.on,d.prototype.resume=function(){var t=this._readableState;return t.flowing||(f("resume"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,i(x,t,e))}(this,t)),this},d.prototype.pause=function(){return f("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(f("pause"),this._readableState.flowing=!1,this.emit("pause")),this},d.prototype.wrap=function(t){var e=this._readableState,n=!1,i=this;for(var r in t.on("end",function(){if(f("wrapped end"),e.decoder&&!e.ended){var t=e.decoder.end();t&&t.length&&i.push(t)}i.push(null)}),t.on("data",function(r){(f("wrapped data"),e.decoder&&(r=e.decoder.write(r)),!e.objectMode||null!==r&&void 0!==r)&&((e.objectMode||r&&r.length)&&(i.push(r)||(n=!0,t.pause())))}),t)void 0===this[r]&&"function"==typeof t[r]&&(this[r]=function(e){return function(){return t[e].apply(t,arguments)}}(r));return function(t,e){for(var n=0,i=t.length;n<i;n++)e(t[n],n)}(["error","close","destroy","pause","resume"],function(e){t.on(e,i.emit.bind(i,e))}),i._read=function(e){f("wrapped _read",e),n&&(n=!1,t.resume())},i},d._fromList=E}).call(this,n(30))},function(t,e,n){t.exports=n(41)},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){return function(){}}();e.VexFlowBackends=i;var r=function(){function t(){}return t.prototype.getInnerElement=function(){return this.inner},t.prototype.getCanvas=function(){return this.canvas},t.prototype.getRenderer=function(){return this.renderer},t.prototype.resize=function(t,e){this.renderer.resize(t,e)},t}();e.VexFlowBackend=r},function(t,e,n){"use strict";var i=n(194);t.exports=function(t,e){for(var n,r=0,o="";!n;)o+=t(e>>4*r&15|i()),n=e<Math.pow(16,r+1),r++;return o}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(197),r=function(){function t(){this.instanceId=i.generate()}return t.prototype.toString=function(){return this.instanceId},t}();e.BaseIdClass=r},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(1),s=n(103),a=n(34),u=n(24),c=n(27),l=n(12),h=function(t){function e(e){var n=t.call(this)||this;n.staffLinkedExpressions=[],n.tempoExpressions=[],n.verticalSourceStaffEntryContainers=[],n.staffMeasureErrors=[],n.firstRepetitionInstructions=[],n.lastRepetitionInstructions=[],n.completeNumberOfStaves=e,n.implicitMeasure=!1,n.breakSystemAfter=!1,n.endsPiece=!1,n.firstInstructionsStaffEntries=new Array(e),n.lastInstructionsStaffEntries=new Array(e);for(var i=0;i<e;i++)n.staffMeasureErrors.push(!1),n.staffLinkedExpressions.push([]);return n}return r(e,t),Object.defineProperty(e.prototype,"MeasureNumber",{get:function(){return this.measureNumber},set:function(t){this.measureNumber=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"AbsoluteTimestamp",{get:function(){return this.absoluteTimestamp},set:function(t){this.absoluteTimestamp=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"CompleteNumberOfStaves",{get:function(){return this.completeNumberOfStaves},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Duration",{get:function(){return this.duration},set:function(t){this.duration=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ImplicitMeasure",{get:function(){return this.implicitMeasure},set:function(t){this.implicitMeasure=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"BreakSystemAfter",{get:function(){return this.breakSystemAfter},set:function(t){this.breakSystemAfter=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StaffLinkedExpressions",{get:function(){return this.staffLinkedExpressions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"TempoExpressions",{get:function(){return this.tempoExpressions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"VerticalSourceStaffEntryContainers",{get:function(){return this.verticalSourceStaffEntryContainers},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"FirstInstructionsStaffEntries",{get:function(){return this.firstInstructionsStaffEntries},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LastInstructionsStaffEntries",{get:function(){return this.lastInstructionsStaffEntries},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"FirstRepetitionInstructions",{get:function(){return this.firstRepetitionInstructions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LastRepetitionInstructions",{get:function(){return this.lastRepetitionInstructions},enumerable:!0,configurable:!0}),e.prototype.getErrorInMeasure=function(t){return this.staffMeasureErrors[t]},e.prototype.setErrorInStaffMeasure=function(t,e){this.staffMeasureErrors[t]=e},e.prototype.getNextMeasure=function(t){return t[this.measureListIndex+1]},e.prototype.getPreviousMeasure=function(t){if(this.measureListIndex>1)return t[this.measureListIndex-1]},e.prototype.findOrCreateStaffEntry=function(t,e,n){for(var i,r=void 0,o=0,u=this.verticalSourceStaffEntryContainers;o<u.length;o++){if((l=u[o]).Timestamp.Equals(t)){i=l;break}}if(void 0!==i)return void 0!==i.StaffEntries[e]?r=i.StaffEntries[e]:(r=new a.SourceStaffEntry(i,n),i.StaffEntries[e]=r),{createdNewContainer:!1,staffEntry:r};var c=this.verticalSourceStaffEntryContainers[this.verticalSourceStaffEntryContainers.length-1];if(0===this.verticalSourceStaffEntryContainers.length||c.Timestamp.lt(t)){var l=new s.VerticalSourceStaffEntryContainer(this,t.clone(),this.completeNumberOfStaves);this.verticalSourceStaffEntryContainers.push(l),r=new a.SourceStaffEntry(l,n),l.StaffEntries[e]=r}else for(var h=this.verticalSourceStaffEntryContainers.length-1;h>=0;h--){if(this.verticalSourceStaffEntryContainers[h].Timestamp.lt(t)){l=new s.VerticalSourceStaffEntryContainer(this,t.clone(),this.completeNumberOfStaves);this.verticalSourceStaffEntryContainers.splice(h+1,0,l),r=new a.SourceStaffEntry(l,n),l.StaffEntries[e]=r;break}if(0===h){l=new s.VerticalSourceStaffEntryContainer(this,t.clone(),this.completeNumberOfStaves);this.verticalSourceStaffEntryContainers.splice(h,0,l),r=new a.SourceStaffEntry(l,n),l.StaffEntries[e]=r;break}}return{createdNewContainer:!0,staffEntry:r}},e.prototype.findOrCreateVoiceEntry=function(t,e){for(var n=void 0,i=!1,r=0,o=t.VoiceEntries;r<o.length;r++){var s=o[r];if(s.ParentVoice===e){n=s;break}}return void 0===n&&(n=new c.VoiceEntry(t.Timestamp,e,t),t.VoiceEntries.push(n),i=!0),{createdVoiceEntry:i,voiceEntry:n}},e.prototype.getPreviousSourceStaffEntryFromIndex=function(t,e){for(var n=e-1;n>=0;n--)if(void 0!==this.verticalSourceStaffEntryContainers[n][t])return this.verticalSourceStaffEntryContainers[n][t]},e.prototype.getVerticalContainerIndexByTimestamp=function(t){for(var e=0,n=this.VerticalSourceStaffEntryContainers.length;e<n;++e)if(this.VerticalSourceStaffEntryContainers[e].Timestamp.Equals(t))return e;return-1},e.prototype.getVerticalContainerByTimestamp=function(t){for(var e=0,n=this.VerticalSourceStaffEntryContainers.length;e<n;++e){var i=this.VerticalSourceStaffEntryContainers[e];if(i.Timestamp.Equals(t))return i}},e.prototype.checkForEmptyVerticalContainer=function(t){for(var e=0,n=0;n<this.completeNumberOfStaves;n++)void 0===this.verticalSourceStaffEntryContainers[t][n]&&e++;e===this.completeNumberOfStaves&&this.verticalSourceStaffEntryContainers.splice(t,1)},e.prototype.reverseCheck=function(t,e){for(var n=new o.Fraction(0,1),i=[],r=0;r<t.Instruments.length;r++){for(var s=new o.Fraction(0,1),a=t.getGlobalStaffIndexOfFirstStaff(t.Instruments[r]),u=0;u<t.Instruments[r].Staves.length;u++){var c=this.getLastSourceStaffEntryForInstrument(a+u);if(void 0!==c&&!c.hasTie())for(var l=this.verticalSourceStaffEntryContainers.indexOf(c.VerticalContainerParent)-1;l>=0;l--){var h=this.verticalSourceStaffEntryContainers[l][a+u];if(void 0!==h&&h.hasTie()&&s.lt(o.Fraction.plus(h.Timestamp,h.calculateMaxNoteLength()))){s=o.Fraction.plus(h.Timestamp,h.calculateMaxNoteLength());break}}}i.push(s)}for(var f=0,p=i.length;f<p;++f){var d=i[f];n.lt(d)&&(n=d)}return o.Fraction.max(n,e)},e.prototype.calculateInstrumentsDuration=function(t,e){for(var n=[],i=0;i<t.Instruments.length;i++){for(var r=new o.Fraction(0,1),s=t.getGlobalStaffIndexOfFirstStaff(t.Instruments[i]),a=0;a<t.Instruments[i].Staves.length;a++){var u=this.getLastSourceStaffEntryForInstrument(s+a);void 0!==u&&void 0!==u.Timestamp&&r.lt(o.Fraction.plus(u.Timestamp,u.calculateMaxNoteLength()))&&(r=o.Fraction.plus(u.Timestamp,u.calculateMaxNoteLength()))}r.lt(e[i])&&(r=e[i]),n.push(r)}return n},e.prototype.getEntriesPerStaff=function(t){for(var e=[],n=0,i=this.VerticalSourceStaffEntryContainers;n<i.length;n++){var r=i[n].StaffEntries[t];void 0!==r&&e.push(r)}return e},e.prototype.hasBeginInstructions=function(){for(var t=0,e=this.FirstInstructionsStaffEntries.length;t<e;t++){var n=this.FirstInstructionsStaffEntries[t];if(void 0!==n&&n.Instructions.length>0)return!0}return!1},e.prototype.beginsWithLineRepetition=function(){for(var t=0,e=this.FirstRepetitionInstructions.length;t<e;++t){var n=this.FirstRepetitionInstructions[t];if(n.type===u.RepetitionInstructionEnum.StartLine)return!0;if(void 0!==n.parentRepetition&&n===n.parentRepetition.startMarker&&!n.parentRepetition.FromWords)return!0}return!1},e.prototype.endsWithLineRepetition=function(){for(var t=0,e=this.LastRepetitionInstructions.length;t<e;++t){var n=this.LastRepetitionInstructions[t];if(n.type===u.RepetitionInstructionEnum.BackJumpLine)return!0;var i=n.parentRepetition;if(void 0!==i&&!i.FromWords)for(var r=0,o=i.BackwardJumpInstructions.length;r<o;++r){if(n===i.BackwardJumpInstructions[r])return!0}}return!1},e.prototype.beginsWithWordRepetition=function(){for(var t=0,e=this.FirstRepetitionInstructions.length;t<e;++t){var n=this.FirstRepetitionInstructions[t];if(void 0!==n.parentRepetition&&n===n.parentRepetition.startMarker&&n.parentRepetition.FromWords)return!0}return!1},e.prototype.endsWithWordRepetition=function(){for(var t=0,e=this.LastRepetitionInstructions.length;t<e;++t){var n=this.LastRepetitionInstructions[t],i=n.parentRepetition;if(void 0!==i&&i.FromWords){for(var r=0,o=i.BackwardJumpInstructions.length;r<o;++r){if(n===i.BackwardJumpInstructions[r])return!0}if(n===i.forwardJumpInstruction)return!0}}return!1},e.prototype.getKeyInstruction=function(t){if(void 0!==this.FirstInstructionsStaffEntries[t])for(var e=this.FirstInstructionsStaffEntries[t],n=0,i=e.Instructions.length;n<i;++n){var r=e.Instructions[n];if(r instanceof l.KeyInstruction)return r}},e.prototype.getLastSourceStaffEntryForInstrument=function(t){for(var e,n=this.verticalSourceStaffEntryContainers.length-1;n>=0&&!(e=this.verticalSourceStaffEntryContainers[n].StaffEntries[t]);n--);return e},e}(n(91).BaseIdClass);e.SourceMeasure=h},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.enrolledTimestamps=[],this.visible=!0,this.musicSheet=t}return Object.defineProperty(t.prototype,"Visible",{get:function(){return this.visible},set:function(t){this.visible=t},enumerable:!0,configurable:!0}),t.prototype.getFirstSourceMeasure=function(){return this.musicSheet.SourceMeasures[this.startIndex]},t.prototype.getLastSourceMeasure=function(){return this.musicSheet.SourceMeasures[this.endIndex]},t}();e.PartListEntry=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o,s=n(55),a=n(1),u=function(t){function e(e,n,i,r){var o=t.call(this)||this;return o.dynamicType=e,o.label=r,o.placement=n,o.staffNumber=i,o.startVolume=-1,o.endVolume=-1,o.setType(),o}return r(e,t),Object.defineProperty(e.prototype,"DynamicType",{get:function(){return this.dynamicType},set:function(t){this.dynamicType=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StartMultiExpression",{get:function(){return this.startMultiExpression},set:function(t){this.startMultiExpression=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndMultiExpression",{get:function(){return this.endMultiExpression},set:function(t){this.endMultiExpression=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Placement",{get:function(){return this.placement},set:function(t){this.placement=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StartVolume",{get:function(){return this.startVolume},set:function(t){this.startVolume=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndVolume",{get:function(){return this.endVolume},set:function(t){this.endVolume=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StaffNumber",{get:function(){return this.staffNumber},set:function(t){this.staffNumber=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Label",{get:function(){return this.label},set:function(t){this.label=t,this.setType()},enumerable:!0,configurable:!0}),e.isInputStringContinuousDynamic=function(t){return void 0!==t&&(e.isStringInStringList(e.listContinuousDynamicIncreasing,t)||e.isStringInStringList(e.listContinuousDynamicDecreasing,t))},e.prototype.getInterpolatedDynamic=function(t){var e,n=this.StartMultiExpression.AbsoluteTimestamp;if(e=void 0!==this.EndMultiExpression?this.EndMultiExpression.AbsoluteTimestamp:a.Fraction.plus(this.startMultiExpression.SourceMeasureParent.AbsoluteTimestamp,this.startMultiExpression.SourceMeasureParent.Duration),t.lt(n))return-1;if(e.lt(t))return-2;var i=a.Fraction.minus(t,n).RealValue/a.Fraction.minus(e,n).RealValue;return Math.max(0,Math.min(99.9,this.startVolume+(this.endVolume-this.startVolume)*i))},e.prototype.isWedge=function(){return void 0===this.label},e.prototype.setType=function(){e.isStringInStringList(e.listContinuousDynamicIncreasing,this.label)?this.dynamicType=o.crescendo:e.isStringInStringList(e.listContinuousDynamicDecreasing,this.label)&&(this.dynamicType=o.diminuendo)},e.listContinuousDynamicIncreasing=["crescendo","cresc","cresc.","cres."],e.listContinuousDynamicDecreasing=["decrescendo","decresc","decr.","diminuendo","dim.","dim"],e}(s.AbstractExpression);e.ContinuousDynamicExpression=u,function(t){t[t.crescendo=0]="crescendo",t[t.diminuendo=1]="diminuendo"}(o=e.ContDynamicEnum||(e.ContDynamicEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(20),o=n(2),s=function(){function t(t,e,n,i,r){this.rootPitch=t,this.chordKind=e,this.keyInstruction=r,this.bassPitch=n,this.degree=i}return Object.defineProperty(t.prototype,"RootPitch",{get:function(){return this.rootPitch},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ChordKind",{get:function(){return this.chordKind},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"BassPitch",{get:function(){return this.bassPitch},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ChordDegree",{get:function(){return this.degree},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"KeyInstruction",{get:function(){return this.keyInstruction},enumerable:!0,configurable:!0}),t.calculateChordText=function(e,n){var s=e.RootPitch;void 0!==r.MusicSheetCalculator.transposeCalculator&&(s=r.MusicSheetCalculator.transposeCalculator.transposePitch(e.RootPitch,e.KeyInstruction,n));var u=i.Pitch.getNoteEnumString(s.FundamentalNote);if(s.Accidental!==o.AccidentalEnum.NONE&&(u+=this.getTextForAccidental(s.Accidental)),u+=t.getTextFromChordKindEnum(e.ChordKind),void 0!==e.BassPitch){var c=e.BassPitch;void 0!==r.MusicSheetCalculator.transposeCalculator&&(c=r.MusicSheetCalculator.transposeCalculator.transposePitch(e.BassPitch,e.KeyInstruction,n)),u+="/",u+=i.Pitch.getNoteEnumString(c.FundamentalNote),u+=this.getTextForAccidental(c.Accidental)}if(void 0!==e.ChordDegree){switch(e.ChordDegree.text){case a.add:u+="add";break;case a.alter:u+="alt";break;case a.subtract:u+="sub"}u+=e.ChordDegree.value,e.ChordDegree.alteration!==o.AccidentalEnum.NONE&&(u+=t.getTextForAccidental(e.ChordDegree.alteration))}return u},t.getTextForAccidental=function(t){var e="";switch(t){case o.AccidentalEnum.DOUBLEFLAT:e+="bb";break;case o.AccidentalEnum.FLAT:e+="b";break;case o.AccidentalEnum.SHARP:e+="#";break;case o.AccidentalEnum.DOUBLESHARP:e+="x"}return e},t.getTextFromChordKindEnum=function(t){var e="";switch(t){case u.major:break;case u.minor:e+="m";break;case u.augmented:e+="aug";break;case u.diminished:e+="dim";break;case u.dominant:e+="7";break;case u.majorseventh:e+="maj7";break;case u.minorseventh:e+="m7";break;case u.diminishedseventh:e+="dim7";break;case u.augmentedseventh:e+="aug7";break;case u.halfdiminished:e+="m7b5";break;case u.majorminor:e+="";break;case u.majorsixth:e+="maj6";break;case u.minorsixth:e+="m6";break;case u.dominantninth:e+="9";break;case u.majorninth:e+="maj9";break;case u.minorninth:e+="m9";break;case u.dominant11th:e+="11";break;case u.major11th:e+="maj11";break;case u.minor11th:e+="m11";break;case u.dominant13th:e+="13";break;case u.major13th:e+="maj13";break;case u.minor13th:e+="m13";break;case u.suspendedsecond:e+="sus2";break;case u.suspendedfourth:e+="sus4";break;case u.Neapolitan:case u.Italian:case u.French:case u.German:case u.pedal:case u.power:case u.Tristan:}return e},t}();e.ChordSymbolContainer=s;var a,u,c=function(){return function(t,e,n){this.value=t,this.alteration=e,this.text=n}}();e.Degree=c,function(t){t[t.add=0]="add",t[t.alter=1]="alter",t[t.subtract=2]="subtract"}(a=e.ChordDegreeText||(e.ChordDegreeText={})),function(t){t[t.major=0]="major",t[t.minor=1]="minor",t[t.augmented=2]="augmented",t[t.diminished=3]="diminished",t[t.dominant=4]="dominant",t[t.majorseventh=5]="majorseventh",t[t.minorseventh=6]="minorseventh",t[t.diminishedseventh=7]="diminishedseventh",t[t.augmentedseventh=8]="augmentedseventh",t[t.halfdiminished=9]="halfdiminished",t[t.majorminor=10]="majorminor",t[t.majorsixth=11]="majorsixth",t[t.minorsixth=12]="minorsixth",t[t.dominantninth=13]="dominantninth",t[t.majorninth=14]="majorninth",t[t.minorninth=15]="minorninth",t[t.dominant11th=16]="dominant11th",t[t.major11th=17]="major11th",t[t.minor11th=18]="minor11th",t[t.dominant13th=19]="dominant13th",t[t.major13th=20]="major13th",t[t.minor13th=21]="minor13th",t[t.suspendedsecond=22]="suspendedsecond",t[t.suspendedfourth=23]="suspendedfourth",t[t.Neapolitan=24]="Neapolitan",t[t.Italian=25]="Italian",t[t.French=26]="French",t[t.German=27]="German",t[t.pedal=28]="pedal",t[t.power=29]="power",t[t.Tristan=30]="Tristan"}(u=e.ChordSymbolEnum||(e.ChordSymbolEnum={}))},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(e,n){return t.call(this,e,n)||this}return r(e,t),e}(n(216).GraphicalVoiceEntry);e.VexFlowVoiceEntry=o},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(7),s=n(1),a=n(4),u=n(5),c=function(t){function e(e,n,i){void 0===e&&(e=void 0),void 0===n&&(n=void 0),void 0===i&&(i=void 0);var r=t.call(this)||this;return r.measureNumber=-1,r.parentStaff=e,r.parentSourceMeasure=n,r.parentStaffLine=i,void 0!==i?(r.parentStaff=i.ParentStaff,r.PositionAndShape=new a.BoundingBox(r,i.PositionAndShape)):r.PositionAndShape=new a.BoundingBox(r),r.PositionAndShape.BorderBottom=4,void 0!==r.parentSourceMeasure&&(r.measureNumber=r.parentSourceMeasure.MeasureNumber),r.staffEntries=[],r}return r(e,t),Object.defineProperty(e.prototype,"ParentStaff",{get:function(){return this.parentStaff},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"MeasureNumber",{get:function(){return this.measureNumber},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"FirstInstructionStaffEntry",{get:function(){return this.firstInstructionStaffEntry},set:function(t){this.firstInstructionStaffEntry=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LastInstructionStaffEntry",{get:function(){return this.lastInstructionStaffEntry},set:function(t){this.lastInstructionStaffEntry=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ParentStaffLine",{get:function(){return this.parentStaffLine},set:function(t){this.parentStaffLine=t,void 0!==this.parentStaffLine&&(this.PositionAndShape.Parent=this.parentStaffLine.PositionAndShape)},enumerable:!0,configurable:!0}),e.prototype.resetLayout=function(){throw new Error("not implemented")},e.prototype.getLineWidth=function(t){throw new Error("not implemented")},e.prototype.addClefAtBegin=function(t){throw new Error("not implemented")},e.prototype.addKeyAtBegin=function(t,e,n){throw new Error("not implemented")},e.prototype.addRhythmAtBegin=function(t){throw new Error("not implemented")},e.prototype.addClefAtEnd=function(t){throw new Error("not implemented")},e.prototype.setPositionInStaffline=function(t){this.PositionAndShape.RelativePosition=new u.PointF2D(t,0)},e.prototype.setWidth=function(t){this.PositionAndShape.BorderRight=t},e.prototype.layoutSymbols=function(){throw new Error("not implemented")},e.prototype.findGraphicalStaffEntryFromTimestamp=function(t){for(var e=0,n=this.staffEntries.length;e<n;++e){var i=this.staffEntries[e];if(i.relInMeasureTimestamp.Equals(t))return i}},e.prototype.findGraphicalStaffEntryFromVerticalContainerTimestamp=function(t){for(var e=0,n=this.staffEntries.length;e<n;++e){var i=this.staffEntries[e];if(i.sourceStaffEntry.VerticalContainerParent.getAbsoluteTimestamp().Equals(t))return i}},e.prototype.hasSameDurationWithSourceMeasureParent=function(){for(var t=new s.Fraction(0,1),e=0,n=this.staffEntries.length;e<n;++e){var i=this.staffEntries[e];t.Add(i.findStaffEntryMinNoteLength())}return t.Equals(this.parentSourceMeasure.Duration)},e.prototype.hasMultipleVoices=function(){if(0===this.staffEntries.length)return!1;for(var t=[],e=0,n=this.staffEntries.length;e<n;++e)for(var i=this.staffEntries[e],r=0,o=i.sourceStaffEntry.VoiceEntries.length;r<o;++r){var s=i.sourceStaffEntry.VoiceEntries[r];t.indexOf(s.ParentVoice)<0&&t.push(s.ParentVoice)}return t.length>1},e.prototype.isVisible=function(){return this.ParentStaff.ParentInstrument.Visible},e.prototype.getGraphicalMeasureDurationFromStaffEntries=function(){for(var t=new s.Fraction(0,1),e=[],n=0,i=this.staffEntries.length;n<i;++n)for(var r=0,o=(f=this.staffEntries[n]).sourceStaffEntry.VoiceEntries.length;r<o;++r){var a=f.sourceStaffEntry.VoiceEntries[r];e.indexOf(a.ParentVoice)<0&&e.push(a.ParentVoice)}for(n=0,i=e.length;n<i;++n){for(var u=e[n],c=new s.Fraction(0,1),l=0,h=this.staffEntries;l<h.length;l++)for(var f,p=0,d=(f=h[l]).graphicalVoiceEntries;p<d.length;p++){var b=d[p];b.parentVoiceEntry.ParentVoice===u&&b.notes.length>0&&c.Add(b.notes[0].graphicalNoteLength)}t.lt(c)&&(t=s.Fraction.createFromFraction(c))}return t},e.prototype.addGraphicalStaffEntry=function(t){this.staffEntries.push(t)},e.prototype.addGraphicalStaffEntryAtTimestamp=function(t){if(void 0!==t)if(0===this.staffEntries.length||this.staffEntries[this.staffEntries.length-1].relInMeasureTimestamp.lt(t.relInMeasureTimestamp))this.staffEntries.push(t);else for(var e=this.staffEntries.length-1;e>=0;e--){if(this.staffEntries[e].relInMeasureTimestamp.lt(t.relInMeasureTimestamp)){this.staffEntries.splice(e+1,0,t);break}0===e&&this.staffEntries.splice(e,0,t)}},e.prototype.beginsWithLineRepetition=function(){var t=this.parentSourceMeasure;return void 0!==t&&t.beginsWithLineRepetition()},e.prototype.endsWithLineRepetition=function(){var t=this.parentSourceMeasure;return void 0!==t&&t.endsWithLineRepetition()},e.prototype.beginsWithWordRepetition=function(){var t=this.parentSourceMeasure;return void 0!==t&&t.beginsWithWordRepetition()},e.prototype.endsWithWordRepetition=function(){var t=this.parentSourceMeasure;return void 0!==t&&t.endsWithWordRepetition()},e}(o.GraphicalObject);e.StaffMeasure=c},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=n(97),a=n(35),u=n(25),c=n(3),l=n(32),h=n(24),f=n(43),p=n(27),d=n(96),b=n(1),y=function(t){function e(e,n,i){void 0===n&&(n=void 0),void 0===i&&(i=void 0);var r=t.call(this,e,i,n)||this;return r.octaveOffset=3,r.vfVoices={},r.vfTies=[],r.vfRepetitionWords=[],r.connectors=[],r.beams={},r.tuplets={},r.vftuplets={},r.minimumStaffEntriesWidth=-1,r.resetLayout(),r}return r(e,t),e.prototype.setAbsoluteCoordinates=function(t,e){this.stave.setX(t).setY(e)},e.prototype.resetLayout=function(){this.stave=new o.Flow.Stave(0,0,0,{space_above_staff_ln:0,space_below_staff_ln:0}),this.updateInstructionWidth()},e.prototype.clean=function(){this.vfTies.length=0,this.connectors=[],this.resetLayout()},e.prototype.getLineWidth=function(t){switch(t){case a.SystemLinesEnum.BoldThinDots:case a.SystemLinesEnum.DotsThinBold:case a.SystemLinesEnum.DotsBoldBoldDots:return 10/l.unitInPixels;default:return 0}},e.prototype.addClefAtBegin=function(t){this.octaveOffset=t.OctaveOffset;var e=u.VexFlowConverter.Clef(t,"default");this.stave.addClef(e.type,e.size,e.annotation,o.Flow.Modifier.Position.BEGIN),this.updateInstructionWidth()},e.prototype.addKeyAtBegin=function(t,e,n){this.stave.setKeySignature(u.VexFlowConverter.keySignature(t),u.VexFlowConverter.keySignature(e),void 0),this.updateInstructionWidth()},e.prototype.addRhythmAtBegin=function(t){var e=u.VexFlowConverter.TimeSignature(t);this.stave.addModifier(e,o.Flow.Modifier.Position.BEGIN),this.updateInstructionWidth()},e.prototype.addClefAtEnd=function(t){var e=u.VexFlowConverter.Clef(t,"small");this.stave.setEndClef(e.type,e.size,e.annotation),this.updateInstructionWidth()},e.prototype.addMeasureLine=function(t,e){switch(e){case f.SystemLinePosition.MeasureBegin:switch(t){case a.SystemLinesEnum.BoldThinDots:this.stave.setBegBarType(u.VexFlowBarlineType.REPEAT_BEGIN)}break;case f.SystemLinePosition.MeasureEnd:switch(t){case a.SystemLinesEnum.DotsBoldBoldDots:this.stave.setEndBarType(u.VexFlowBarlineType.REPEAT_BOTH);break;case a.SystemLinesEnum.DotsThinBold:this.stave.setEndBarType(u.VexFlowBarlineType.REPEAT_END);break;case a.SystemLinesEnum.DoubleThin:this.stave.setEndBarType(u.VexFlowBarlineType.DOUBLE);break;case a.SystemLinesEnum.ThinBold:this.stave.setEndBarType(u.VexFlowBarlineType.END)}}},e.prototype.addMeasureNumber=function(){var t=this.MeasureNumber.toString(),e=o.Flow.StaveModifier.Position.ABOVE;this.stave.setText(t,e,{justification:1,shift_x:0,shift_y:0})},e.prototype.addWordRepetition=function(t){var e=void 0,n=o.Flow.Modifier.Position.END;switch(t){case h.RepetitionInstructionEnum.Segno:e=u.VexFlowRepetitionType.SEGNO_LEFT,n=o.Flow.Modifier.Position.BEGIN;break;case h.RepetitionInstructionEnum.Coda:e=u.VexFlowRepetitionType.CODA_LEFT,n=o.Flow.Modifier.Position.BEGIN;break;case h.RepetitionInstructionEnum.DaCapo:e=u.VexFlowRepetitionType.DC;break;case h.RepetitionInstructionEnum.DalSegno:e=u.VexFlowRepetitionType.DS;break;case h.RepetitionInstructionEnum.Fine:e=u.VexFlowRepetitionType.FINE;break;case h.RepetitionInstructionEnum.ToCoda:break;case h.RepetitionInstructionEnum.DaCapoAlFine:e=u.VexFlowRepetitionType.DC_AL_FINE;break;case h.RepetitionInstructionEnum.DaCapoAlCoda:e=u.VexFlowRepetitionType.DC_AL_CODA;break;case h.RepetitionInstructionEnum.DalSegnoAlFine:e=u.VexFlowRepetitionType.DS_AL_FINE;break;case h.RepetitionInstructionEnum.DalSegnoAlCoda:e=u.VexFlowRepetitionType.DS_AL_CODA}void 0!==e&&this.stave.addModifier(new o.Flow.Repetition(e,0,0),n)},e.prototype.setWidth=function(e){t.prototype.setWidth.call(this,e),this.stave.setWidth(e*l.unitInPixels)},e.prototype.layoutSymbols=function(){},e.prototype.draw=function(t){for(var e in this.stave.setContext(t).draw(),this.vfVoices)this.vfVoices.hasOwnProperty(e)&&this.vfVoices[e].draw(t,this.stave);for(var e in this.vfbeams)if(this.vfbeams.hasOwnProperty(e))for(var n=0,i=this.vfbeams[e];n<i.length;n++){i[n].setContext(t).draw()}for(var e in this.vftuplets)if(this.vftuplets.hasOwnProperty(e))for(var r=0,o=this.vftuplets[e];r<o.length;r++){o[r].setContext(t).draw()}for(var s=0,a=this.vfTies;s<a.length;s++){a[s].setContext(t).draw()}for(var u=0,c=this.connectors;u<c.length;u++){c[u].setContext(t).draw()}},e.prototype.format=function(){this.formatVoices&&this.formatVoices((this.PositionAndShape.BorderRight-this.beginInstructionsWidth-this.endInstructionsWidth)*l.unitInPixels),this.stave.setNoteStartX(this.stave.getX()+l.unitInPixels*this.beginInstructionsWidth)},e.prototype.getVoicesWithinMeasure=function(){for(var t=[],e=0,n=this.staffEntries;e<n.length;e++)for(var i=0,r=n[e].graphicalVoiceEntries;i<r.length;i++){var o=r[i];-1===t.indexOf(o.parentVoiceEntry.ParentVoice)&&t.push(o.parentVoiceEntry.ParentVoice)}return t},e.prototype.getGraphicalVoiceEntriesPerVoice=function(t){for(var e=[],n=0,i=this.staffEntries;n<i.length;n++)for(var r=0,o=i[n].graphicalVoiceEntries;r<o.length;r++){var s=o[r];s.parentVoiceEntry.ParentVoice===t&&e.push(s)}return e},e.prototype.getRestFilledVexFlowStaveNotesPerVoice=function(t){for(var e=void 0,n=this.getGraphicalVoiceEntriesPerVoice(t),i=0,r=n.length;i<r;++i){for(var o=n[i],s=o.notes[0].sourceNote.getAbsoluteTimestamp(),a=new b.Fraction,l=0,h=o.notes;l<h.length;l++){var f=h[l],p=b.Fraction.plus(f.sourceNote.getAbsoluteTimestamp(),f.sourceNote.Length);a<p&&(a=p)}if(void 0===e){var y=b.Fraction.minus(s,this.parentSourceMeasure.AbsoluteTimestamp);if(y.RealValue>0){c.debug("Ghost Found at start");var m=u.VexFlowConverter.GhostNote(y);(S=new d.VexFlowVoiceEntry(void 0,void 0)).vfStaveNote=m,n.splice(0,0,S),i++}}else{var v=b.Fraction.minus(s,e);if(v.RealValue>0){c.debug("Ghost Found in between");m=u.VexFlowConverter.GhostNote(v);(S=new d.VexFlowVoiceEntry(void 0,void 0)).vfStaveNote=m,n.splice(i,0,S),i++}}e=a}var g=b.Fraction.plus(this.parentSourceMeasure.AbsoluteTimestamp,this.parentSourceMeasure.Duration),_=b.Fraction.minus(g,e);if(_.RealValue>0){c.debug("Ghost Found at end");var S;m=u.VexFlowConverter.GhostNote(_);(S=new d.VexFlowVoiceEntry(void 0,void 0)).vfStaveNote=m,n.push(S)}return n},e.prototype.handleBeam=function(t,e){var n,i=t.sourceNote.ParentVoiceEntry.ParentVoice.VoiceId,r=this.beams[i];void 0===r&&(r=this.beams[i]=[]);for(var o=0,s=r;o<s.length;o++){var a=s[o];a[0]===e&&(n=a)}void 0===n&&(n=[e,[]],r.push(n));var u=t.parentVoiceEntry;n[1].indexOf(u)<0&&n[1].push(u)},e.prototype.handleTuplet=function(t,e){var n=t.sourceNote.ParentVoiceEntry.ParentVoice.VoiceId;e=t.sourceNote.NoteTuplet;var i,r=this.tuplets[n];void 0===r&&(r=this.tuplets[n]=[]);for(var o=0,s=r;o<s.length;o++){var a=s[o];a[0]===e&&(i=a)}void 0===i&&(i=[e,[]],r.push(i));var u=t.parentVoiceEntry;i[1].indexOf(u)<0&&i[1].push(u)},e.prototype.finalizeBeams=function(){for(var t in this.vfbeams={},this.beams)if(this.beams.hasOwnProperty(t)){var e=this.vfbeams[t];void 0===e&&(e=this.vfbeams[t]=[]);for(var n=0,i=this.beams[t];n<i.length;n++){for(var r=i[n],s=[],a=r[0],u=r[1],l=!0,h=0,f=u;h<f.length;h++){var d=f[h];d.parentVoiceEntry.ParentVoice===a.Notes[0].ParentVoiceEntry.ParentVoice&&(l=d.parentVoiceEntry.StemDirection===p.StemDirectionType.Undefined)}for(var b=0,y=u;b<y.length;b++){var m=y[b].vfStaveNote;void 0!==m&&s.push(m)}if(s.length>1){var v=new o.Flow.Beam(s,l);e.push(v)}else c.debug("Warning! Beam with no notes!")}}},e.prototype.finalizeTuplets=function(){for(var t in this.vftuplets={},this.tuplets)if(this.tuplets.hasOwnProperty(t)){var e=this.vftuplets[t];void 0===e&&(e=this.vftuplets[t]=[]);for(var n=0,i=this.tuplets[t];n<i.length;n++){for(var r=[],s=0,a=i[n][1];s<a.length;s++){var u=a[s];r.push(u.vfStaveNote)}if(r.length>1){e.push(new o.Flow.Tuplet(r,{notes_occupied:2,num_notes:r.length}))}else c.debug("Warning! Tuplet with no notes! Trying to ignore, but this is a serious problem.")}}},e.prototype.layoutStaffEntry=function(t){},e.prototype.staffMeasureCreatedCalculations=function(){for(var t=0,e=this.staffEntries;t<e.length;t++)for(var n=0,i=e[t].graphicalVoiceEntries;n<i.length;n++){var r=i[n];r.vfStaveNote=u.VexFlowConverter.StaveNote(r)}this.finalizeBeams(),this.finalizeTuplets();for(var s=0,a=this.getVoicesWithinMeasure();s<a.length;s++){var c=a[s];this.vfVoices[c.VoiceId]=new o.Flow.Voice({beat_value:this.parentSourceMeasure.Duration.Denominator,num_beats:this.parentSourceMeasure.Duration.Numerator,resolution:o.Flow.RESOLUTION}).setMode(o.Flow.Voice.Mode.SOFT);for(var l=0,h=this.getRestFilledVexFlowStaveNotesPerVoice(c);l<h.length;l++){var f=h[l];this.vfVoices[c.VoiceId].addTickable(f.vfStaveNote)}}this.createArticulations()},e.prototype.createArticulations=function(){for(var t=0,e=this.staffEntries.length;t<e;++t)for(var n=0,i=this.staffEntries[t].graphicalVoiceEntries;n<i.length;n++){var r=i[n],o=r.vfStaveNote;u.VexFlowConverter.generateArticulations(o,r.notes[0].sourceNote.ParentVoiceEntry.Articulations)}},e.prototype.lineTo=function(t,e){var n=new o.Flow.StaveConnector(t.getVFStave(),this.stave);n.setType(e),this.connectors.push(n)},e.prototype.getVFStave=function(){return this.stave},e.prototype.updateInstructionWidth=function(){for(var t=0,e=0,n=0,i=this.stave.getModifiers();n<i.length;n++){var r=i[n];r.getPosition()===o.Flow.StaveModifier.Position.BEGIN?t+=r.getWidth()+r.getPadding(void 0):r.getPosition()===o.Flow.StaveModifier.Position.END&&(e+=r.getWidth()+r.getPadding(void 0))}this.beginInstructionsWidth=t/l.unitInPixels,this.endInstructionsWidth=e/l.unitInPixels},e}(s.StaffMeasure);e.VexFlowMeasure=y},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(25),r=function(){function t(){var t=document.createElement("canvas");this.context=t.getContext("2d")}return t.prototype.computeTextWidthToHeightRatio=function(t,e,n){return this.context.font=i.VexFlowConverter.font(20,n,e),this.context.measureText(t).width/20},t}();e.VexFlowTextMeasurer=r},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=n(7),a=n(4),u=n(32),c=function(t){function e(e,n,i){void 0===i&&(i=0);var r=t.call(this)||this;r.PositionAndShape=new a.BoundingBox(r,e.ParentMusicSystem.PositionAndShape);var s=e.Measures[0],u=n.Measures[0];return r.addConnector(s.getVFStave(),u.getVFStave(),o.Flow.StaveConnector.type.BRACKET,i),r}return r(e,t),e.prototype.draw=function(t){this.vexflowConnector.setContext(t).draw();var e=this.vexflowConnector,n=e.top_stave.getYForLine(0),i=e.bottom_stave.getYForLine(e.bottom_stave.getNumLines()-1)+e.thickness;this.PositionAndShape.AbsolutePosition.x=(e.top_stave.getX()-2+e.x_shift)/u.unitInPixels,this.PositionAndShape.AbsolutePosition.y=n/u.unitInPixels,this.PositionAndShape.Size.height=(i-n)/u.unitInPixels,this.PositionAndShape.Size.width=12/u.unitInPixels},e.prototype.addConnector=function(t,e,n,i){this.vexflowConnector=new o.Flow.StaveConnector(t,e).setType(n).setXShift(-5*i)},e}(s.GraphicalObject);e.VexFlowInstrumentBracket=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,n){this.instrumentalGroups=[],this.name=t,this.musicSheet=e,this.parent=n}return Object.defineProperty(t.prototype,"InstrumentalGroups",{get:function(){return this.instrumentalGroups},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Parent",{get:function(){return this.parent},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Name",{get:function(){return this.name},set:function(t){this.name=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GetMusicSheet",{get:function(){return this.musicSheet},enumerable:!0,configurable:!0}),t}();e.InstrumentalGroup=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(101),s=n(26),a=n(227),u=function(t){function e(e,n,i,r){var o=t.call(this,void 0,i,r)||this;return o.transpose=0,o.voices=[],o.staves=[],o.hasLyrics=!1,o.hasChordSymbols=!1,o.lyricVersesNumbers=[],o.subInstruments=[],o.id=e,o.idString=n,o.nameLabel=new s.Label(n),o}return r(e,t),Object.defineProperty(e.prototype,"Voices",{get:function(){return this.voices},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Staves",{get:function(){return this.staves},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"NameLabel",{get:function(){return this.nameLabel},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"HasLyrics",{get:function(){return this.hasLyrics},set:function(t){this.hasLyrics=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"HasChordSymbols",{get:function(){return this.hasChordSymbols},set:function(t){this.hasChordSymbols=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LyricVersesNumbers",{get:function(){return this.lyricVersesNumbers},set:function(t){this.lyricVersesNumbers=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Name",{get:function(){return this.nameLabel.text},set:function(t){this.nameLabel.text=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"IdString",{get:function(){return this.idString},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Id",{get:function(){return this.id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"MidiInstrumentId",{get:function(){return this.subInstruments[0].midiInstrumentID},set:function(t){this.subInstruments[0].midiInstrumentID=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Volume",{get:function(){return this.subInstruments[0].volume},set:function(t){for(var e=0,n=this.subInstruments.length;e<n;++e){this.subInstruments[e].volume=t}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"PlaybackTranspose",{get:function(){return this.playbackTranspose},set:function(t){this.playbackTranspose=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"SubInstruments",{get:function(){return this.subInstruments},enumerable:!0,configurable:!0}),e.prototype.getSubInstrument=function(t){for(var e=0,n=this.subInstruments.length;e<n;++e){var i=this.subInstruments[e];if(i.idString===t)return i}},Object.defineProperty(e.prototype,"Visible",{get:function(){return this.voices.length>0&&this.Voices[0].Visible},set:function(t){for(var e=0,n=this.Voices.length;e<n;++e){this.Voices[e].Visible=t}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Audible",{get:function(){for(var t=!1,e=0,n=this.Voices.length;e<n;++e){var i=this.Voices[e];t=t||i.Audible}return t},set:function(t){for(var e=0,n=this.Voices.length;e<n;++e){this.Voices[e].Audible=t}for(e=0,n=this.staves.length;e<n;++e){this.staves[e].audible=t}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Following",{get:function(){for(var t=!1,e=0,n=this.Voices.length;e<n;++e){var i=this.Voices[e];t=t||i.Following}return t},set:function(t){for(var e=0,n=this.Voices.length;e<n;++e){this.Voices[e].Following=t}for(e=0,n=this.staves.length;e<n;++e){this.staves[e].following=t}},enumerable:!0,configurable:!0}),e.prototype.SetVoiceAudible=function(t,e){for(var n=0,i=this.Voices.length;n<i;++n){var r=this.Voices[n];if(r.VoiceId===t){r.Audible=e;break}}},e.prototype.SetVoiceFollowing=function(t,e){for(var n=0,i=this.Voices.length;n<i;++n){var r=this.Voices[n];if(r.VoiceId===t){r.Following=e;break}}},e.prototype.SetStaffAudible=function(t,e){var n=this.staves[t-1];if(n.audible=e,e)for(var i=0,r=n.Voices.length;i<r;++i){n.Voices[i].Audible=!0}else for(i=0,r=n.Voices.length;i<r;++i){for(var o=n.Voices[i],s=!1,a=0,u=this.Staves.length;a<u;++a){var c=this.Staves[a];if(c.Id!==t&&c.audible)for(var l=0,h=c.Voices.length;l<h;++l){c.Voices[l]===o&&(s=!0)}}s||(o.Audible=!1)}},e.prototype.SetStaffFollow=function(t,e){var n=this.staves[t-1];if(n.following=e,e)for(var i=0,r=n.Voices.length;i<r;++i){n.Voices[i].Following=!0}else for(i=0,r=n.Voices.length;i<r;++i){for(var o=n.Voices[i],s=!1,a=0,u=this.Staves.length;a<u;++a){var c=this.Staves[a];if(c.Id!==t&&c.following)for(var l=0,h=c.Voices.length;l<h;++l){c.Voices[l]===o&&(s=!0)}}s||(o.Following=!1)}},e.prototype.areAllVoiceVisible=function(){for(var t=0,e=this.Voices;t<e.length;t++){if(!e[t].Visible)return!1}return!0},e.prototype.createStaves=function(t){for(var e=0;e<t;e++)this.staves.push(new a.Staff(this,e+1))},e}(o.InstrumentalGroup);e.Instrument=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=function(){function t(t,e,n){this.staffEntries=[],this.comments=[],this.timestamp=e,this.staffEntries=new Array(n),this.parentMeasure=t}return t.prototype.$get$=function(t){return this.staffEntries[t]},t.prototype.$set$=function(t,e){this.staffEntries[t]=e},Object.defineProperty(t.prototype,"Timestamp",{get:function(){return this.timestamp},set:function(t){this.timestamp=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffEntries",{get:function(){return this.staffEntries},set:function(t){this.staffEntries=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Comments",{get:function(){return this.comments},set:function(t){this.comments=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentMeasure",{get:function(){return this.parentMeasure},set:function(t){this.parentMeasure=t},enumerable:!0,configurable:!0}),t.prototype.getAbsoluteTimestamp=function(){return i.Fraction.plus(this.timestamp,this.parentMeasure.AbsoluteTimestamp)},t}();e.VerticalSourceStaffEntryContainer=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.TimesNewRoman=0]="TimesNewRoman",t[t.Kokila=1]="Kokila"}(e.Fonts||(e.Fonts={}))},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(e,n,i){var r=t.call(this,e,n)||this;return r.master=i,r}return r(e,t),Object.defineProperty(e.prototype,"Master",{get:function(){return this.master},enumerable:!0,configurable:!0}),e}(n(56).Voice);e.LinkedVoice=o},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o,s=n(4),a=n(7),u=n(5),c=function(t){function e(e){var n=t.call(this)||this;return n.musicSystems=[],n.labels=[],n.parent=e,n.boundingBox=new s.BoundingBox(n,void 0),n}return r(e,t),Object.defineProperty(e.prototype,"MusicSystems",{get:function(){return this.musicSystems},set:function(t){this.musicSystems=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Labels",{get:function(){return this.labels},set:function(t){this.labels=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Parent",{get:function(){return this.parent},set:function(t){this.parent=t},enumerable:!0,configurable:!0}),e.prototype.setMusicPageAbsolutePosition=function(t,e){return e.PagePlacement===o.Down?new u.PointF2D(0,t*e.PageHeight):e.PagePlacement===o.Right?new u.PointF2D(t*this.parent.ParentMusicSheet.pageWidth,0):t%2==0?0===t?new u.PointF2D(0,t*e.PageHeight):new u.PointF2D(0,(t-1)*e.PageHeight):1===t?new u.PointF2D(this.parent.ParentMusicSheet.pageWidth,(t-1)*e.PageHeight):new u.PointF2D(this.parent.ParentMusicSheet.pageWidth,(t-2)*e.PageHeight)},e}(a.GraphicalObject);e.GraphicalMusicPage=c,function(t){t[t.Down=0]="Down",t[t.Right=1]="Right",t[t.RightDown=2]="RightDown"}(o=e.PagePlacementEnum||(e.PagePlacementEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=function(){function t(t){this.accidentalAbove=i.AccidentalEnum.NONE,this.accidentalBelow=i.AccidentalEnum.NONE,this.ornament=t}return Object.defineProperty(t.prototype,"GetOrnament",{get:function(){return this.ornament},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AccidentalAbove",{get:function(){return this.accidentalAbove},set:function(t){this.accidentalAbove=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AccidentalBelow",{get:function(){return this.accidentalBelow},set:function(t){this.accidentalBelow=t},enumerable:!0,configurable:!0}),t}();e.OrnamentContainer=r,function(t){t[t.Trill=0]="Trill",t[t.Turn=1]="Turn",t[t.InvertedTurn=2]="InvertedTurn",t[t.DelayedTurn=3]="DelayedTurn",t[t.DelayedInvertedTurn=4]="DelayedInvertedTurn",t[t.Mordent=5]="Mordent",t[t.InvertedMordent=6]="InvertedMordent"}(e.OrnamentEnum||(e.OrnamentEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){return function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.width=t,this.height=e}}();e.SizeF2D=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(10),s=n(9),a=function(t){function e(e,n){var i=t.call(this,n)||this;return i.defaultFactoryFunction=e,i}return r(e,t),e.prototype.setDefault=function(e,n){var i=t.prototype.getValue.call(this,e);return s.isUndefined(i)?(this.setValue(e,n),n):i},e.prototype.getValue=function(t){return this.setDefault(t,this.defaultFactoryFunction())},e}(o.default);e.default=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(36),o=function(){function t(t){this.data=[],this.compare=t||i.defaultCompare}return t.prototype.leftChildIndex=function(t){return 2*t+1},t.prototype.rightChildIndex=function(t){return 2*t+2},t.prototype.parentIndex=function(t){return Math.floor((t-1)/2)},t.prototype.minIndex=function(t,e){return e>=this.data.length?t>=this.data.length?-1:t:this.compare(this.data[t],this.data[e])<=0?t:e},t.prototype.siftUp=function(t){for(var e=this.parentIndex(t);t>0&&this.compare(this.data[e],this.data[t])>0;)r.swap(this.data,e,t),t=e,e=this.parentIndex(t)},t.prototype.siftDown=function(t){for(var e=this.minIndex(this.leftChildIndex(t),this.rightChildIndex(t));e>=0&&this.compare(this.data[t],this.data[e])>0;)r.swap(this.data,e,t),t=e,e=this.minIndex(this.leftChildIndex(t),this.rightChildIndex(t))},t.prototype.peek=function(){return this.data.length>0?this.data[0]:void 0},t.prototype.add=function(t){if(!i.isUndefined(t))return this.data.push(t),this.siftUp(this.data.length-1),!0},t.prototype.removeRoot=function(){if(this.data.length>0){var t=this.data[0];return this.data[0]=this.data[this.data.length-1],this.data.splice(this.data.length-1,1),this.data.length>0&&this.siftDown(0),t}},t.prototype.contains=function(t){var e=i.compareToEquals(this.compare);return r.contains(this.data,t,e)},t.prototype.size=function(){return this.data.length},t.prototype.isEmpty=function(){return this.data.length<=0},t.prototype.clear=function(){this.data.length=0},t.prototype.forEach=function(t){r.forEach(this.data,t)},t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(62),r=function(){function t(){this.list=new i.default}return t.prototype.enqueue=function(t){return this.list.add(t)},t.prototype.add=function(t){return this.list.add(t)},t.prototype.dequeue=function(){if(0!==this.list.size()){var t=this.list.first();return this.list.removeElementAtIndex(0),t}},t.prototype.peek=function(){if(0!==this.list.size())return this.list.first()},t.prototype.size=function(){return this.list.size()},t.prototype.contains=function(t,e){return this.list.contains(t,e)},t.prototype.isEmpty=function(){return this.list.size()<=0},t.prototype.clear=function(){this.list.clear()},t.prototype.forEach=function(t){this.list.forEach(t)},t}();e.default=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(36),o=n(10),s=function(){function t(t){this.dictionary=new o.default(t)}return t.prototype.contains=function(t){return this.dictionary.containsKey(t)},t.prototype.add=function(t){return!this.contains(t)&&!i.isUndefined(t)&&(this.dictionary.setValue(t,t),!0)},t.prototype.intersection=function(t){var e=this;this.forEach(function(n){return t.contains(n)||e.remove(n),!0})},t.prototype.union=function(t){var e=this;t.forEach(function(t){return e.add(t),!0})},t.prototype.difference=function(t){var e=this;t.forEach(function(t){return e.remove(t),!0})},t.prototype.isSubsetOf=function(t){if(this.size()>t.size())return!1;var e=!0;return this.forEach(function(n){return!!t.contains(n)||(e=!1,!1)}),e},t.prototype.remove=function(t){return!!this.contains(t)&&(this.dictionary.remove(t),!0)},t.prototype.forEach=function(t){this.dictionary.forEach(function(e,n){return t(n)})},t.prototype.toArray=function(){return this.dictionary.values()},t.prototype.isEmpty=function(){return this.dictionary.isEmpty()},t.prototype.size=function(){return this.dictionary.size()},t.prototype.clear=function(){this.dictionary.clear()},t.prototype.toString=function(){return r.toString(this.toArray())},t}();e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(243),r=n(45),o=n(5),s=n(8),a=n(12),u=n(1),c=n(4),l=n(3),h=n(10),f=n(44),p=function(){function t(t,e){this.musicPages=[],this.measureList=[],this.verticalGraphicalStaffEntryContainers=[],this.cursors=[],this.leadSheet=!1,this.musicSheet=t,this.numberOfStaves=this.musicSheet.Staves.length,this.calculator=e,this.sourceToGraphicalMeasureLinks=new h.default,this.calculator.initialize(this)}return Object.defineProperty(t.prototype,"ParentMusicSheet",{get:function(){return this.musicSheet},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GetCalculator",{get:function(){return this.calculator},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MusicPages",{get:function(){return this.musicPages},set:function(t){this.musicPages=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MeasureList",{get:function(){return this.measureList},set:function(t){this.measureList=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VerticalGraphicalStaffEntryContainers",{get:function(){return this.verticalGraphicalStaffEntryContainers},set:function(t){this.verticalGraphicalStaffEntryContainers=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Title",{get:function(){return this.title},set:function(t){this.title=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Subtitle",{get:function(){return this.subtitle},set:function(t){this.subtitle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Composer",{get:function(){return this.composer},set:function(t){this.composer=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Lyricist",{get:function(){return this.lyricist},set:function(t){this.lyricist=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Cursors",{get:function(){return this.cursors},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SelectionStartSymbol",{get:function(){return this.selectionStartSymbol},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SelectionEndSymbol",{get:function(){return this.selectionEndSymbol},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MinAllowedSystemWidth",{get:function(){return this.minAllowedSystemWidth},set:function(t){this.minAllowedSystemWidth=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"NumberOfStaves",{get:function(){return this.numberOfStaves},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LeadSheet",{get:function(){return this.leadSheet},set:function(t){this.leadSheet=t},enumerable:!0,configurable:!0}),t.transformRelativeToAbsolutePosition=function(t){for(var e=0;e<t.MusicPages.length;e++){var n=t.MusicPages[e].setMusicPageAbsolutePosition(e,t.ParentMusicSheet.rules);t.MusicPages[e].PositionAndShape.calculateAbsolutePositionsRecursive(n.x,n.y)}},t.prototype.Initialize=function(){this.verticalGraphicalStaffEntryContainers=[],this.musicPages=[],this.measureList=[]},t.prototype.reCalculate=function(){this.calculator.calculate()},t.prototype.prepare=function(){this.calculator.prepareGraphicalMusicSheet()},t.prototype.EnforceRedrawOfMusicSystems=function(){for(var t=0,e=this.musicPages.length;t<e;++t)for(var n=this.musicPages[t],i=0,r=n.MusicSystems.length;i<r;++i){n.MusicSystems[i].needsToBeRedrawn=!0}},t.prototype.getClickedObject=function(t){for(var e=0,n=this.MusicPages.length;e<n;++e){return this.MusicPages[e].PositionAndShape.getClickedObjectOfType(t)}},t.prototype.findGraphicalStaffEntryFromMeasureList=function(t,e,n){for(var i=e;i<this.measureList.length;i++)for(var r=this.measureList[i][t],o=0,s=r.staffEntries.length;o<s;++o){var a=r.staffEntries[o];if(a.sourceStaffEntry===n)return a}},t.prototype.findNextGraphicalStaffEntry=function(t,e,n){var i=n.parentMeasure,r=i.staffEntries.indexOf(n);if(r<i.staffEntries.length-1)return i.staffEntries[r+1];if(e<this.measureList.length-1){var o=this.measureList[e+1][t];if(o.staffEntries.length>0)return o.staffEntries[0]}},t.prototype.getFirstVisibleMeasuresListFromIndeces=function(t,e){for(var n=[],i=this.measureList[0].length,r=t;r<=e;r++)for(var o=0;o<i;o++)if(this.measureList[r][o].isVisible()){n.push(this.measureList[r][o]);break}return n},t.prototype.orderMeasuresByStaffLine=function(t){var e=[],n=[];e.push(n);for(var i=0;i<t.length;i++)0===i?n.push(t[0]):t[i].ParentStaffLine===t[i-1].ParentStaffLine?n.push(t[i]):(-1===e.indexOf(n)&&e.push(n),n=[],e.push(n),n.push(t[i]));return e},t.prototype.initializeActiveClefs=function(){var t=[],e=this.musicSheet.getFirstSourceMeasure();if(void 0!==e)for(var n=0;n<e.CompleteNumberOfStaves;n++){var i=new s.ClefInstruction;if(void 0!==e.FirstInstructionsStaffEntries[n])for(var r=0,o=e.FirstInstructionsStaffEntries[n].Instructions.length;r<o;++r){var a=e.FirstInstructionsStaffEntries[n].Instructions[r];a instanceof s.ClefInstruction&&(i=a)}t.push(i)}return t},t.prototype.GetMainKey=function(){var t=this.musicSheet.getFirstSourceMeasure();if(void 0!==t)for(var e=0;e<t.CompleteNumberOfStaves;e++)for(var n=0,i=t.FirstInstructionsStaffEntries[e].Instructions.length;n<i;++n){var r=t.FirstInstructionsStaffEntries[e].Instructions[n];if(r instanceof a.KeyInstruction)return r}},t.prototype.getOrCreateVerticalContainer=function(t){if(0===this.verticalGraphicalStaffEntryContainers.length||f.CollectionUtil.getLastElement(this.verticalGraphicalStaffEntryContainers).AbsoluteTimestamp.lt(t)){var e=new i.VerticalGraphicalStaffEntryContainer(this.numberOfStaves,t);return this.verticalGraphicalStaffEntryContainers.push(e),e}for(var n=this.verticalGraphicalStaffEntryContainers.length-1;n>=0;n--){if(this.verticalGraphicalStaffEntryContainers[n].AbsoluteTimestamp.lt(t)){e=new i.VerticalGraphicalStaffEntryContainer(this.numberOfStaves,t);return this.verticalGraphicalStaffEntryContainers.splice(n+1,0,e),e}if(this.verticalGraphicalStaffEntryContainers[n].AbsoluteTimestamp.Equals(t))return this.verticalGraphicalStaffEntryContainers[n]}},t.prototype.GetVerticalContainerFromTimestamp=function(t,e){void 0===e&&(e=0);var n=f.CollectionUtil.binarySearch(this.verticalGraphicalStaffEntryContainers,new i.VerticalGraphicalStaffEntryContainer(0,t),i.VerticalGraphicalStaffEntryContainer.compareByTimestamp,e);if(n>=0)return this.verticalGraphicalStaffEntryContainers[n]},t.prototype.GetInterpolatedIndexInVerticalContainers=function(t){var e,n=this.verticalGraphicalStaffEntryContainers,i=0,r=n.length-1,o=void 0,s=void 0;if(t.lte(n[n.length-1].AbsoluteTimestamp)){for(;r-i>1;){var a=Math.floor((r+i)/2);if(n[i].AbsoluteTimestamp.Equals(t)){r=i;break}if(n[r].AbsoluteTimestamp.Equals(t)){i=r;break}if(n[a].AbsoluteTimestamp.Equals(t))return this.verticalGraphicalStaffEntryContainers.indexOf(n[a]);t.lt(n[a].AbsoluteTimestamp)?r=a:i=a}if(i===r)return this.verticalGraphicalStaffEntryContainers.indexOf(n[i]);o=n[i].AbsoluteTimestamp,s=n[r].AbsoluteTimestamp}else o=n[n.length-1].AbsoluteTimestamp,s=u.Fraction.plus(this.getLongestStaffEntryDuration(n.length-1),o),r=n.length;var c=s.RealValue-o.RealValue;return e=r-(s.RealValue-t.RealValue)/c,Math.min(e,this.verticalGraphicalStaffEntryContainers.length)},t.prototype.getVisibleStavesIndecesFromSourceMeasure=function(t){for(var e=[],n=[],i=0,r=t.length;i<r;++i){var o=t[i].ParentStaff.ParentInstrument;-1===e.indexOf(o)&&e.push(o)}for(i=0,r=e.length;i<r;++i){o=e[i];for(var s=this.musicSheet.getGlobalStaffIndexOfFirstStaff(o),a=0;a<o.Staves.length;a++)n.push(s+a)}return n},t.prototype.getGraphicalMeasureFromSourceMeasureAndIndex=function(t,e){for(var n=0;n<this.measureList.length;n++)if(this.measureList[n][0].parentSourceMeasure===t)return this.measureList[n][e]},t.prototype.getMeasureIndex=function(t,e,n){for(e=0,0;e<this.measureList.length;e++)for(var i=0,r=this.measureList[e].length;i<r;++i){if(this.measureList[e][i]===t)return!0}return!1},t.prototype.GetNearesNote=function(t,e){var n=[],i=new c.BoundingBox;i.BorderLeft=t.x-10,i.BorderTop=t.y-10,i.BorderRight=t.x+10,i.BorderBottom=t.y+10,i.AbsolutePosition=new o.PointF2D(0,0);for(var r=0,s=this.MusicPages.length;r<s;++r){var a=this.MusicPages[r].PositionAndShape.getObjectsInRegion(i);if(void 0!==a)for(var u=0,l=a.length;u<l;++u){var h=a[u];Math.abs(h.PositionAndShape.AbsolutePosition.x-t.x)<e.x&&Math.abs(h.PositionAndShape.AbsolutePosition.y-t.y)<e.y&&n.push(h)}}var f=void 0;for(r=0,s=n.length;r<s;++r){h=n[r];if(void 0===f)f=h;else{if(void 0===h.parentVoiceEntry.parentStaffEntry.relInMeasureTimestamp)continue;this.CalculateDistance(h.PositionAndShape.AbsolutePosition,t)<this.CalculateDistance(f.PositionAndShape.AbsolutePosition,t)&&(f=h)}}if(void 0!==f)return f},t.prototype.GetClickableLabel=function(t){var e=new c.BoundingBox;e.BorderLeft=t.x-4,e.BorderTop=t.y-4,e.BorderRight=t.x+4,e.BorderBottom=t.y+4,e.AbsolutePosition=new o.PointF2D(0,0);for(var n=0,i=this.MusicPages.length;n<i;++n){var r=this.MusicPages[n].PositionAndShape.getObjectsInRegion(e);if(1===r.length)for(var s=0,a=r.length;s<a;++s){return r[s]}}},t.prototype.GetNearestStaffEntry=function(t){var e=[],n=new c.BoundingBox(void 0);n.BorderLeft=t.x-10,n.BorderTop=t.y-10,n.BorderRight=t.x+10,n.BorderBottom=t.y+10,n.AbsolutePosition=new o.PointF2D(0,0);for(var i=0,r=this.MusicPages.length;i<r;++i){var s=this.MusicPages[i].PositionAndShape.getObjectsInRegion(n,!1);if(void 0!==s&&0!==s.length)for(var a=0,u=s.length;a<u;++a){var l=s[a];e.push(l)}}var h=void 0;for(i=0,r=e.length;i<r;++i){l=e[i];if(void 0===h)h=l;else{if(void 0===l.relInMeasureTimestamp)continue;this.CalculateDistance(l.PositionAndShape.AbsolutePosition,t)<this.CalculateDistance(h.PositionAndShape.AbsolutePosition,t)&&(h=l)}}if(void 0!==h)return h},t.prototype.GetPossibleCommentAnchor=function(t){var e=this.GetNearestStaffEntry(t);if(void 0!==e)return e.sourceStaffEntry},t.prototype.getClickedObjectOfType=function(t){for(var e=0,n=this.musicPages.length;e<n;++e){var i=this.musicPages[e].PositionAndShape.getClickedObjectOfType(t);if(void 0!==i)return i}},t.prototype.tryGetTimestampFromPosition=function(t){var e=this.getClickedObjectOfType(t);if(void 0!==e)return e.getAbsoluteTimestamp()},t.prototype.tryGetClickableLabel=function(t){try{return this.GetClickableLabel(t)}catch(e){l.info("GraphicalMusicSheet.tryGetClickableObject","positionOnMusicSheet: "+t,e)}},t.prototype.tryGetTimeStampFromPosition=function(t){try{var e=this.GetNearestStaffEntry(t);if(void 0===e)return;return e.getAbsoluteTimestamp()}catch(e){l.info("GraphicalMusicSheet.tryGetTimeStampFromPosition","positionOnMusicSheet: "+t,e)}},t.prototype.getStaffEntry=function(t){var e=this.VerticalGraphicalStaffEntryContainers[t],n=void 0;try{for(var i=0,r=e.StaffEntries.length;i<r;++i){var o=e.StaffEntries[i];void 0!==o&&o.sourceStaffEntry.ParentStaff.ParentInstrument.Visible&&(void 0===n?n=o:void 0!==o.PositionAndShape&&void 0!==n.PositionAndShape&&n.PositionAndShape.RelativePosition.x>o.PositionAndShape.RelativePosition.x&&(n=o))}}catch(t){l.info("GraphicalMusicSheet.getStaffEntry",t)}return n},t.prototype.GetPreviousVisibleContainerIndex=function(t){for(var e=t-1;e>=0;e--)for(var n=this.verticalGraphicalStaffEntryContainers[e].StaffEntries,i=0,r=n.length;i<r;++i){var o=n[i];if(void 0!==o&&o.sourceStaffEntry.ParentStaff.ParentInstrument.Visible)return e}return-1},t.prototype.GetNextVisibleContainerIndex=function(t){for(var e=t+1;e<this.verticalGraphicalStaffEntryContainers.length;++e)for(var n=this.verticalGraphicalStaffEntryContainers[e].StaffEntries,i=0,r=n.length;i<r;++i){var o=n[i];if(void 0!==o&&o.sourceStaffEntry.ParentStaff.ParentInstrument.Visible)return e}return-1},t.prototype.findClosestLeftStaffEntry=function(t,e){for(var n=void 0,i=Math.floor(t),r=i=Math.min(this.VerticalGraphicalStaffEntryContainers.length-1,i);r>=0;r--)if(void 0!==(n=this.getStaffEntry(r))){if(!e)return n;if(n.sourceStaffEntry.ParentStaff.ParentInstrument.Visible)return n}},t.prototype.findClosestRightStaffEntry=function(t,e){for(var n=void 0,i=Math.max(0,Math.ceil(t));i<this.VerticalGraphicalStaffEntryContainers.length;i++)if(void 0!==(n=this.getStaffEntry(i))){if(!e)return n;if(n.sourceStaffEntry.ParentStaff.ParentInstrument.Visible)return n}},t.prototype.calculateCursorLineAtTimestamp=function(t,e){var n=this.calculateXPositionFromTimestamp(t),i=n[0],s=n[1];if(void 0!==s&&0!==s.StaffLines.length){var a=s.PositionAndShape.AbsolutePosition.y,u=f.CollectionUtil.last(s.StaffLines).PositionAndShape.RelativePosition.y+4;return new r.GraphicalLine(new o.PointF2D(i,a),new o.PointF2D(i,a+u),3,e)}},t.prototype.calculateXPositionFromTimestamp=function(t){var e=void 0,n=this.GetInterpolatedIndexInVerticalContainers(t),i=this.findClosestLeftStaffEntry(n,!0),r=this.findClosestRightStaffEntry(n,!0),o=t.RealValue;if(void 0===i&&void 0===r)return[0,void 0];var s=void 0,a=void 0;if((s=void 0!==i?i.parentMeasure.ParentStaffLine.ParentMusicSystem:r.parentMeasure.ParentStaffLine.ParentMusicSystem)===(a=void 0!==r?r.parentMeasure.ParentStaffLine.ParentMusicSystem:i.parentMeasure.ParentStaffLine.ParentMusicSystem)){e=s;var c=void 0,l=void 0,h=void 0;if(void 0===i)l=h=r.PositionAndShape.AbsolutePosition.x,c=0;else if(void 0===r){l=i.PositionAndShape.AbsolutePosition.x,h=e.GetRightBorderAbsoluteXPosition();var f=i.parentMeasure.parentSourceMeasure;c=(o-i.getAbsoluteTimestamp().RealValue)/(u.Fraction.plus(f.AbsoluteTimestamp,f.Duration).RealValue-i.getAbsoluteTimestamp().RealValue)}else l=i.PositionAndShape.AbsolutePosition.x,h=r.PositionAndShape.AbsolutePosition.x,c=i===r?0:(o-i.getAbsoluteTimestamp().RealValue)/(r.getAbsoluteTimestamp().RealValue-i.getAbsoluteTimestamp().RealValue);return[d=l+(c=Math.min(1,Math.max(0,c)))*(h-l),e]}var p=r.parentMeasure.parentSourceMeasure.AbsoluteTimestamp.RealValue,d=(c=void 0,void 0);if(o<p){e=s;l=i.PositionAndShape.AbsolutePosition.x;var b=e.GetRightBorderAbsoluteXPosition();c=(o-i.getAbsoluteTimestamp().RealValue)/(p-i.getAbsoluteTimestamp().RealValue),d=l+(c=Math.min(1,Math.max(0,c)))*(b-l)}else{e=a;h=r.PositionAndShape.AbsolutePosition.x;var y=e.GetLeftBorderAbsoluteXPosition();c=(o-p)/(r.getAbsoluteTimestamp().RealValue-p),d=y+(c=Math.min(1,Math.max(0,c)))*(h-y)}return[d,e]},t.prototype.GetNumberOfVisibleInstruments=function(){for(var t=0,e=0,n=this.musicSheet.Instruments.length;e<n;++e){!0===this.musicSheet.Instruments[e].Visible&&t++}return t},t.prototype.GetNumberOfFollowedInstruments=function(){for(var t=0,e=0,n=this.musicSheet.Instruments.length;e<n;++e){!0===this.musicSheet.Instruments[e].Following&&t++}return t},t.prototype.GetGraphicalFromSourceMeasure=function(t){return this.sourceToGraphicalMeasureLinks.getValue(t)},t.prototype.GetGraphicalFromSourceStaffEntry=function(t){return this.GetGraphicalFromSourceMeasure(t.VerticalContainerParent.ParentMeasure)[t.ParentStaff.idInMusicSheet].findGraphicalStaffEntryFromTimestamp(t.Timestamp)},t.prototype.CalculateDistance=function(t,e){var n=t.x-e.x,i=t.y-e.y;return n*n+i*i},t.prototype.getLongestStaffEntryDuration=function(t){for(var e=new u.Fraction(0,1),n=0,i=this.verticalGraphicalStaffEntryContainers[t].StaffEntries;n<i.length;n++){var r=i[n];if(void 0!==r){var o=r.findStaffEntryMaxNoteLength();e.lt(o)&&(e=o)}}return e},t}();e.GraphicalMusicSheet=p;var d=function(){return function(){}}();e.SystemImageProperties=d},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){if(this.hasAttributes=!1,void 0===t)throw new Error("IXmlElement: expected Element, got undefined");this.elem=t,this.name=t.nodeName.toLowerCase(),t.hasAttributes()&&(this.hasAttributes=!0,this.firstAttribute=t.attributes[0]),this.hasElements=t.hasChildNodes(),1===t.childNodes.length&&t.childNodes[0].nodeType===Node.TEXT_NODE?this.value=t.childNodes[0].nodeValue:this.value=""}return t.prototype.attribute=function(t){return this.elem.attributes.getNamedItem(t)},t.prototype.attributes=function(){if(!this.attrs){for(var t=this.elem.attributes,e=[],n=0;n<t.length;n+=1)e.push(t[n]);this.attrs=e}return this.attrs},t.prototype.element=function(e){for(var n=this.elem.childNodes,i=0,r=n.length;i<r;i+=1){var o=n[i];if(o.nodeType===Node.ELEMENT_NODE&&o.nodeName.toLowerCase()===e)return new t(o)}},t.prototype.elements=function(e){var n=this.elem.childNodes,i=[],r=void 0===e;r||(e=e.toLowerCase());for(var o=0;o<n.length;o+=1){var s=n[o];s.nodeType!==Node.ELEMENT_NODE||!r&&s.nodeName.toLowerCase()!==e||i.push(new t(s))}return i},t}();e.IXmlElement=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(114),r=n(244),o=n(207),s=n(113),a=n(32),u=n(172),c=n(171),l=n(170),h=n(169),f=n(54),p=n(116),d=n(3),b=function(){function t(t,e,n){if(void 0===e&&(e=!1),void 0===n&&(n="svg"),this.zoom=1,"string"==typeof t?this.container=document.getElementById(t):t&&"appendChild"in t&&(this.container=t),!this.container)throw new Error("Please pass a valid div container to OpenSheetMusicDisplay");this.backend="svg"===n?new u.SvgVexFlowBackend:new c.CanvasVexFlowBackend,this.backend.initialize(this.container),this.canvas=this.backend.getCanvas();var i=this.backend.getInnerElement();this.drawer=new a.VexFlowMusicSheetDrawer(this.canvas,this.backend,!1),this.cursor=new l.Cursor(i,this),e&&this.autoResize()}return Object.defineProperty(t.prototype,"graphicalMusicSheet",{get:function(){return this.graphic},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"musicSheet",{get:function(){return this.sheet},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"renderingBackend",{get:function(){return this.backend},enumerable:!0,configurable:!0}),t.prototype.load=function(t){if(this.reset(),"string"==typeof t){var e=t,n=this;if("PK"===e.substr(0,4))return h.MXLHelper.MXLtoXMLstring(e).then(function(t){return n.load(t)},function(t){throw d.debug(t),new Error("OpenSheetMusicDisplay: Invalid MXL file")});if(""===e.substr(0,3))return n.load(e.substr(3));if("<?xml"===e.substr(0,5))t=(new DOMParser).parseFromString(e,"application/xml");else if(e.length<2083)return p.AJAX.ajax(e).then(function(t){return n.load(t)},function(t){throw t})}if(!t||!t.nodeName)return f.Promise.reject(new Error("OpenSheetMusicDisplay: The document which was provided is invalid"));for(var a,u=t.childNodes,c=0,l=u.length;c<l;c+=1){var b=u[c];if(b.nodeType===Node.ELEMENT_NODE&&"score-partwise"===b.nodeName.toLowerCase()){a=b;break}}if(!a)return f.Promise.reject(new Error("OpenSheetMusicDisplay: Document is not a valid 'partwise' MusicXML"));var y=new i.IXmlElement(a),m=new r.VexFlowMusicSheetCalculator,v=new o.MusicSheetReader;return this.sheet=v.createMusicSheet(y,"Unknown path"),this.graphic=new s.GraphicalMusicSheet(this.sheet,m),this.cursor.init(this.sheet.MusicPartManager,this.graphic),d.info("Loaded sheet "+this.sheet.TitleString+" successfully."),f.Promise.resolve({})},t.prototype.render=function(){if(!this.graphic)throw new Error("OpenSheetMusicDisplay: Before rendering a music sheet, please load a MusicXML file");var t=this.container.offsetWidth;this.sheet.pageWidth=t/this.zoom/10,this.graphic.reCalculate(),this.graphic.Cursors.length=0;var e=10*this.graphic.MusicPages[0].PositionAndShape.BorderBottom*this.zoom;this.drawer.clear(),this.drawer.resize(t,e),this.drawer.scale(this.zoom),this.drawer.drawSheet(this.graphic),this.cursor.update()},t.prototype.setLogLevel=function(t){switch(t){case"trace":d.setLevel(d.levels.WARN);break;case"debug":d.setLevel(d.levels.DEBUG);break;case"info":d.setLevel(d.levels.INFO);break;case"warn":d.setLevel(d.levels.WARN);break;case"error":d.setLevel(d.levels.ERROR);break;default:d.warn("Could not set log level to "+t+". Using warn instead."),d.setLevel(d.levels.WARN)}},t.prototype.reset=function(){this.cursor.hide(),this.sheet=void 0,this.graphic=void 0,this.zoom=1},t.prototype.autoResize=function(){var t=this;this.handleResize(function(){},function(){t.render()})},t.prototype.handleResize=function(t,e){var n,i=void 0,r=200;function o(){i=void 0,window.clearTimeout(i),(new Date).getTime()-n<r?i=window.setTimeout(o,r):e()}function s(){n=(new Date).getTime(),i||(t(),n=(new Date).getTime(),i=window.setTimeout(o,r))}window.attachEvent?window.attachEvent("onresize",s):window.addEventListener("resize",s)},t}();e.OpenSheetMusicDisplay=b;var y=n(98);e.VexFlowMeasure=y.VexFlowMeasure;var m=n(1);e.Fraction=m.Fraction;var v=n(97);e.StaffMeasure=v.StaffMeasure;var g=n(92);e.SourceMeasure=g.SourceMeasure},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(54),r=function(){function t(){}return t.ajax=function(t){var e,n=t.indexOf(".mxl")>-1?"text/plain; charset=x-user-defined":"application/xml";if(XMLHttpRequest)e=new XMLHttpRequest;else{if(!ActiveXObject)return i.Promise.reject(new Error("XMLHttp not supported."));e=new ActiveXObject("Microsoft.XMLHTTP")}return new i.Promise(function(i,r){e.onreadystatechange=function(){e.readyState===XMLHttpRequest.DONE&&(200===e.status?i(e.responseText):0===e.status&&e.responseText?i(e.responseText):r(new Error("Could not retrieve requested URL")))},e.overrideMimeType(n),e.open("GET",t,!0),e.send()})},t}();e.AJAX=r},function(t,e,n){"use strict";var i=n(66),r=n(0),o=n(48),s=n(47),a=n(22),u=n(73),c=n(14);function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var e,n;if(t.skip(22),this.fileNameLength=t.readInt(2),n=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(n),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(e=function(t){for(var e in u)if(u.hasOwnProperty(e)&&u[e].magic===t)return u[e];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+r.pretty(this.compressionMethod)+" unknown (inner file : "+r.transformTo("string",this.fileName)+")");this.decompressed=new o(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0===t&&(this.dosPermissions=63&this.externalFileAttributes),3===t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(t){if(this.extraFields[1]){var e=i(this.extraFields[1].value);this.uncompressedSize===r.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===r.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===r.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===r.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(t){var e,n,i,r=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index<r;)e=t.readInt(2),n=t.readInt(2),i=t.readData(n),this.extraFields[e]={id:e,length:n,value:i}},handleUTF8:function(){var t=c.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=a.utf8decode(this.fileName),this.fileCommentStr=a.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var n=r.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(n)}var i=this.findExtraFieldUnicodeComment();if(null!==i)this.fileCommentStr=i;else{var o=r.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(o)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:s(this.fileName)!==e.readInt(4)?null:a.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:s(this.fileComment)!==e.readInt(4)?null:a.utf8decode(e.readData(t.length-5))}return null}},t.exports=l},function(t,e,n){"use strict";var i=n(63);function r(t){i.call(this,t)}n(0).inherits(r,i),r.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},t.exports=r},function(t,e,n){"use strict";var i=n(64);function r(t){i.call(this,t)}n(0).inherits(r,i),r.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},r.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},r.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},r.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},t.exports=r},function(t,e,n){"use strict";var i=n(66),r=n(0),o=n(67),s=n(117),a=(n(22),n(14));function u(t){this.files=[],this.loadOptions=t}u.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+r.pretty(e)+", expected "+r.pretty(t)+")")}},isSignature:function(t,e){var n=this.reader.index;this.reader.setIndex(t);var i=this.reader.readString(4)===e;return this.reader.setIndex(n),i},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=a.uint8array?"uint8array":"array",n=r.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(n)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,n,i=this.zip64EndOfCentralSize-44;0<i;)t=this.reader.readInt(2),e=this.reader.readInt(4),n=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:n}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(o.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(o.CENTRAL_FILE_HEADER);)(t=new s({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(o.CENTRAL_DIRECTORY_END);if(t<0)throw!this.isSignature(0,o.LOCAL_FILE_HEADER)?new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html"):new Error("Corrupted zip: can't find end of central directory");this.reader.setIndex(t);var e=t;if(this.checkSignature(o.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===r.MAX_VALUE_16BITS||this.diskWithCentralDirStart===r.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===r.MAX_VALUE_16BITS||this.centralDirRecords===r.MAX_VALUE_16BITS||this.centralDirSize===r.MAX_VALUE_32BITS||this.centralDirOffset===r.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(o.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(o.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,o.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(o.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(o.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var n=this.centralDirOffset+this.centralDirSize;this.zip64&&(n+=20,n+=12+this.zip64EndOfCentralSize);var i=e-n;if(i>0)this.isSignature(e,o.CENTRAL_FILE_HEADER)||(this.reader.zero=i);else if(i<0)throw new Error("Corrupted zip: missing "+Math.abs(i)+" bytes.")},prepareReader:function(t){this.reader=i(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=u},function(t,e,n){"use strict";var i=n(0),r=n(28),o=n(22),s=(i=n(0),n(120)),a=n(74),u=n(39);function c(t){return new r.Promise(function(e,n){var i=t.decompressed.getContentWorker().pipe(new a);i.on("error",function(t){n(t)}).on("end",function(){i.streamInfo.crc32!==t.decompressed.crc32?n(new Error("Corrupted zip : CRC32 mismatch")):e()}).resume()})}t.exports=function(t,e){var n=this;return e=i.extend(e||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:o.utf8decode}),u.isNode&&u.isStream(t)?r.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):i.prepareContent("the loaded zip file",t,!0,e.optimizedBinaryString,e.base64).then(function(t){var n=new s(e);return n.load(t),n}).then(function(t){var n=[r.Promise.resolve(t)],i=t.files;if(e.checkCRC32)for(var o=0;o<i.length;o++)n.push(c(i[o]));return r.Promise.all(n)}).then(function(t){for(var i=t.shift(),r=i.files,o=0;o<r.length;o++){var s=r[o];n.file(s.fileNameStr,s.decompressed,{binary:!0,optimizedBinaryString:!0,date:s.date,dir:s.dir,comment:s.fileCommentStr.length?s.fileCommentStr:null,unixPermissions:s.unixPermissions,dosPermissions:s.dosPermissions,createFolders:e.createFolders})}return i.zipComment.length&&(n.comment=i.zipComment),n})}},function(t,e,n){"use strict";var i=n(0),r=n(6);function o(t,e){r.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(e)}i.inherits(o,r),o.prototype._bindStream=function(t){var e=this;this._stream=t,t.pause(),t.on("data",function(t){e.push({data:t,meta:{percent:0}})}).on("error",function(t){e.isPaused?this.generatedError=t:e.error(t)}).on("end",function(){e.isPaused?e._upstreamEnded=!0:e.end()})},o.prototype.pause=function(){return!!r.prototype.pause.call(this)&&(this._stream.pause(),!0)},o.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=o},function(t,e,n){"use strict";var i=n(0),r=n(6),o=n(22),s=n(47),a=n(67),u=function(t,e){var n,i="";for(n=0;n<e;n++)i+=String.fromCharCode(255&t),t>>>=8;return i},c=function(t,e,n,r,c,l){var h,f,p=t.file,d=t.compression,b=l!==o.utf8encode,y=i.transformTo("string",l(p.name)),m=i.transformTo("string",o.utf8encode(p.name)),v=p.comment,g=i.transformTo("string",l(v)),_=i.transformTo("string",o.utf8encode(v)),S=m.length!==p.name.length,x=_.length!==v.length,w="",E="",P="",T=p.dir,M=p.date,k={crc32:0,compressedSize:0,uncompressedSize:0};e&&!n||(k.crc32=t.crc32,k.compressedSize=t.compressedSize,k.uncompressedSize=t.uncompressedSize);var O=0;e&&(O|=8),b||!S&&!x||(O|=2048);var A,C,L=0,I=0;T&&(L|=16),"UNIX"===c?(I=798,L|=(A=p.unixPermissions,C=A,A||(C=T?16893:33204),(65535&C)<<16)):(I=20,L|=63&(p.dosPermissions||0)),h=M.getUTCHours(),h<<=6,h|=M.getUTCMinutes(),h<<=5,h|=M.getUTCSeconds()/2,f=M.getUTCFullYear()-1980,f<<=4,f|=M.getUTCMonth()+1,f<<=5,f|=M.getUTCDate(),S&&(E=u(1,1)+u(s(y),4)+m,w+="up"+u(E.length,2)+E),x&&(P=u(1,1)+u(s(g),4)+_,w+="uc"+u(P.length,2)+P);var R="";return R+="\n\0",R+=u(O,2),R+=d.magic,R+=u(h,2),R+=u(f,2),R+=u(k.crc32,4),R+=u(k.compressedSize,4),R+=u(k.uncompressedSize,4),R+=u(y.length,2),R+=u(w.length,2),{fileRecord:a.LOCAL_FILE_HEADER+R+y+w,dirRecord:a.CENTRAL_FILE_HEADER+u(I,2)+R+u(g.length,2)+"\0\0\0\0"+u(L,4)+u(r,4)+y+w+g}};function l(t,e,n,i){r.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=n,this.encodeFileName=i,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}i.inherits(l,r),l.prototype.push=function(t){var e=t.meta.percent||0,n=this.entriesCount,i=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,r.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:n?(e+100*(n-i-1))/n:100}}))},l.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var n=c(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:n.fileRecord,meta:{percent:0}})}else this.accumulate=!0},l.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,n=c(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(n.dirRecord),e)this.push({data:function(t){return a.DATA_DESCRIPTOR+u(t.crc32,4)+u(t.compressedSize,4)+u(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:n.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},l.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var n=this.bytesWritten-t,r=function(t,e,n,r,o){var s=i.transformTo("string",o(r));return a.CENTRAL_DIRECTORY_END+"\0\0\0\0"+u(t,2)+u(t,2)+u(e,4)+u(n,4)+u(s.length,2)+s}(this.dirRecords.length,n,t,this.zipComment,this.encodeFileName);this.push({data:r,meta:{percent:100}})},l.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},l.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()}),t.on("error",function(t){e.error(t)}),this},l.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},l.prototype.error=function(t){var e=this._sources;if(!r.prototype.error.call(this,t))return!1;for(var n=0;n<e.length;n++)try{e[n].error(t)}catch(t){}return!0},l.prototype.lock=function(){r.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},t.exports=l},function(t,e,n){"use strict";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},function(t,e,n){"use strict";var i=n(13),r=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],o=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],s=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],a=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(t,e,n,u,c,l,h,f){var p,d,b,y,m,v,g,_,S,x=f.bits,w=0,E=0,P=0,T=0,M=0,k=0,O=0,A=0,C=0,L=0,I=null,R=0,N=new i.Buf16(16),F=new i.Buf16(16),B=null,D=0;for(w=0;w<=15;w++)N[w]=0;for(E=0;E<u;E++)N[e[n+E]]++;for(M=x,T=15;T>=1&&0===N[T];T--);if(M>T&&(M=T),0===T)return c[l++]=20971520,c[l++]=20971520,f.bits=1,0;for(P=1;P<T&&0===N[P];P++);for(M<P&&(M=P),A=1,w=1;w<=15;w++)if(A<<=1,(A-=N[w])<0)return-1;if(A>0&&(0===t||1!==T))return-1;for(F[1]=0,w=1;w<15;w++)F[w+1]=F[w]+N[w];for(E=0;E<u;E++)0!==e[n+E]&&(h[F[e[n+E]]++]=E);if(0===t?(I=B=h,v=19):1===t?(I=r,R-=257,B=o,D-=257,v=256):(I=s,B=a,v=-1),L=0,E=0,w=P,m=l,k=M,O=0,b=-1,y=(C=1<<M)-1,1===t&&C>852||2===t&&C>592)return 1;for(;;){g=w-O,h[E]<v?(_=0,S=h[E]):h[E]>v?(_=B[D+h[E]],S=I[R+h[E]]):(_=96,S=0),p=1<<w-O,P=d=1<<k;do{c[m+(L>>O)+(d-=p)]=g<<24|_<<16|S|0}while(0!==d);for(p=1<<w-1;L&p;)p>>=1;if(0!==p?(L&=p-1,L+=p):L=0,E++,0==--N[w]){if(w===T)break;w=e[n+h[E]]}if(w>M&&(L&y)!==b){for(0===O&&(O=M),m+=P,A=1<<(k=w-O);k+O<T&&!((A-=N[k+O])<=0);)k++,A<<=1;if(C+=1<<k,1===t&&C>852||2===t&&C>592)return 1;c[b=L&y]=M<<24|k<<16|m-l|0}}return 0!==L&&(c[m+L]=w-O<<24|64<<16|0),f.bits=M,0}},function(t,e,n){"use strict";t.exports=function(t,e){var n,i,r,o,s,a,u,c,l,h,f,p,d,b,y,m,v,g,_,S,x,w,E,P,T;n=t.state,i=t.next_in,P=t.input,r=i+(t.avail_in-5),o=t.next_out,T=t.output,s=o-(e-t.avail_out),a=o+(t.avail_out-257),u=n.dmax,c=n.wsize,l=n.whave,h=n.wnext,f=n.window,p=n.hold,d=n.bits,b=n.lencode,y=n.distcode,m=(1<<n.lenbits)-1,v=(1<<n.distbits)-1;t:do{d<15&&(p+=P[i++]<<d,d+=8,p+=P[i++]<<d,d+=8),g=b[p&m];e:for(;;){if(p>>>=_=g>>>24,d-=_,0===(_=g>>>16&255))T[o++]=65535&g;else{if(!(16&_)){if(0==(64&_)){g=b[(65535&g)+(p&(1<<_)-1)];continue e}if(32&_){n.mode=12;break t}t.msg="invalid literal/length code",n.mode=30;break t}S=65535&g,(_&=15)&&(d<_&&(p+=P[i++]<<d,d+=8),S+=p&(1<<_)-1,p>>>=_,d-=_),d<15&&(p+=P[i++]<<d,d+=8,p+=P[i++]<<d,d+=8),g=y[p&v];n:for(;;){if(p>>>=_=g>>>24,d-=_,!(16&(_=g>>>16&255))){if(0==(64&_)){g=y[(65535&g)+(p&(1<<_)-1)];continue n}t.msg="invalid distance code",n.mode=30;break t}if(x=65535&g,d<(_&=15)&&(p+=P[i++]<<d,(d+=8)<_&&(p+=P[i++]<<d,d+=8)),(x+=p&(1<<_)-1)>u){t.msg="invalid distance too far back",n.mode=30;break t}if(p>>>=_,d-=_,x>(_=o-s)){if((_=x-_)>l&&n.sane){t.msg="invalid distance too far back",n.mode=30;break t}if(w=0,E=f,0===h){if(w+=c-_,_<S){S-=_;do{T[o++]=f[w++]}while(--_);w=o-x,E=T}}else if(h<_){if(w+=c+h-_,(_-=h)<S){S-=_;do{T[o++]=f[w++]}while(--_);if(w=0,h<S){S-=_=h;do{T[o++]=f[w++]}while(--_);w=o-x,E=T}}}else if(w+=h-_,_<S){S-=_;do{T[o++]=f[w++]}while(--_);w=o-x,E=T}for(;S>2;)T[o++]=E[w++],T[o++]=E[w++],T[o++]=E[w++],S-=3;S&&(T[o++]=E[w++],S>1&&(T[o++]=E[w++]))}else{w=o-x;do{T[o++]=T[w++],T[o++]=T[w++],T[o++]=T[w++],S-=3}while(S>2);S&&(T[o++]=T[w++],S>1&&(T[o++]=T[w++]))}break}}break}}while(i<r&&o<a);i-=S=d>>3,p&=(1<<(d-=S<<3))-1,t.next_in=i,t.next_out=o,t.avail_in=i<r?r-i+5:5-(i-r),t.avail_out=o<a?a-o+257:257-(o-a),n.hold=p,n.bits=d}},function(t,e,n){"use strict";var i=n(13),r=n(72),o=n(71),s=n(126),a=n(125),u=0,c=1,l=2,h=4,f=5,p=6,d=0,b=1,y=2,m=-2,v=-3,g=-4,_=-5,S=8,x=1,w=2,E=3,P=4,T=5,M=6,k=7,O=8,A=9,C=10,L=11,I=12,R=13,N=14,F=15,B=16,D=17,V=18,j=19,G=20,W=21,U=22,H=23,z=24,Y=25,X=26,K=27,q=28,J=29,Z=30,Q=31,$=32,tt=852,et=592,nt=15;function it(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function rt(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=x,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new i.Buf32(tt),e.distcode=e.distdyn=new i.Buf32(et),e.sane=1,e.back=-1,d):m}function ot(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,rt(t)):m}function st(t,e){var n,i;return t&&t.state?(i=t.state,e<0?(n=0,e=-e):(n=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?m:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=n,i.wbits=e,ot(t))):m}function at(t,e){var n,r;return t?(r=new function(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new i.Buf16(320),this.work=new i.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0},t.state=r,r.window=null,(n=st(t,e))!==d&&(t.state=null),n):m}var ut,ct,lt=!0;function ht(t){if(lt){var e;for(ut=new i.Buf32(512),ct=new i.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(a(c,t.lens,0,288,ut,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;a(l,t.lens,0,32,ct,0,t.work,{bits:5}),lt=!1}t.lencode=ut,t.lenbits=9,t.distcode=ct,t.distbits=5}function ft(t,e,n,r){var o,s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new i.Buf8(s.wsize)),r>=s.wsize?(i.arraySet(s.window,e,n-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):((o=s.wsize-s.wnext)>r&&(o=r),i.arraySet(s.window,e,n-r,o,s.wnext),(r-=o)?(i.arraySet(s.window,e,n-r,r,0),s.wnext=r,s.whave=s.wsize):(s.wnext+=o,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=o))),0}e.inflateReset=ot,e.inflateReset2=st,e.inflateResetKeep=rt,e.inflateInit=function(t){return at(t,nt)},e.inflateInit2=at,e.inflate=function(t,e){var n,tt,et,nt,rt,ot,st,at,ut,ct,lt,pt,dt,bt,yt,mt,vt,gt,_t,St,xt,wt,Et,Pt,Tt=0,Mt=new i.Buf8(4),kt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return m;(n=t.state).mode===I&&(n.mode=R),rt=t.next_out,et=t.output,st=t.avail_out,nt=t.next_in,tt=t.input,ot=t.avail_in,at=n.hold,ut=n.bits,ct=ot,lt=st,wt=d;t:for(;;)switch(n.mode){case x:if(0===n.wrap){n.mode=R;break}for(;ut<16;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(2&n.wrap&&35615===at){n.check=0,Mt[0]=255&at,Mt[1]=at>>>8&255,n.check=o(n.check,Mt,2,0),at=0,ut=0,n.mode=w;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&at)<<8)+(at>>8))%31){t.msg="incorrect header check",n.mode=Z;break}if((15&at)!==S){t.msg="unknown compression method",n.mode=Z;break}if(ut-=4,xt=8+(15&(at>>>=4)),0===n.wbits)n.wbits=xt;else if(xt>n.wbits){t.msg="invalid window size",n.mode=Z;break}n.dmax=1<<xt,t.adler=n.check=1,n.mode=512&at?C:I,at=0,ut=0;break;case w:for(;ut<16;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(n.flags=at,(255&n.flags)!==S){t.msg="unknown compression method",n.mode=Z;break}if(57344&n.flags){t.msg="unknown header flags set",n.mode=Z;break}n.head&&(n.head.text=at>>8&1),512&n.flags&&(Mt[0]=255&at,Mt[1]=at>>>8&255,n.check=o(n.check,Mt,2,0)),at=0,ut=0,n.mode=E;case E:for(;ut<32;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.head&&(n.head.time=at),512&n.flags&&(Mt[0]=255&at,Mt[1]=at>>>8&255,Mt[2]=at>>>16&255,Mt[3]=at>>>24&255,n.check=o(n.check,Mt,4,0)),at=0,ut=0,n.mode=P;case P:for(;ut<16;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.head&&(n.head.xflags=255&at,n.head.os=at>>8),512&n.flags&&(Mt[0]=255&at,Mt[1]=at>>>8&255,n.check=o(n.check,Mt,2,0)),at=0,ut=0,n.mode=T;case T:if(1024&n.flags){for(;ut<16;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.length=at,n.head&&(n.head.extra_len=at),512&n.flags&&(Mt[0]=255&at,Mt[1]=at>>>8&255,n.check=o(n.check,Mt,2,0)),at=0,ut=0}else n.head&&(n.head.extra=null);n.mode=M;case M:if(1024&n.flags&&((pt=n.length)>ot&&(pt=ot),pt&&(n.head&&(xt=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),i.arraySet(n.head.extra,tt,nt,pt,xt)),512&n.flags&&(n.check=o(n.check,tt,pt,nt)),ot-=pt,nt+=pt,n.length-=pt),n.length))break t;n.length=0,n.mode=k;case k:if(2048&n.flags){if(0===ot)break t;pt=0;do{xt=tt[nt+pt++],n.head&&xt&&n.length<65536&&(n.head.name+=String.fromCharCode(xt))}while(xt&&pt<ot);if(512&n.flags&&(n.check=o(n.check,tt,pt,nt)),ot-=pt,nt+=pt,xt)break t}else n.head&&(n.head.name=null);n.length=0,n.mode=O;case O:if(4096&n.flags){if(0===ot)break t;pt=0;do{xt=tt[nt+pt++],n.head&&xt&&n.length<65536&&(n.head.comment+=String.fromCharCode(xt))}while(xt&&pt<ot);if(512&n.flags&&(n.check=o(n.check,tt,pt,nt)),ot-=pt,nt+=pt,xt)break t}else n.head&&(n.head.comment=null);n.mode=A;case A:if(512&n.flags){for(;ut<16;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(at!==(65535&n.check)){t.msg="header crc mismatch",n.mode=Z;break}at=0,ut=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),t.adler=n.check=0,n.mode=I;break;case C:for(;ut<32;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}t.adler=n.check=it(at),at=0,ut=0,n.mode=L;case L:if(0===n.havedict)return t.next_out=rt,t.avail_out=st,t.next_in=nt,t.avail_in=ot,n.hold=at,n.bits=ut,y;t.adler=n.check=1,n.mode=I;case I:if(e===f||e===p)break t;case R:if(n.last){at>>>=7&ut,ut-=7&ut,n.mode=K;break}for(;ut<3;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}switch(n.last=1&at,ut-=1,3&(at>>>=1)){case 0:n.mode=N;break;case 1:if(ht(n),n.mode=G,e===p){at>>>=2,ut-=2;break t}break;case 2:n.mode=D;break;case 3:t.msg="invalid block type",n.mode=Z}at>>>=2,ut-=2;break;case N:for(at>>>=7&ut,ut-=7&ut;ut<32;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if((65535&at)!=(at>>>16^65535)){t.msg="invalid stored block lengths",n.mode=Z;break}if(n.length=65535&at,at=0,ut=0,n.mode=F,e===p)break t;case F:n.mode=B;case B:if(pt=n.length){if(pt>ot&&(pt=ot),pt>st&&(pt=st),0===pt)break t;i.arraySet(et,tt,nt,pt,rt),ot-=pt,nt+=pt,st-=pt,rt+=pt,n.length-=pt;break}n.mode=I;break;case D:for(;ut<14;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(n.nlen=257+(31&at),at>>>=5,ut-=5,n.ndist=1+(31&at),at>>>=5,ut-=5,n.ncode=4+(15&at),at>>>=4,ut-=4,n.nlen>286||n.ndist>30){t.msg="too many length or distance symbols",n.mode=Z;break}n.have=0,n.mode=V;case V:for(;n.have<n.ncode;){for(;ut<3;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.lens[kt[n.have++]]=7&at,at>>>=3,ut-=3}for(;n.have<19;)n.lens[kt[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,Et={bits:n.lenbits},wt=a(u,n.lens,0,19,n.lencode,0,n.work,Et),n.lenbits=Et.bits,wt){t.msg="invalid code lengths set",n.mode=Z;break}n.have=0,n.mode=j;case j:for(;n.have<n.nlen+n.ndist;){for(;mt=(Tt=n.lencode[at&(1<<n.lenbits)-1])>>>16&255,vt=65535&Tt,!((yt=Tt>>>24)<=ut);){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(vt<16)at>>>=yt,ut-=yt,n.lens[n.have++]=vt;else{if(16===vt){for(Pt=yt+2;ut<Pt;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(at>>>=yt,ut-=yt,0===n.have){t.msg="invalid bit length repeat",n.mode=Z;break}xt=n.lens[n.have-1],pt=3+(3&at),at>>>=2,ut-=2}else if(17===vt){for(Pt=yt+3;ut<Pt;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}ut-=yt,xt=0,pt=3+(7&(at>>>=yt)),at>>>=3,ut-=3}else{for(Pt=yt+7;ut<Pt;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}ut-=yt,xt=0,pt=11+(127&(at>>>=yt)),at>>>=7,ut-=7}if(n.have+pt>n.nlen+n.ndist){t.msg="invalid bit length repeat",n.mode=Z;break}for(;pt--;)n.lens[n.have++]=xt}}if(n.mode===Z)break;if(0===n.lens[256]){t.msg="invalid code -- missing end-of-block",n.mode=Z;break}if(n.lenbits=9,Et={bits:n.lenbits},wt=a(c,n.lens,0,n.nlen,n.lencode,0,n.work,Et),n.lenbits=Et.bits,wt){t.msg="invalid literal/lengths set",n.mode=Z;break}if(n.distbits=6,n.distcode=n.distdyn,Et={bits:n.distbits},wt=a(l,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,Et),n.distbits=Et.bits,wt){t.msg="invalid distances set",n.mode=Z;break}if(n.mode=G,e===p)break t;case G:n.mode=W;case W:if(ot>=6&&st>=258){t.next_out=rt,t.avail_out=st,t.next_in=nt,t.avail_in=ot,n.hold=at,n.bits=ut,s(t,lt),rt=t.next_out,et=t.output,st=t.avail_out,nt=t.next_in,tt=t.input,ot=t.avail_in,at=n.hold,ut=n.bits,n.mode===I&&(n.back=-1);break}for(n.back=0;mt=(Tt=n.lencode[at&(1<<n.lenbits)-1])>>>16&255,vt=65535&Tt,!((yt=Tt>>>24)<=ut);){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(mt&&0==(240&mt)){for(gt=yt,_t=mt,St=vt;mt=(Tt=n.lencode[St+((at&(1<<gt+_t)-1)>>gt)])>>>16&255,vt=65535&Tt,!(gt+(yt=Tt>>>24)<=ut);){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}at>>>=gt,ut-=gt,n.back+=gt}if(at>>>=yt,ut-=yt,n.back+=yt,n.length=vt,0===mt){n.mode=X;break}if(32&mt){n.back=-1,n.mode=I;break}if(64&mt){t.msg="invalid literal/length code",n.mode=Z;break}n.extra=15&mt,n.mode=U;case U:if(n.extra){for(Pt=n.extra;ut<Pt;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.length+=at&(1<<n.extra)-1,at>>>=n.extra,ut-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=H;case H:for(;mt=(Tt=n.distcode[at&(1<<n.distbits)-1])>>>16&255,vt=65535&Tt,!((yt=Tt>>>24)<=ut);){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(0==(240&mt)){for(gt=yt,_t=mt,St=vt;mt=(Tt=n.distcode[St+((at&(1<<gt+_t)-1)>>gt)])>>>16&255,vt=65535&Tt,!(gt+(yt=Tt>>>24)<=ut);){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}at>>>=gt,ut-=gt,n.back+=gt}if(at>>>=yt,ut-=yt,n.back+=yt,64&mt){t.msg="invalid distance code",n.mode=Z;break}n.offset=vt,n.extra=15&mt,n.mode=z;case z:if(n.extra){for(Pt=n.extra;ut<Pt;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}n.offset+=at&(1<<n.extra)-1,at>>>=n.extra,ut-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){t.msg="invalid distance too far back",n.mode=Z;break}n.mode=Y;case Y:if(0===st)break t;if(pt=lt-st,n.offset>pt){if((pt=n.offset-pt)>n.whave&&n.sane){t.msg="invalid distance too far back",n.mode=Z;break}pt>n.wnext?(pt-=n.wnext,dt=n.wsize-pt):dt=n.wnext-pt,pt>n.length&&(pt=n.length),bt=n.window}else bt=et,dt=rt-n.offset,pt=n.length;pt>st&&(pt=st),st-=pt,n.length-=pt;do{et[rt++]=bt[dt++]}while(--pt);0===n.length&&(n.mode=W);break;case X:if(0===st)break t;et[rt++]=n.length,st--,n.mode=W;break;case K:if(n.wrap){for(;ut<32;){if(0===ot)break t;ot--,at|=tt[nt++]<<ut,ut+=8}if(lt-=st,t.total_out+=lt,n.total+=lt,lt&&(t.adler=n.check=n.flags?o(n.check,et,lt,rt-lt):r(n.check,et,lt,rt-lt)),lt=st,(n.flags?at:it(at))!==n.check){t.msg="incorrect data check",n.mode=Z;break}at=0,ut=0}n.mode=q;case q:if(n.wrap&&n.flags){for(;ut<32;){if(0===ot)break t;ot--,at+=tt[nt++]<<ut,ut+=8}if(at!==(4294967295&n.total)){t.msg="incorrect length check",n.mode=Z;break}at=0,ut=0}n.mode=J;case J:wt=b;break t;case Z:wt=v;break t;case Q:return g;case $:default:return m}return t.next_out=rt,t.avail_out=st,t.next_in=nt,t.avail_in=ot,n.hold=at,n.bits=ut,(n.wsize||lt!==t.avail_out&&n.mode<Z&&(n.mode<K||e!==h))&&ft(t,t.output,t.next_out,lt-t.avail_out)?(n.mode=Q,g):(ct-=t.avail_in,lt-=t.avail_out,t.total_in+=ct,t.total_out+=lt,n.total+=lt,n.wrap&&lt&&(t.adler=n.check=n.flags?o(n.check,et,lt,t.next_out-lt):r(n.check,et,lt,t.next_out-lt)),t.data_type=n.bits+(n.last?64:0)+(n.mode===I?128:0)+(n.mode===G||n.mode===F?256:0),(0===ct&&0===lt||e===h)&&wt===d&&(wt=_),wt)},e.inflateEnd=function(t){if(!t||!t.state)return m;var e=t.state;return e.window&&(e.window=null),t.state=null,d},e.inflateGetHeader=function(t,e){var n;return t&&t.state?0==(2&(n=t.state).wrap)?m:(n.head=e,e.done=!1,d):m},e.inflateSetDictionary=function(t,e){var n,i=e.length;return t&&t.state?0!==(n=t.state).wrap&&n.mode!==L?m:n.mode===L&&r(1,e,i,0)!==n.check?v:ft(t,e,i,i)?(n.mode=Q,g):(n.havedict=1,d):m},e.inflateInfo="pako inflate (from Nodeca project)"},function(t,e,n){"use strict";var i=n(127),r=n(13),o=n(70),s=n(68),a=n(46),u=n(69),c=n(124),l=Object.prototype.toString;function h(t){if(!(this instanceof h))return new h(t);this.options=r.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new u,this.strm.avail_out=0;var n=i.inflateInit2(this.strm,e.windowBits);if(n!==s.Z_OK)throw new Error(a[n]);this.header=new c,i.inflateGetHeader(this.strm,this.header)}function f(t,e){var n=new h(e);if(n.push(t,!0),n.err)throw n.msg||a[n.err];return n.result}h.prototype.push=function(t,e){var n,a,u,c,h,f,p=this.strm,d=this.options.chunkSize,b=this.options.dictionary,y=!1;if(this.ended)return!1;a=e===~~e?e:!0===e?s.Z_FINISH:s.Z_NO_FLUSH,"string"==typeof t?p.input=o.binstring2buf(t):"[object ArrayBuffer]"===l.call(t)?p.input=new Uint8Array(t):p.input=t,p.next_in=0,p.avail_in=p.input.length;do{if(0===p.avail_out&&(p.output=new r.Buf8(d),p.next_out=0,p.avail_out=d),(n=i.inflate(p,s.Z_NO_FLUSH))===s.Z_NEED_DICT&&b&&(f="string"==typeof b?o.string2buf(b):"[object ArrayBuffer]"===l.call(b)?new Uint8Array(b):b,n=i.inflateSetDictionary(this.strm,f)),n===s.Z_BUF_ERROR&&!0===y&&(n=s.Z_OK,y=!1),n!==s.Z_STREAM_END&&n!==s.Z_OK)return this.onEnd(n),this.ended=!0,!1;p.next_out&&(0!==p.avail_out&&n!==s.Z_STREAM_END&&(0!==p.avail_in||a!==s.Z_FINISH&&a!==s.Z_SYNC_FLUSH)||("string"===this.options.to?(u=o.utf8border(p.output,p.next_out),c=p.next_out-u,h=o.buf2string(p.output,u),p.next_out=c,p.avail_out=d-c,c&&r.arraySet(p.output,p.output,u,c,0),this.onData(h)):this.onData(r.shrinkBuf(p.output,p.next_out)))),0===p.avail_in&&0===p.avail_out&&(y=!0)}while((p.avail_in>0||0===p.avail_out)&&n!==s.Z_STREAM_END);return n===s.Z_STREAM_END&&(a=s.Z_FINISH),a===s.Z_FINISH?(n=i.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===s.Z_OK):a!==s.Z_SYNC_FLUSH||(this.onEnd(s.Z_OK),p.avail_out=0,!0)},h.prototype.onData=function(t){this.chunks.push(t)},h.prototype.onEnd=function(t){t===s.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Inflate=h,e.inflate=f,e.inflateRaw=function(t,e){return(e=e||{}).raw=!0,f(t,e)},e.ungzip=f},function(t,e,n){"use strict";var i=n(13),r=4,o=0,s=1,a=2;function u(t){for(var e=t.length;--e>=0;)t[e]=0}var c=0,l=1,h=2,f=29,p=256,d=p+1+f,b=30,y=19,m=2*d+1,v=15,g=16,_=7,S=256,x=16,w=17,E=18,P=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],T=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],M=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],k=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],O=new Array(2*(d+2));u(O);var A=new Array(2*b);u(A);var C=new Array(512);u(C);var L=new Array(256);u(L);var I=new Array(f);u(I);var R,N,F,B=new Array(b);function D(t,e,n,i,r){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=i,this.max_length=r,this.has_stree=t&&t.length}function V(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function j(t){return t<256?C[t]:C[256+(t>>>7)]}function G(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function W(t,e,n){t.bi_valid>g-n?(t.bi_buf|=e<<t.bi_valid&65535,G(t,t.bi_buf),t.bi_buf=e>>g-t.bi_valid,t.bi_valid+=n-g):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=n)}function U(t,e,n){W(t,n[2*e],n[2*e+1])}function H(t,e){var n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1}function z(t,e,n){var i,r,o=new Array(v+1),s=0;for(i=1;i<=v;i++)o[i]=s=s+n[i-1]<<1;for(r=0;r<=e;r++){var a=t[2*r+1];0!==a&&(t[2*r]=H(o[a]++,a))}}function Y(t){var e;for(e=0;e<d;e++)t.dyn_ltree[2*e]=0;for(e=0;e<b;e++)t.dyn_dtree[2*e]=0;for(e=0;e<y;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*S]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function X(t){t.bi_valid>8?G(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function K(t,e,n,i){var r=2*e,o=2*n;return t[r]<t[o]||t[r]===t[o]&&i[e]<=i[n]}function q(t,e,n){for(var i=t.heap[n],r=n<<1;r<=t.heap_len&&(r<t.heap_len&&K(e,t.heap[r+1],t.heap[r],t.depth)&&r++,!K(e,i,t.heap[r],t.depth));)t.heap[n]=t.heap[r],n=r,r<<=1;t.heap[n]=i}function J(t,e,n){var i,r,o,s,a=0;if(0!==t.last_lit)do{i=t.pending_buf[t.d_buf+2*a]<<8|t.pending_buf[t.d_buf+2*a+1],r=t.pending_buf[t.l_buf+a],a++,0===i?U(t,r,e):(U(t,(o=L[r])+p+1,e),0!==(s=P[o])&&W(t,r-=I[o],s),U(t,o=j(--i),n),0!==(s=T[o])&&W(t,i-=B[o],s))}while(a<t.last_lit);U(t,S,e)}function Z(t,e){var n,i,r,o=e.dyn_tree,s=e.stat_desc.static_tree,a=e.stat_desc.has_stree,u=e.stat_desc.elems,c=-1;for(t.heap_len=0,t.heap_max=m,n=0;n<u;n++)0!==o[2*n]?(t.heap[++t.heap_len]=c=n,t.depth[n]=0):o[2*n+1]=0;for(;t.heap_len<2;)o[2*(r=t.heap[++t.heap_len]=c<2?++c:0)]=1,t.depth[r]=0,t.opt_len--,a&&(t.static_len-=s[2*r+1]);for(e.max_code=c,n=t.heap_len>>1;n>=1;n--)q(t,o,n);r=u;do{n=t.heap[1],t.heap[1]=t.heap[t.heap_len--],q(t,o,1),i=t.heap[1],t.heap[--t.heap_max]=n,t.heap[--t.heap_max]=i,o[2*r]=o[2*n]+o[2*i],t.depth[r]=(t.depth[n]>=t.depth[i]?t.depth[n]:t.depth[i])+1,o[2*n+1]=o[2*i+1]=r,t.heap[1]=r++,q(t,o,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],function(t,e){var n,i,r,o,s,a,u=e.dyn_tree,c=e.max_code,l=e.stat_desc.static_tree,h=e.stat_desc.has_stree,f=e.stat_desc.extra_bits,p=e.stat_desc.extra_base,d=e.stat_desc.max_length,b=0;for(o=0;o<=v;o++)t.bl_count[o]=0;for(u[2*t.heap[t.heap_max]+1]=0,n=t.heap_max+1;n<m;n++)(o=u[2*u[2*(i=t.heap[n])+1]+1]+1)>d&&(o=d,b++),u[2*i+1]=o,i>c||(t.bl_count[o]++,s=0,i>=p&&(s=f[i-p]),a=u[2*i],t.opt_len+=a*(o+s),h&&(t.static_len+=a*(l[2*i+1]+s)));if(0!==b){do{for(o=d-1;0===t.bl_count[o];)o--;t.bl_count[o]--,t.bl_count[o+1]+=2,t.bl_count[d]--,b-=2}while(b>0);for(o=d;0!==o;o--)for(i=t.bl_count[o];0!==i;)(r=t.heap[--n])>c||(u[2*r+1]!==o&&(t.opt_len+=(o-u[2*r+1])*u[2*r],u[2*r+1]=o),i--)}}(t,e),z(o,c,t.bl_count)}function Q(t,e,n){var i,r,o=-1,s=e[1],a=0,u=7,c=4;for(0===s&&(u=138,c=3),e[2*(n+1)+1]=65535,i=0;i<=n;i++)r=s,s=e[2*(i+1)+1],++a<u&&r===s||(a<c?t.bl_tree[2*r]+=a:0!==r?(r!==o&&t.bl_tree[2*r]++,t.bl_tree[2*x]++):a<=10?t.bl_tree[2*w]++:t.bl_tree[2*E]++,a=0,o=r,0===s?(u=138,c=3):r===s?(u=6,c=3):(u=7,c=4))}function $(t,e,n){var i,r,o=-1,s=e[1],a=0,u=7,c=4;for(0===s&&(u=138,c=3),i=0;i<=n;i++)if(r=s,s=e[2*(i+1)+1],!(++a<u&&r===s)){if(a<c)do{U(t,r,t.bl_tree)}while(0!=--a);else 0!==r?(r!==o&&(U(t,r,t.bl_tree),a--),U(t,x,t.bl_tree),W(t,a-3,2)):a<=10?(U(t,w,t.bl_tree),W(t,a-3,3)):(U(t,E,t.bl_tree),W(t,a-11,7));a=0,o=r,0===s?(u=138,c=3):r===s?(u=6,c=3):(u=7,c=4)}}u(B);var tt=!1;function et(t,e,n,r){W(t,(c<<1)+(r?1:0),3),function(t,e,n,r){X(t),r&&(G(t,n),G(t,~n)),i.arraySet(t.pending_buf,t.window,e,n,t.pending),t.pending+=n}(t,e,n,!0)}e._tr_init=function(t){tt||(function(){var t,e,n,i,r,o=new Array(v+1);for(n=0,i=0;i<f-1;i++)for(I[i]=n,t=0;t<1<<P[i];t++)L[n++]=i;for(L[n-1]=i,r=0,i=0;i<16;i++)for(B[i]=r,t=0;t<1<<T[i];t++)C[r++]=i;for(r>>=7;i<b;i++)for(B[i]=r<<7,t=0;t<1<<T[i]-7;t++)C[256+r++]=i;for(e=0;e<=v;e++)o[e]=0;for(t=0;t<=143;)O[2*t+1]=8,t++,o[8]++;for(;t<=255;)O[2*t+1]=9,t++,o[9]++;for(;t<=279;)O[2*t+1]=7,t++,o[7]++;for(;t<=287;)O[2*t+1]=8,t++,o[8]++;for(z(O,d+1,o),t=0;t<b;t++)A[2*t+1]=5,A[2*t]=H(t,5);R=new D(O,P,p+1,d,v),N=new D(A,T,0,b,v),F=new D(new Array(0),M,0,y,_)}(),tt=!0),t.l_desc=new V(t.dyn_ltree,R),t.d_desc=new V(t.dyn_dtree,N),t.bl_desc=new V(t.bl_tree,F),t.bi_buf=0,t.bi_valid=0,Y(t)},e._tr_stored_block=et,e._tr_flush_block=function(t,e,n,i){var u,c,f=0;t.level>0?(t.strm.data_type===a&&(t.strm.data_type=function(t){var e,n=4093624447;for(e=0;e<=31;e++,n>>>=1)if(1&n&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return s;for(e=32;e<p;e++)if(0!==t.dyn_ltree[2*e])return s;return o}(t)),Z(t,t.l_desc),Z(t,t.d_desc),f=function(t){var e;for(Q(t,t.dyn_ltree,t.l_desc.max_code),Q(t,t.dyn_dtree,t.d_desc.max_code),Z(t,t.bl_desc),e=y-1;e>=3&&0===t.bl_tree[2*k[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),u=t.opt_len+3+7>>>3,(c=t.static_len+3+7>>>3)<=u&&(u=c)):u=c=n+5,n+4<=u&&-1!==e?et(t,e,n,i):t.strategy===r||c===u?(W(t,(l<<1)+(i?1:0),3),J(t,O,A)):(W(t,(h<<1)+(i?1:0),3),function(t,e,n,i){var r;for(W(t,e-257,5),W(t,n-1,5),W(t,i-4,4),r=0;r<i;r++)W(t,t.bl_tree[2*k[r]+1],3);$(t,t.dyn_ltree,e-1),$(t,t.dyn_dtree,n-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,f+1),J(t,t.dyn_ltree,t.dyn_dtree)),Y(t),i&&X(t)},e._tr_tally=function(t,e,n){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&n,t.last_lit++,0===e?t.dyn_ltree[2*n]++:(t.matches++,e--,t.dyn_ltree[2*(L[n]+p+1)]++,t.dyn_dtree[2*j(e)]++),t.last_lit===t.lit_bufsize-1},e._tr_align=function(t){W(t,l<<1,3),U(t,S,O),function(t){16===t.bi_valid?(G(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},function(t,e,n){"use strict";var i,r=n(13),o=n(129),s=n(72),a=n(71),u=n(46),c=0,l=1,h=3,f=4,p=5,d=0,b=1,y=-2,m=-3,v=-5,g=-1,_=1,S=2,x=3,w=4,E=0,P=2,T=8,M=9,k=15,O=8,A=286,C=30,L=19,I=2*A+1,R=15,N=3,F=258,B=F+N+1,D=32,V=42,j=69,G=73,W=91,U=103,H=113,z=666,Y=1,X=2,K=3,q=4,J=3;function Z(t,e){return t.msg=u[e],e}function Q(t){return(t<<1)-(t>4?9:0)}function $(t){for(var e=t.length;--e>=0;)t[e]=0}function tt(t){var e=t.state,n=e.pending;n>t.avail_out&&(n=t.avail_out),0!==n&&(r.arraySet(t.output,e.pending_buf,e.pending_out,n,t.next_out),t.next_out+=n,e.pending_out+=n,t.total_out+=n,t.avail_out-=n,e.pending-=n,0===e.pending&&(e.pending_out=0))}function et(t,e){o._tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,tt(t.strm)}function nt(t,e){t.pending_buf[t.pending++]=e}function it(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function rt(t,e){var n,i,r=t.max_chain_length,o=t.strstart,s=t.prev_length,a=t.nice_match,u=t.strstart>t.w_size-B?t.strstart-(t.w_size-B):0,c=t.window,l=t.w_mask,h=t.prev,f=t.strstart+F,p=c[o+s-1],d=c[o+s];t.prev_length>=t.good_match&&(r>>=2),a>t.lookahead&&(a=t.lookahead);do{if(c[(n=e)+s]===d&&c[n+s-1]===p&&c[n]===c[o]&&c[++n]===c[o+1]){o+=2,n++;do{}while(c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&c[++o]===c[++n]&&o<f);if(i=F-(f-o),o=f-F,i>s){if(t.match_start=e,s=i,i>=a)break;p=c[o+s-1],d=c[o+s]}}}while((e=h[e&l])>u&&0!=--r);return s<=t.lookahead?s:t.lookahead}function ot(t){var e,n,i,o,u,c,l,h,f,p,d=t.w_size;do{if(o=t.window_size-t.lookahead-t.strstart,t.strstart>=d+(d-B)){r.arraySet(t.window,t.window,d,d,0),t.match_start-=d,t.strstart-=d,t.block_start-=d,e=n=t.hash_size;do{i=t.head[--e],t.head[e]=i>=d?i-d:0}while(--n);e=n=d;do{i=t.prev[--e],t.prev[e]=i>=d?i-d:0}while(--n);o+=d}if(0===t.strm.avail_in)break;if(c=t.strm,l=t.window,h=t.strstart+t.lookahead,f=o,p=void 0,(p=c.avail_in)>f&&(p=f),n=0===p?0:(c.avail_in-=p,r.arraySet(l,c.input,c.next_in,p,h),1===c.state.wrap?c.adler=s(c.adler,l,p,h):2===c.state.wrap&&(c.adler=a(c.adler,l,p,h)),c.next_in+=p,c.total_in+=p,p),t.lookahead+=n,t.lookahead+t.insert>=N)for(u=t.strstart-t.insert,t.ins_h=t.window[u],t.ins_h=(t.ins_h<<t.hash_shift^t.window[u+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[u+N-1])&t.hash_mask,t.prev[u&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=u,u++,t.insert--,!(t.lookahead+t.insert<N)););}while(t.lookahead<B&&0!==t.strm.avail_in)}function st(t,e){for(var n,i;;){if(t.lookahead<B){if(ot(t),t.lookahead<B&&e===c)return Y;if(0===t.lookahead)break}if(n=0,t.lookahead>=N&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+N-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==n&&t.strstart-n<=t.w_size-B&&(t.match_length=rt(t,n)),t.match_length>=N)if(i=o._tr_tally(t,t.strstart-t.match_start,t.match_length-N),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=N){t.match_length--;do{t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+N-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(et(t,!1),0===t.strm.avail_out))return Y}return t.insert=t.strstart<N-1?t.strstart:N-1,e===f?(et(t,!0),0===t.strm.avail_out?K:q):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?Y:X}function at(t,e){for(var n,i,r;;){if(t.lookahead<B){if(ot(t),t.lookahead<B&&e===c)return Y;if(0===t.lookahead)break}if(n=0,t.lookahead>=N&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+N-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=N-1,0!==n&&t.prev_length<t.max_lazy_match&&t.strstart-n<=t.w_size-B&&(t.match_length=rt(t,n),t.match_length<=5&&(t.strategy===_||t.match_length===N&&t.strstart-t.match_start>4096)&&(t.match_length=N-1)),t.prev_length>=N&&t.match_length<=t.prev_length){r=t.strstart+t.lookahead-N,i=o._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-N),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=r&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+N-1])&t.hash_mask,n=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=N-1,t.strstart++,i&&(et(t,!1),0===t.strm.avail_out))return Y}else if(t.match_available){if((i=o._tr_tally(t,0,t.window[t.strstart-1]))&&et(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return Y}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=o._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<N-1?t.strstart:N-1,e===f?(et(t,!0),0===t.strm.avail_out?K:q):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?Y:X}function ut(t,e,n,i,r){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=i,this.func=r}function ct(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=P,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?V:H,t.adler=2===e.wrap?0:1,e.last_flush=c,o._tr_init(e),d):Z(t,y)}function lt(t){var e,n=ct(t);return n===d&&((e=t.state).window_size=2*e.w_size,$(e.head),e.max_lazy_match=i[e.level].max_lazy,e.good_match=i[e.level].good_length,e.nice_match=i[e.level].nice_length,e.max_chain_length=i[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=N-1,e.match_available=0,e.ins_h=0),n}function ht(t,e,n,i,o,s){if(!t)return y;var a=1;if(e===g&&(e=6),i<0?(a=0,i=-i):i>15&&(a=2,i-=16),o<1||o>M||n!==T||i<8||i>15||e<0||e>9||s<0||s>w)return Z(t,y);8===i&&(i=9);var u=new function(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=T,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(2*I),this.dyn_dtree=new r.Buf16(2*(2*C+1)),this.bl_tree=new r.Buf16(2*(2*L+1)),$(this.dyn_ltree),$(this.dyn_dtree),$(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16(R+1),this.heap=new r.Buf16(2*A+1),$(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(2*A+1),$(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0};return t.state=u,u.strm=t,u.wrap=a,u.gzhead=null,u.w_bits=i,u.w_size=1<<u.w_bits,u.w_mask=u.w_size-1,u.hash_bits=o+7,u.hash_size=1<<u.hash_bits,u.hash_mask=u.hash_size-1,u.hash_shift=~~((u.hash_bits+N-1)/N),u.window=new r.Buf8(2*u.w_size),u.head=new r.Buf16(u.hash_size),u.prev=new r.Buf16(u.w_size),u.lit_bufsize=1<<o+6,u.pending_buf_size=4*u.lit_bufsize,u.pending_buf=new r.Buf8(u.pending_buf_size),u.d_buf=1*u.lit_bufsize,u.l_buf=3*u.lit_bufsize,u.level=e,u.strategy=s,u.method=n,lt(t)}i=[new ut(0,0,0,0,function(t,e){var n=65535;for(n>t.pending_buf_size-5&&(n=t.pending_buf_size-5);;){if(t.lookahead<=1){if(ot(t),0===t.lookahead&&e===c)return Y;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+n;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,et(t,!1),0===t.strm.avail_out))return Y;if(t.strstart-t.block_start>=t.w_size-B&&(et(t,!1),0===t.strm.avail_out))return Y}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?K:q):(t.strstart>t.block_start&&(et(t,!1),t.strm.avail_out),Y)}),new ut(4,4,8,4,st),new ut(4,5,16,8,st),new ut(4,6,32,32,st),new ut(4,4,16,16,at),new ut(8,16,32,32,at),new ut(8,16,128,128,at),new ut(8,32,128,256,at),new ut(32,128,258,1024,at),new ut(32,258,258,4096,at)],e.deflateInit=function(t,e){return ht(t,e,T,k,O,E)},e.deflateInit2=ht,e.deflateReset=lt,e.deflateResetKeep=ct,e.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?y:(t.state.gzhead=e,d):y},e.deflate=function(t,e){var n,r,s,u;if(!t||!t.state||e>p||e<0)return t?Z(t,y):y;if(r=t.state,!t.output||!t.input&&0!==t.avail_in||r.status===z&&e!==f)return Z(t,0===t.avail_out?v:y);if(r.strm=t,n=r.last_flush,r.last_flush=e,r.status===V)if(2===r.wrap)t.adler=0,nt(r,31),nt(r,139),nt(r,8),r.gzhead?(nt(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),nt(r,255&r.gzhead.time),nt(r,r.gzhead.time>>8&255),nt(r,r.gzhead.time>>16&255),nt(r,r.gzhead.time>>24&255),nt(r,9===r.level?2:r.strategy>=S||r.level<2?4:0),nt(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(nt(r,255&r.gzhead.extra.length),nt(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(t.adler=a(t.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=j):(nt(r,0),nt(r,0),nt(r,0),nt(r,0),nt(r,0),nt(r,9===r.level?2:r.strategy>=S||r.level<2?4:0),nt(r,J),r.status=H);else{var m=T+(r.w_bits-8<<4)<<8;m|=(r.strategy>=S||r.level<2?0:r.level<6?1:6===r.level?2:3)<<6,0!==r.strstart&&(m|=D),m+=31-m%31,r.status=H,it(r,m),0!==r.strstart&&(it(r,t.adler>>>16),it(r,65535&t.adler)),t.adler=1}if(r.status===j)if(r.gzhead.extra){for(s=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),tt(t),s=r.pending,r.pending!==r.pending_buf_size));)nt(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=G)}else r.status=G;if(r.status===G)if(r.gzhead.name){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),tt(t),s=r.pending,r.pending===r.pending_buf_size)){u=1;break}u=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,nt(r,u)}while(0!==u);r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),0===u&&(r.gzindex=0,r.status=W)}else r.status=W;if(r.status===W)if(r.gzhead.comment){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),tt(t),s=r.pending,r.pending===r.pending_buf_size)){u=1;break}u=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,nt(r,u)}while(0!==u);r.gzhead.hcrc&&r.pending>s&&(t.adler=a(t.adler,r.pending_buf,r.pending-s,s)),0===u&&(r.status=U)}else r.status=U;if(r.status===U&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&tt(t),r.pending+2<=r.pending_buf_size&&(nt(r,255&t.adler),nt(r,t.adler>>8&255),t.adler=0,r.status=H)):r.status=H),0!==r.pending){if(tt(t),0===t.avail_out)return r.last_flush=-1,d}else if(0===t.avail_in&&Q(e)<=Q(n)&&e!==f)return Z(t,v);if(r.status===z&&0!==t.avail_in)return Z(t,v);if(0!==t.avail_in||0!==r.lookahead||e!==c&&r.status!==z){var g=r.strategy===S?function(t,e){for(var n;;){if(0===t.lookahead&&(ot(t),0===t.lookahead)){if(e===c)return Y;break}if(t.match_length=0,n=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,n&&(et(t,!1),0===t.strm.avail_out))return Y}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?K:q):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?Y:X}(r,e):r.strategy===x?function(t,e){for(var n,i,r,s,a=t.window;;){if(t.lookahead<=F){if(ot(t),t.lookahead<=F&&e===c)return Y;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=N&&t.strstart>0&&(i=a[r=t.strstart-1])===a[++r]&&i===a[++r]&&i===a[++r]){s=t.strstart+F;do{}while(i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&i===a[++r]&&r<s);t.match_length=F-(s-r),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=N?(n=o._tr_tally(t,1,t.match_length-N),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(n=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),n&&(et(t,!1),0===t.strm.avail_out))return Y}return t.insert=0,e===f?(et(t,!0),0===t.strm.avail_out?K:q):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?Y:X}(r,e):i[r.level].func(r,e);if(g!==K&&g!==q||(r.status=z),g===Y||g===K)return 0===t.avail_out&&(r.last_flush=-1),d;if(g===X&&(e===l?o._tr_align(r):e!==p&&(o._tr_stored_block(r,0,0,!1),e===h&&($(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),tt(t),0===t.avail_out))return r.last_flush=-1,d}return e!==f?d:r.wrap<=0?b:(2===r.wrap?(nt(r,255&t.adler),nt(r,t.adler>>8&255),nt(r,t.adler>>16&255),nt(r,t.adler>>24&255),nt(r,255&t.total_in),nt(r,t.total_in>>8&255),nt(r,t.total_in>>16&255),nt(r,t.total_in>>24&255)):(it(r,t.adler>>>16),it(r,65535&t.adler)),tt(t),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?d:b)},e.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==V&&e!==j&&e!==G&&e!==W&&e!==U&&e!==H&&e!==z?Z(t,y):(t.state=null,e===H?Z(t,m):d):y},e.deflateSetDictionary=function(t,e){var n,i,o,a,u,c,l,h,f=e.length;if(!t||!t.state)return y;if(2===(a=(n=t.state).wrap)||1===a&&n.status!==V||n.lookahead)return y;for(1===a&&(t.adler=s(t.adler,e,f,0)),n.wrap=0,f>=n.w_size&&(0===a&&($(n.head),n.strstart=0,n.block_start=0,n.insert=0),h=new r.Buf8(n.w_size),r.arraySet(h,e,f-n.w_size,n.w_size,0),e=h,f=n.w_size),u=t.avail_in,c=t.next_in,l=t.input,t.avail_in=f,t.next_in=0,t.input=e,ot(n);n.lookahead>=N;){i=n.strstart,o=n.lookahead-(N-1);do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[i+N-1])&n.hash_mask,n.prev[i&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=i,i++}while(--o);n.strstart=i,n.lookahead=N-1,ot(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=N-1,n.match_available=0,t.next_in=c,t.input=l,t.avail_in=u,n.wrap=a,d},e.deflateInfo="pako deflate (from Nodeca project)"},function(t,e,n){"use strict";var i=n(130),r=n(13),o=n(70),s=n(46),a=n(69),u=Object.prototype.toString,c=0,l=-1,h=0,f=8;function p(t){if(!(this instanceof p))return new p(t);this.options=r.assign({level:l,method:f,chunkSize:16384,windowBits:15,memLevel:8,strategy:h,to:""},t||{});var e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new a,this.strm.avail_out=0;var n=i.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(n!==c)throw new Error(s[n]);if(e.header&&i.deflateSetHeader(this.strm,e.header),e.dictionary){var d;if(d="string"==typeof e.dictionary?o.string2buf(e.dictionary):"[object ArrayBuffer]"===u.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(n=i.deflateSetDictionary(this.strm,d))!==c)throw new Error(s[n]);this._dict_set=!0}}function d(t,e){var n=new p(e);if(n.push(t,!0),n.err)throw n.msg||s[n.err];return n.result}p.prototype.push=function(t,e){var n,s,a=this.strm,l=this.options.chunkSize;if(this.ended)return!1;s=e===~~e?e:!0===e?4:0,"string"==typeof t?a.input=o.string2buf(t):"[object ArrayBuffer]"===u.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;do{if(0===a.avail_out&&(a.output=new r.Buf8(l),a.next_out=0,a.avail_out=l),1!==(n=i.deflate(a,s))&&n!==c)return this.onEnd(n),this.ended=!0,!1;0!==a.avail_out&&(0!==a.avail_in||4!==s&&2!==s)||("string"===this.options.to?this.onData(o.buf2binstring(r.shrinkBuf(a.output,a.next_out))):this.onData(r.shrinkBuf(a.output,a.next_out)))}while((a.avail_in>0||0===a.avail_out)&&1!==n);return 4===s?(n=i.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===c):2!==s||(this.onEnd(c),a.avail_out=0,!0)},p.prototype.onData=function(t){this.chunks.push(t)},p.prototype.onEnd=function(t){t===c&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},e.Deflate=p,e.deflate=d,e.deflateRaw=function(t,e){return(e=e||{}).raw=!0,d(t,e)},e.gzip=function(t,e){return(e=e||{}).gzip=!0,d(t,e)}},function(t,e,n){"use strict";var i={};(0,n(13).assign)(i,n(131),n(128),n(68)),t.exports=i},function(t,e,n){"use strict";var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,r=n(132),o=n(0),s=n(6),a=i?"uint8array":"array";function u(t,e){s.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}e.magic="\b\0",o.inherits(u,s),u.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(o.transformTo(a,t.data),!1)},u.prototype.flush=function(){s.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},u.prototype.cleanUp=function(){s.prototype.cleanUp.call(this),this._pako=null},u.prototype._createPako=function(){this._pako=new r[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},e.compressWorker=function(t){return new u("Deflate",t)},e.uncompressWorker=function(){return new u("Inflate",{})}},function(t,e,n){"use strict";var i=n(73),r=n(123);e.generateWorker=function(t,e,n){var o=new r(e.streamFiles,n,e.platform,e.encodeFileName),s=0;try{t.forEach(function(t,n){s++;var r=function(t,e){var n=t||e,r=i[n];if(!r)throw new Error(n+" is not a valid compression method !");return r}(n.options.compression,e.compression),a=n.options.compressionOptions||e.compressionOptions||{},u=n.dir,c=n.date;n._compressWorker(r,a).withStreamInfo("file",{name:t,dir:u,date:c,comment:n.comment||"",unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions}).pipe(o)}),o.entriesCount=s}catch(t){o.error(t)}return o}},function(t,e,n){"use strict";var i=n(78),r=n(76),o=n(22),s=n(48),a=n(6),u=function(t,e,n){this.name=t,this.dir=n.dir,this.date=n.date,this.comment=n.comment,this.unixPermissions=n.unixPermissions,this.dosPermissions=n.dosPermissions,this._data=e,this._dataBinary=n.binary,this.options={compression:n.compression,compressionOptions:n.compressionOptions}};u.prototype={internalStream:function(t){var e=null,n="string";try{if(!t)throw new Error("No output type specified.");var r="string"===(n=t.toLowerCase())||"text"===n;"binarystring"!==n&&"text"!==n||(n="string"),e=this._decompressWorker();var s=!this._dataBinary;s&&!r&&(e=e.pipe(new o.Utf8EncodeWorker)),!s&&r&&(e=e.pipe(new o.Utf8DecodeWorker))}catch(t){(e=new a("error")).error(t)}return new i(e,n,"")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||"nodebuffer").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof s&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var n=this._decompressWorker();return this._dataBinary||(n=n.pipe(new o.Utf8EncodeWorker)),s.createWorkerFrom(n,t,e)},_decompressWorker:function(){return this._data instanceof s?this._data.getContentWorker():this._data instanceof a?this._data:new r(this._data)}};for(var c=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],l=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},h=0;h<c.length;h++)u.prototype[c[h]]=l;t.exports=u},function(t,e,n){"use strict";var i=n(87).Readable;function r(t,e,n){i.call(this,e),this._helper=t;var r=this;t.on("data",function(t,e){r.push(t)||r._helper.pause(),n&&n(e)}).on("error",function(t){r.emit("error",t)}).on("end",function(){r.push(null)})}n(0).inherits(r,i),r.prototype._read=function(){this._helper.resume()},t.exports=r},function(t,e,n){"use strict";var i=n(6),r=n(0);function o(t){i.call(this,"ConvertWorker to "+t),this.destType=t}r.inherits(o,i),o.prototype.processChunk=function(t){this.push({data:r.transformTo(this.destType,t.data),meta:t.meta})},t.exports=o},function(t,e,n){"use strict";(function(e){var n,i,r=e.MutationObserver||e.WebKitMutationObserver;if(r){var o=0,s=new r(l),a=e.document.createTextNode("");s.observe(a,{characterData:!0}),n=function(){a.data=o=++o%2}}else if(e.setImmediate||void 0===e.MessageChannel)n="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){var t=e.document.createElement("script");t.onreadystatechange=function(){l(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(l,0)};else{var u=new e.MessageChannel;u.port1.onmessage=l,n=function(){u.port2.postMessage(0)}}var c=[];function l(){var t,e;i=!0;for(var n=c.length;n;){for(e=c,c=[],t=-1;++t<n;)e[t]();n=c.length}i=!1}t.exports=function(t){1!==c.push(t)||i||n()}}).call(this,n(23))},function(t,e,n){"use strict";var i=n(138);function r(){}var o={},s=["REJECTED"],a=["FULFILLED"],u=["PENDING"];function c(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=u,this.queue=[],this.outcome=void 0,t!==r&&p(this,t)}function l(t,e,n){this.promise=t,"function"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),"function"==typeof n&&(this.onRejected=n,this.callRejected=this.otherCallRejected)}function h(t,e,n){i(function(){var i;try{i=e(n)}catch(e){return o.reject(t,e)}i===t?o.reject(t,new TypeError("Cannot resolve promise with itself")):o.resolve(t,i)})}function f(t){var e=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof e)return function(){e.apply(t,arguments)}}function p(t,e){var n=!1;function i(e){n||(n=!0,o.reject(t,e))}function r(e){n||(n=!0,o.resolve(t,e))}var s=d(function(){e(r,i)});"error"===s.status&&i(s.value)}function d(t,e){var n={};try{n.value=t(e),n.status="success"}catch(t){n.status="error",n.value=t}return n}t.exports=c,c.prototype.catch=function(t){return this.then(null,t)},c.prototype.then=function(t,e){if("function"!=typeof t&&this.state===a||"function"!=typeof e&&this.state===s)return this;var n=new this.constructor(r);this.state!==u?h(n,this.state===a?t:e,this.outcome):this.queue.push(new l(n,t,e));return n},l.prototype.callFulfilled=function(t){o.resolve(this.promise,t)},l.prototype.otherCallFulfilled=function(t){h(this.promise,this.onFulfilled,t)},l.prototype.callRejected=function(t){o.reject(this.promise,t)},l.prototype.otherCallRejected=function(t){h(this.promise,this.onRejected,t)},o.resolve=function(t,e){var n=d(f,e);if("error"===n.status)return o.reject(t,n.value);var i=n.value;if(i)p(t,i);else{t.state=a,t.outcome=e;for(var r=-1,s=t.queue.length;++r<s;)t.queue[r].callFulfilled(e)}return t},o.reject=function(t,e){t.state=s,t.outcome=e;for(var n=-1,i=t.queue.length;++n<i;)t.queue[n].callRejected(e);return t},c.resolve=function(t){if(t instanceof this)return t;return o.resolve(new this(r),t)},c.reject=function(t){var e=new this(r);return o.reject(e,t)},c.all=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var n=t.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,u=-1,c=new this(r);for(;++u<n;)l(t[u],u);return c;function l(t,r){e.resolve(t).then(function(t){s[r]=t,++a!==n||i||(i=!0,o.resolve(c,s))},function(t){i||(i=!0,o.reject(c,t))})}},c.race=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var n=t.length,i=!1;if(!n)return this.resolve([]);var s=-1,a=new this(r);for(;++s<n;)u=t[s],e.resolve(u).then(function(t){i||(i=!0,o.resolve(a,t))},function(t){i||(i=!0,o.reject(a,t))});var u;return a}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){t.exports=n(38).document&&document.documentElement},function(t,e){t.exports=function(t,e,n){var i=void 0===n;switch(e.length){case 0:return i?t():t.call(n);case 1:return i?t(e[0]):t.call(n,e[0]);case 2:return i?t(e[0],e[1]):t.call(n,e[0],e[1]);case 3:return i?t(e[0],e[1],e[2]):t.call(n,e[0],e[1],e[2]);case 4:return i?t(e[0],e[1],e[2],e[3]):t.call(n,e[0],e[1],e[2],e[3])}return t.apply(n,e)}},function(t,e,n){var i,r,o,s=n(81),a=n(142),u=n(141),c=n(79),l=n(38),h=l.process,f=l.setImmediate,p=l.clearImmediate,d=l.MessageChannel,b=0,y={},m=function(){var t=+this;if(y.hasOwnProperty(t)){var e=y[t];delete y[t],e()}},v=function(t){m.call(t.data)};f&&p||(f=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return y[++b]=function(){a("function"==typeof t?t:Function(t),e)},i(b),b},p=function(t){delete y[t]},"process"==n(140)(h)?i=function(t){h.nextTick(s(m,t,1))}:d?(o=(r=new d).port2,r.port1.onmessage=v,i=s(o.postMessage,o,1)):l.addEventListener&&"function"==typeof postMessage&&!l.importScripts?(i=function(t){l.postMessage(t+"","*")},l.addEventListener("message",v,!1)):i="onreadystatechange"in c("script")?function(t){u.appendChild(c("script")).onreadystatechange=function(){u.removeChild(this),m.call(t)}}:function(t){setTimeout(s(m,t,1),0)}),t.exports={set:f,clear:p}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var i=n(50);t.exports=function(t,e){if(!i(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!i(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!i(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){t.exports=!n(49)&&!n(80)(function(){return 7!=Object.defineProperty(n(79)("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var i=n(50);t.exports=function(t){if(!i(t))throw TypeError(t+" is not an object!");return t}},function(t,e,n){var i=n(147),r=n(146),o=n(145),s=Object.defineProperty;e.f=n(49)?Object.defineProperty:function(t,e,n){if(i(t),e=o(e,!0),i(n),r)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var i=n(148),r=n(144);t.exports=n(49)?function(t,e,n){return i.f(t,e,r(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},function(t,e,n){var i=n(38),r=n(82),o=n(81),s=n(149),a=function(t,e,n){var u,c,l,h=t&a.F,f=t&a.G,p=t&a.S,d=t&a.P,b=t&a.B,y=t&a.W,m=f?r:r[e]||(r[e]={}),v=m.prototype,g=f?i:p?i[e]:(i[e]||{}).prototype;for(u in f&&(n=e),n)(c=!h&&g&&void 0!==g[u])&&u in m||(l=c?g[u]:n[u],m[u]=f&&"function"!=typeof g[u]?n[u]:b&&c?o(l,i):y&&g[u]==l?function(t){var e=function(e,n,i){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,i)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(l):d&&"function"==typeof l?o(Function.call,l):l,d&&((m.virtual||(m.virtual={}))[u]=l,t&a.R&&v&&!v[u]&&s(v,u,l)))};a.F=1,a.G=2,a.S=4,a.P=8,a.B=16,a.W=32,a.U=64,a.R=128,t.exports=a},function(t,e,n){var i=n(151),r=n(143);i(i.G+i.B,{setImmediate:r.set,clearImmediate:r.clear})},function(t,e,n){n(152),t.exports=n(82).setImmediate},function(t,e,n){t.exports=n(84)},function(t,e,n){t.exports=n(51)},function(t,e,n){t.exports=n(18)},function(t,e,n){t.exports=n(52)},function(t,e,n){var i=n(11),r=i.Buffer;function o(t,e){for(var n in t)e[n]=t[n]}function s(t,e,n){return r(t,e,n)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?t.exports=i:(o(i,e),e.Buffer=s),o(r,s),s.from=function(t,e,n){if("number"==typeof t)throw new TypeError("Argument must not be a number");return r(t,e,n)},s.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError("Argument must be a number");var i=r(t);return void 0!==e?"string"==typeof n?i.fill(e,n):i.fill(e):i.fill(0),i},s.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r(t)},s.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return i.SlowBuffer(t)}},function(t,e,n){(function(e){function n(t){try{if(!e.localStorage)return!1}catch(t){return!1}var n=e.localStorage[t];return null!=n&&"true"===String(n).toLowerCase()}t.exports=function(t,e){if(n("noDeprecation"))return t;var i=!1;return function(){if(!i){if(n("throwDeprecation"))throw new Error(e);n("traceDeprecation")?console.trace(e):console.warn(e),i=!0}return t.apply(this,arguments)}}}).call(this,n(23))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var i,r,o,s,a,u=1,c={},l=!1,h=t.document,f=Object.getPrototypeOf&&Object.getPrototypeOf(t);f=f&&f.setTimeout?f:t,"[object process]"==={}.toString.call(t.process)?i=function(t){e.nextTick(function(){d(t)})}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?t.MessageChannel?((o=new MessageChannel).port1.onmessage=function(t){d(t.data)},i=function(t){o.port2.postMessage(t)}):h&&"onreadystatechange"in h.createElement("script")?(r=h.documentElement,i=function(t){var e=h.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,r.removeChild(e),e=null},r.appendChild(e)}):i=function(t){setTimeout(d,0,t)}:(s="setImmediate$"+Math.random()+"$",a=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(s)&&d(+e.data.slice(s.length))},t.addEventListener?t.addEventListener("message",a,!1):t.attachEvent("onmessage",a),i=function(e){t.postMessage(s+e,"*")}),f.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var r={callback:t,args:e};return c[u]=r,i(u),u++},f.clearImmediate=p}function p(t){delete c[t]}function d(t){if(l)setTimeout(d,0,t);else{var e=c[t];if(e){l=!0;try{!function(t){var e=t.callback,i=t.args;switch(i.length){case 0:e();break;case 1:e(i[0]);break;case 2:e(i[0],i[1]);break;case 3:e(i[0],i[1],i[2]);break;default:e.apply(n,i)}}(e)}finally{p(t),l=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(23),n(30))},function(t,e,n){(function(t){var i=void 0!==t&&t||"undefined"!=typeof self&&self||window,r=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(r.call(setTimeout,i,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,i,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(i,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(160),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(23))},function(t,e){},function(t,e,n){var i=function(){try{return n(41)}catch(t){}}();(e=t.exports=n(86)).Stream=i||e,e.Readable=e,e.Writable=n(52),e.Duplex=n(18),e.Transform=n(51),e.PassThrough=n(84)},function(t,e){e.read=function(t,e,n,i,r){var o,s,a=8*r-i-1,u=(1<<a)-1,c=u>>1,l=-7,h=n?r-1:0,f=n?-1:1,p=t[e+h];for(h+=f,o=p&(1<<-l)-1,p>>=-l,l+=a;l>0;o=256*o+t[e+h],h+=f,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=i;l>0;s=256*s+t[e+h],h+=f,l-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,i),o-=c}return(p?-1:1)*s*Math.pow(2,o-i)},e.write=function(t,e,n,i,r,o){var s,a,u,c=8*o-r-1,l=(1<<c)-1,h=l>>1,f=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,p=i?0:o-1,d=i?1:-1,b=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+h>=1?f/u:f*Math.pow(2,1-h))*u>=2&&(s++,u/=2),s+h>=l?(a=0,s=l):s+h>=1?(a=(e*u-1)*Math.pow(2,r),s+=h):(a=e*Math.pow(2,h-1)*Math.pow(2,r),s=0));r>=8;t[n+p]=255&a,p+=d,a/=256,r-=8);for(s=s<<r|a,c+=r;c>0;t[n+p]=255&s,p+=d,s/=256,c-=8);t[n+p-d]|=128*b}},function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],i=e[1];return 3*(n+i)/4-i},e.toByteArray=function(t){for(var e,n=c(t),i=n[0],s=n[1],a=new o(function(t,e,n){return 3*(e+n)/4-n}(0,i,s)),u=0,l=s>0?i-4:i,h=0;h<l;h+=4)e=r[t.charCodeAt(h)]<<18|r[t.charCodeAt(h+1)]<<12|r[t.charCodeAt(h+2)]<<6|r[t.charCodeAt(h+3)],a[u++]=e>>16&255,a[u++]=e>>8&255,a[u++]=255&e;2===s&&(e=r[t.charCodeAt(h)]<<2|r[t.charCodeAt(h+1)]>>4,a[u++]=255&e);1===s&&(e=r[t.charCodeAt(h)]<<10|r[t.charCodeAt(h+1)]<<4|r[t.charCodeAt(h+2)]>>2,a[u++]=e>>8&255,a[u++]=255&e);return a},e.fromByteArray=function(t){for(var e,n=t.length,r=n%3,o=[],s=0,a=n-r;s<a;s+=16383)o.push(l(t,s,s+16383>a?a:s+16383));1===r?(e=t[n-1],o.push(i[e>>2]+i[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],o.push(i[e>>10]+i[e>>4&63]+i[e<<2&63]+"="));return o.join("")};for(var i=[],r=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,u=s.length;a<u;++a)i[a]=s[a],r[s.charCodeAt(a)]=a;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var r,o,s=[],a=e;a<n;a+=3)r=(t[a]<<16&16711680)+(t[a+1]<<8&65280)+(255&t[a+2]),s.push(i[(o=r)>>18&63]+i[o>>12&63]+i[o>>6&63]+i[63&o]);return s.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(t,e,n){"use strict";var i=n(22),r=n(0),o=n(6),s=n(78),a=n(77),u=n(48),c=n(135),l=n(134),h=n(39),f=n(122),p=function(t,e,n){var i,s=r.getTypeOf(e),l=r.extend(n||{},a);l.date=l.date||new Date,null!==l.compression&&(l.compression=l.compression.toUpperCase()),"string"==typeof l.unixPermissions&&(l.unixPermissions=parseInt(l.unixPermissions,8)),l.unixPermissions&&16384&l.unixPermissions&&(l.dir=!0),l.dosPermissions&&16&l.dosPermissions&&(l.dir=!0),l.dir&&(t=b(t)),l.createFolders&&(i=d(t))&&y.call(this,i,!0);var p="string"===s&&!1===l.binary&&!1===l.base64;n&&void 0!==n.binary||(l.binary=!p),(e instanceof u&&0===e.uncompressedSize||l.dir||!e||0===e.length)&&(l.base64=!1,l.binary=!0,e="",l.compression="STORE",s="string");var m=null;m=e instanceof u||e instanceof o?e:h.isNode&&h.isStream(e)?new f(t,e):r.prepareContent(t,e,l.binary,l.optimizedBinaryString,l.base64);var v=new c(t,m,l);this.files[t]=v},d=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf("/");return e>0?t.substring(0,e):""},b=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},y=function(t,e){return e=void 0!==e?e:a.createFolders,t=b(t),this.files[t]||p.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function m(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var v={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var e,n,i;for(e in this.files)this.files.hasOwnProperty(e)&&(i=this.files[e],(n=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(n,i))},filter:function(t){var e=[];return this.forEach(function(n,i){t(n,i)&&e.push(i)}),e},file:function(t,e,n){if(1===arguments.length){if(m(t)){var i=t;return this.filter(function(t,e){return!e.dir&&i.test(t)})}var r=this.files[this.root+t];return r&&!r.dir?r:null}return t=this.root+t,p.call(this,t,e,n),this},folder:function(t){if(!t)return this;if(m(t))return this.filter(function(e,n){return n.dir&&t.test(e)});var e=this.root+t,n=y.call(this,e),i=this.clone();return i.root=n.name,i},remove:function(t){t=this.root+t;var e=this.files[t];if(e||("/"!==t.slice(-1)&&(t+="/"),e=this.files[t]),e&&!e.dir)delete this.files[t];else for(var n=this.filter(function(e,n){return n.name.slice(0,t.length)===t}),i=0;i<n.length;i++)delete this.files[n[i].name];return this},generate:function(t){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var e,n={};try{if((n=r.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:i.utf8encode})).type=n.type.toLowerCase(),n.compression=n.compression.toUpperCase(),"binarystring"===n.type&&(n.type="string"),!n.type)throw new Error("No output type specified.");r.checkSupport(n.type),"darwin"!==n.platform&&"freebsd"!==n.platform&&"linux"!==n.platform&&"sunos"!==n.platform||(n.platform="UNIX"),"win32"===n.platform&&(n.platform="DOS");var a=n.comment||this.comment||"";e=l.generateWorker(this,n,a)}catch(t){(e=new o("error")).error(t)}return new s(e,n.type||"string",n.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(e)}};t.exports=v},function(t,e,n){"use strict";function i(){if(!(this instanceof i))return new i;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files={},this.comment=null,this.root="",this.clone=function(){var t=new i;for(var e in this)"function"!=typeof this[e]&&(t[e]=this[e]);return t}}i.prototype=n(166),i.prototype.loadAsync=n(121),i.support=n(14),i.defaults=n(77),i.version="3.1.5",i.loadAsync=function(t,e){return(new i).loadAsync(t,e)},i.external=n(28),t.exports=i},function(t,e){},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(114),r=n(54),o=n(167),s=function(){function t(){}return t.MXLtoIXmlElement=function(t){var e=new o;return e.loadAsync(t).then(function(t){return e.file("META-INF/container.xml").async("string")},function(t){throw t}).then(function(t){var n=(new DOMParser).parseFromString(t,"text/xml").getElementsByTagName("rootfile")[0].getAttribute("full-path");return e.file(n).async("string")},function(t){throw t}).then(function(t){var e=(new DOMParser).parseFromString(t,"text/xml"),n=new i.IXmlElement(e.documentElement);return r.Promise.resolve(n)},function(t){throw t}).then(function(t){return t},function(t){throw new Error("extractSheetFromMxl: "+t.message)})},t.MXLtoXMLstring=function(t){var e=new o;return e.loadAsync(t).then(function(t){return e.file("META-INF/container.xml").async("string")},function(t){throw t}).then(function(t){var n=(new DOMParser).parseFromString(t,"text/xml").getElementsByTagName("rootfile")[0].getAttribute("full-path");return e.file(n).async("string")},function(t){throw t})},t}();e.MXLHelper=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.hidden=!0,this.container=t,this.openSheetMusicDisplay=e;var n=document.createElement("img");n.style.position="absolute",n.style.zIndex="-1",this.cursorElement=n,this.container.appendChild(n)}return t.prototype.init=function(t,e){this.manager=t,this.reset(),this.graphic=e,this.hidden=!0,this.hide()},t.prototype.show=function(){this.hidden=!1,this.update()},t.prototype.update=function(){if(!this.hidden){this.graphic.Cursors.length=0;var t=this.iterator;if(!t.EndReached&&void 0!==t.CurrentVoiceEntries&&0!==t.CurrentVoiceEntries.length){var e,n,i,r=t.CurrentVoiceEntries[0],o=r.ParentSourceStaffEntry.VerticalContainerParent.ParentMeasure.measureListIndex,s=r.ParentSourceStaffEntry.ParentStaff.idInMusicSheet,a=this.graphic.findGraphicalStaffEntryFromMeasureList(s,o,r.ParentSourceStaffEntry);e=a.PositionAndShape.AbsolutePosition.x;var u=a.parentMeasure.parentMusicSystem;n=u.PositionAndShape.AbsolutePosition.y+u.StaffLines[0].PositionAndShape.RelativePosition.y,i=u.PositionAndShape.AbsolutePosition.y+u.StaffLines[u.StaffLines.length-1].PositionAndShape.RelativePosition.y+4-n;var c=this.cursorElement;c.style.top=10*n*this.openSheetMusicDisplay.zoom+"px",c.style.left=10*(e-1.5)*this.openSheetMusicDisplay.zoom+"px",c.height=10*i*this.openSheetMusicDisplay.zoom;var l=30*this.openSheetMusicDisplay.zoom;l!==c.width&&(c.width=l,this.updateStyle(l)),this.cursorElement.style.display=""}}},t.prototype.hide=function(){this.cursorElement.style.display="none",this.hidden=!0},t.prototype.next=function(){this.iterator.moveToNext(),this.hidden||this.show()},t.prototype.reset=function(){this.iterator=this.manager.getIterator(),this.iterator.moveToNext(),this.update()},t.prototype.updateStyle=function(t,e){void 0===e&&(e="#33e02f");var n=document.createElement("canvas");n.width=this.cursorElement.width,n.height=1;var i=n.getContext("2d");i.globalAlpha=.5;var r=i.createLinearGradient(0,0,this.cursorElement.width,0);r.addColorStop(0,"white"),r.addColorStop(.2,e),r.addColorStop(.8,e),r.addColorStop(1,"white"),i.fillStyle=r,i.fillRect(0,0,t,1),this.cursorElement.src=n.toDataURL("image/png")},t}();e.Cursor=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=n(89),a=n(25),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e.prototype.getBackendType=function(){return o.Flow.Renderer.Backends.CANVAS},e.prototype.initialize=function(t){this.canvas=document.createElement("canvas"),this.inner=document.createElement("div"),this.inner.style.position="relative",this.canvas.style.zIndex="0",this.inner.appendChild(this.canvas),t.appendChild(this.inner),this.renderer=new o.Flow.Renderer(this.canvas,this.getBackendType()),this.ctx=this.renderer.getContext(),this.canvasRenderingCtx=this.ctx.vexFlowCanvasContext},e.prototype.getContext=function(){return this.ctx},e.prototype.clear=function(){},e.prototype.scale=function(t){this.ctx.scale(t,t)},e.prototype.translate=function(t,e){this.canvasRenderingCtx.translate(t,e)},e.prototype.renderText=function(t,e,n,i,r,o){var s=this.canvasRenderingCtx.font;this.canvasRenderingCtx.font=a.VexFlowConverter.font(t,e,n),this.canvasRenderingCtx.fillText(i,o.x,o.y+r),this.canvasRenderingCtx.font=s},e.prototype.renderRectangle=function(t,e,n){void 0===n&&(n=1);var i=this.canvasRenderingCtx.fillStyle;this.canvasRenderingCtx.fillStyle=a.VexFlowConverter.style(e),this.canvasRenderingCtx.globalAlpha=n,this.ctx.fillRect(t.x,t.y,t.width,t.height),this.canvasRenderingCtx.fillStyle=i,this.canvasRenderingCtx.globalAlpha=1},e}(s.VexFlowBackend);e.CanvasVexFlowBackend=u},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=n(89),a=n(25),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e.prototype.getBackendType=function(){return o.Flow.Renderer.Backends.SVG},e.prototype.initialize=function(t){this.canvas=document.createElement("div"),this.inner=this.canvas,this.inner.style.position="relative",this.canvas.style.zIndex="0",t.appendChild(this.inner),this.renderer=new o.Flow.Renderer(this.canvas,this.getBackendType()),this.ctx=this.renderer.getContext()},e.prototype.getContext=function(){return this.ctx},e.prototype.clear=function(){var t=this.ctx.svg;if(t)for(;t.lastChild;)t.removeChild(t.lastChild)},e.prototype.scale=function(t){this.ctx.scale(t,t)},e.prototype.translate=function(t,e){},e.prototype.renderText=function(t,e,n,i,r,o){this.ctx.save(),this.ctx.setFont("Times New Roman",t,a.VexFlowConverter.fontStyle(e)),this.ctx.attributes["font-size"]=t+"px",this.ctx.state["font-size"]=t+"px",this.ctx.fillText(i,o.x,o.y+r),this.ctx.restore()},e.prototype.renderRectangle=function(t,e,n){void 0===n&&(n=1),this.ctx.save(),this.ctx.attributes.fill=a.VexFlowConverter.style(e),this.ctx.attributes["fill-opacity"]=n,this.ctx.fillRect(t.x,t.y,t.width,t.height),this.ctx.restore(),this.ctx.attributes["fill-opacity"]=1},e}(s.VexFlowBackend);e.SvgVexFlowBackend=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(24),r=n(24),o=n(17),s=function(){function t(){this.repetitionInstructions=[]}return t.prototype.calculateRepetitions=function(t,e){this.musicSheet=t,this.repetitionInstructions=e;for(var n=this.musicSheet.SourceMeasures,i=0,o=this.repetitionInstructions.length;i<o;++i){var s=this.repetitionInstructions[i];this.currentMeasureIndex=s.measureIndex,this.currentMeasure=n[this.currentMeasureIndex],this.handleRepetitionInstructions(s)}for(i=0,o=this.musicSheet.SourceMeasures.length;i<o;++i){var a=this.musicSheet.SourceMeasures[i];a.FirstRepetitionInstructions.length>1&&a.FirstRepetitionInstructions.sort(r.RepetitionInstructionComparer.Compare),a.LastRepetitionInstructions.length>1&&a.LastRepetitionInstructions.sort(r.RepetitionInstructionComparer.Compare)}},t.prototype.handleRepetitionInstructions=function(t){switch(t.type){case i.RepetitionInstructionEnum.StartLine:this.currentMeasure.FirstRepetitionInstructions.push(t);break;case i.RepetitionInstructionEnum.BackJumpLine:this.currentMeasure.LastRepetitionInstructions.push(t);break;case i.RepetitionInstructionEnum.Ending:if(t.alignment===i.AlignmentType.Begin)this.currentMeasure.FirstRepetitionInstructions.push(t);else for(var e=0,n=t.endingIndices.length;e<n;++e)this.currentMeasure.LastRepetitionInstructions.push(t);break;case i.RepetitionInstructionEnum.Segno:this.currentMeasure.FirstRepetitionInstructions.push(t);break;case i.RepetitionInstructionEnum.Fine:case i.RepetitionInstructionEnum.ToCoda:case i.RepetitionInstructionEnum.Coda:case i.RepetitionInstructionEnum.DaCapo:case i.RepetitionInstructionEnum.DalSegno:case i.RepetitionInstructionEnum.DalSegnoAlFine:case i.RepetitionInstructionEnum.DaCapoAlFine:case i.RepetitionInstructionEnum.DalSegnoAlCoda:case i.RepetitionInstructionEnum.DaCapoAlCoda:this.currentMeasure.LastRepetitionInstructions.push(t);break;case i.RepetitionInstructionEnum.None:break;default:throw new o.ArgumentOutOfRangeException("currentRepetitionInstruction")}return!0},t}();e.RepetitionCalculator=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.StringContainsSeparatedWord=function(t,e){return t===e||-1!==t.search(" "+e)||-1!==t.search(e+" ")||-1!==t.search(e+".")},t}();e.StringUtil=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(24),r=n(24),o=n(174),s=function(){function t(){}return Object.defineProperty(t.prototype,"MusicSheet",{set:function(t){this.musicSheet=t,this.xmlMeasureList=new Array(this.musicSheet.Instruments.length),this.repetitionInstructions=[]},enumerable:!0,configurable:!0}),t.prototype.prepareReadingMeasure=function(t,e){this.currentMeasureIndex=e},t.prototype.handleLineRepetitionInstructions=function(t,e){if(!1,t.elements().length>0){var n="",r=!1,o="",s="",a="",u=[],c=t.element("bar-style");void 0!==c&&(a=c.value),n=t.attributes().length>0&&void 0!==t.attribute("location")?t.attribute("location").value:"right";for(var l=t.elements(),h=0,f=l.length;h<f;++h){var p=l[h];if("repeat"===p.name&&p.hasAttributes)r=!0,o=p.attribute("direction").value;else if("ending"===p.name&&p.hasAttributes&&void 0!==p.attribute("type")&&void 0!==p.attribute("number")){s=p.attribute("type").value;for(var d=p.attribute("number").value.split("[,+]"),b=0,y=d.length;b<y;++b){var m=d[b],v=m.match("[0-9]");if(-1!==m.search("-")&&2===v.length)for(var g=parseInt(v[0],10),_=parseInt(v[1],10),S=g;S<=_;S++)u.push(S);else for(var x=0,w=v.length;x<w;++x){S=v[x];u.push(parseInt(S,10))}}}}if("light-heavy"!==a||0!==u.length||r||!0,r||u.length>0)if("left"===n){if("start"===s){var E=new i.RepetitionInstruction(this.currentMeasureIndex,i.RepetitionInstructionEnum.Ending,i.AlignmentType.Begin,void 0,u);this.addInstruction(this.repetitionInstructions,E)}if("forward"===o){E=new i.RepetitionInstruction(this.currentMeasureIndex,i.RepetitionInstructionEnum.StartLine);this.addInstruction(this.repetitionInstructions,E)}}else{if("stop"===s||"discontinue"===s){E=new i.RepetitionInstruction(this.currentMeasureIndex,i.RepetitionInstructionEnum.Ending,i.AlignmentType.End,void 0,u);this.addInstruction(this.repetitionInstructions,E)}if("backward"===o){E=new i.RepetitionInstruction(this.currentMeasureIndex,i.RepetitionInstructionEnum.BackJumpLine);this.addInstruction(this.repetitionInstructions,E)}}}},t.prototype.handleRepetitionInstructionsFromWordsOrSymbols=function(t,e){var n=t.element("words");if(void 0!==n){var r=n.value.trim().toLowerCase();if(o.StringUtil.StringContainsSeparatedWord(r,"d.s. al fine")||o.StringUtil.StringContainsSeparatedWord(r,"d. s. al fine")){var s=this.currentMeasureIndex;e<.5&&this.currentMeasureIndex<this.xmlMeasureList[0].length-1&&s--;var a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DalSegnoAlFine);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"d.s. al coda")||o.StringUtil.StringContainsSeparatedWord(r,"d. s. al coda")){s=this.currentMeasureIndex;e<.5&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DalSegnoAlCoda);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"d.c. al fine")||o.StringUtil.StringContainsSeparatedWord(r,"d. c. al fine")){s=this.currentMeasureIndex;e<.5&&this.currentMeasureIndex<this.xmlMeasureList[0].length-1&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DaCapoAlFine);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"d.c. al coda")||o.StringUtil.StringContainsSeparatedWord(r,"d. c. al coda")){s=this.currentMeasureIndex;e<.5&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DaCapoAlCoda);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"d.c.")||o.StringUtil.StringContainsSeparatedWord(r,"d. c.")||o.StringUtil.StringContainsSeparatedWord(r,"dacapo")||o.StringUtil.StringContainsSeparatedWord(r,"da capo")){s=this.currentMeasureIndex;e<.5&&this.currentMeasureIndex<this.xmlMeasureList[0].length-1&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DaCapo);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"d.s.")||o.StringUtil.StringContainsSeparatedWord(r,"d. s.")||o.StringUtil.StringContainsSeparatedWord(r,"dalsegno")||o.StringUtil.StringContainsSeparatedWord(r,"dal segno")){s=this.currentMeasureIndex;e<.5&&this.currentMeasureIndex<this.xmlMeasureList[0].length-1&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.DalSegno);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"tocoda")||o.StringUtil.StringContainsSeparatedWord(r,"to coda")||o.StringUtil.StringContainsSeparatedWord(r,"a coda")||o.StringUtil.StringContainsSeparatedWord(r,"a la coda")){s=this.currentMeasureIndex;e<.5&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.ToCoda);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"fine")){s=this.currentMeasureIndex;e<.5&&s--;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.Fine);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"coda")){s=this.currentMeasureIndex;e>.5&&s++;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.Coda);return this.addInstruction(this.repetitionInstructions,a),!0}if(o.StringUtil.StringContainsSeparatedWord(r,"segno")){s=this.currentMeasureIndex;e>.5&&s++;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.Segno);return this.addInstruction(this.repetitionInstructions,a),!0}}else{if(void 0!==t.element("segno")){s=this.currentMeasureIndex;e>.5&&s++;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.Segno);return this.addInstruction(this.repetitionInstructions,a),!0}if(void 0!==t.element("coda")){s=this.currentMeasureIndex;e>.5&&s++;a=new i.RepetitionInstruction(s,i.RepetitionInstructionEnum.Coda);return this.addInstruction(this.repetitionInstructions,a),!0}}return!1},t.prototype.removeRedundantInstructions=function(){for(var t=0,e=0,n=0,o=0,s=0;s<this.repetitionInstructions.length;s++){var a=this.repetitionInstructions[s];switch(a.type){case i.RepetitionInstructionEnum.Coda:n>0&&this.findInstructionInPreviousMeasure(s,a.measureIndex,i.RepetitionInstructionEnum.ToCoda)&&(a.type=i.RepetitionInstructionEnum.None),0===e&&0===n&&(a.type=i.RepetitionInstructionEnum.ToCoda,a.alignment=i.AlignmentType.End,a.measureIndex--);break;case i.RepetitionInstructionEnum.Segno:if(t-o>0){for(var u=!1,c=0,l=this.repetitionInstructions.length;c<l;++c){var h=this.repetitionInstructions[c];if(a.measureIndex-h.measureIndex==1)switch(h.type){case i.RepetitionInstructionEnum.BackJumpLine:h.type=n-e>0?i.RepetitionInstructionEnum.DalSegnoAlCoda:i.RepetitionInstructionEnum.DalSegno,a.type=i.RepetitionInstructionEnum.None,u=!0;break;case i.RepetitionInstructionEnum.DalSegno:case i.RepetitionInstructionEnum.DalSegnoAlFine:case i.RepetitionInstructionEnum.DalSegnoAlCoda:a.type=i.RepetitionInstructionEnum.None,u=!0}if(u)break}if(u)break;a.type=n-e>0?i.RepetitionInstructionEnum.DalSegnoAlCoda:i.RepetitionInstructionEnum.DalSegno,a.alignment=i.AlignmentType.End,a.measureIndex--}}if(this.backwardSearchForPreviousIdenticalInstruction(s,a)||a.type===i.RepetitionInstructionEnum.None)this.repetitionInstructions.splice(s,1),s--;else switch(a.type){case i.RepetitionInstructionEnum.Fine:break;case i.RepetitionInstructionEnum.ToCoda:n++;break;case i.RepetitionInstructionEnum.Coda:e++;break;case i.RepetitionInstructionEnum.Segno:t++;break;case i.RepetitionInstructionEnum.DalSegnoAlFine:case i.RepetitionInstructionEnum.DalSegnoAlCoda:o++}}this.repetitionInstructions.sort(r.RepetitionInstructionComparer.Compare)},t.prototype.findInstructionInPreviousMeasure=function(t,e,n){for(var i=t-1;i>=0;i--){var r=this.repetitionInstructions[i];if(e-r.measureIndex==1&&r.type===n)return!0}return!1},t.prototype.backwardSearchForPreviousIdenticalInstruction=function(t,e){for(var n=t-1;n>=0;n--){if(this.repetitionInstructions[n].equals(e))return!0}return!1},t.prototype.addInstruction=function(t,e){for(var n=!0,i=0,r=t.length;i<r;++i){var o=t[i];if(e.equals(o)){n=!1;break}}n&&t.push(e)},t}();e.RepetitionInstructionReader=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(175),r=n(173),o=function(){function t(){}return t.createRepetitionInstructionReader=function(){return new i.RepetitionInstructionReader},t.createRepetitionCalculator=function(){return new r.RepetitionCalculator},t}();e.MusicSymbolModuleFactory=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(8),r=n(3),o=function(){function t(e){this.parentInstrument=e,this.fixedKey=-1,this.name=this.parseMidiInstrument(this.parentInstrument.Name),this.midiInstrumentID=t.midiInstrument[this.name],this.volume=1}return Object.defineProperty(t.prototype,"ParentInstrument",{get:function(){return this.parentInstrument},enumerable:!0,configurable:!0}),t.isPianoInstrument=function(t){return t===i.MidiInstrument.Acoustic_Grand_Piano||t===i.MidiInstrument.Bright_Acoustic_Piano||t===i.MidiInstrument.Electric_Grand_Piano||t===i.MidiInstrument.Electric_Piano_1||t===i.MidiInstrument.Electric_Piano_2},t.prototype.setMidiInstrument=function(e){this.midiInstrumentID=t.midiInstrument[this.parseMidiInstrument(e)]},t.prototype.parseMidiInstrument=function(e){try{if(e){var n=e.toLowerCase().trim();for(var i in t.midiInstrument)if(-1!==n.indexOf(i))return i}if(this.parentInstrument.Name){n=this.parentInstrument.Name.toLowerCase().trim();for(var i in t.midiInstrument)if(-1!==n.indexOf(i))return i}}catch(t){r.error("Error parsing MIDI Instrument. Default to Grand Piano.")}return"unnamed"},t.midiInstrument={alt:i.MidiInstrument.Synth_Voice,alto:i.MidiInstrument.Synth_Voice,banjo:i.MidiInstrument.Banjo,bariton:i.MidiInstrument.Synth_Voice,baritone:i.MidiInstrument.Synth_Voice,bass:i.MidiInstrument.Synth_Voice,"blockflöte":i.MidiInstrument.Recorder,brass:i.MidiInstrument.Trombone,bratsche:i.MidiInstrument.Viola,cello:i.MidiInstrument.Cello,clarinet:i.MidiInstrument.Clarinet,contrabass:i.MidiInstrument.Contrabass,drums:i.MidiInstrument.Percussion,flute:i.MidiInstrument.Flute,"flöte":i.MidiInstrument.Flute,frenchhorn:i.MidiInstrument.French_Horn,gitarre:i.MidiInstrument.Acoustic_Guitar_nylon,guitar:i.MidiInstrument.Acoustic_Guitar_nylon,harfe:i.MidiInstrument.Orchestral_Harp,harp:i.MidiInstrument.Orchestral_Harp,klarinette:i.MidiInstrument.Clarinet,klavier:i.MidiInstrument.Acoustic_Grand_Piano,kontrabass:i.MidiInstrument.Contrabass,oboe:i.MidiInstrument.Oboe,organ:i.MidiInstrument.Church_Organ,orgel:i.MidiInstrument.Church_Organ,orgue:i.MidiInstrument.Church_Organ,percussion:i.MidiInstrument.Percussion,piano:i.MidiInstrument.Acoustic_Grand_Piano,piccolo:i.MidiInstrument.Piccolo,posaune:i.MidiInstrument.Trombone,recorder:i.MidiInstrument.Recorder,sax:i.MidiInstrument.Tenor_Sax,schlagwerk:i.MidiInstrument.Percussion,schlagzeug:i.MidiInstrument.Percussion,sopran:i.MidiInstrument.Synth_Voice,steeldrum:i.MidiInstrument.Steel_Drums,streicher:i.MidiInstrument.String_Ensemble_1,strings:i.MidiInstrument.String_Ensemble_1,tenor:i.MidiInstrument.Synth_Voice,tpt:i.MidiInstrument.Trumpet,trombone:i.MidiInstrument.Trombone,trompete:i.MidiInstrument.Trumpet,trumpet:i.MidiInstrument.Trumpet,tuba:i.MidiInstrument.Tuba,unnamed:i.MidiInstrument.Acoustic_Grand_Piano,viola:i.MidiInstrument.Viola,violin:i.MidiInstrument.Violin,"violon-c":i.MidiInstrument.Cello,"violon.":i.MidiInstrument.Violin,voice:i.MidiInstrument.Synth_Voice,woodblock:i.MidiInstrument.Woodblock},t}();e.SubInstrument=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(95),r=n(2),o=n(31),s=n(3),a=function(){function t(){}return t.readChordSymbol=function(t,e,n){var a=t.element("root"),u=t.element("kind");if(void 0!==a&&void 0!==u){var c=a.element("root-step"),l=a.element("root-alter");if(void 0!==c){var h;try{h=r.NoteEnum[c.value.trim()]}catch(t){var f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}var p=r.AccidentalEnum.NONE;if(void 0!==l)try{p=parseInt(l.value,void 0)}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");e.SheetErrors.pushMeasureError(f),s.debug("InstrumentReader.readChordSymbol",f,t)}var d,b=new r.Pitch(h,1,p),y=u.value.trim().replace("-","");try{d=i.ChordSymbolEnum[y]}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}var m=void 0,v=t.element("bass");if(void 0!==v){var g=v.element("bass-step"),_=v.element("bass-alter"),S=r.NoteEnum.C;if(void 0!==g)try{S=r.NoteEnum[g.value.trim()]}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}var x=r.AccidentalEnum.NONE;if(void 0!==_)try{x=parseInt(_.value,void 0)}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");e.SheetErrors.pushMeasureError(f),s.debug("InstrumentReader.readChordSymbol",f,t)}m=new r.Pitch(S,1,x)}var w=void 0,E=t.element("degree");if(void 0!==E){var P=E.element("degree-value"),T=E.element("degree-alter"),M=E.element("degree-type");if(void 0===P||void 0===T||void 0===M)return;var k=void 0;try{k=parseInt(P.value.trim(),void 0)}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}var O=void 0;try{O=parseInt(T.value,void 0)}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}var A=void 0;try{A=i.ChordDegreeText[M.value.trim().toLowerCase()]}catch(t){f=o.ITextTranslation.translateText("ReaderErrorMessages/ChordSymbolError","Invalid chord symbol");return e.SheetErrors.pushMeasureError(f),void s.debug("InstrumentReader.readChordSymbol",f,t)}w=new i.Degree(k,O,A)}return new i.ChordSymbolContainer(b,d,m,w,n)}}},t}();e.ChordSymbolReader=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Fingering=0]="Fingering"}(e.TechnicalInstructionType||(e.TechnicalInstructionType={}));var i=function(){return function(){}}();e.TechnicalInstruction=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(27),r=n(3),o=n(179),s=n(107),a=n(55),u=n(2),c=function(){function t(){}return t.prototype.getAccEnumFromString=function(t){switch(t){case"natural":return u.AccidentalEnum.NATURAL;case"sharp":return u.AccidentalEnum.SHARP;case"sharp-sharp":case"double-sharp":return u.AccidentalEnum.DOUBLESHARP;case"flat":return u.AccidentalEnum.FLAT;case"flat-flat":return u.AccidentalEnum.DOUBLEFLAT;default:return u.AccidentalEnum.NONE}},t.prototype.addArticulationExpression=function(t,e){if(void 0!==t&&t.elements().length>0)for(var n=t.elements(),o=0,s=n.length;o<s;++o){var a=n[o].name;try{a.replace("-","");var u=i.ArticulationEnum[a];i.VoiceEntry.isSupportedArticulation(u)&&("staccato"===a&&e.Articulations.length>0&&e.Articulations[0]!==i.ArticulationEnum.staccato&&e.Articulations.splice(0,0,u),-1===e.Articulations.indexOf(u)&&e.Articulations.push(u))}catch(t){return void r.debug("addArticulationExpression","Invalid note articulation.",t)}}},t.prototype.addFermata=function(t,e){var n=i.ArticulationEnum.fermata;t.attributes().length>0&&void 0!==t.attribute("type")&&"inverted"===t.attribute("type").value&&(n=i.ArticulationEnum.invertedfermata),e.Articulations.push(n)},t.prototype.addTechnicalArticulations=function(t,e){var n=t.element("up-bow");if(void 0!==n&&-1===e.Articulations.indexOf(i.ArticulationEnum.upbow)&&e.Articulations.push(i.ArticulationEnum.upbow),void 0!==(n=t.element("down-bow"))&&-1===e.Articulations.indexOf(i.ArticulationEnum.downbow)&&e.Articulations.push(i.ArticulationEnum.downbow),void 0!==(n=t.element("open-string"))&&-1===e.Articulations.indexOf(i.ArticulationEnum.naturalharmonic)&&e.Articulations.push(i.ArticulationEnum.naturalharmonic),void 0!==(n=t.element("stopped"))&&-1===e.Articulations.indexOf(i.ArticulationEnum.lefthandpizzicato)&&e.Articulations.push(i.ArticulationEnum.lefthandpizzicato),void 0!==(n=t.element("snap-pizzicato"))&&-1===e.Articulations.indexOf(i.ArticulationEnum.snappizzicato)&&e.Articulations.push(i.ArticulationEnum.snappizzicato),void 0!==(n=t.element("fingering"))){var r=new o.TechnicalInstruction;r.type=o.TechnicalInstructionType.Fingering,r.value=n.value,e.TechnicalInstructions.push(r)}},t.prototype.addOrnament=function(t,e){if(void 0!==t){var n=void 0,i=t.element("trill-mark");if(void 0!==i&&(n=new s.OrnamentContainer(s.OrnamentEnum.Trill)),void 0!==(i=t.element("turn"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.Turn)),void 0!==(i=t.element("inverted-turn"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.InvertedTurn)),void 0!==(i=t.element("delayed-turn"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.DelayedTurn)),void 0!==(i=t.element("delayed-inverted-turn"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.DelayedInvertedTurn)),void 0!==(i=t.element("mordent"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.Mordent)),void 0!==(i=t.element("inverted-mordent"))&&(n=new s.OrnamentContainer(s.OrnamentEnum.InvertedMordent)),void 0!==n){var r=t.elements("accidental-mark");if(void 0!==r)for(var o=a.PlacementEnum.Below,c=u.AccidentalEnum.NONE,l=r,h=0,f=l.length;h<f;++h){var p=l[h],d=p.value;c=this.getAccEnumFromString(d);var b=p.attribute("placement");p.hasAttributes&&void 0!==b&&("above"===(d=b.value)?o=a.PlacementEnum.Above:"below"===d&&(o=a.PlacementEnum.Below)),o===a.PlacementEnum.Above?n.AccidentalAbove=c:o===a.PlacementEnum.Below&&(n.AccidentalBelow=c)}e.OrnamentContainer=n}}},t}();e.ArticulationReader=c},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.linkStaffEntries=[],this.voiceEntry=t}return Object.defineProperty(t.prototype,"GetVoiceEntry",{get:function(){return this.voiceEntry},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LinkStaffEntries",{get:function(){return this.linkStaffEntries},set:function(t){this.linkStaffEntries=t},enumerable:!0,configurable:!0}),t}();e.StaffEntryLink=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,n,i){this.text=t,this.word=n,this.parent=i,this.verseNumber=e}return Object.defineProperty(t.prototype,"Text",{get:function(){return this.text},set:function(t){this.text=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Word",{get:function(){return this.word},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Parent",{get:function(){return this.parent},set:function(t){this.parent=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"VerseNumber",{get:function(){return this.verseNumber},enumerable:!0,configurable:!0}),t}();e.LyricsEntry=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){this.syllables=[]}return Object.defineProperty(t.prototype,"Syllables",{get:function(){return this.syllables},enumerable:!0,configurable:!0}),t.prototype.containsVoiceEntry=function(t){for(var e=0,n=this.Syllables.length;e<n;++e){if(this.Syllables[e].Parent===t)return!0}return!1},t.prototype.findLyricEntryInVoiceEntry=function(t){for(var e=0,n=this.Syllables.length;e<n;++e){var i=this.Syllables[e];if(i.Parent===t)return i}},t}();e.LyricWord=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(183),r=n(182),o=n(31),s=function(){function t(t){this.openLyricWords={},this.musicSheet=t}return t.prototype.addLyricEntry=function(t,e){if(void 0!==t){for(var n=t,s=0,a=n.length;s<a;++s){var u=n[s];try{var c="single";if(void 0!==u.element("text")){var l=u.element("text");if(void 0!==u.element("syllabic")&&(c=u.element("syllabic").value),void 0!==l){var h=l.value;if(void 0!==u.element("elision")&&"-"===h){for(var f=u.elements(),p=0,d=0;d<f.length;d++){if("elision"===(m=f[d]).name){p=d;break}}var b=void 0,y=void 0;if(p>0)for(d=p;d<f.length;d++){var m;"text"===(m=f[d]).name&&(b=m),"syllabic"===m.name&&(y=m)}void 0!==b&&void 0!==y&&(l=b,c="middle")}var v=1;if(void 0!==u.attributes()&&void 0!==u.attribute("number"))try{v=parseInt(u.attribute("number").value,10)}catch(t){try{var g=u.attribute("number").value.toLowerCase().split("verse");g.length>1&&(v=parseInt(g[1],10))}catch(t){var _=o.ITextTranslation.translateText("ReaderErrorMessages/LyricVerseNumberError","Invalid lyric verse number");this.musicSheet.SheetErrors.pushMeasureError(_);continue}}var S=void 0;"single"===c||"end"===c?(void 0!==this.openLyricWords[v]?(this.currentLyricWord=this.openLyricWords[v],S=new r.LyricsEntry(h,v,this.currentLyricWord,e),this.currentLyricWord.Syllables.push(S),delete this.openLyricWords[v],this.currentLyricWord=void 0):S=new r.LyricsEntry(h,v,void 0,e),S.extend=void 0!==u.element("extend")):"begin"===c?(void 0!==this.openLyricWords[v]&&(delete this.openLyricWords[v],this.currentLyricWord=void 0),this.currentLyricWord=new i.LyricWord,this.openLyricWords[v]=this.currentLyricWord,S=new r.LyricsEntry(h,v,this.currentLyricWord,e),this.currentLyricWord.Syllables.push(S)):"middle"===c&&(void 0!==this.openLyricWords[v]?(this.currentLyricWord=this.openLyricWords[v],S=new r.LyricsEntry(h,v,this.currentLyricWord,e),this.currentLyricWord.Syllables.push(S)):S=new r.LyricsEntry(h,v,void 0,e)),void 0!==S&&(void 0!==!e.LyricsEntries[v]&&e.LyricsEntries.setValue(v,S),void 0!==!e.ParentVoice.Parent.LyricVersesNumbers[v]&&e.ParentVoice.Parent.LyricVersesNumbers.push(v))}}}catch(t){_=o.ITextTranslation.translateText("ReaderErrorMessages/LyricError","Error while reading lyric entry.");this.musicSheet.SheetErrors.pushMeasureError(_);continue}}e.ParentVoice.Parent.LyricVersesNumbers=e.ParentVoice.Parent.LyricVersesNumbers.filter(function(t,e,n){return n.indexOf(t)===e})}},t}();e.LyricsReader=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.notes=[],this.fractions=[],this.tupletLabelNumber=t}return Object.defineProperty(t.prototype,"TupletLabelNumber",{get:function(){return this.tupletLabelNumber},set:function(t){this.tupletLabelNumber=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Notes",{get:function(){return this.notes},set:function(t){this.notes=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Fractions",{get:function(){return this.fractions},set:function(t){this.fractions=t},enumerable:!0,configurable:!0}),t.prototype.getNoteIndex=function(t){for(var e=this.notes.length-1;e>=0;e--)for(var n=0;n<this.notes[e].length;n++)if(t===this.notes[e][n])return e;return 0},t}();e.Tuplet=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(91),s=n(1),a=function(t){function e(e){var n=t.call(this)||this;return n.notes=[],n.AddNote(e),n}return r(e,t),Object.defineProperty(e.prototype,"Notes",{get:function(){return this.notes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StartNote",{get:function(){return this.notes[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Duration",{get:function(){for(var t=new s.Fraction,e=0,n=this.notes;e<n.length;e++){var i=n[e];t.Add(i.Length)}return t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Pitch",{get:function(){return this.StartNote.Pitch},enumerable:!0,configurable:!0}),e.prototype.AddNote=function(t){this.notes.push(t),t.NoteTie=this},e}(o.BaseIdClass);e.Tie=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){this.notes=[],this.extendedNoteList=[]}return Object.defineProperty(t.prototype,"Notes",{get:function(){return this.notes},set:function(t){this.notes=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ExtendedNoteList",{get:function(){return this.extendedNoteList},set:function(t){this.extendedNoteList=t},enumerable:!0,configurable:!0}),t.prototype.addNoteToBeam=function(t){void 0!==t&&(t.NoteBeam=this,this.notes.push(t),this.extendedNoteList.push(t))},t}();e.Beam=i,function(t){t[t.BeamNone=-1]="BeamNone",t[t.BeamBegin=0]="BeamBegin",t[t.BeamContinue=1]="BeamContinue",t[t.BeamEnd=2]="BeamEnd",t[t.BeamForward=3]="BeamForward",t[t.BeamBackward=4]="BeamBackward"}(e.BeamEnum||(e.BeamEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(105),r=n(56),o=n(27),s=n(59),a=n(34),u=n(187),c=n(186),l=n(185),h=n(1),f=n(31),p=n(184),d=n(17),b=n(2),y=n(2),m=n(181),v=n(3),g=n(2),_=n(44),S=n(180),x=function(){function t(t,e,n,o){void 0===o&&(o=void 0),this.lastBeamTag="",this.openTieDict={},this.currentOctaveShift=0,this.tupletDict={},this.openTupletNumber=0,this.musicSheet=t.GetMusicSheet,this.voice=void 0!==o?new i.LinkedVoice(t,e,o):new r.Voice(t,e),t.Voices.push(this.voice),this.lyricsReader=new p.LyricsReader(this.musicSheet),this.articulationReader=new S.ArticulationReader}return Object.defineProperty(t.prototype,"GetVoice",{get:function(){return this.voice},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"OctaveShift",{get:function(){return this.currentOctaveShift},set:function(t){this.currentOctaveShift=t},enumerable:!0,configurable:!0}),t.prototype.createVoiceEntry=function(t,e,n){this.currentVoiceEntry=new o.VoiceEntry(t.clone(),this.voice,e),n&&this.voice.VoiceEntries.push(this.currentVoiceEntry),-1===e.VoiceEntries.indexOf(this.currentVoiceEntry)&&e.VoiceEntries.push(this.currentVoiceEntry)},t.prototype.read=function(t,e,n,i,r,o,s,a,u,c){this.currentStaffEntry=r,this.currentMeasure=o;try{this.currentNote=n?this.addRestNote(e):this.addSingleNote(t,e,i,u,c),void 0!==this.lyricsReader&&void 0!==t.elements("lyric")&&(this.lyricsReader.addLyricEntry(t.elements("lyric"),this.currentVoiceEntry),this.voice.Parent.HasLyrics=!0);var l=!1,p=t.element("notations");if(void 0!==p){void 0!==this.articulationReader&&this.readArticulations(p,this.currentVoiceEntry);var d=p.elements("tuplet");d.length>0&&(this.openTupletNumber=this.addTuplet(t,d),l=!0),void 0===p.element("arpeggiate")||i||this.currentVoiceEntry.ArpeggiosNotesIndices.push(this.currentVoiceEntry.Notes.indexOf(this.currentNote));var b=p.elements("tied");b.length>0&&this.addTie(b,s,a);var y=this.openTieDict;for(var m in y)if(y.hasOwnProperty(m)){var v=y[m];h.Fraction.plus(v.StartNote.ParentStaffEntry.Timestamp,v.Duration).lt(this.currentStaffEntry.Timestamp)&&delete y[m]}}void 0===t.element("time-modification")||l||this.handleTimeModificationNode(t)}catch(t){var g=f.ITextTranslation.translateText("ReaderErrorMessages/NoteError","Ignored erroneous Note.");this.musicSheet.SheetErrors.pushMeasureError(g)}return this.currentNote},t.prototype.checkForOpenGraceNotes=function(){if(void 0!==this.currentStaffEntry&&0===this.currentStaffEntry.VoiceEntries.length&&void 0!==this.currentVoiceEntry.graceVoiceEntriesBefore&&this.currentVoiceEntry.graceVoiceEntriesBefore.length>0){var t=this.currentVoiceEntry.ParentVoice,e=this.currentMeasure.VerticalSourceStaffEntryContainers.indexOf(this.currentStaffEntry.VerticalContainerParent),n=this.currentStaffEntry.VerticalContainerParent.StaffEntries.indexOf(this.currentStaffEntry),i=this.currentMeasure.getPreviousSourceStaffEntryFromIndex(n,e);if(void 0!==i)for(var r=void 0,o=0,s=i.VoiceEntries.length;o<s;++o){var a=i.VoiceEntries[o];if(a.ParentVoice===t){(r=a).graceVoiceEntriesAfter=[];for(var u=0,c=this.currentVoiceEntry.graceVoiceEntriesBefore.length;u<c;++u){var l=this.currentVoiceEntry.graceVoiceEntriesBefore[u];r.graceVoiceEntriesAfter.push(l)}this.currentVoiceEntry.graceVoiceEntriesBefore=[],this.currentStaffEntry=void 0;break}}}},t.prototype.checkForStaffEntryLink=function(t,e,n,i){var r=new m.StaffEntryLink(this.currentVoiceEntry);r.LinkStaffEntries.push(n),n.Link=r;var o=this.currentVoiceEntry.Timestamp.clone(),s=i.getVerticalContainerByTimestamp(o);return void 0===(n=s.StaffEntries[t])&&(n=new a.SourceStaffEntry(s,e),s.StaffEntries[t]=n),n.VoiceEntries.push(this.currentVoiceEntry),r.LinkStaffEntries.push(n),n.Link=r,n},t.prototype.checkForOpenBeam=function(){void 0!==this.openBeam&&void 0!==this.currentNote&&this.handleOpenBeam()},t.prototype.checkOpenTies=function(){var t=this.openTieDict;for(var e in t)if(t.hasOwnProperty(e)){var n=t[e];h.Fraction.plus(n.StartNote.ParentStaffEntry.Timestamp,n.Duration).lt(n.StartNote.ParentStaffEntry.VerticalContainerParent.ParentMeasure.Duration)&&delete t[e]}},t.prototype.hasVoiceEntry=function(){return void 0!==this.currentVoiceEntry},t.prototype.getNoteDurationFromType=function(t){switch(t){case"1024th":return new h.Fraction(1,1024);case"512th":return new h.Fraction(1,512);case"256th":return new h.Fraction(1,256);case"128th":return new h.Fraction(1,128);case"64th":return new h.Fraction(1,64);case"32th":case"32nd":return new h.Fraction(1,32);case"16th":return new h.Fraction(1,16);case"eighth":return new h.Fraction(1,8);case"quarter":return new h.Fraction(1,4);case"half":return new h.Fraction(1,2);case"whole":return new h.Fraction(1,1);case"breve":return new h.Fraction(2,1);case"long":return new h.Fraction(4,1);case"maxima":return new h.Fraction(8,1);default:var e=f.ITextTranslation.translateText("ReaderErrorMessages/NoteDurationError","Invalid note duration.");throw new d.MusicSheetReadingException(e)}},t.prototype.readArticulations=function(t,e){var n=t.element("articulations");void 0!==n&&this.articulationReader.addArticulationExpression(n,e);var i=t.element("fermata");void 0!==i&&this.articulationReader.addFermata(i,e);var r=t.element("technical");void 0!==r&&this.articulationReader.addTechnicalArticulations(r,e);var o=t.element("ornaments");void 0!==o&&this.articulationReader.addOrnament(o,e)},t.prototype.addSingleNote=function(t,e,n,i,r){for(var o=b.AccidentalEnum.NONE,a=y.NoteEnum.C,u=0,c=void 0,l=t.elements(),p=0,m=l.length;p<m;++p){var _=l[p];try{if("pitch"===_.name)for(var S=_.elements(),x=0,w=S.length;x<w;++x){var E=S[x];try{if("step"===E.name){if(void 0===(a=y.NoteEnum[E.value])){var P=f.ITextTranslation.translateText("ReaderErrorMessages/NotePitchError","Invalid pitch while reading note.");throw this.musicSheet.SheetErrors.pushMeasureError(P),new d.MusicSheetReadingException(P,void 0)}}else if("alter"===E.name){if(o=parseInt(E.value,10),isNaN(o)){P=f.ITextTranslation.translateText("ReaderErrorMessages/NoteAlterationError","Invalid alteration while reading note.");throw this.musicSheet.SheetErrors.pushMeasureError(P),new d.MusicSheetReadingException(P,void 0)}}else if("octave"===E.name&&(u=parseInt(E.value,10),isNaN(u))){P=f.ITextTranslation.translateText("ReaderErrorMessages/NoteOctaveError","Invalid octave value while reading note.");throw this.musicSheet.SheetErrors.pushMeasureError(P),new d.MusicSheetReadingException(P,void 0)}}catch(t){v.info("VoiceGenerator.addSingleNote read Step: ",t.message)}}else if("unpitched"===_.name){var T=_.element("display-step");void 0!==T&&(a=y.NoteEnum[T.value.toUpperCase()]);var M=_.element("display-octave");void 0!==M&&(u=parseInt(M.value,10),r&&(u+=1))}else"instrument"===_.name&&void 0!==_.firstAttribute&&(c=_.firstAttribute.value)}catch(t){v.info("VoiceGenerator.addSingleNote: ",t)}}u-=g.Pitch.OctaveXmlDifference;var k=new g.Pitch(a,u,o),O=h.Fraction.createFromFraction(e),A=new s.Note(this.currentVoiceEntry,this.currentStaffEntry,O,k);return A.PlaybackInstrumentId=c,n?this.handleGraceNote(t,A):this.currentVoiceEntry.Notes.push(A),t.elements("beam")&&!i&&this.createBeam(t,A,n),A},t.prototype.addRestNote=function(t){var e=h.Fraction.createFromFraction(t),n=new s.Note(this.currentVoiceEntry,this.currentStaffEntry,e,void 0);return this.currentVoiceEntry.Notes.push(n),void 0!==this.openBeam&&this.openBeam.ExtendedNoteList.push(n),n},t.prototype.createBeam=function(t,e,n){try{var i=t.element("beam"),r=void 0;if(void 0!==i&&i.hasAttributes&&(r=i.attribute("number")),void 0!==r){var o=parseInt(r.value,10),s=t.elements("beam"),a=s[0].value;1===o&&void 0!==s&&("begin"===a&&this.lastBeamTag!==a&&(n?(void 0!==this.openGraceBeam&&this.handleOpenBeam(),this.openGraceBeam=new u.Beam):(void 0!==this.openBeam&&this.handleOpenBeam(),this.openBeam=new u.Beam)),this.lastBeamTag=a);var c=!1;if(n){if(void 0===this.openGraceBeam)return;for(var l=0,h=this.openGraceBeam.Notes.length;l<h;++l){var p=this.openGraceBeam.Notes[l];this.currentVoiceEntry===p.ParentVoiceEntry&&(c=!0)}c||(this.openGraceBeam.addNoteToBeam(e),"end"===a&&1===o&&(this.openGraceBeam=void 0))}else{if(void 0===this.openBeam)return;for(l=0,h=this.openBeam.Notes.length;l<h;++l){p=this.openBeam.Notes[l];this.currentVoiceEntry===p.ParentVoiceEntry&&(c=!0)}c||(this.openBeam.addNoteToBeam(e),"end"===a&&1===o&&(this.openBeam=void 0))}}}catch(t){var b=f.ITextTranslation.translateText("ReaderErrorMessages/BeamError","Error while reading beam.");throw this.musicSheet.SheetErrors.pushMeasureError(b),new d.MusicSheetReadingException("",t)}},t.prototype.handleOpenBeam=function(){if(1===this.openBeam.Notes.length)return this.openBeam.Notes[0].NoteBeam=void 0,void(this.openBeam=void 0);if(this.currentNote===_.CollectionUtil.last(this.openBeam.Notes))this.openBeam=void 0;else{var t=_.CollectionUtil.last(this.openBeam.Notes).ParentStaffEntry,e=this.currentMeasure.getVerticalContainerIndexByTimestamp(t.Timestamp),n=t.VerticalContainerParent.StaffEntries.indexOf(t);if(e<this.currentMeasure.VerticalSourceStaffEntryContainers.length-1){var i=this.currentMeasure.VerticalSourceStaffEntryContainers[e+1].StaffEntries[n];if(void 0!==i)for(var r=0,o=i.VoiceEntries.length;r<o;++r){var s=i.VoiceEntries[r];if(s.ParentVoice===this.voice){var a=s.Notes[0];a.Length.lte(new h.Fraction(1,8))?(this.openBeam.addNoteToBeam(a),this.openBeam=void 0):this.openBeam=void 0}}}else this.openBeam=void 0}},t.prototype.handleGraceNote=function(t,e){var n=!1,i="";if(t.elements("type")){var r=t.elements("type");if(r){i=r[0].value;try{e.Length=this.getNoteDurationFromType(i),e.Length.Numerator=1}catch(t){var s=f.ITextTranslation.translateText("ReaderErrorMessages/NoteDurationError","Invalid note duration.");throw this.musicSheet.SheetErrors.pushMeasureError(s),new d.MusicSheetReadingException(s,t)}}}var a=t.element("grace");void 0!==a&&a.attributes()&&(a.attribute("slash")&&"yes"===a.attribute("slash").value&&(e.GraceNoteSlash=!0));void 0!==t.element("chord")&&(n=!0);var u=void 0;n?void 0!==this.currentVoiceEntry.graceVoiceEntriesBefore&&this.currentVoiceEntry.graceVoiceEntriesBefore.length>0&&(u=_.CollectionUtil.last(this.currentVoiceEntry.graceVoiceEntriesBefore)):(u=new o.VoiceEntry(new h.Fraction(0,1),this.currentVoiceEntry.ParentVoice,this.currentStaffEntry),void 0===this.currentVoiceEntry.graceVoiceEntriesBefore&&(this.currentVoiceEntry.graceVoiceEntriesBefore=[]),this.currentVoiceEntry.graceVoiceEntriesBefore.push(u)),void 0!==u&&(u.Notes.push(e),e.ParentVoiceEntry=u)},t.prototype.addTuplet=function(t,e){if(void 0!==e&&e.length>1){void 0!==(m=t.element("time-modification"))&&(m=m.element("actual-notes"));for(var n=e,i=0,r=n.length;i<r;++i){var o=n[i];if(void 0!==o&&o.attributes())if("start"===(p=o.attribute("type").value)){var s=1;o.attribute("number")&&(s=parseInt(o.attribute("number").value,10));var a=0;if(void 0!==m&&(a=parseInt(m.value,10),isNaN(a))){var u=f.ITextTranslation.translateText("ReaderErrorMessages/TupletNoteDurationError","Invalid tuplet note duration.");throw this.musicSheet.SheetErrors.pushMeasureError(u),new d.MusicSheetReadingException(u,void 0)}var c=new l.Tuplet(a);void 0!==this.tupletDict[s]&&(delete this.tupletDict[s],0===Object.keys(this.tupletDict).length?this.openTupletNumber=0:Object.keys(this.tupletDict).length>1&&this.openTupletNumber--),this.tupletDict[s]=c,(v=[]).push(this.currentNote),c.Notes.push(v),c.Fractions.push(this.getTupletNoteDurationFromType(t)),this.currentNote.NoteTuplet=c,this.openTupletNumber=s}else if("stop"===p){s=1;if(o.attribute("number")&&(s=parseInt(o.attribute("number").value,10)),void 0!==(c=this.tupletDict[s]))(v=[]).push(this.currentNote),c.Notes.push(v),c.Fractions.push(this.getTupletNoteDurationFromType(t)),this.currentNote.NoteTuplet=c,delete this.tupletDict[s],0===Object.keys(this.tupletDict).length?this.openTupletNumber=0:Object.keys(this.tupletDict).length>1&&this.openTupletNumber--}}}else if(void 0!==e[0]){var h=e[0];if(h.hasAttributes){var p=h.attribute("type").value,b=1;h.attribute("number")&&(b=parseInt(h.attribute("number").value,10));var y=isNaN(b);if("start"===p){var m;a=0;if(void 0!==(m=t.element("time-modification"))&&(m=m.element("actual-notes")),void 0!==m&&(a=parseInt(m.value,10),isNaN(a))){u=f.ITextTranslation.translateText("ReaderErrorMessages/TupletNoteDurationError","Invalid tuplet note duration.");throw this.musicSheet.SheetErrors.pushMeasureError(u),new d.MusicSheetReadingException(u)}y&&(this.openTupletNumber++,b=this.openTupletNumber),void 0===(c=this.tupletDict[b])&&(c=this.tupletDict[b]=new l.Tuplet(a)),(v=[]).push(this.currentNote),c.Notes.push(v),c.Fractions.push(this.getTupletNoteDurationFromType(t)),this.currentNote.NoteTuplet=c,this.openTupletNumber=b}else if("stop"===p){var v;if(y&&(b=this.openTupletNumber),void 0!==(c=this.tupletDict[this.openTupletNumber]))(v=[]).push(this.currentNote),c.Notes.push(v),c.Fractions.push(this.getTupletNoteDurationFromType(t)),this.currentNote.NoteTuplet=c,0===Object.keys(this.tupletDict).length?this.openTupletNumber=0:Object.keys(this.tupletDict).length>1&&this.openTupletNumber--,delete this.tupletDict[b]}}}return this.openTupletNumber},t.prototype.handleTimeModificationNode=function(t){if(void 0!==this.tupletDict[this.openTupletNumber])try{var e=this.tupletDict[this.openTupletNumber],n=(s=_.CollectionUtil.last(e.Notes))[0].ParentVoiceEntry,i=void 0;n.Timestamp.Equals(this.currentVoiceEntry.Timestamp)?i=s:(i=[],e.Notes.push(i),e.Fractions.push(this.getTupletNoteDurationFromType(t))),i.push(this.currentNote),this.currentNote.NoteTuplet=e}catch(t){var r=f.ITextTranslation.translateText("ReaderErrorMessages/TupletNumberError","Invalid tuplet number.");throw this.musicSheet.SheetErrors.pushMeasureError(r),t}else if(this.currentVoiceEntry.Notes.length>0){var o=this.currentVoiceEntry.Notes[0];if(void 0!==o.NoteTuplet){var s;e=o.NoteTuplet;(s=_.CollectionUtil.last(e.Notes)).push(this.currentNote),this.currentNote.NoteTuplet=e}}},t.prototype.addTie=function(t,e,n){if(void 0!==t)if(1===t.length){var i=t[0];if(void 0!==i&&i.attributes()){var r=i.attribute("type").value;try{if("start"===r){var o=this.findCurrentNoteInTieDict(this.currentNote);o<0&&delete this.openTieDict[o];var s=this.getNextAvailableNumberForTie(),a=new c.Tie(this.currentNote);this.openTieDict[s]=a}else if("stop"===r){var u=this.findCurrentNoteInTieDict(this.currentNote);void 0!==(a=this.openTieDict[u])&&(a.AddNote(this.currentNote),n.lt(h.Fraction.plus(this.currentStaffEntry.Timestamp,this.currentNote.Length))&&(n=h.Fraction.plus(this.currentStaffEntry.Timestamp,this.currentNote.Length)),delete this.openTieDict[u])}}catch(t){var l=f.ITextTranslation.translateText("ReaderErrorMessages/TieError","Error while reading tie.");this.musicSheet.SheetErrors.pushMeasureError(l)}}}else if(2===t.length){if((u=this.findCurrentNoteInTieDict(this.currentNote))>=0)(a=this.openTieDict[u]).AddNote(this.currentNote),n.lt(h.Fraction.plus(this.currentStaffEntry.Timestamp,this.currentNote.Length))&&(n=h.Fraction.plus(this.currentStaffEntry.Timestamp,this.currentNote.Length))}},t.prototype.getNextAvailableNumberForTie=function(){var t=Object.keys(this.openTieDict);if(0===t.length)return 1;t.sort(function(t,e){return+t-+e});for(var e=0;e<t.length;e++)if(""+(e+1)!==t[e])return e+1;return+t[t.length-1]+1},t.prototype.findCurrentNoteInTieDict=function(t){var e=this.openTieDict;for(var n in e)if(e.hasOwnProperty(n)){var i=e[n];if(i.Pitch.FundamentalNote===t.Pitch.FundamentalNote&&i.Pitch.Octave===t.Pitch.Octave)return+n}return-1},t.prototype.getTupletNoteDurationFromType=function(t){if(void 0!==t.element("type")){var e=t.element("type");if(void 0!==e){var n=e.value;try{return this.getNoteDurationFromType(n)}catch(t){var i=f.ITextTranslation.translateText("ReaderErrorMessages/NoteDurationError","Invalid note duration.");throw this.musicSheet.SheetErrors.pushMeasureError(i),new d.MusicSheetReadingException("",t)}}}},t}();e.VoiceGenerator=x},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(188),r=n(34),o=n(8),s=n(12),a=n(16),u=n(1),c=n(31),l=n(17),h=n(8),f=n(16),p=n(12),d=n(3),b=n(8),y=n(178),m=function(){function t(t,e,n){this.voiceGeneratorsDict={},this.staffMainVoiceGeneratorDict={},this.divisions=0,this.currentXmlMeasureIndex=0,this.activeKeyHasBeenInitialized=!1,this.abstractInstructions=[],this.repetitionInstructionReader=t,this.xmlMeasureList=e,this.musicSheet=n.GetMusicSheet,this.instrument=n,this.activeClefs=new Array(n.Staves.length),this.activeClefsHaveBeenInitialized=new Array(n.Staves.length);for(var i=0;i<n.Staves.length;i++)this.activeClefsHaveBeenInitialized[i]=!1}return Object.defineProperty(t.prototype,"ActiveKey",{get:function(){return this.activeKey},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MaxTieNoteFraction",{get:function(){return this.maxTieNoteFraction},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ActiveRhythm",{get:function(){return this.activeRhythm},set:function(t){this.activeRhythm=t},enumerable:!0,configurable:!0}),t.prototype.readNextXmlMeasure=function(t,e,n){if(this.currentXmlMeasureIndex>=this.xmlMeasureList.length)return!1;this.currentMeasure=t,this.inSourceMeasureInstrumentIndex=this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.instrument),void 0!==this.repetitionInstructionReader&&this.repetitionInstructionReader.prepareReadingMeasure(t,this.currentXmlMeasureIndex);var i=new u.Fraction(0,1),r=new u.Fraction(0,1),o=!1;this.maxTieNoteFraction=new u.Fraction(0,1);var s=!1;try{for(var a=this.xmlMeasureList[this.currentXmlMeasureIndex].elements(),h=0,f=a;h<f.length;h++){var p=f[h];if("note"===p.name){if(p.hasAttributes&&p.attribute("print-object")&&p.attribute("print-spacing"))continue;var b=1;this.instrument.Staves.length>1&&void 0!==p.element("staff")&&(b=parseInt(p.element("staff").value,10),isNaN(b)&&(d.debug("InstrumentReader.readNextXmlMeasure.get staff number"),b=1)),this.currentStaff=this.instrument.Staves[b-1];var m=void 0!==p.element("chord");if(void 0!==p.element("voice")){var v=parseInt(p.element("voice").value,10);this.currentVoiceGenerator=this.getOrCreateVoiceGenerator(v,b-1)}else m&&void 0!==this.currentVoiceGenerator||(this.currentVoiceGenerator=this.getOrCreateVoiceGenerator(1,b-1));var g=0,_=new u.Fraction(0,1),S=!1;if(void 0!==p.element("duration")){if(g=parseInt(p.element("duration").value,10),isNaN(g)){var x=c.ITextTranslation.translateText("ReaderErrorMessages/NoteDurationError","Invalid Note Duration.");this.musicSheet.SheetErrors.pushMeasureError(x),d.debug("InstrumentReader.readNextXmlMeasure",x);continue}_=new u.Fraction(g,4*this.divisions),0===g&&(_=this.getNoteDurationFromTypeNode(p)),void 0!==p.element("time-modification")&&(_=this.getNoteDurationForTuplet(p),S=!0)}var w=void 0!==p.element("rest"),E=void 0!==p.element("grace")||0===g||m&&s,P=i.clone();m&&(P=r.clone()),this.currentStaffEntry=this.currentMeasure.findOrCreateStaffEntry(P,this.inSourceMeasureInstrumentIndex+b-1,this.currentStaff).staffEntry,this.currentVoiceGenerator.hasVoiceEntry()&&(m||E||s)&&(s||!E)||this.currentVoiceGenerator.createVoiceEntry(P,this.currentStaffEntry,!w),E||m||(r=i.clone(),i.Add(_)),m&&void 0!==this.currentStaffEntry&&this.currentStaffEntry.ParentStaff!==this.currentStaff&&(this.currentStaffEntry=this.currentVoiceGenerator.checkForStaffEntryLink(this.inSourceMeasureInstrumentIndex+b-1,this.currentStaff,this.currentStaffEntry,this.currentMeasure));var T=void 0!==this.currentStaffEntry&&void 0!==this.currentStaffEntry.Timestamp&&this.currentStaffEntry.Timestamp.Equals(new u.Fraction(0,1))&&!this.currentStaffEntry.hasNotes();this.saveAbstractInstructionList(this.instrument.Staves.length,T),void 0!==this.openChordSymbolContainer&&(this.currentStaffEntry.ChordContainer=this.openChordSymbolContainer,this.openChordSymbolContainer=void 0),this.activeRhythm,S?this.currentVoiceGenerator.read(p,_,w,E,this.currentStaffEntry,this.currentMeasure,e,this.maxTieNoteFraction,m,n):this.currentVoiceGenerator.read(p,new u.Fraction(g,4*this.divisions),w,E,this.currentStaffEntry,this.currentMeasure,e,this.maxTieNoteFraction,m,n);var M=p.element("notations");void 0!==M&&M.element("dynamics"),s=E}else if("attributes"===p.name){var k=p.element("divisions");if(void 0!==k&&(this.divisions=parseInt(k.value,10),isNaN(this.divisions))){x=c.ITextTranslation.translateText("ReaderErrorMessages/DivisionError","Invalid divisions value at Instrument: ");if(d.debug("InstrumentReader.readNextXmlMeasure",x),this.divisions=this.readDivisionsFromNotes(),!(this.divisions>0))throw o=!0,new l.MusicSheetReadingException(x+this.instrument.Name);this.musicSheet.SheetErrors.push(x+this.instrument.Name)}if(void 0===p.element("divisions")&&0===this.divisions&&0===this.currentXmlMeasureIndex){x=c.ITextTranslation.translateText("ReaderErrorMessages/DivisionError","Invalid divisions value at Instrument: ");if(this.divisions=this.readDivisionsFromNotes(),!(this.divisions>0))throw o=!0,new l.MusicSheetReadingException(x+this.instrument.Name);this.musicSheet.SheetErrors.push(x+this.instrument.Name)}this.addAbstractInstruction(p,n),i.Equals(new u.Fraction(0,1))&&this.isAttributesNodeAtBeginOfMeasure(this.xmlMeasureList[this.currentXmlMeasureIndex],p)&&this.saveAbstractInstructionList(this.instrument.Staves.length,!0),this.isAttributesNodeAtEndOfMeasure(this.xmlMeasureList[this.currentXmlMeasureIndex],p)&&this.saveClefInstructionAtEndOfMeasure()}else if("forward"===p.name){var O=parseInt(p.element("duration").value,10);i.Add(new u.Fraction(O,4*this.divisions))}else if("backup"===p.name){var A=parseInt(p.element("duration").value,10);i.Sub(new u.Fraction(A,4*this.divisions)),i.IsNegative()&&(i=new u.Fraction(0,1)),r.Sub(new u.Fraction(A,4*this.divisions)),r.IsNegative()&&(r=new u.Fraction(0,1))}else if("direction"===p.name){var C=Math.min(1,i.RealValue);void 0!==this.activeRhythm&&void 0!==this.activeRhythm.Rhythm&&(C/=this.activeRhythm.Rhythm.RealValue);var L=p.element("direction-type");void 0!==this.repetitionInstructionReader&&this.repetitionInstructionReader.handleRepetitionInstructionsFromWordsOrSymbols(L,C)}else if("barline"===p.name){if(void 0!==this.repetitionInstructionReader){this.repetitionInstructionReader.handleLineRepetitionInstructions(p,!1)}}else"sound"===p.name||"harmony"===p.name&&(this.openChordSymbolContainer=y.ChordSymbolReader.readChordSymbol(p,this.musicSheet,this.activeKey))}for(var I in this.voiceGeneratorsDict)if(this.voiceGeneratorsDict.hasOwnProperty(I)){var R=this.voiceGeneratorsDict[I];R.checkForOpenBeam(),R.checkForOpenGraceNotes()}if(this.currentXmlMeasureIndex===this.xmlMeasureList.length-1){for(var N=0;N<this.instrument.Staves.length;N++)this.activeClefsHaveBeenInitialized[N]||this.createDefaultClefInstruction(this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.instrument)+N);this.activeKeyHasBeenInitialized||this.createDefaultKeyInstruction()}}catch(t){if(o)throw new l.MusicSheetReadingException(t.Message);x=c.ITextTranslation.translateText("ReaderErrorMessages/MeasureError","Error while reading Measure.");this.musicSheet.SheetErrors.pushMeasureError(x),d.debug("InstrumentReader.readNextXmlMeasure",x,t)}return this.previousMeasure=this.currentMeasure,this.currentXmlMeasureIndex+=1,!0},t.prototype.doCalculationsAfterDurationHasBeenSet=function(){for(var t in this.voiceGeneratorsDict)this.voiceGeneratorsDict.hasOwnProperty(t)&&this.voiceGeneratorsDict[t].checkOpenTies()},t.prototype.getOrCreateVoiceGenerator=function(t,e){var n=this.instrument.Staves[e],r=this.voiceGeneratorsDict[t];if(void 0!==r)-1===n.Voices.indexOf(r.GetVoice)&&n.Voices.push(r.GetVoice);else{var o=this.staffMainVoiceGeneratorDict[e];void 0!==o?(r=new i.VoiceGenerator(this.instrument,t,this.slurReader,o.GetVoice),n.Voices.push(r.GetVoice),this.voiceGeneratorsDict[t]=r):(r=new i.VoiceGenerator(this.instrument,t,this.slurReader),n.Voices.push(r.GetVoice),this.voiceGeneratorsDict[t]=r,this.staffMainVoiceGeneratorDict[e]=r)}return r},t.prototype.createDefaultClefInstruction=function(t){var e;e=this.musicSheet.SourceMeasures.length>0?this.musicSheet.SourceMeasures[0]:this.currentMeasure;var n,i=new o.ClefInstruction(h.ClefEnum.G,0,2);void 0===e.FirstInstructionsStaffEntries[t]?(n=new r.SourceStaffEntry(void 0,void 0),e.FirstInstructionsStaffEntries[t]=n):(n=e.FirstInstructionsStaffEntries[t]).removeFirstInstructionOfTypeClefInstruction(),i.Parent=n,n.Instructions.splice(0,0,i)},t.prototype.createDefaultKeyInstruction=function(){var t;t=this.musicSheet.SourceMeasures.length>0?this.musicSheet.SourceMeasures[0]:this.currentMeasure;for(var e=new s.KeyInstruction(void 0,0,p.KeyEnum.major),n=this.inSourceMeasureInstrumentIndex;n<this.inSourceMeasureInstrumentIndex+this.instrument.Staves.length;n++)if(void 0===t.FirstInstructionsStaffEntries[n]){var i=new r.SourceStaffEntry(void 0,void 0);t.FirstInstructionsStaffEntries[n]=i,e.Parent=i,i.Instructions.push(e)}else{i=t.FirstInstructionsStaffEntries[n];e.Parent=i,i.removeFirstInstructionOfTypeKeyInstruction(),i.Instructions[0]instanceof o.ClefInstruction?i.Instructions.splice(1,0,e):i.Instructions.splice(0,0,e)}},t.prototype.isAttributesNodeAtBeginOfMeasure=function(t,e){var n=t.elements(),i=n.indexOf(e);if(i>0&&"backup"===n[i-1].name)return!0;for(var r=-1,o=0;o<n.length;o++)if("note"===n[o].name){r=o;break}return i<r&&r>0||r<0},t.prototype.isAttributesNodeAtEndOfMeasure=function(t,e){for(var n=t.elements().slice(),i=0,r=0;r<n.length;r++)if(n[r]===e){i=r;break}var o=0;for(r=i;r<n.length;r++)if("note"===n[r].name){o=r;break}return i>o},t.prototype.getNoteDurationFromTypeNode=function(t){if(void 0!==t.element("type")){var e=t.element("type");if(void 0!==e){var n=e.value;return this.currentVoiceGenerator.getNoteDurationFromType(n)}}return new u.Fraction(0,4*this.divisions)},t.prototype.addAbstractInstruction=function(t,e){if(void 0===t.element("divisions")||1!==t.elements().length){var n=t.element("transpose");if(void 0!==n){var i=n.element("chromatic");void 0!==i&&(this.instrument.PlaybackTranspose=parseInt(i.value,10))}var r,l=t.elements("clef");if(l.length>0)for(var y=0,m=l.length;y<m;++y){var v=l[y],g=h.ClefEnum.G,_=2,S=1,x=0,w=v.element("line");if(void 0!==w)try{_=parseInt(w.value,10)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/ClefLineError","Invalid clef line given -> using default clef line."),this.musicSheet.SheetErrors.pushMeasureError(r),_=2,d.debug("InstrumentReader.addAbstractInstruction",r,t)}var E=v.element("sign");if(void 0!==E)try{g=h.ClefEnum[E.value],o.ClefInstruction.isSupportedClef(g)||(g===h.ClefEnum.TAB&&e&&(x=-1),r=c.ITextTranslation.translateText("ReaderErrorMessages/ClefError","Unsupported clef found -> using default clef."),this.musicSheet.SheetErrors.pushMeasureError(r),g=h.ClefEnum.G,_=2)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/ClefError","Invalid clef found -> using default clef."),this.musicSheet.SheetErrors.pushMeasureError(r),g=h.ClefEnum.G,_=2,d.debug("InstrumentReader.addAbstractInstruction",r,t)}var P=v.element("clef-octave-change");if(void 0!==P)try{x=parseInt(P.value,10)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/ClefOctaveError","Invalid clef octave found -> using default clef octave."),this.musicSheet.SheetErrors.pushMeasureError(r),x=0}if(v.hasAttributes&&"number"===v.attributes()[0].name)try{S=parseInt(v.attributes()[0].value,10)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/ClefError","Invalid clef found -> using default clef."),this.musicSheet.SheetErrors.pushMeasureError(r),S=1}var T=new o.ClefInstruction(g,x,_);this.abstractInstructions.push([S,T])}if(void 0!==t.element("key")&&this.instrument.MidiInstrumentId!==b.MidiInstrument.Percussion){var M=0,k=t.element("key").element("fifths");if(void 0!==k)try{M=parseInt(k.value,10)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/KeyError","Invalid key found -> set to default."),this.musicSheet.SheetErrors.pushMeasureError(r),M=0,d.debug("InstrumentReader.addAbstractInstruction",r,t)}var O=p.KeyEnum.none,A=t.element("key");if(void 0!==A&&(A=A.element("mode")),void 0!==A)try{O=p.KeyEnum[A.value]}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/KeyError","Invalid key found -> set to default."),this.musicSheet.SheetErrors.pushMeasureError(r),O=p.KeyEnum.major,d.debug("InstrumentReader.addAbstractInstruction",r,t)}var C=new s.KeyInstruction(void 0,M,O);this.abstractInstructions.push([1,C])}if(void 0!==t.element("time")){var L=f.RhythmSymbolEnum.NONE,I=t.element("time");if(void 0!==I&&I.hasAttributes){var R=I.firstAttribute;"symbol"===R.name&&("common"===R.value?L=f.RhythmSymbolEnum.COMMON:"cut"===R.value&&(L=f.RhythmSymbolEnum.CUT))}var N=0,F=0,B=void 0!==I&&void 0!==I.element("senza-misura"),D=t.elements("time"),V=[],j=[];for(y=0,m=D.length;y<m;++y){var G=D[y];V.push.apply(V,G.elements("beats")),j.push.apply(j,G.elements("beat-type"))}if(B)this.abstractInstructions.push([1,new a.RhythmInstruction(new u.Fraction(4,4,0,!1),f.RhythmSymbolEnum.NONE)]);else{try{if(void 0!==V&&V.length>0&&void 0!==j&&V.length===j.length){for(var W=V.length,U=new Array(W),H=0,z=0;z<W;z++){var Y,X=V[z].value,K=0;if(-1!==X.indexOf("+")){var q=X.split("+");for(y=0,m=q.length;y<m;++y)K+=parseInt(q[y],10)}else K=parseInt(X,10);Y=parseInt(j[z].value,10),H=Math.max(H,Y),U[z]=new u.Fraction(K,Y,0,!1)}for(z=0;z<W;z++)U[z].Denominator===H?N+=U[z].Numerator:N+=H/U[z].Denominator*U[z].Numerator;F=H}else N=parseInt(t.element("time").element("beats").value,10),F=parseInt(t.element("time").element("beat-type").value,10)}catch(t){r=c.ITextTranslation.translateText("ReaderErrorMessages/RhythmError","Invalid rhythm found -> set to default."),this.musicSheet.SheetErrors.pushMeasureError(r),N=4,F=4,d.debug("InstrumentReader.addAbstractInstruction",r,t)}(4===N&&4===F||2===N&&2===F)&&(L=f.RhythmSymbolEnum.NONE),this.abstractInstructions.push([1,new a.RhythmInstruction(new u.Fraction(N,F,0,!1),L)])}}}},t.prototype.saveAbstractInstructionList=function(t,e){for(var n=this.abstractInstructions.length-1;n>=0;n--){var i=this.abstractInstructions[n],u=i[0],c=i[1];if(c instanceof o.ClefInstruction){var l=c;if(0===this.currentXmlMeasureIndex||u<=this.activeClefs.length&&l!==this.activeClefs[u-1])if(e||void 0===this.currentStaffEntry||this.currentStaffEntry.hasNotes()||u-1!==this.instrument.Staves.indexOf(this.currentStaffEntry.ParentStaff)){if(e){var h=void 0;if(void 0!==this.currentMeasure){var f=l,p=this.inSourceMeasureInstrumentIndex+u-1,d=this.currentMeasure.FirstInstructionsStaffEntries[p];if(0===this.currentXmlMeasureIndex)if(void 0===d)h=new r.SourceStaffEntry(void 0,void 0),this.currentMeasure.FirstInstructionsStaffEntries[p]=h,f.Parent=h,h.Instructions.push(f),this.activeClefsHaveBeenInitialized[u-1]=!0;else if(void 0===this.currentMeasure.FirstInstructionsStaffEntries[p]||d.Instructions[0]instanceof o.ClefInstruction){var b=new r.SourceStaffEntry(void 0,void 0);this.currentMeasure.LastInstructionsStaffEntries[p]=b,f.Parent=b,b.Instructions.push(f)}else h=d,f.Parent=h,h.removeFirstInstructionOfTypeClefInstruction(),h.Instructions.splice(0,0,f),this.activeClefsHaveBeenInitialized[u-1]=!0;else if(this.activeClefsHaveBeenInitialized[u-1]){b=new r.SourceStaffEntry(void 0,void 0);this.previousMeasure.LastInstructionsStaffEntries[p]=b,f.Parent=b,b.Instructions.push(f)}else{var y=this.musicSheet.SourceMeasures[0];void 0===y.FirstInstructionsStaffEntries[p]?h=new r.SourceStaffEntry(void 0,void 0):(h=y.FirstInstructionsStaffEntries[p]).removeFirstInstructionOfTypeClefInstruction(),f.Parent=h,h.Instructions.splice(0,0,f),this.activeClefsHaveBeenInitialized[u-1]=!0}this.activeClefs[u-1]=l,this.abstractInstructions.splice(n,1)}}}else(f=l).Parent=this.currentStaffEntry,this.currentStaffEntry.removeFirstInstructionOfTypeClefInstruction(),this.currentStaffEntry.Instructions.push(f),this.activeClefs[u-1]=l,this.abstractInstructions.splice(n,1);else u<=this.activeClefs.length&&l===this.activeClefs[u-1]&&this.abstractInstructions.splice(n,1)}if(c instanceof s.KeyInstruction){var m=c;if(void 0===this.activeKey||this.activeKey.Key!==m.Key){this.activeKey=m,this.abstractInstructions.splice(n,1);var v=void 0;if(this.activeKeyHasBeenInitialized?v=this.currentMeasure:(this.activeKeyHasBeenInitialized=!0,v=this.currentXmlMeasureIndex>0?this.musicSheet.SourceMeasures[0]:this.currentMeasure),void 0!==v)for(var g=this.inSourceMeasureInstrumentIndex;g<this.inSourceMeasureInstrumentIndex+t;g++){var _=m;if(void 0===v.FirstInstructionsStaffEntries[g]){h=new r.SourceStaffEntry(void 0,void 0);v.FirstInstructionsStaffEntries[g]=h,_.Parent=h,h.Instructions.push(_)}else{h=v.FirstInstructionsStaffEntries[g];_.Parent=h,h.removeFirstInstructionOfTypeKeyInstruction(),0===h.Instructions.length?h.Instructions.push(_):h.Instructions[0]instanceof o.ClefInstruction?h.Instructions.splice(1,0,_):h.Instructions.splice(0,0,_)}}}else this.abstractInstructions.splice(n,1)}if(c instanceof a.RhythmInstruction){var S=c;if(void 0===this.activeRhythm||this.activeRhythm!==S){if(this.activeRhythm=S,this.abstractInstructions.splice(n,1),void 0!==this.currentMeasure)for(g=this.inSourceMeasureInstrumentIndex;g<this.inSourceMeasureInstrumentIndex+t;g++){var x=S;h=void 0;void 0===this.currentMeasure.FirstInstructionsStaffEntries[g]?(h=new r.SourceStaffEntry(void 0,void 0),this.currentMeasure.FirstInstructionsStaffEntries[g]=h):(h=this.currentMeasure.FirstInstructionsStaffEntries[g]).removeFirstInstructionOfTypeRhythmInstruction(),x.Parent=h,h.Instructions.push(x)}}else this.abstractInstructions.splice(n,1)}}},t.prototype.saveClefInstructionAtEndOfMeasure=function(){for(var t=this.abstractInstructions.length-1;t>=0;t--){var e=this.abstractInstructions[t][0],n=this.abstractInstructions[t][1];if(n instanceof o.ClefInstruction){var i=n;if(void 0===this.activeClefs[e-1]||i.ClefType!==this.activeClefs[e-1].ClefType||i.ClefType===this.activeClefs[e-1].ClefType&&i.Line!==this.activeClefs[e-1].Line){var s=new r.SourceStaffEntry(void 0,void 0);this.currentMeasure.LastInstructionsStaffEntries[this.inSourceMeasureInstrumentIndex+e-1]=s;var a=i;a.Parent=s,s.Instructions.push(a),this.activeClefs[e-1]=i,this.abstractInstructions.splice(t,1)}}}},t.prototype.getNoteDurationForTuplet=function(t){var e=new u.Fraction(0,1),n=this.getNoteDurationFromTypeNode(t);if(void 0!==t.element("time-modification")){var i=t.element("time-modification");if(void 0!==i&&void 0!==i.element("actual-notes")&&void 0!==i.element("normal-notes")){var r=i.element("actual-notes"),o=i.element("normal-notes");if(void 0!==r&&void 0!==o){var s=parseInt(r.value,10),a=parseInt(o.value,10);e=new u.Fraction(a*n.Numerator,s*n.Denominator)}}}return e},t.prototype.readDivisionsFromNotes=function(){for(var t=0,e=this.currentXmlMeasureIndex,n=!1;!n;){for(var i=this.xmlMeasureList[e].elements(),r=0,o=i.length;r<o;++r){var s=i[r];if("note"===s.name&&void 0===s.element("time-modification")&&void 0!==s.element("duration")&&void 0!==s.element("type")){var a=s.element("duration"),u=s.element("type");if(void 0!==a&&void 0!==u){var h=u.value,f=0;try{f=parseInt(a.value,10)}catch(t){d.debug("InstrumentReader.readDivisionsFromNotes",t);continue}switch(h){case"1024th":t=f/4*1024;break;case"512th":t=f/4*512;break;case"256th":t=f/4*256;break;case"128th":t=f/4*128;break;case"64th":t=f/4*64;break;case"32nd":t=f/4*32;break;case"16th":t=f/4*16;break;case"eighth":t=f/4*8;break;case"quarter":t=f/4*4;break;case"half":t=f/4*2;break;case"whole":t=f/4;break;case"breve":t=f/4/2;break;case"long":t=f/4/4;break;case"maxima":t=f/4/8}}}if(t>0){n=!0;break}}if(0===t&&++e===this.xmlMeasureList.length){var p=c.ITextTranslation.translateText("ReaderErrorMEssages/DivisionsError","Invalid divisions value at Instrument: ");throw new l.MusicSheetReadingException(p+this.instrument.Name)}}return t},t}();e.InstrumentReader=m},function(t,e,n){"use strict";t.exports=0},function(t,e,n){"use strict";var i=n(42);t.exports=function(t){if(!t||"string"!=typeof t||t.length<6)return!1;for(var e=i.characters(),n=t.length,r=0;r<n;r++)if(-1===e.indexOf(t[r]))return!1;return!0}},function(t,e,n){"use strict";var i,r,o=n(90),s=n(42),a=1459707606518,u=6;t.exports=function(t){var e="",n=Math.floor(.001*(Date.now()-a));return n===r?i++:(i=0,r=n),e+=o(s.lookup,u),e+=o(s.lookup,t),i>0&&(e+=o(s.lookup,i)),e+=o(s.lookup,n)}},function(t,e,n){"use strict";var i=n(42);t.exports=function(t){var e=i.shuffled();return{version:15&e.indexOf(t.substr(0,1)),worker:15&e.indexOf(t.substr(1,1))}}},function(t,e,n){"use strict";var i="object"==typeof window&&(window.crypto||window.msCrypto);t.exports=function(){if(!i||!i.getRandomValues)return 48&Math.floor(256*Math.random());var t=new Uint8Array(1);return i.getRandomValues(t),48&t[0]}},function(t,e,n){"use strict";var i=1;t.exports={nextValue:function(){return(i=(9301*i+49297)%233280)/233280},seed:function(t){i=t}}},function(t,e,n){"use strict";var i=n(42),r=(n(90),n(193)),o=n(192),s=n(191),a=n(190)||0;function u(){return o(a)}t.exports=u,t.exports.generate=u,t.exports.seed=function(e){return i.seed(e),t.exports},t.exports.worker=function(e){return a=e,t.exports},t.exports.characters=function(t){return void 0!==t&&i.characters(t),i.shuffled()},t.exports.decode=r,t.exports.isValid=s},function(t,e,n){"use strict";t.exports=n(196)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){this.measureErrors={},this.errors=[],this.tempErrors=[]}return t.prototype.finalizeMeasure=function(t){var e=this.measureErrors[t];void 0===e&&(e=[]),this.measureErrors[t]=e.concat(this.tempErrors),this.tempErrors=[]},t.prototype.pushMeasureError=function(t){this.tempErrors.push(t)},t.prototype.push=function(t){this.errors.push(t)},t}();e.MusicSheetErrors=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(93),s=n(1),a=function(t){function e(e,n,i){var r=t.call(this,e)||this;return r.musicSheet=e,r.startIndex=n,r.endIndex=i,r}return r(e,t),Object.defineProperty(e.prototype,"MeasuresCount",{get:function(){return this.endIndex-this.startIndex+1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StartIndex",{get:function(){return this.startIndex},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndIndex",{get:function(){return this.endIndex},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ParentRepetition",{get:function(){return this.parentRepetition},set:function(t){this.parentRepetition=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"AbsoluteTimestamp",{get:function(){return s.Fraction.createFromFraction(this.musicSheet.SourceMeasures[this.startIndex].AbsoluteTimestamp)},enumerable:!0,configurable:!0}),e.prototype.setStartIndex=function(t){this.startIndex=t},e.prototype.setEndIndex=function(t){this.endIndex=t},e}(o.PartListEntry);e.SourceMusicPart=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(199),s=n(1),a=n(93),u=n(3),c=function(t){function e(e,n){var i=t.call(this,e)||this;return i.backwardJumpInstructions=[],i.endingParts=[],i.endingIndexDict={},i.userNumberOfRepetitions=0,i.visibles=[],i.fromWords=!1,i.repetitonIterationOrder=[],i.numberOfEndings=1,i.musicSheet2=e,i.virtualOverallRepetition=n,i}return r(e,t),Object.defineProperty(e.prototype,"BackwardJumpInstructions",{get:function(){return this.backwardJumpInstructions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndingIndexDict",{get:function(){return this.endingIndexDict},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndingParts",{get:function(){return this.endingParts},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Visibles",{get:function(){return this.visibles},set:function(t){this.visibles=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"DefaultNumberOfRepetitions",{get:function(){var t=2;return this.virtualOverallRepetition&&(t=1),Math.max(t,Object.keys(this.endingIndexDict).length,this.checkRepetitionForMultipleLyricVerses())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"UserNumberOfRepetitions",{get:function(){return this.userNumberOfRepetitions},set:function(t){this.userNumberOfRepetitions=t,this.repetitonIterationOrder=[];for(var e=this.userNumberOfRepetitions-this.NumberOfEndings,n=1;n<=this.userNumberOfRepetitions;n++)n<=e?this.repetitonIterationOrder.push(1):this.repetitonIterationOrder.push(n-e)},enumerable:!0,configurable:!0}),e.prototype.getForwardJumpTargetForIteration=function(t){var e=this.repetitonIterationOrder[t-1];return void 0!==this.endingIndexDict[e]?this.endingIndexDict[e].part.StartIndex:-1},e.prototype.getBackwardJumpTarget=function(){return this.startMarker.measureIndex},e.prototype.SetEndingStartIndex=function(t,e){var n=new l(new o.SourceMusicPart(this.musicSheet2,e,e));this.endingParts.push(n);for(var i=0,r=t;i<r.length;i++){var s=r[i];try{this.endingIndexDict[s]=n,n.endingIndices.push(s),this.numberOfEndings<s&&(this.numberOfEndings=s)}catch(t){u.error("Repetition: Exception.",t)}}},e.prototype.setEndingEndIndex=function(t,e){void 0!==this.endingIndexDict[t]&&this.endingIndexDict[t].part.setEndIndex(e)},Object.defineProperty(e.prototype,"NumberOfEndings",{get:function(){return this.numberOfEndings},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"FromWords",{get:function(){return this.fromWords},set:function(t){this.fromWords=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"AbsoluteTimestamp",{get:function(){return s.Fraction.createFromFraction(this.musicSheet2.SourceMeasures[this.startMarker.measureIndex].AbsoluteTimestamp)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StartIndex",{get:function(){return this.startMarker.measureIndex},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"EndIndex",{get:function(){if(0===this.BackwardJumpInstructions.length)return this.StartIndex;var t=this.backwardJumpInstructions[this.backwardJumpInstructions.length-1].measureIndex;return void 0!==this.endingIndexDict[this.NumberOfEndings]&&(t=Math.max(this.endingIndexDict[this.NumberOfEndings].part.EndIndex,t)),t},enumerable:!0,configurable:!0}),e.prototype.checkRepetitionForMultipleLyricVerses=function(){for(var t=0,e=this.StartIndex,n=this.EndIndex,i=e;i<=n;i++)for(var r=this.musicSheet2.SourceMeasures[i],o=0;o<r.CompleteNumberOfStaves;o++)for(var s=0,a=r.VerticalSourceStaffEntryContainers[o].StaffEntries;s<a.length;s++){var u=a[s];if(void 0!==u){for(var c=0,l=0,h=u.VoiceEntries;l<h.length;l++){var f=h[l];c+=Object.keys(f.LyricsEntries).length}t=Math.max(t,c)}}return t},Object.defineProperty(e.prototype,"FirstSourceMeasureNumber",{get:function(){return this.getFirstSourceMeasure().MeasureNumber},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LastSourceMeasureNumber",{get:function(){return this.getLastSourceMeasure().MeasureNumber},enumerable:!0,configurable:!0}),e}(a.PartListEntry);e.Repetition=c;var l=function(){function t(t){this.endingIndices=[],this.part=t}return t.prototype.ToString=function(){return this.endingIndices.join(", ")},t}();e.RepetitionEndingPart=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.p=0]="p",t[t.f=1]="f",t[t.s=2]="s",t[t.z=3]="z",t[t.m=4]="m",t[t.r=5]="r"}(e.DynamicExpressionSymbolEnum||(e.DynamicExpressionSymbolEnum={}))},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o,s=n(55),a=n(201),u=n(17),c=n(3),l=function(t){function e(e,n,i,r){var s=t.call(this)||this;return s.dynamicEnum=o[e.toLowerCase()],s.soundDynamic=n,s.placement=i,s.staffNumber=r,s}return r(e,t),Object.defineProperty(e.prototype,"ParentMultiExpression",{get:function(){return this.multiExpression},set:function(t){this.multiExpression=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"DynEnum",{get:function(){return this.dynamicEnum},set:function(t){this.dynamicEnum=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"SoundDynamic",{get:function(){return this.soundDynamic},set:function(t){this.soundDynamic=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Placement",{get:function(){return this.placement},set:function(t){this.placement=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StaffNumber",{get:function(){return this.staffNumber},set:function(t){this.staffNumber=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Length",{get:function(){return Math.abs(this.length)<1e-4&&(this.length=this.calculateLength()),this.length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"MidiVolume",{get:function(){return 127*e.dynamicToRelativeVolumeDict[this.dynamicEnum]},enumerable:!0,configurable:!0}),e.isInputStringInstantaniousDynamic=function(t){return void 0!==t&&e.isStringInStringList(e.listInstantaniousDynamics,t)},e.prototype.getDynamicExpressionSymbol=function(t){switch(t){case"p":return a.DynamicExpressionSymbolEnum.p;case"f":return a.DynamicExpressionSymbolEnum.f;case"s":return a.DynamicExpressionSymbolEnum.s;case"z":return a.DynamicExpressionSymbolEnum.z;case"m":return a.DynamicExpressionSymbolEnum.m;case"r":return a.DynamicExpressionSymbolEnum.r;default:throw new u.InvalidEnumArgumentException("unknown DynamicExpressionSymbolEnum: "+t)}},e.prototype.calculateLength=function(){return c.debug("[Andrea] instantaniousDynamicExpression: not implemented: calculateLength!"),0},e.dynamicToRelativeVolumeDict={f:92/127,ff:108/127,fff:124/127,ffff:125/127,fffff:126/127,ffffff:1,fp:.5,fz:.5,mf:76/127,mp:60/127,p:44/127,pp:28/127,ppp:12/127,pppp:10/127,ppppp:8/127,pppppp:6/127,rf:.5,rfz:.5,sf:.5,sffz:.5,sfp:.5,sfpp:.5,sfz:.5},e.listInstantaniousDynamics=["pppppp","ppppp","pppp","ppp","pp","p","ffffff","fffff","ffff","fff","ff","f","mf","mp","sf","sp","spp","fp","rf","rfz","sfz","sffz","fz"],e}(s.AbstractExpression);e.InstantaniousDynamicExpression=l,function(t){t[t.pppppp=0]="pppppp",t[t.ppppp=1]="ppppp",t[t.pppp=2]="pppp",t[t.ppp=3]="ppp",t[t.pp=4]="pp",t[t.p=5]="p",t[t.mp=6]="mp",t[t.mf=7]="mf",t[t.f=8]="f",t[t.ff=9]="ff",t[t.fff=10]="fff",t[t.ffff=11]="ffff",t[t.fffff=12]="fffff",t[t.ffffff=13]="ffffff",t[t.sf=14]="sf",t[t.sfp=15]="sfp",t[t.sfpp=16]="sfpp",t[t.fp=17]="fp",t[t.rf=18]="rf",t[t.rfz=19]="rfz",t[t.sfz=20]="sfz",t[t.sffz=21]="sffz",t[t.fz=22]="fz",t[t.other=23]="other"}(o=e.DynamicEnum||(e.DynamicEnum={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(94),r=n(202),o=function(){function t(t,e){t instanceof i.ContinuousDynamicExpression?this.continuousDynamicExpression=t:t instanceof r.InstantaniousDynamicExpression&&(this.instantaneousDynamicExpression=t),this.staffNumber=e}return t.prototype.parMultiExpression=function(){return void 0!==this.continuousDynamicExpression?this.continuousDynamicExpression.StartMultiExpression:void 0!==this.instantaneousDynamicExpression?this.instantaneousDynamicExpression.ParentMultiExpression:void 0},t.prototype.CompareTo=function(t){return this.parMultiExpression().AbsoluteTimestamp.CompareTo(t.parMultiExpression().AbsoluteTimestamp)},t}();e.DynamicsContainer=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=n(203),o=n(16),s=n(94),a=n(3),u=function(){function t(t,e,n){this.currentMeasureIndex=0,this.currentPartIndex=0,this.currentVoiceEntryIndex=-1,this.currentDynamicEntryIndex=0,this.currentTempoEntryIndex=0,this.currentDynamicChangingExpressions=[],this.currentRepetition=void 0,this.endReached=!1,this.frontReached=!1,this.currentTimeStamp=new i.Fraction(0,1),this.currentEnrolledMeasureTimestamp=new i.Fraction(0,1),this.currentVerticalContainerInMeasureTimestamp=new i.Fraction(0,1),this.jumpResponsibleRepetition=void 0,this.activeDynamicExpressions=[];try{this.frontReached=!0,this.manager=t,this.currentVoiceEntries=void 0,this.frontReached=!1;for(var o=0,u=t.MusicSheet.Repetitions;o<u.length;o++){var c=u[o];this.setRepetitionIterationCount(c,1)}if(this.activeDynamicExpressions=new Array(t.MusicSheet.getCompleteNumberOfStaves()),this.currentMeasure=this.manager.MusicSheet.SourceMeasures[0],void 0===e)return;do{this.moveToNext()}while((void 0===this.currentVoiceEntries||this.currentTimeStamp.lt(e))&&!this.endReached);for(var l=0;l<this.activeDynamicExpressions.length;l++)if(void 0!==this.activeDynamicExpressions[l])if(this.activeDynamicExpressions[l]instanceof s.ContinuousDynamicExpression){var h=this.activeDynamicExpressions[l];this.currentDynamicChangingExpressions.push(new r.DynamicsContainer(h,l))}else{var f=this.activeDynamicExpressions[l];this.currentDynamicChangingExpressions.push(new r.DynamicsContainer(f,l))}this.currentTempoChangingExpression=this.activeTempoExpression}catch(t){a.info("MusicPartManagerIterator: "+t)}}return Object.defineProperty(t.prototype,"EndReached",{get:function(){return this.endReached},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FrontReached",{get:function(){return this.frontReached},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentMeasure",{get:function(){return this.currentMeasure},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentRepetition",{get:function(){return this.currentRepetition},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentRepetitionIteration",{get:function(){return void 0!==this.CurrentRepetition?this.getRepetitionIterationCount(this.CurrentRepetition):0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentJumpResponsibleRepetitionIterationBeforeJump",{get:function(){return void 0!==this.jumpResponsibleRepetition?this.getRepetitionIterationCount(this.jumpResponsibleRepetition)-1:0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentVoiceEntries",{get:function(){return this.currentVoiceEntries},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentMeasureIndex",{get:function(){return this.currentMeasureIndex},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentEnrolledTimestamp",{get:function(){return i.Fraction.plus(this.currentEnrolledMeasureTimestamp,this.currentVerticalContainerInMeasureTimestamp)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentSourceTimestamp",{get:function(){return this.currentTimeStamp},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"JumpOccurred",{get:function(){return this.backJumpOccurred||this.forwardJumpOccurred},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ActiveTempoExpression",{get:function(){return this.activeTempoExpression},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ActiveDynamicExpressions",{get:function(){return this.activeDynamicExpressions},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentTempoChangingExpression",{get:function(){return this.currentTempoChangingExpression},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"JumpResponsibleRepetition",{get:function(){return this.jumpResponsibleRepetition},enumerable:!0,configurable:!0}),t.prototype.clone=function(){var e=new t(this.manager);return e.currentVoiceEntryIndex=this.currentVoiceEntryIndex,e.currentMappingPart=this.currentMappingPart,e.currentPartIndex=this.currentPartIndex,e.currentVoiceEntries=this.currentVoiceEntries,e.endReached=this.endReached,e.frontReached=this.frontReached,e},t.prototype.CurrentVisibleVoiceEntries=function(t){var e=[];if(void 0===this.currentVoiceEntries)return e;if(void 0!==t)for(var n=0,i=this.currentVoiceEntries;n<i.length;n++){if((s=i[n]).ParentVoice.Parent.IdString===t.IdString)return this.getVisibleEntries(s,e),e}else for(var r=0,o=this.currentVoiceEntries;r<o.length;r++){var s=o[r];this.getVisibleEntries(s,e)}return e},t.prototype.CurrentAudibleVoiceEntries=function(t){var e=[];if(void 0===this.currentVoiceEntries)return e;if(void 0!==t)for(var n=0,i=this.currentVoiceEntries;n<i.length;n++){if((s=i[n]).ParentVoice.Parent.IdString===t.IdString)return this.getAudibleEntries(s,e),e}else for(var r=0,o=this.currentVoiceEntries;r<o.length;r++){var s=o[r];this.getAudibleEntries(s,e)}return e},t.prototype.getCurrentDynamicChangingExpressions=function(){return this.currentDynamicChangingExpressions},t.prototype.CurrentScoreFollowingVoiceEntries=function(t){var e=[];if(void 0===this.currentVoiceEntries)return e;if(void 0!==t)for(var n=0,i=this.currentVoiceEntries;n<i.length;n++){if((s=i[n]).ParentVoice.Parent.IdString===t.IdString)return this.getScoreFollowingEntries(s,e),e}else for(var r=0,o=this.currentVoiceEntries;r<o.length;r++){var s=o[r];this.getScoreFollowingEntries(s,e)}return e},t.prototype.moveToNext=function(){this.forwardJumpOccurred=this.backJumpOccurred=!1,this.endReached||(void 0!==this.currentVoiceEntries&&(this.currentVoiceEntries=[]),this.recursiveMove(),void 0===this.currentMeasure&&(this.currentTimeStamp=new i.Fraction(99999,1)))},t.prototype.moveToNextVisibleVoiceEntry=function(t){for(;!this.endReached;)if(this.moveToNext(),this.checkEntries(t))return},t.prototype.resetRepetitionIterationCount=function(t){return this.setRepetitionIterationCount(t,1),1},t.prototype.incrementRepetitionIterationCount=function(t){return-1===this.repetitionIterationCountDictKeys.indexOf(t)?this.setRepetitionIterationCount(t,1):this.setRepetitionIterationCount(t,this.getRepetitionIterationCount(t)+1)},t.prototype.setRepetitionIterationCount=function(t,e){var n=this.repetitionIterationCountDictKeys.indexOf(t);return-1===n?(this.repetitionIterationCountDictKeys.push(t),this.repetitionIterationCountDictValues.push(e)):this.repetitionIterationCountDictValues[n]=e,e},t.prototype.getRepetitionIterationCount=function(t){var e=this.repetitionIterationCountDictKeys.indexOf(t);if(-1!==e)return this.repetitionIterationCountDictValues[e]},t.prototype.handleRepetitionsAtMeasureBegin=function(){for(var t=0,e=this.currentMeasure.FirstRepetitionInstructions.length;t<e;++t){var n=this.currentMeasure.FirstRepetitionInstructions[t];if(void 0!==n.parentRepetition){var i=n.parentRepetition;this.currentRepetition=i,i.StartIndex===this.currentMeasureIndex&&void 0!==this.JumpResponsibleRepetition&&i!==this.JumpResponsibleRepetition&&i.StartIndex>=this.JumpResponsibleRepetition.StartIndex&&i.EndIndex<=this.JumpResponsibleRepetition.EndIndex&&this.resetRepetitionIterationCount(i)}}},t.prototype.handleRepetitionsAtMeasureEnd=function(){for(var t=0,e=this.currentMeasure.LastRepetitionInstructions.length;t<e;++t){var n=this.currentMeasure.LastRepetitionInstructions[t],i=n.parentRepetition;if(void 0!==i){if(i.BackwardJumpInstructions.indexOf(n)>-1&&this.getRepetitionIterationCount(i)<i.UserNumberOfRepetitions)return this.doBackJump(i),void(this.backJumpOccurred=!0);if(n===i.forwardJumpInstruction){void 0!==this.JumpResponsibleRepetition&&i!==this.JumpResponsibleRepetition&&i.StartIndex>=this.JumpResponsibleRepetition.StartIndex&&i.EndIndex<=this.JumpResponsibleRepetition.EndIndex&&this.resetRepetitionIterationCount(i);var r=i.getForwardJumpTargetForIteration(this.getRepetitionIterationCount(i));if(r>=0)return this.currentMeasureIndex=r,this.currentMeasure=this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex],this.currentVoiceEntryIndex=-1,this.jumpResponsibleRepetition=i,void(this.forwardJumpOccurred=!0);-2===r&&(this.endReached=!0)}}}this.currentMeasureIndex++,void 0!==this.JumpResponsibleRepetition&&this.currentMeasureIndex>this.JumpResponsibleRepetition.EndIndex&&(this.jumpResponsibleRepetition=void 0)},t.prototype.doBackJump=function(t){this.currentMeasureIndex=t.getBackwardJumpTarget(),this.currentMeasure=this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex],this.currentVoiceEntryIndex=-1,this.incrementRepetitionIterationCount(t),this.jumpResponsibleRepetition=t},t.prototype.activateCurrentRhythmInstructions=function(){if(void 0!==this.currentMeasure&&this.currentMeasure.FirstInstructionsStaffEntries.length>0&&void 0!==this.currentMeasure.FirstInstructionsStaffEntries[0])for(var t=this.currentMeasure.FirstInstructionsStaffEntries[0].Instructions,e=0,n=t.length;e<n;++e){var i=t[e];i instanceof o.RhythmInstruction&&(this.manager.MusicSheet.SheetPlaybackSetting.rhythm=i.Rhythm)}},t.prototype.activateCurrentDynamicOrTempoInstructions=function(){for(var t=this.manager.MusicSheet.TimestampSortedDynamicExpressionsList;this.currentDynamicEntryIndex>0&&(this.currentDynamicEntryIndex>=t.length||this.CurrentSourceTimestamp.lte(t[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp));)this.currentDynamicEntryIndex--;for(;this.currentDynamicEntryIndex<t.length&&t[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp.lt(this.CurrentSourceTimestamp);)this.currentDynamicEntryIndex++;for(;this.currentDynamicEntryIndex<t.length&&t[this.currentDynamicEntryIndex].parMultiExpression().AbsoluteTimestamp.Equals(this.CurrentSourceTimestamp);){var e=t[this.currentDynamicEntryIndex],n=e.staffNumber;this.CurrentSourceTimestamp.Equals(e.parMultiExpression().AbsoluteTimestamp)&&(void 0!==e.continuousDynamicExpression?this.activeDynamicExpressions[n]=e.continuousDynamicExpression:void 0!==e.instantaneousDynamicExpression&&(this.activeDynamicExpressions[n]=e.instantaneousDynamicExpression)),this.currentDynamicEntryIndex++}this.currentDynamicChangingExpressions=[];for(n=0;n<this.activeDynamicExpressions.length;n++)if(void 0!==this.activeDynamicExpressions[n]){var i=void 0,o=void 0;if(this.activeDynamicExpressions[n]instanceof s.ContinuousDynamicExpression){var a=this.activeDynamicExpressions[n];i=a.StartMultiExpression.AbsoluteTimestamp,o=a.EndMultiExpression.AbsoluteTimestamp,i.lte(this.CurrentSourceTimestamp)&&this.CurrentSourceTimestamp.lte(o)&&this.currentDynamicChangingExpressions.push(new r.DynamicsContainer(a,n))}else{var u=this.activeDynamicExpressions[n];this.CurrentSourceTimestamp.Equals(u.ParentMultiExpression.AbsoluteTimestamp)&&this.currentDynamicChangingExpressions.push(new r.DynamicsContainer(u,n))}}for(var c=this.manager.MusicSheet.TimestampSortedTempoExpressionsList;this.currentTempoEntryIndex>0&&(this.currentTempoEntryIndex>=c.length||this.CurrentSourceTimestamp.lte(c[this.currentTempoEntryIndex].AbsoluteTimestamp));)this.currentTempoEntryIndex--;for(;this.currentTempoEntryIndex<c.length&&c[this.currentTempoEntryIndex].AbsoluteTimestamp.lt(this.CurrentSourceTimestamp);)this.currentTempoEntryIndex++;for(;this.currentTempoEntryIndex<c.length&&c[this.currentTempoEntryIndex].AbsoluteTimestamp.Equals(this.CurrentSourceTimestamp);)this.activeTempoExpression=c[this.currentTempoEntryIndex],this.currentTempoEntryIndex++;if(this.currentTempoChangingExpression=void 0,void 0!==this.activeTempoExpression){o=this.activeTempoExpression.AbsoluteTimestamp;void 0!==this.activeTempoExpression.ContinuousTempo&&(o=this.activeTempoExpression.ContinuousTempo.AbsoluteEndTimestamp),(this.activeTempoExpression.AbsoluteTimestamp.lte(this.CurrentSourceTimestamp)||this.CurrentSourceTimestamp.lte(o))&&(this.currentTempoChangingExpression=this.activeTempoExpression)}},t.prototype.recursiveMove=function(){if(this.currentVoiceEntryIndex++,0===this.currentVoiceEntryIndex&&(this.handleRepetitionsAtMeasureBegin(),this.activateCurrentRhythmInstructions()),this.currentVoiceEntryIndex>=0&&this.currentVoiceEntryIndex<this.currentMeasure.VerticalSourceStaffEntryContainers.length){var t=this.currentMeasure.VerticalSourceStaffEntryContainers[this.currentVoiceEntryIndex];return this.currentVoiceEntries=this.getVoiceEntries(t),this.currentVerticalContainerInMeasureTimestamp=t.Timestamp,this.currentTimeStamp=i.Fraction.plus(this.currentMeasure.AbsoluteTimestamp,this.currentVerticalContainerInMeasureTimestamp),this.currentTimeStamp>=this.manager.MusicSheet.SelectionEnd&&(this.endReached=!0),void this.activateCurrentDynamicOrTempoInstructions()}if(this.currentEnrolledMeasureTimestamp.Add(this.currentMeasure.Duration),this.handleRepetitionsAtMeasureEnd(),this.currentMeasureIndex>=0&&this.currentMeasureIndex<this.manager.MusicSheet.SourceMeasures.length)return this.currentMeasure=this.manager.MusicSheet.SourceMeasures[this.currentMeasureIndex],this.currentTimeStamp=i.Fraction.plus(this.currentMeasure.AbsoluteTimestamp,this.currentVerticalContainerInMeasureTimestamp),this.currentVoiceEntryIndex=-1,void this.recursiveMove();this.currentVerticalContainerInMeasureTimestamp=new i.Fraction,this.currentMeasure=void 0,this.currentVoiceEntries=void 0,this.endReached=!0},t.prototype.checkEntries=function(t){var e=this.CurrentVisibleVoiceEntries();if(e.length>0){if(!t)return!0;for(var n=0,i=e.length;n<i;++n){if(void 0!==e[n].Notes[0].Pitch)return!0}}return!1},t.prototype.getVisibleEntries=function(t,e){t.ParentVoice.Visible&&e.push(t)},t.prototype.getAudibleEntries=function(t,e){t.ParentVoice.Audible&&e.push(t)},t.prototype.getScoreFollowingEntries=function(t,e){t.ParentVoice.Following&&t.ParentVoice.Parent.Following&&e.push(t)},t.prototype.getVoiceEntries=function(t){for(var e=[],n=0,i=t.StaffEntries;n<i.length;n++){var r=i[n];if(void 0!==r)for(var o=0,s=r.VoiceEntries;o<s.length;o++){var a=s[o];e.push(a)}}return e},t}();e.MusicPartManagerIterator=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=n(204),o=function(){function t(t){this.musicSheet=t}return t.prototype.reInit=function(){this.init()},t.prototype.init=function(){this.parts=this.musicSheet.Repetitions.slice(),this.sheetStart=this.musicSheet.SelectionStart=new i.Fraction(0,1),this.sheetEnd=this.musicSheet.SelectionEnd=this.musicSheet.SheetEndTimestamp,this.calcMapping()},t.prototype.getCurrentRepetitionTimestampTransform=function(t){for(var e=void 0,n=this.timestamps.length-1;n>=0;n--)if(t>=(e=this.timestamps[n]).$from)return e;return this.timestamps[0]},t.prototype.absoluteEnrolledToSheetTimestamp=function(t){if(0===this.timestamps.length)return t;var e=this.getCurrentRepetitionTimestampTransform(t);return i.Fraction.plus(t,i.Fraction.minus(e.to,e.$from))},Object.defineProperty(t.prototype,"Parts",{get:function(){return this.parts},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"MusicSheet",{get:function(){return this.musicSheet},enumerable:!0,configurable:!0}),t.prototype.getIterator=function(t){return void 0===t?new r.MusicPartManagerIterator(this,this.musicSheet.SelectionStart,this.musicSheet.SelectionEnd):new r.MusicPartManagerIterator(this,t,void 0)},t.prototype.setSelectionStart=function(t){this.musicSheet.SelectionStart=t,this.musicSheet.SelectionEnd=void 0},t.prototype.setSelectionRange=function(t,e){this.musicSheet.SelectionStart=void 0===t?this.sheetStart:t,this.musicSheet.SelectionEnd=void 0===e?this.sheetEnd:e},t.prototype.calcMapping=function(){var t=[],e=this.getIterator(),n=e.CurrentRepetition,i=new s(e.CurrentEnrolledTimestamp.clone(),e.CurrentSourceTimestamp.clone(),void 0,0);for(t.push(i);!e.EndReached;){if(e.JumpOccurred||n!==e.CurrentRepetition){if(n=e.CurrentRepetition,e.backJumpOccurred){var r=e.JumpResponsibleRepetition;i.nextBackJump=e.CurrentEnrolledTimestamp,i.curRepetition=r,i.curRepetitionIteration=e.CurrentJumpResponsibleRepetitionIterationBeforeJump;for(var o=this.timestamps.length-2;o>=0&&(!t[o].to.lt(r.AbsoluteTimestamp)&&void 0===t[o].curRepetition);o--)t[o].nextBackJump=i.nextBackJump,t[o].curRepetition=r,t[o].curRepetitionIteration=i.curRepetitionIteration}i=new s(e.CurrentEnrolledTimestamp.clone(),e.CurrentSourceTimestamp.clone(),void 0,0),t.push(i)}e.moveToNext()}this.timestamps=t},t}();e.MusicPartManager=o;var s=function(){return function(t,e,n,i){this.$from=t,this.to=e,this.curRepetition=n,this.curRepetitionIteration=i,this.nextBackJump=void 0,this.nextForwardJump=void 0}}();e.TimestampTransform=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(1),r=n(205),o=n(200),s=n(56),a=n(198),u=n(57),c=n(37),l=n(3),h=function(){return function(){}}();e.PlaybackSettings=h;var f=function(){function t(){this.idString="kjgdfuilhsdaöoihfsvjh",this.sourceMeasures=[],this.repetitions=[],this.dynListStaves=[],this.timestampSortedDynamicExpressionsList=[],this.timestampSortedTempoExpressionsList=[],this.instrumentalGroups=[],this.instruments=[],this.musicPartManager=void 0,this.musicSheetErrors=new a.MusicSheetErrors,this.staves=[],this.transpose=0,this.defaultStartTempoInBpm=0,this.drawErroneousMeasures=!1,this.hasBeenOpenedForTheFirstTime=!1,this.currentEnrolledPosition=new i.Fraction(0,1),this.rules=u.EngravingRules.Rules,this.playbackSettings=new h,this.playbackSettings.rhythm=new i.Fraction(4,4,0,!1),this.userStartTempoInBPM=100,this.pageWidth=120,this.MusicPartManager=new r.MusicPartManager(this)}return t.getIndexFromStaff=function(t){return t.idInMusicSheet},Object.defineProperty(t.prototype,"SourceMeasures",{get:function(){return this.sourceMeasures},set:function(t){this.sourceMeasures=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Repetitions",{get:function(){return this.repetitions},set:function(t){this.repetitions=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DynListStaves",{get:function(){return this.dynListStaves},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TimestampSortedTempoExpressionsList",{get:function(){return this.timestampSortedTempoExpressionsList},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TimestampSortedDynamicExpressionsList",{get:function(){return this.timestampSortedDynamicExpressionsList},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"InstrumentalGroups",{get:function(){return this.instrumentalGroups},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Instruments",{get:function(){return this.instruments},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetPlaybackSetting",{get:function(){return this.playbackSettings},set:function(t){this.playbackSettings=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"DrawErroneousMeasures",{get:function(){return this.drawErroneousMeasures},set:function(t){this.drawErroneousMeasures=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"HasBeenOpenedForTheFirstTime",{get:function(){return this.hasBeenOpenedForTheFirstTime},set:function(t){this.hasBeenOpenedForTheFirstTime=t},enumerable:!0,configurable:!0}),t.prototype.InitializeStartTempoInBPM=function(t){this.userStartTempoInBPM=t},Object.defineProperty(t.prototype,"DefaultStartTempoInBpm",{get:function(){return this.defaultStartTempoInBpm},set:function(t){this.defaultStartTempoInBpm=t,this.InitializeStartTempoInBPM(t)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Path",{get:function(){return this.path},set:function(t){this.path=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Staves",{get:function(){return this.staves},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"TitleString",{get:function(){return void 0!==this.title?this.title.text:""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SubtitleString",{get:function(){return void 0!==this.subtitle?this.subtitle.text:""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ComposerString",{get:function(){return void 0!==this.composer?this.composer.text:""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LyricistString",{get:function(){return void 0!==this.lyricist?this.lyricist.text:""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Title",{get:function(){return this.title},set:function(t){this.title=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Subtitle",{get:function(){return this.subtitle},set:function(t){this.subtitle=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Composer",{get:function(){return this.composer},set:function(t){this.composer=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Lyricist",{get:function(){return this.lyricist},set:function(t){this.lyricist=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Rules",{get:function(){return this.engravingRules},set:function(t){this.engravingRules=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SheetErrors",{get:function(){return this.musicSheetErrors},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SelectionStart",{get:function(){return this.selectionStart},set:function(t){this.selectionStart=t.clone(),this.currentEnrolledPosition=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"SelectionEnd",{get:function(){return this.selectionEnd},set:function(t){this.selectionEnd=t},enumerable:!0,configurable:!0}),t.prototype.addMeasure=function(t){this.sourceMeasures.push(t),t.measureListIndex=this.sourceMeasures.length-1},t.prototype.checkForInstrumentWithNoVoice=function(){for(var t=0,e=this.instruments.length;t<e;++t){var n=this.instruments[t];if(0===n.Voices.length){var i=new s.Voice(n,1);n.Voices.push(i)}}},t.prototype.getStaffFromIndex=function(t){return this.staves[t]},t.prototype.fillStaffList=function(){for(var t=0,e=0,n=this.instruments.length;e<n;++e)for(var i=this.instruments[e],r=0,o=i.Staves.length;r<o;++r){var s=i.Staves[r];s.idInMusicSheet=t,this.staves.push(s),t++}},Object.defineProperty(t.prototype,"MusicPartManager",{get:function(){return this.musicPartManager},set:function(t){this.musicPartManager=t},enumerable:!0,configurable:!0}),t.prototype.getCompleteNumberOfStaves=function(){for(var t=0,e=0,n=this.instruments.length;e<n;++e){t+=this.instruments[e].Staves.length}return t},t.prototype.getListOfMeasuresFromIndeces=function(t,e){for(var n=[],i=t;i<=e;i++)n.push(this.sourceMeasures[i]);return n},t.prototype.getNextSourceMeasure=function(t){var e=this.sourceMeasures.indexOf(t);return e===this.sourceMeasures.length-1?t:this.sourceMeasures[e+1]},t.prototype.getFirstSourceMeasure=function(){return this.sourceMeasures[0]},t.prototype.getLastSourceMeasure=function(){return this.sourceMeasures[this.sourceMeasures.length-1]},t.prototype.resetAllNoteStates=function(){for(var t=this.MusicPartManager.getIterator();!t.EndReached&&void 0!==t.CurrentVoiceEntries;){for(var e=0,n=t.CurrentVoiceEntries.length;e<n;++e)for(var i=t.CurrentVoiceEntries[e],r=0,o=i.Notes.length;r<o;++r){i.Notes[r].state=c.NoteState.Normal}t.moveToNext()}},t.prototype.getMusicSheetInstrumentIndex=function(t){return this.Instruments.indexOf(t)},t.prototype.getGlobalStaffIndexOfFirstStaff=function(t){for(var e=this.getMusicSheetInstrumentIndex(t),n=0,i=0;i<e;i++)n+=this.Instruments[i].Staves.length;return n},t.prototype.setRepetitionNewUserNumberOfRepetitions=function(t,e){for(var n=0,i=0;i<this.repetitions.length;i++)if(this.repetitions[i]instanceof o.Repetition){if(t===n){this.repetitions[i].UserNumberOfRepetitions=e;break}n++}},t.prototype.getRepetitionByIndex=function(t){for(var e=0,n=0;n<this.repetitions.length;n++)if(this.repetitions[n]instanceof o.Repetition){if(t===e)return this.repetitions[n];e++}},t.prototype.CompareTo=function(t){return this.Title.text.localeCompare(t.Title.text)},Object.defineProperty(t.prototype,"Errors",{get:function(){return this.musicSheetErrors.measureErrors},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FirstMeasureNumber",{get:function(){try{return this.getFirstSourceMeasure().MeasureNumber}catch(t){return l.info("MusicSheet.FirstMeasureNumber: ",t),0}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"LastMeasureNumber",{get:function(){try{return this.getLastSourceMeasure().MeasureNumber}catch(t){return l.info("MusicSheet.LastMeasureNumber: ",t),0}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"CurrentEnrolledPosition",{get:function(){return this.currentEnrolledPosition.clone()},set:function(t){this.currentEnrolledPosition=t.clone()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Transpose",{get:function(){return this.transpose},set:function(t){this.transpose=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"FullNameString",{get:function(){return this.ComposerString+" "+this.TitleString},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"IdString",{get:function(){return this.idString},set:function(t){this.idString=t},enumerable:!0,configurable:!0}),t.prototype.getEnrolledSelectionStartTimeStampWorkaround=function(){var t=this.MusicPartManager.getIterator(this.SelectionStart);return i.Fraction.createFromFraction(t.CurrentEnrolledTimestamp)},Object.defineProperty(t.prototype,"SheetEndTimestamp",{get:function(){var t=this.getLastSourceMeasure();return i.Fraction.plus(t.AbsoluteTimestamp,t.Duration)},enumerable:!0,configurable:!0}),t.prototype.getSourceMeasureFromTimeStamp=function(t){for(var e=0,n=this.sourceMeasures.length;e<n;++e)for(var i=this.sourceMeasures[e],r=0,o=i.VerticalSourceStaffEntryContainers.length;r<o;++r){var s=i.VerticalSourceStaffEntryContainers[r];if(t.Equals(s.getAbsoluteTimestamp()))return i}return this.findSourceMeasureFromTimeStamp(t)},t.prototype.findSourceMeasureFromTimeStamp=function(t){for(var e=0,n=this.sourceMeasures;e<n.length;e++){var r=n[e];if(r.AbsoluteTimestamp.lte(t)&&t.lt(i.Fraction.plus(r.AbsoluteTimestamp,r.Duration)))return r}},t.prototype.getVisibleInstruments=function(){for(var t=[],e=0,n=this.Instruments.length;e<n;++e){var i=this.Instruments[e];i.Voices.length>0&&i.Voices[0].Visible&&t.push(i)}return t},t.defaultTitle="[kein Titel]",t}();e.MusicSheet=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(206),r=n(92),o=n(1),s=n(189),a=n(102),u=n(31),c=n(17),l=n(3),h=n(16),f=n(16),p=n(34),d=n(101),b=n(177),y=n(8),m=n(26),v=n(176),g=function(){function t(t){void 0===t&&(t=void 0),this.completeNumberOfStaves=0,this.afterSheetReadingModules=void 0===t?[]:t,this.repetitionInstructionReader=v.MusicSymbolModuleFactory.createRepetitionInstructionReader(),this.repetitionCalculator=v.MusicSymbolModuleFactory.createRepetitionCalculator()}return Object.defineProperty(t.prototype,"CompleteNumberOfStaves",{get:function(){return this.completeNumberOfStaves},enumerable:!0,configurable:!0}),t.doCalculationsAfterDurationHasBeenSet=function(t){for(var e=0,n=t;e<n.length;e++){n[e].doCalculationsAfterDurationHasBeenSet()}},t.prototype.createMusicSheet=function(t,e){try{return this._createMusicSheet(t,e)}catch(t){l.info("MusicSheetReader.CreateMusicSheet",t)}},t.prototype._removeFromArray=function(t,e){var n=t.indexOf(e);-1!==n&&t.splice(n,1)},t.prototype.trimString=function(t){return t.replace(/^\s+|\s+$/g,"")},t.prototype._lastElement=function(t){return t[t.length-1]},t.prototype._createMusicSheet=function(e,n){var s=[],a=0;if(this.musicSheet=new i.MusicSheet,this.musicSheet.Path=n,void 0===e)throw new c.MusicSheetReadingException("Undefined root element");this.pushSheetLabels(e,n);var l=e.element("part-list");if(void 0===l)throw new c.MusicSheetReadingException("Undefined partListNode");var h=e.elements("part"),f=l.elements();this.initializeReading(f,h,s);var p=!0;this.currentFraction=new o.Fraction(0,1);var d=!1,b=e.element("identification");for(void 0!==b&&(b=b.element("encoding")),void 0!==b&&(b=b.element("software")),void 0!==b&&"Guitar Pro 5"===b.value&&(d=!0);p;){void 0!==this.currentMeasure&&this.currentMeasure.endsPiece&&(a=0),this.currentMeasure=new r.SourceMeasure(this.completeNumberOfStaves);for(var y=0,m=s;y<m.length;y++){var v=m[y];try{p=p&&v.readNextXmlMeasure(this.currentMeasure,this.currentFraction,d)}catch(t){var g=u.ITextTranslation.translateText("ReaderErrorMessages/InstrumentError","Error while reading instruments.");throw new c.MusicSheetReadingException(g,t)}}p&&(this.musicSheet.addMeasure(this.currentMeasure),this.checkIfRhythmInstructionsAreSetAndEqual(s),this.checkSourceMeasureForNullEntries(),a=this.setSourceMeasureDuration(s,a),t.doCalculationsAfterDurationHasBeenSet(s),this.currentMeasure.AbsoluteTimestamp=this.currentFraction.clone(),this.musicSheet.SheetErrors.finalizeMeasure(this.currentMeasure.MeasureNumber),this.currentFraction.Add(this.currentMeasure.Duration),this.previousMeasure=this.currentMeasure)}void 0!==this.repetitionInstructionReader&&(this.repetitionInstructionReader.removeRedundantInstructions(),void 0!==this.repetitionCalculator&&this.repetitionCalculator.calculateRepetitions(this.musicSheet,this.repetitionInstructionReader.repetitionInstructions)),this.musicSheet.checkForInstrumentWithNoVoice(),this.musicSheet.fillStaffList();for(var _=0,S=this.afterSheetReadingModules.length;_<S;++_){this.afterSheetReadingModules[_].calculate(this.musicSheet)}return this.musicSheet},t.prototype.initializeReading=function(t,e,n){var i=this.createInstrumentGroups(t);this.completeNumberOfStaves=this.getCompleteNumberOfStavesFromXml(e),0!==e.length&&(this.repetitionInstructionReader.MusicSheet=this.musicSheet,this.currentFraction=new o.Fraction(0,1),this.currentMeasure=void 0,this.previousMeasure=void 0);for(var r=0,a=0,c=e;a<c.length;a++){var l=c[a],h=l.attribute("id");if(h){var f=i[h.value],p=l.elements("measure"),d=1;try{d=this.getInstrumentNumberOfStavesFromXml(l)}catch(t){var b=u.ITextTranslation.translateText("ReaderErrorMessages/InstrumentStavesNumberError","Invalid number of staves at instrument: ");this.musicSheet.SheetErrors.push(b+f.Name);continue}f.createStaves(d),n.push(new s.InstrumentReader(this.repetitionInstructionReader,p,f)),void 0!==this.repetitionInstructionReader&&(this.repetitionInstructionReader.xmlMeasureList[r]=p),r++}}},t.prototype.checkIfRhythmInstructionsAreSetAndEqual=function(t){for(var e=[],n=0;n<this.completeNumberOfStaves;n++)if(void 0!==this.currentMeasure.FirstInstructionsStaffEntries[n]){var i=this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions[this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions.length-1];i instanceof h.RhythmInstruction&&e.push(i)}for(var r=0,s=-1,a=0,u=e.length;a<u;++a){if((c=e[a]).Rhythm.RealValue>r){if(this.areRhythmInstructionsMixed(e)&&c.SymbolEnum!==f.RhythmSymbolEnum.NONE)continue;r=c.Rhythm.RealValue,s=e.indexOf(c)}}if(e.length>0&&e.length<this.completeNumberOfStaves){var c=e[s].clone();for(n=0;n<this.completeNumberOfStaves;n++)void 0===this.currentMeasure.FirstInstructionsStaffEntries[n]||this._lastElement(this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions)instanceof h.RhythmInstruction||(this.currentMeasure.FirstInstructionsStaffEntries[n].removeAllInstructionsOfTypeRhythmInstruction(),this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions.push(c.clone())),void 0===this.currentMeasure.FirstInstructionsStaffEntries[n]&&(this.currentMeasure.FirstInstructionsStaffEntries[n]=new p.SourceStaffEntry(void 0,void 0),this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions.push(c.clone()));for(a=0,u=t.length;a<u;++a){t[a].ActiveRhythm=c}}if(0===e.length&&this.currentMeasure===this.musicSheet.SourceMeasures[0]){for(c=new h.RhythmInstruction(new o.Fraction(4,4,0,!1),f.RhythmSymbolEnum.NONE),n=0;n<this.completeNumberOfStaves;n++)void 0===this.currentMeasure.FirstInstructionsStaffEntries[n]?this.currentMeasure.FirstInstructionsStaffEntries[n]=new p.SourceStaffEntry(void 0,void 0):this.currentMeasure.FirstInstructionsStaffEntries[n].removeAllInstructionsOfTypeRhythmInstruction(),this.currentMeasure.FirstInstructionsStaffEntries[n].Instructions.push(c);for(a=0,u=t.length;a<u;++a){t[a].ActiveRhythm=c}}for(a=0,u=e.length;a<u;++a){if((c=e[a]).Rhythm.RealValue<r&&this._lastElement(this.currentMeasure.FirstInstructionsStaffEntries[e.indexOf(c)].Instructions)instanceof h.RhythmInstruction){var l=this.currentMeasure.FirstInstructionsStaffEntries[e.indexOf(c)].Instructions;l[l.length-1]=e[s].clone()}Math.abs(c.Rhythm.RealValue-r)<1e-6&&c.SymbolEnum!==f.RhythmSymbolEnum.NONE&&this.areRhythmInstructionsMixed(e)&&(c.SymbolEnum=f.RhythmSymbolEnum.NONE)}},t.prototype.areRhythmInstructionsMixed=function(t){for(var e=1;e<t.length;e++)if(Math.abs(t[e].Rhythm.RealValue-t[0].Rhythm.RealValue)<1e-6&&t[e].SymbolEnum!==t[0].SymbolEnum)return!0;return!1},t.prototype.setSourceMeasureDuration=function(t,e){for(var n=new o.Fraction(0,1),i=[],r=0,s=t;r<s.length;r++){var a=s[r];i.push(a.MaxTieNoteFraction);var c=a.ActiveRhythm.Rhythm;n.lt(c)&&(n=new o.Fraction(c.Numerator,c.Denominator,0,!1))}for(var l=this.currentMeasure.calculateInstrumentsDuration(this.musicSheet,i),h=new o.Fraction(0,1),f=0,p=l;f<p.length;f++){var d=p[f];h.lt(d)&&(h=d)}o.Fraction.Equal(h,n)?this.checkFractionsForEquivalence(h,n):h.lt(n)&&(h=this.currentMeasure.reverseCheck(this.musicSheet,h),this.checkFractionsForEquivalence(h,n)),this.currentMeasure.ImplicitMeasure=this.checkIfMeasureIsImplicit(h,n),this.currentMeasure.ImplicitMeasure||e++,this.currentMeasure.Duration=h,this.currentMeasure.MeasureNumber=e;for(var b=0;b<l.length;b++){d=l[b];if(this.currentMeasure.ImplicitMeasure&&d!==h||!o.Fraction.Equal(d,n)&&!this.allInstrumentsHaveSameDuration(l,h))for(var y=this.musicSheet.getGlobalStaffIndexOfFirstStaff(this.musicSheet.Instruments[b]),m=0;m<this.musicSheet.Instruments[b].Staves.length;m++)if(!this.staffMeasureIsEmpty(y+m)){this.currentMeasure.setErrorInStaffMeasure(y+m,!0);var v=u.ITextTranslation.translateText("ReaderErrorMessages/MissingNotesError","Given Notes don't correspond to measure duration.");this.musicSheet.SheetErrors.pushMeasureError(v)}}return e},t.prototype.checkFractionsForEquivalence=function(t,e){if(e.Denominator>t.Denominator){var n=e.Denominator/t.Denominator;t.expand(n)}},t.prototype.checkIfMeasureIsImplicit=function(t,e){return!(void 0!==this.previousMeasure||!t.lt(e))||void 0!==this.previousMeasure&&o.Fraction.plus(this.previousMeasure.Duration,t).Equals(e)},t.prototype.allInstrumentsHaveSameDuration=function(t,e){for(var n=0,i=0,r=t.length;i<r;++i){t[i].Equals(e)&&n++}return n===t.length&&e!==new o.Fraction(0,1)},t.prototype.staffMeasureIsEmpty=function(t){for(var e=0,n=0;n<this.currentMeasure.VerticalSourceStaffEntryContainers.length;n++)void 0===this.currentMeasure.VerticalSourceStaffEntryContainers[n].StaffEntries[t]&&e++;return e===this.currentMeasure.VerticalSourceStaffEntryContainers.length},t.prototype.checkSourceMeasureForNullEntries=function(){for(var t=this.currentMeasure.VerticalSourceStaffEntryContainers.length-1;t>=0;t--)for(var e=this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries.length-1;e>=0;e--){if(void 0!==(a=this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries[e]))for(var n=a.VoiceEntries.length-1;n>=0;n--){var i=a.VoiceEntries[n];0===i.Notes.length&&(this._removeFromArray(i.ParentVoice.VoiceEntries,i),this._removeFromArray(a.VoiceEntries,i))}void 0!==a&&0===a.VoiceEntries.length&&(this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries[e]=void 0)}for(t=this.currentMeasure.VerticalSourceStaffEntryContainers.length-1;t>=0;t--){for(var r=0,o=0,s=this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries.length;o<s;++o){var a;void 0===(a=this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries[o])&&r++}r===this.currentMeasure.VerticalSourceStaffEntryContainers[t].StaffEntries.length&&this._removeFromArray(this.currentMeasure.VerticalSourceStaffEntryContainers,this.currentMeasure.VerticalSourceStaffEntryContainers[t])}},t.prototype.pushSheetLabels=function(t,e){if(this.readComposer(t),this.readTitle(t),void 0!==this.musicSheet.Title&&void 0!==this.musicSheet.Composer||this.readTitleAndComposerFromCredits(t),void 0===this.musicSheet.Title)try{var n=Math.max(0,e.lastIndexOf("/"),e.lastIndexOf("\\")),i=e.substr(n).split(".",1);this.musicSheet.Title=new m.Label(i[0])}catch(t){l.info("MusicSheetReader.pushSheetLabels: ",t)}},t.prototype.presentAttrsWithValue=function(t,e){for(var n=0,i=t.attributes();n<i.length;n++){if(i[n].value===e)return!0}return!1},t.prototype.readComposer=function(t){var e=t.element("identification");if(void 0!==e)for(var n=e.elements("creator"),i=0,r=n.length;i<r;++i){var o=n[i];if(o.hasAttributes){if(this.presentAttrsWithValue(o,"composer")){this.musicSheet.Composer=new m.Label(this.trimString(o.value));continue}(this.presentAttrsWithValue(o,"lyricist")||this.presentAttrsWithValue(o,"poet"))&&(this.musicSheet.Lyricist=new m.Label(this.trimString(o.value)))}}},t.prototype.readTitleAndComposerFromCredits=function(t){var e=this.computeSystemYCoordinates(t);if(0!==e){for(var n=1,i=void 0,r=0,o=void 0,s=void 0,a=t.elements("credit"),u=0,c=a.length;u<c;++u){var l=a[u];if(!l.attribute("page"))return;if("1"===l.attribute("page").value){var h=void 0;if(void 0!==l){if(!(h=l.element("credit-words")).attribute("justify"))break;var f=h.attribute("justify").value,p=h.attribute("default-y").value,d=parseFloat(p);if(d>e){if(void 0===this.musicSheet.Title){var b=h.attribute("font-size").value,y=parseFloat(b);n<y&&(n=y,i=h.value)}if(void 0===this.musicSheet.Subtitle&&"right"!==f&&"left"!==f&&r<d&&(r=d,s?(o=s,s=h.value):s=h.value),void 0===this.musicSheet.Composer||void 0===this.musicSheet.Lyricist)switch(f){case"right":this.musicSheet.Composer=new m.Label(this.trimString(h.value));break;case"left":this.musicSheet.Lyricist=new m.Label(this.trimString(h.value))}}}}}void 0===this.musicSheet.Title&&i&&(this.musicSheet.Title=new m.Label(this.trimString(i))),void 0===this.musicSheet.Subtitle&&o&&(this.musicSheet.Subtitle=new m.Label(this.trimString(o)))}},t.prototype.computeSystemYCoordinates=function(t){if(void 0===t.element("defaults"))return 0;var e,n=0,i=t.element("defaults").element("page-layout").element("page-height").value;e=parseFloat(i);for(var r=!1,o=t.elements("part"),s=0,a=o.length;s<a;++s){for(var u=o[s].elements("measure"),c=0,l=u.length;c<l;++c){var h=u[c];if(void 0!==h.element("print")){for(var f=h.element("print").elements("system-layout"),p=0,d=f.length;p<d;++p){var b=f[p];if(void 0!==b.element("top-system-distance")){var y=b.element("top-system-distance").value;n=parseFloat(y),r=!0;break}}break}}if(r)break}if(void 0!==t.element("defaults").element("system-layout")&&void 0!==t.element("defaults").element("system-layout").element("top-system-distance")){y=t.element("defaults").element("system-layout").element("top-system-distance").value;n=parseFloat(y)}return 0===n?0:e-n},t.prototype.readTitle=function(t){var e=t.element("work"),n=void 0;void 0!==e&&void 0!==(n=e.element("work-title"))&&n.value&&(this.musicSheet.Title=new m.Label(this.trimString(n.value)));var i=t.element("movement-title"),r="";if(void 0!==i&&(void 0===this.musicSheet.Title?this.musicSheet.Title=new m.Label(this.trimString(i.value)):r=this.trimString(i.value)),void 0!==e){var o=e.element("work-number");if(void 0!==o){var s=o.value;s&&(r=r?s:r+", "+s)}}r&&(this.musicSheet.Subtitle=new m.Label(r))},t.prototype.createInstrumentGroups=function(t){var e,n=0,i={};try{for(var r=t,o=0,s=r.length;o<s;++o){var h=r[o];if("score-part"===h.name){var f=h.attribute("id").value,p=new a.Instrument(n,f,this.musicSheet,e);n++;for(var m=h.elements(),v=0,g=m.length;v<g;++v){var _=m[v];try{if("part-name"===_.name)p.Name=_.value;else if("score-instrument"===_.name){(x=new b.SubInstrument(p)).idString=_.firstAttribute.value,p.SubInstruments.push(x);var S=_.element("instrument-name");void 0!==S&&(x.name=S.value,x.setMidiInstrument(S.value))}else if("midi-instrument"===_.name){for(var x=p.getSubInstrument(_.firstAttribute.value),w=0,E=p.SubInstruments.length;w<E;++w){var P=p.SubInstruments[w];if(P.idString===_.value){x=P;break}}var T=_.elements();for(w=0,E=T.length;w<E;++w){var M=T[w];try{if("midi-channel"===M.name)10===parseInt(M.value,10)&&(p.MidiInstrumentId=y.MidiInstrument.Percussion);else if("midi-program"===M.name)p.SubInstruments.length>0&&p.MidiInstrumentId!==y.MidiInstrument.Percussion&&(x.midiInstrumentID=Math.max(0,parseInt(M.value,10)-1));else if("midi-unpitched"===M.name)x.fixedKey=Math.max(0,parseInt(M.value,10));else if("volume"===M.name)try{var k=parseFloat(M.value);x.volume=k/127}catch(t){l.debug("ExpressionReader.readExpressionParameters","read volume",t)}else if("pan"===M.name)try{k=parseFloat(M.value);x.pan=k/64}catch(t){l.debug("ExpressionReader.readExpressionParameters","read pan",t)}}catch(t){l.info("MusicSheetReader.createInstrumentGroups midi settings: ",t)}}}}catch(t){l.info("MusicSheetReader.createInstrumentGroups: ",t)}}if(0===p.SubInstruments.length){x=new b.SubInstrument(p);p.SubInstruments.push(x)}i[f]=p,void 0!==e?(e.InstrumentalGroups.push(p),this.musicSheet.Instruments.push(p)):(this.musicSheet.InstrumentalGroups.push(p),this.musicSheet.Instruments.push(p))}else if("part-group"===h.name&&"start"===h.attribute("type").value){var O=new d.InstrumentalGroup("group",this.musicSheet,e);void 0!==e?e.InstrumentalGroups.push(O):this.musicSheet.InstrumentalGroups.push(O),e=O}else if("part-group"===h.name&&"stop"===h.attribute("type").value&&void 0!==e){if(1===e.InstrumentalGroups.length){var A=e.InstrumentalGroups[0];void 0!==e.Parent?(e.Parent.InstrumentalGroups.push(A),this._removeFromArray(e.Parent.InstrumentalGroups,e)):(this.musicSheet.InstrumentalGroups.push(A),this._removeFromArray(this.musicSheet.InstrumentalGroups,e))}e=e.Parent}}}catch(t){var C=u.ITextTranslation.translateText("ReaderErrorMessages/InstrumentError","Error while reading Instruments");throw new c.MusicSheetReadingException(C,t)}for(o=0,s=this.musicSheet.Instruments.length;o<s;++o){(p=this.musicSheet.Instruments[o]).Name||(p.Name="Instr. "+p.IdString)}return i},t.prototype.getCompleteNumberOfStavesFromXml=function(t){for(var e=0,n=0,i=t;n<i.length;n++){var r=i[n].elements("measure");if(r.length>0){var o=r[0];if(void 0!==o){var s=o.element("attributes");void 0!==s&&(s=s.element("staves")),void 0===s?e++:e+=parseInt(s.value,10)}}}if(isNaN(e)||e<=0){var a=u.ITextTranslation.translateText("ReaderErrorMessages/StaffError","Invalid number of staves.");throw new c.MusicSheetReadingException(a)}return e},t.prototype.getInstrumentNumberOfStavesFromXml=function(t){var e=0,n=t.element("measure");if(void 0!==n){var i=n.element("attributes"),r=void 0;void 0!==i&&(r=i.element("staves")),e=void 0===i||void 0===r?1:parseInt(r.value,10)}if(isNaN(e)||e<=0){var o=u.ITextTranslation.translateText("ReaderErrorMessages/StaffError","Invalid number of Staves.");throw new c.MusicSheetReadingException(o)}return e},t}();e.MusicSheetReader=g},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t){this.graphicalLyricsEntries=[],this.lyricWord=t,this.initialize()}return Object.defineProperty(t.prototype,"GetLyricWord",{get:function(){return this.lyricWord},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GraphicalLyricsEntries",{get:function(){return this.graphicalLyricsEntries},set:function(t){this.graphicalLyricsEntries=t},enumerable:!0,configurable:!0}),t.prototype.isFilled=function(){for(var t=0;t<this.graphicalLyricsEntries.length;t++)if(void 0===this.graphicalLyricsEntries[t])return!1;return!0},t.prototype.initialize=function(){for(var t=0;t<this.lyricWord.Syllables.length;t++)this.graphicalLyricsEntries.push(void 0)},t}();e.GraphicalLyricWord=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(33),r=n(26),o=n(19),s=n(5),a=function(){function t(t,e,n,a){this.lyricsEntry=t,this.graphicalStaffEntry=e,this.graphicalLabel=new i.GraphicalLabel(new r.Label(t.Text),n,o.TextAlignment.CenterBottom,e.PositionAndShape),this.graphicalLabel.PositionAndShape.RelativePosition=new s.PointF2D(0,a)}return Object.defineProperty(t.prototype,"GetLyricsEntry",{get:function(){return this.lyricsEntry},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"ParentLyricWord",{get:function(){return this.graphicalLyricWord},set:function(t){this.graphicalLyricWord=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"GraphicalLabel",{get:function(){return this.graphicalLabel},set:function(t){this.graphicalLabel=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffEntryParent",{get:function(){return this.graphicalStaffEntry},set:function(t){this.graphicalStaffEntry=t},enumerable:!0,configurable:!0}),t}();e.GraphicalLyricEntry=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e,n){void 0===e&&(e=void 0),void 0===n&&(n=void 0),this.tie=t,this.startNote=e,this.endNote=n}return Object.defineProperty(t.prototype,"GetTie",{get:function(){return this.tie},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StartNote",{get:function(){return this.startNote},set:function(t){this.startNote=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"EndNote",{get:function(){return this.endNote},set:function(t){this.endNote=t},enumerable:!0,configurable:!0}),t}();e.GraphicalTie=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(19),s=n(26),a=n(33),u=n(95),c=n(4),l=n(7),h=n(5),f=function(t){function e(e,n,i,r){var o=t.call(this)||this;return o.chordSymbolContainer=e,o.boundingBox=new c.BoundingBox(o,n),o.calculateLabel(i,r),o}return r(e,t),Object.defineProperty(e.prototype,"GetChordSymbolContainer",{get:function(){return this.chordSymbolContainer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GetGraphicalLabel",{get:function(){return this.graphicalLabel},enumerable:!0,configurable:!0}),e.prototype.calculateLabel=function(t,e){var n=u.ChordSymbolContainer.calculateChordText(this.chordSymbolContainer,e);this.graphicalLabel=new a.GraphicalLabel(new s.Label(n),t,o.TextAlignment.CenterBottom,this.boundingBox),this.graphicalLabel.PositionAndShape.RelativePosition=new h.PointF2D(0,0)},e}(l.GraphicalObject);e.GraphicalChordSymbolContainer=f},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(7),s=n(20),a=n(4),u=function(t){function e(e,n,i){void 0===i&&(i=void 0);var r=t.call(this)||this;return r.sourceNote=e,r.parentVoiceEntry=n,r.PositionAndShape=new a.BoundingBox(r,n.PositionAndShape),r.graphicalNoteLength=void 0!==i?i:e.Length,r.numberOfDots=r.calculateNumberOfNeededDots(r.graphicalNoteLength),r}return r(e,t),e.prototype.Transpose=function(t,e,n,i){var r=this.sourceNote.Pitch;return void 0!==s.MusicSheetCalculator.transposeCalculator&&(r=s.MusicSheetCalculator.transposeCalculator.transposePitch(this.sourceNote.Pitch,t,n)),r},e.prototype.calculateNumberOfNeededDots=function(t){var e=1,n=2,i=t.GetExpandedNumerator();if(void 0===this.sourceNote||void 0===this.sourceNote.NoteTuplet)for(;n<i;)e++,n=Math.pow(2,e);return Math.min(3,e-1)},e}(o.GraphicalObject);e.GraphicalNote=u},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=n(212),a=n(25),u=n(58),c=function(t){function e(e,n,i,r,o){void 0===r&&(r=u.OctaveEnum.NONE),void 0===o&&(o=void 0);var s=t.call(this,e,n,o)||this;return s.clef=i,e.Pitch&&(s.vfpitch=a.VexFlowConverter.pitch(e.Pitch,s.clef),s.vfpitch[1]=void 0),s}return r(e,t),e.prototype.setPitch=function(t){if(this.vfnote){var e=a.VexFlowConverter.accidental(t.Accidental);e&&(alert(e),this.vfnote[0].addAccidental(this.vfnote[1],new o.Flow.Accidental(e)))}else this.vfpitch=a.VexFlowConverter.pitch(t,this.clef)},e.prototype.setIndex=function(t,e){this.vfnote=[t,e]},e}(s.GraphicalNote);e.VexFlowGraphicalNote=c},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),s=n(1),a=n(7),u=n(44),c=n(20),l=function(t){function e(e,n,i){void 0===n&&(n=void 0),void 0===i&&(i=void 0);var r=t.call(this)||this;return r.graphicalInstructions=[],r.graphicalTies=[],r.lyricsEntries=[],r.parentMeasure=e,r.graphicalVoiceEntries=[],r.graceStaffEntriesBefore=[],r.graceStaffEntriesAfter=[],r.sourceStaffEntry=n,void 0!==i?(r.staffEntryParent=i,r.parentVerticalContainer=i.parentVerticalContainer,r.PositionAndShape=new o.BoundingBox(r,i.PositionAndShape)):r.PositionAndShape=new o.BoundingBox(r,e.PositionAndShape),void 0!==n&&(r.relInMeasureTimestamp=n.Timestamp),r}return r(e,t),Object.defineProperty(e.prototype,"GraphicalInstructions",{get:function(){return this.graphicalInstructions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GraphicalTies",{get:function(){return this.graphicalTies},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LyricsEntries",{get:function(){return this.lyricsEntries},set:function(t){this.lyricsEntries=t},enumerable:!0,configurable:!0}),e.prototype.getAbsoluteTimestamp=function(){var t=this.parentMeasure.parentSourceMeasure.AbsoluteTimestamp.clone();return void 0!==this.relInMeasureTimestamp&&t.Add(this.relInMeasureTimestamp),t},e.prototype.findEndTieGraphicalNoteFromNote=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++)for(var i=0,r=n[e].notes;i<r.length;i++){var o=r[i],s=o.sourceNote;if(!s.isRest()&&s.Pitch.FundamentalNote===t.Pitch.FundamentalNote&&s.Pitch.Octave===t.Pitch.Octave&&s.getAbsoluteTimestamp().Equals(t.getAbsoluteTimestamp()))return o}},e.prototype.findEndTieGraphicalNoteFromNoteWithStartingSlur=function(t,e){for(var n=0,i=this.graphicalVoiceEntries;n<i.length;n++){var r=i[n];if(r.parentVoiceEntry===t.ParentVoiceEntry)for(var o=0,s=r.notes;o<s.length;o++){var a=s[o],u=a.sourceNote;if(void 0!==u.NoteTie&&-1!==u.NoteSlurs.indexOf(e))return a}}},e.prototype.findGraphicalNoteFromGraceNote=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i.parentVoiceEntry===t.ParentVoiceEntry)for(var r=0,o=i.notes;r<o.length;r++){var s=o[r];if(s.sourceNote===t)return s}}},e.prototype.findGraphicalNoteFromNote=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i.parentVoiceEntry===t.ParentVoiceEntry)for(var r=0,o=i.notes;r<o.length;r++){var s=o[r];if(s.sourceNote===t&&this.getAbsoluteTimestamp().Equals(t.getAbsoluteTimestamp()))return s}}},e.prototype.getGraphicalNoteDurationFromVoice=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i.parentVoiceEntry.ParentVoice===t)return i.notes[0].graphicalNoteLength}return new s.Fraction(0,1)},e.prototype.findVoiceEntryGraphicalNotes=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i.parentVoiceEntry===t)return i.notes}},e.prototype.isVoiceEntryPartOfLinkedVoiceEntry=function(t){if(void 0!==this.sourceStaffEntry.Link)for(var e=0,n=this.sourceStaffEntry.Link.LinkStaffEntries.length;e<n;++e){var i=this.sourceStaffEntry.Link.LinkStaffEntries[e];if(-1!==i.VoiceEntries.indexOf(t)&&i!==this.sourceStaffEntry)return!0}return!1},e.prototype.findStaffEntryMinNoteLength=function(){for(var t=new s.Fraction(Number.MAX_VALUE,1),e=0,n=this.graphicalVoiceEntries;e<n.length;e++)for(var i=0,r=n[e].notes;i<r.length;i++){var o=r[i].graphicalNoteLength;o.lt(t)&&o.GetExpandedNumerator()>0&&(t=o)}return t},e.prototype.findStaffEntryMaxNoteLength=function(){for(var t=new s.Fraction(0,1),e=0,n=this.graphicalVoiceEntries;e<n.length;e++)for(var i=0,r=n[e].notes;i<r.length;i++){var o=r[i].graphicalNoteLength;t.lt(o)&&o.GetExpandedNumerator()>0&&(t=o)}return t},e.prototype.findOrCreateGraphicalVoiceEntry=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i.parentVoiceEntry===t)return i}var r=c.MusicSheetCalculator.symbolFactory.createVoiceEntry(t,this);return this.graphicalVoiceEntries.push(r),r},e.prototype.findOrCreateGraphicalVoiceEntryFromGraphicalNote=function(t){for(var e=0,n=this.graphicalVoiceEntries;e<n.length;e++){var i=n[e];if(i===t.parentVoiceEntry)return i}var r=c.MusicSheetCalculator.symbolFactory.createVoiceEntry(t.sourceNote.ParentVoiceEntry,this);return this.graphicalVoiceEntries.push(r),r},e.prototype.addGraphicalNoteToListAtCorrectYPosition=function(t,e){var n=t.notes;if(0===n.length||e.PositionAndShape.RelativePosition.y<u.CollectionUtil.last(n).PositionAndShape.RelativePosition.Y)n.push(e);else for(var i=n.length-1;i>=0;i--){if(n[i].PositionAndShape.RelativePosition.y>e.PositionAndShape.RelativePosition.y){n.splice(i+1,0,e);break}if(0===i){n.splice(0,0,e);break}}},e.prototype.hasOnlyRests=function(){for(var t=0,e=this.graphicalVoiceEntries;t<e.length;t++)for(var n=0,i=e[t].notes;n<i.length;n++){if(!i[n].sourceNote.isRest())return!1}return!0},e}(a.GraphicalObject);e.GraphicalStaffEntry=l},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(214),s=n(32),a=function(t){function e(e,n,i){return t.call(this,e,n,i)||this}return r(e,t),e.prototype.calculateXPosition=function(){for(var t=this.parentMeasure.getVFStave(),e=0,n=0,i=0,r=this.graphicalVoiceEntries;i<r.length;i++){var o=r[i].vfStaveNote;if(o.setStave(t),"StaveNote"===o.getAttribute("type")){var a=o;e+=a.getNoteHeadEndX()-a.getGlyphWidth()/2}else{console.log(o);var u=o;e=u.getAbsoluteX()+u.x_shift}n++}e/=n;var c=t.getModifierXShift()-(1===this.parentMeasure.MeasureNumber?25:0);this.PositionAndShape.RelativePosition.x=(e-t.getNoteStartX()+c)/s.unitInPixels},e}(o.GraphicalStaffEntry);e.VexFlowStaffEntry=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(7),s=n(4),a=function(t){function e(e,n){var i=t.call(this)||this;return i.parentVoiceEntry=e,i.parentStaffEntry=n,i.PositionAndShape=new s.BoundingBox(i,n?n.PositionAndShape:void 0),i.notes=[],i}return r(e,t),e}(o.GraphicalObject);e.GraphicalVoiceEntry=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(7),s=n(4),a=function(t){function e(e){var n=t.call(this)||this;n.parentStaffLine=e;var i=e.PositionAndShape;return n.boundingBox=new s.BoundingBox(n,i),n.boundingBox.BorderRight=6,n.boundingBox.BorderBottom=4.5,n.boundingBox.BorderLeft=-1.5,n.boundingBox.BorderTop=-1.5,n}return r(e,t),e}(o.GraphicalObject);e.StaffLineActivitySymbol=a},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(4),s=n(7),a=n(217),u=n(5),c=function(t){function e(e,n){var i=t.call(this)||this;return i.measures=[],i.staffLines=new Array(5),i.lyricLines=[],i.lyricsDashes=[],i.parentMusicSystem=e,i.parentStaff=n,i.boundingBox=new o.BoundingBox(i,e.PositionAndShape),i}return r(e,t),Object.defineProperty(e.prototype,"Measures",{get:function(){return this.measures},set:function(t){this.measures=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StaffLines",{get:function(){return this.staffLines},set:function(t){this.staffLines=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"NextStaffLine",{get:function(){var t=this.parentMusicSystem.StaffLines.indexOf(this);return t!==this.parentMusicSystem.StaffLines.length?this.parentMusicSystem.StaffLines[t+1]:void 0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LyricLines",{get:function(){return this.lyricLines},set:function(t){this.lyricLines=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"LyricsDashes",{get:function(){return this.lyricsDashes},set:function(t){this.lyricsDashes=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ParentMusicSystem",{get:function(){return this.parentMusicSystem},set:function(t){this.parentMusicSystem=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ParentStaff",{get:function(){return this.parentStaff},set:function(t){this.parentStaff=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"SkyLine",{get:function(){return this.skyLine},set:function(t){this.skyLine=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"BottomLine",{get:function(){return this.bottomLine},set:function(t){this.bottomLine=t},enumerable:!0,configurable:!0}),e.prototype.addActivitySymbolClickArea=function(){var t=new a.StaffLineActivitySymbol(this),e=this.PositionAndShape;t.PositionAndShape.RelativePosition=new u.PointF2D(e.RelativePosition.x+e.BorderRight+.5,e.RelativePosition.y+.5),t.PositionAndShape.Parent=this.parentMusicSystem.PositionAndShape},e.prototype.isPartOfMultiStaffInstrument=function(){return this.parentStaff.ParentInstrument.Staves.length>1},e.prototype.findClosestStaffEntry=function(t){for(var e=void 0,n=0,i=this.Measures.length;n<i;++n)for(var r=this.Measures[n],o=0,s=r.staffEntries.length;o<s;++o){var a=r.staffEntries[o];Math.abs(a.PositionAndShape.RelativePosition.x-t+r.PositionAndShape.RelativePosition.x)<5&&(e=a)}return e},e}(s.GraphicalObject);e.StaffLine=c},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(e,n){return t.call(this,e,n)||this}return r(e,t),e}(n(218).StaffLine);e.VexFlowStaffLine=o},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(15),s=function(t){function e(e,n,i){void 0===i&&(i=0);var r=t.call(this,e,n,i)||this;return r.vexflowConnector.setType(o.Flow.StaveConnector.type.BRACE),r}return r(e,t),e}(n(100).VexFlowInstrumentBracket);e.VexFlowInstrumentBrace=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.All=0]="All",t[t.NoOverlays=1]="NoOverlays",t[t.Leadsheet=2]="Leadsheet"}(e.DrawingMode||(e.DrawingMode={})),function(t){t[t.Normal=0]="Normal",t[t.Disabled=1]="Disabled",t[t.Selected=2]="Selected",t[t.Clickable=3]="Clickable",t[t.PlaybackSymbols=4]="PlaybackSymbols",t[t.FollowSymbols=5]="FollowSymbols",t[t.QFeedbackNotFound=6]="QFeedbackNotFound",t[t.QFeedbackOk=7]="QFeedbackOk",t[t.QFeedbackPerfect=8]="QFeedbackPerfect",t[t.Debug1=9]="Debug1",t[t.Debug2=10]="Debug2",t[t.Debug3=11]="Debug3"}(e.MusicSymbolDrawingStyle||(e.MusicSymbolDrawingStyle={})),function(t){t[t.Following=0]="Following",t[t.Midi=1]="Midi",t[t.Manual=2]="Manual"}(e.PhonicScoreModes||(e.PhonicScoreModes={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Unused_first_Symbol=0]="Unused_first_Symbol",t[t.BLACK_HEAD=1]="BLACK_HEAD",t[t.UPWARDS_TAIL=2]="UPWARDS_TAIL",t[t.DOWNWARDS_TAIL=3]="DOWNWARDS_TAIL",t[t.UPWARDS_DOUBLE_TAIL=4]="UPWARDS_DOUBLE_TAIL",t[t.DOWNWARDS_DOUBLE_TAIL=5]="DOWNWARDS_DOUBLE_TAIL",t[t.UPWARDS_TRIPLE_TAIL=6]="UPWARDS_TRIPLE_TAIL",t[t.DOWNWARDS_TRIPLE_TAIL=7]="DOWNWARDS_TRIPLE_TAIL",t[t.UPWARDS_QUAD_TAIL=8]="UPWARDS_QUAD_TAIL",t[t.DOWNWARDS_QUAD_TAIL=9]="DOWNWARDS_QUAD_TAIL",t[t.ROUND_HEAD=10]="ROUND_HEAD",t[t.WHITE_HEAD=11]="WHITE_HEAD",t[t.G_CLEF=12]="G_CLEF",t[t.F_CLEF=13]="F_CLEF",t[t.C_CLEF=14]="C_CLEF",t[t.BREVE=15]="BREVE",t[t.BREVE_REST=16]="BREVE_REST",t[t.COMMON_TIME=17]="COMMON_TIME",t[t.CUT_TIME=18]="CUT_TIME",t[t.WHOLE_REST=19]="WHOLE_REST",t[t.HALF_REST=20]="HALF_REST",t[t.QUARTER_REST=21]="QUARTER_REST",t[t.EIGHTH_REST=22]="EIGHTH_REST",t[t.SIXTEENTH_REST=23]="SIXTEENTH_REST",t[t.THIRTYSECOND_REST=24]="THIRTYSECOND_REST",t[t.SIXTYFOURTH_REST=25]="SIXTYFOURTH_REST",t[t.FLAT=26]="FLAT",t[t.SHARP=27]="SHARP",t[t.NATURAL=28]="NATURAL",t[t.DOUBLE_FLAT=29]="DOUBLE_FLAT",t[t.DOUBLE_SHARP=30]="DOUBLE_SHARP",t[t.ZERO=31]="ZERO",t[t.ONE=32]="ONE",t[t.TWO=33]="TWO",t[t.THREE=34]="THREE",t[t.FOUR=35]="FOUR",t[t.FIVE=36]="FIVE",t[t.SIX=37]="SIX",t[t.SEVEN=38]="SEVEN",t[t.EIGHT=39]="EIGHT",t[t.NINE=40]="NINE",t[t.DOT=41]="DOT",t[t.FERMATA=42]="FERMATA",t[t.INVERTED_FERMATA=43]="INVERTED_FERMATA",t[t.SPICCATO=44]="SPICCATO",t[t.TENUTO=45]="TENUTO",t[t.MARCATO=46]="MARCATO",t[t.MARCATISSIMO=47]="MARCATISSIMO",t[t.INVERTED_MARCATISSIMO=48]="INVERTED_MARCATISSIMO",t[t.P=49]="P",t[t.F=50]="F",t[t.S=51]="S",t[t.Z=52]="Z",t[t.M=53]="M",t[t.R=54]="R",t[t.SEGNO=55]="SEGNO",t[t.CODA=56]="CODA",t[t.DRUM_CLEF=57]="DRUM_CLEF",t[t.G_CLEF_SUB8=58]="G_CLEF_SUB8",t[t.G_CLEF_SUPER8=59]="G_CLEF_SUPER8",t[t.G_CLEF_SUB15=60]="G_CLEF_SUB15",t[t.G_CLEF_SUPER15=61]="G_CLEF_SUPER15",t[t.F_CLEF_SUB8=62]="F_CLEF_SUB8",t[t.F_CLEF_SUPER8=63]="F_CLEF_SUPER8",t[t.F_CLEF_SUB15=64]="F_CLEF_SUB15",t[t.F_CLEF_SUPER15=65]="F_CLEF_SUPER15",t[t.DOWN_BOW=66]="DOWN_BOW",t[t.MORDENT=67]="MORDENT",t[t.INVERTED_MORDENT=68]="INVERTED_MORDENT",t[t.TURN=69]="TURN",t[t.INVERTED_TURN=70]="INVERTED_TURN",t[t.LEFTHAND_PIZZICATO=71]="LEFTHAND_PIZZICATO",t[t.RELEASE_PED=72]="RELEASE_PED",t[t.ENGAGE_PED=73]="ENGAGE_PED",t[t.VA8=74]="VA8",t[t.VB8=75]="VB8",t[t.TRILL=76]="TRILL",t[t.MA15=77]="MA15",t[t.MB15=78]="MB15",t[t.HIGH=79]="HIGH",t[t.PLAY=80]="PLAY",t[t.MIC=81]="MIC",t[t.SNAP_PIZZICATO=82]="SNAP_PIZZICATO",t[t.NATURAL_HARMONIC=83]="NATURAL_HARMONIC",t[t.EditPen=84]="EditPen"}(e.MusicSymbol||(e.MusicSymbol={}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.prototype.setForAllOn=function(){this.drawHighlights=!0,this.drawErrors=!0,this.drawSelectionStartSymbol=!0,this.drawSelectionEndSymbol=!0,this.drawCursors=!0,this.drawActivitySymbols=!0,this.drawScrollIndicator=!0,this.drawComments=!0,this.drawMarkedAreas=!0},t.prototype.setForThumbmail=function(){this.drawHighlights=!1,this.drawErrors=!1,this.drawSelectionStartSymbol=!1,this.drawSelectionStartSymbol=!1,this.drawCursors=!1,this.drawActivitySymbols=!1,this.drawScrollIndicator=!1,this.drawComments=!0,this.drawMarkedAreas=!0},t.prototype.setForLeadsheet=function(){this.drawHighlights=!1,this.drawErrors=!1,this.drawSelectionStartSymbol=!0,this.drawSelectionEndSymbol=!0,this.drawCursors=!0,this.drawActivitySymbols=!1,this.drawScrollIndicator=!0,this.drawComments=!0,this.drawMarkedAreas=!0},t}();e.DrawingParameters=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(4),r=n(37),o=n(223),s=n(45),a=n(60),u=n(5),c=n(33),l=n(26),h=n(19),f=n(17),p=n(222),d=n(221),b=function(){function t(t,e){void 0===e&&(e=!1),this.drawingParameters=new o.DrawingParameters,this.phonicScoreMode=d.PhonicScoreModes.Manual,this.textMeasurer=t,this.splitScreenLineColor=-1,e?this.drawingParameters.setForThumbmail():this.drawingParameters.setForAllOn()}return Object.defineProperty(t.prototype,"Mode",{set:function(t){this.phonicScoreMode=t},enumerable:!0,configurable:!0}),t.prototype.drawSheet=function(t){if(this.graphicalMusicSheet=t,this.rules=t.ParentMusicSheet.Rules,this.drawSplitScreenLine(),this.drawingParameters.drawCursors)for(var e=0,n=t.Cursors;e<n.length;e++){var o=n[e],s=new i.BoundingBox(o);s.AbsolutePosition=o.Start,s.BorderBottom=o.End.y-o.Start.y,s.BorderRight=o.Width/2,s.BorderLeft=-o.Width/2,this.isVisible(s)&&this.drawLineAsVerticalRectangle(o,r.GraphicalLayers.Cursor)}this.drawingParameters.drawScrollIndicator&&this.drawScrollIndicator();for(var a=0,u=this.graphicalMusicSheet.MusicPages;a<u.length;a++){var c=u[a];this.drawPage(c)}},t.prototype.drawLineAsHorizontalRectangle=function(t,e){var n=new a.RectangleF2D(t.Start.x,t.End.y-t.Width/2,t.End.x-t.Start.x,t.Width);n=this.applyScreenTransformationForRect(n),this.renderRectangle(n,e,t.styleId)},t.prototype.drawLineAsVerticalRectangle=function(t,e){var n=t.Start,i=t.Width,r=new a.RectangleF2D(n.x-i/2,n.y,i,t.End.y-n.y);r=this.applyScreenTransformationForRect(r),this.renderRectangle(r,e,t.styleId)},t.prototype.drawLineAsHorizontalRectangleWithOffset=function(t,e,n){var i=new u.PointF2D(t.Start.x+e.x,t.Start.y+e.y),r=new u.PointF2D(t.End.x+e.x,t.End.y+e.y),o=t.Width,s=new a.RectangleF2D(i.x,r.y-o/2,r.x-i.x,o);s=this.applyScreenTransformationForRect(s),this.renderRectangle(s,n,t.styleId)},t.prototype.drawLineAsVerticalRectangleWithOffset=function(t,e,n){var i=new u.PointF2D(t.Start.x+e.x,t.Start.y+e.y),r=new u.PointF2D(t.End.x+e.x,t.End.y+e.y),o=t.Width,s=new a.RectangleF2D(i.x,i.y,o,r.y-i.y);s=this.applyScreenTransformationForRect(s),this.renderRectangle(s,n,t.styleId)},t.prototype.drawRectangle=function(t,e){var n=t.PositionAndShape,i=new a.RectangleF2D(n.AbsolutePosition.x,n.AbsolutePosition.y,n.BorderRight,n.BorderBottom);i=this.applyScreenTransformationForRect(i),this.renderRectangle(i,e,t.style)},t.prototype.calculatePixelDistance=function(t){throw new Error("not implemented")},t.prototype.drawLabel=function(t,e){if(this.isVisible(t.PositionAndShape)){var n=t.Label;if(""!==n.text.trim()){var i=this.applyScreenTransformation(t.PositionAndShape.AbsolutePosition),r=this.calculatePixelDistance(n.fontHeight),o=r*this.textMeasurer.computeTextWidthToHeightRatio(n.text,n.font,n.fontStyle),s=Math.ceil(o),a=Math.ceil(1.2*r);switch(n.textAlignment){case h.TextAlignment.LeftTop:break;case h.TextAlignment.LeftCenter:i.y-=a/2;break;case h.TextAlignment.LeftBottom:i.y-=a;break;case h.TextAlignment.CenterTop:i.x-=s/2;break;case h.TextAlignment.CenterCenter:i.x-=s/2,i.y-=a/2;break;case h.TextAlignment.CenterBottom:i.x-=s/2,i.y-=a;break;case h.TextAlignment.RightTop:i.x-=s;break;case h.TextAlignment.RightCenter:i.x-=s,i.y-=a/2;break;case h.TextAlignment.RightBottom:i.x-=s,i.y-=a;break;default:throw new f.ArgumentOutOfRangeException("")}this.renderLabel(t,e,s,a,r,i)}}},t.prototype.applyScreenTransformation=function(t){throw new Error("not implemented")},t.prototype.applyScreenTransformations=function(t){for(var e=[],n=0,i=t;n<i.length;n++){var r=i[n];e.push(this.applyScreenTransformation(r))}return e},t.prototype.applyScreenTransformationForRect=function(t){throw new Error("not implemented")},t.prototype.drawSplitScreenLine=function(){},t.prototype.renderRectangle=function(t,e,n,i){throw void 0===i&&(i=1),new Error("not implemented")},t.prototype.drawScrollIndicator=function(){},t.prototype.drawSelectionStartSymbol=function(t){},t.prototype.drawSelectionEndSymbol=function(t){},t.prototype.renderLabel=function(t,e,n,i,r,o){throw new Error("not implemented")},t.prototype.renderSystemToScreen=function(t,e,n){},t.prototype.drawMeasure=function(t){throw new Error("not implemented")},t.prototype.drawSkyLine=function(t){},t.prototype.drawBottomLine=function(t){},t.prototype.drawInstrumentBrace=function(t,e){},t.prototype.drawGroupBracket=function(t,e){},t.prototype.isVisible=function(t){return!0},t.prototype.drawMusicSystem=function(t){var e=this.getSystemAbsBoundingRect(t),n=this.getSytemBoundingBoxInPixels(e);this.drawMusicSystemComponents(t,n,e)},t.prototype.getSytemBoundingBoxInPixels=function(t){var e=this.applyScreenTransformationForRect(t);return e.x=Math.round(e.x),e.y=Math.round(e.y),e},t.prototype.getSystemAbsBoundingRect=function(t){var e=t.PositionAndShape.BoundingRectangle;return new a.RectangleF2D(t.PositionAndShape.AbsolutePosition.x+t.PositionAndShape.BorderLeft-1,t.PositionAndShape.AbsolutePosition.y+t.PositionAndShape.BorderTop-1,e.width+6,e.height+2)},t.prototype.drawMusicSystemComponents=function(t,e,n){var i=this.graphicalMusicSheet.SelectionStartSymbol,o=this.graphicalMusicSheet.SelectionEndSymbol;this.drawingParameters.drawSelectionStartSymbol&&void 0!==i&&this.isVisible(i.PositionAndShape)&&this.drawSelectionStartSymbol(i),this.drawingParameters.drawSelectionEndSymbol&&void 0!==o&&this.isVisible(o.PositionAndShape)&&this.drawSelectionEndSymbol(o);for(var s=0,a=t.StaffLines;s<a.length;s++){var u=a[s];this.drawStaffLine(u)}for(var c=0,l=t.SystemLines;c<l.length;c++){var h=l[c];this.drawSystemLineObject(h)}if(t===t.Parent.MusicSystems[0]&&t.Parent===t.Parent.Parent.MusicPages[0])for(var f=0,p=t.Labels;f<p.length;f++){var d=p[f];this.drawLabel(d,r.GraphicalLayers.Notes)}for(var b=0,y=t.InstrumentBrackets;b<y.length;b++){var m=y[b];this.drawInstrumentBrace(m,t)}for(var v=0,g=t.GroupBrackets;v<g.length;v++){m=g[v];this.drawGroupBracket(m,t)}if(!this.leadSheet)for(var _=0,S=t.MeasureNumberLabels;_<S.length;_++){var x=S[_];this.drawLabel(x,r.GraphicalLayers.Notes)}for(var w=0,E=t.StaffLines;w<E.length;w++){u=E[w];this.drawStaffLineSymbols(u)}this.drawingParameters.drawMarkedAreas&&this.drawMarkedAreas(t),this.drawingParameters.drawComments&&this.drawComment(t)},t.prototype.activateSystemRendering=function(t,e,n,i){return!0},t.prototype.drawSystemLineObject=function(t){},t.prototype.drawStaffLine=function(t){for(var e=0,n=t.Measures;e<n.length;e++){var i=n[e];this.drawMeasure(i)}t.LyricsDashes.length>0&&this.drawDashes(t.LyricsDashes)},t.prototype.drawDashes=function(t){var e=this;t.forEach(function(t){return e.drawLabel(t,r.GraphicalLayers.Notes)})},t.prototype.drawOctaveShift=function(t,e){this.drawSymbol(e.octaveSymbol,d.MusicSymbolDrawingStyle.Normal,e.PositionAndShape.AbsolutePosition);var n=t.PositionAndShape.AbsolutePosition;if(e.dashesStart.x<e.dashesEnd.x){var i=new s.GraphicalLine(e.dashesStart,e.dashesEnd,this.rules.OctaveShiftLineWidth);this.drawLineAsHorizontalRectangleWithOffset(i,n,r.GraphicalLayers.Notes)}if(!e.endsOnDifferentStaffLine||e.isSecondPart){var o=void 0,a=e.dashesEnd,c=this.rules.OctaveShiftVerticalLineLength,l=this.rules.OctaveShiftLineWidth;o=e.octaveSymbol===p.MusicSymbol.VA8||e.octaveSymbol===p.MusicSymbol.MA15?new s.GraphicalLine(a,new u.PointF2D(a.x,a.y+c),l):new s.GraphicalLine(new u.PointF2D(a.x,a.y-c),a,l),this.drawLineAsVerticalRectangleWithOffset(o,n,r.GraphicalLayers.Notes)}},t.prototype.drawStaffLines=function(t){if(void 0!==t.StaffLines)for(var e=t.PositionAndShape.AbsolutePosition,n=0;n<5;n++)this.drawLineAsHorizontalRectangleWithOffset(t.StaffLines[n],e,r.GraphicalLayers.Notes)},t.prototype.drawSymbol=function(t,e,n,i,o){void 0===i&&(i=1),void 0===o&&(o=r.GraphicalLayers.Notes)},Object.defineProperty(t.prototype,"leadSheet",{get:function(){return this.graphicalMusicSheet.LeadSheet},set:function(t){this.graphicalMusicSheet.LeadSheet=t},enumerable:!0,configurable:!0}),t.prototype.drawPage=function(t){if(this.isVisible(t.PositionAndShape)){for(var e=0,n=t.MusicSystems;e<n.length;e++){var i=n[e];this.isVisible(i.PositionAndShape)&&this.drawMusicSystem(i)}if(t===t.Parent.MusicPages[0])for(var o=0,s=t.Labels;o<s.length;o++){var a=s[o];this.drawLabel(a,r.GraphicalLayers.Notes)}0}},t.prototype.drawBoundingBoxes=function(t,e,n){var i=this;void 0===e&&(e=0),void 0===n&&(n="all");var o=t.DataObject.constructor.name;if(void 0!==t.BoundingRectangle&&(o===n||"all"===n)){var s=t.BoundingRectangle,f=new a.RectangleF2D(t.AbsolutePosition.x+t.BorderLeft,t.AbsolutePosition.y+t.BorderTop,s.width+0,s.height+0);f=this.applyScreenTransformationForRect(f),this.renderRectangle(f,r.GraphicalLayers.Background,e,.5),this.renderLabel(new c.GraphicalLabel(new l.Label(o),1.2,h.TextAlignment.CenterCenter),e,f.width,f.height,f.height,new u.PointF2D(f.x,f.y+12))}e++,t.ChildElements.forEach(function(t){return i.drawBoundingBoxes(t,e,n)})},t.prototype.drawMarkedAreas=function(t){for(var e=0,n=t.GraphicalMarkedAreas;e<n.length;e++){var i=n[e];void 0!==i&&(void 0!==i.systemRectangle&&this.drawRectangle(i.systemRectangle,r.GraphicalLayers.Background),void 0!==i.settings&&this.drawLabel(i.settings,r.GraphicalLayers.Comment),void 0!==i.labelRectangle&&this.drawRectangle(i.labelRectangle,r.GraphicalLayers.Background),void 0!==i.label&&this.drawLabel(i.label,r.GraphicalLayers.Comment))}},t.prototype.drawComment=function(t){for(var e=0,n=t.GraphicalComments;e<n.length;e++){var i=n[e];void 0!==i&&(void 0!==i.settings&&this.drawLabel(i.settings,r.GraphicalLayers.Comment),void 0!==i.label&&this.drawLabel(i.label,r.GraphicalLayers.Comment))}},t.prototype.drawStaffLineSymbols=function(t){var e=t.ParentStaff.ParentInstrument,n=t.PositionAndShape.AbsolutePosition.x,i=t.PositionAndShape.AbsolutePosition.y+2,o=t.PositionAndShape.BorderRight;e.highlight&&this.drawingParameters.drawHighlights&&this.drawLineAsHorizontalRectangle(new s.GraphicalLine(new u.PointF2D(n,i),new u.PointF2D(n+o,i),4,r.OutlineAndFillStyleEnum.Highlighted),r.GraphicalLayers.Highlight);var a=d.MusicSymbolDrawingStyle.Disabled,c=p.MusicSymbol.PLAY,l=this.drawingParameters.drawActivitySymbols;switch(this.phonicScoreMode){case d.PhonicScoreModes.Midi:c=p.MusicSymbol.PLAY,this.midiPlaybackAvailable&&t.ParentStaff.audible&&(a=d.MusicSymbolDrawingStyle.PlaybackSymbols);break;case d.PhonicScoreModes.Following:c=p.MusicSymbol.MIC,t.ParentStaff.following&&(a=d.MusicSymbolDrawingStyle.FollowSymbols);break;default:l=!1}if(l){var h=new u.PointF2D(n+o+2,i);this.drawSymbol(c,a,h)}if(this.drawingParameters.drawErrors)for(var f=0,b=t.Measures;f<b.length;f++){var y=b[f],m=y.PositionAndShape,v=m.AbsolutePosition.x,g=m.AbsolutePosition.y+2;y.hasError&&this.graphicalMusicSheet.ParentMusicSheet.DrawErroneousMeasures&&this.drawLineAsHorizontalRectangle(new s.GraphicalLine(new u.PointF2D(v,g),new u.PointF2D(v+m.BorderRight,g),4,r.OutlineAndFillStyleEnum.ErrorUnderlay),r.GraphicalLayers.MeasureError)}},t}();e.MusicSheetDrawer=b},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Regular=0]="Regular",t[t.Bold=1]="Bold",t[t.Italic=2]="Italic",t[t.BoldItalic=3]="BoldItalic",t[t.Underlined=4]="Underlined"}(e.FontStyles||(e.FontStyles={}))},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(35),s=n(4),a=function(t){function e(e,n,i,r,o){void 0===o&&(o=void 0);var a=t.call(this)||this;return a.lineType=e,a.linePosition=n,a.parentMusicSystem=i,a.topMeasure=r,a.bottomMeasure=o,a.parentTopStaffLine=r.ParentStaffLine,a.boundingBox=new s.BoundingBox(a,i.PositionAndShape),a}return r(e,t),e.getObjectWidthForLineType=function(t,e){switch(e){case o.SystemLinesEnum.SingleThin:return t.SystemThinLineWidth;case o.SystemLinesEnum.DoubleThin:return 2*t.SystemThinLineWidth+t.DistanceBetweenVerticalSystemLines;case o.SystemLinesEnum.ThinBold:return t.SystemThinLineWidth+t.SystemBoldLineWidth+t.DistanceBetweenVerticalSystemLines;case o.SystemLinesEnum.BoldThinDots:case o.SystemLinesEnum.DotsThinBold:return t.SystemThinLineWidth+t.SystemBoldLineWidth+t.DistanceBetweenVerticalSystemLines+t.SystemDotWidth+t.DistanceBetweenDotAndLine;case o.SystemLinesEnum.DotsBoldBoldDots:return 2*t.SystemBoldLineWidth+2*t.SystemDotWidth+2*t.DistanceBetweenDotAndLine+t.DistanceBetweenVerticalSystemLines;default:return 0}},e}(n(7).GraphicalObject);e.SystemLine=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.voices=[],this.volume=1,this.parentInstrument=t,this.id=e,this.audible=!0,this.following=!0}return Object.defineProperty(t.prototype,"ParentInstrument",{get:function(){return this.parentInstrument},set:function(t){this.parentInstrument=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Voices",{get:function(){return this.voices},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Id",{get:function(){return this.id},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"Volume",{get:function(){return this.volume},set:function(t){this.volume=t},enumerable:!0,configurable:!0}),t}();e.Staff=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(102),s=n(4),a=n(1),u=n(19),c=n(33),l=n(7),h=n(5),f=n(35),p=n(10),d=n(43),b=function(t){function e(e,n){var i=t.call(this)||this;return i.needsToBeRedrawn=!0,i.staffLines=[],i.graphicalMeasures=[],i.labels=new p.default,i.measureNumberLabels=[],i.objectsToRedraw=[],i.instrumentBrackets=[],i.groupBrackets=[],i.graphicalMarkedAreas=[],i.graphicalComments=[],i.systemLines=[],i.parent=e,i.id=n,i.boundingBox=new s.BoundingBox(i,e.PositionAndShape),i.maxLabelLength=0,i.rules=i.parent.Parent.ParentMusicSheet.Rules,i}return r(e,t),Object.defineProperty(e.prototype,"Parent",{get:function(){return this.parent},set:function(t){this.parent=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"NextSystem",{get:function(){var t=this.Parent.MusicSystems.indexOf(this);return t!==this.Parent.MusicSystems.length?this.Parent.MusicSystems[t+1]:void 0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"StaffLines",{get:function(){return this.staffLines},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GraphicalMeasures",{get:function(){return this.graphicalMeasures},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"MeasureNumberLabels",{get:function(){return this.measureNumberLabels},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Labels",{get:function(){return this.labels.keys()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ObjectsToRedraw",{get:function(){return this.objectsToRedraw},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"InstrumentBrackets",{get:function(){return this.instrumentBrackets},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GroupBrackets",{get:function(){return this.groupBrackets},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GraphicalMarkedAreas",{get:function(){return this.graphicalMarkedAreas},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"GraphicalComments",{get:function(){return this.graphicalComments},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"SystemLines",{get:function(){return this.systemLines},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"Id",{get:function(){return this.id},enumerable:!0,configurable:!0}),e.prototype.createSystemLeftLine=function(t,e){var n=-t/2;this===this.parent.MusicSystems[0]&&this.parent===this.parent.Parent.MusicPages[0]&&(n=this.maxLabelLength+e-t/2);var i=this.staffLines[0].Measures[0],r=void 0;this.staffLines.length>1&&(r=this.staffLines[this.staffLines.length-1].Measures[0]);var o=this.createSystemLine(n,t,f.SystemLinesEnum.SingleThin,d.SystemLinePosition.MeasureBegin,this,i,r);this.SystemLines.push(o),o.PositionAndShape.RelativePosition=new h.PointF2D(n,0),o.PositionAndShape.BorderLeft=0,o.PositionAndShape.BorderRight=t,o.PositionAndShape.BorderTop=0,o.PositionAndShape.BorderBottom=this.boundingBox.Size.height,this.createLinesForSystemLine(o)},e.prototype.createVerticalLineForMeasure=function(t,e,n,i,r,o){var s=o.ParentStaffLine,a=new h.PointF2D(s.PositionAndShape.RelativePosition.x,s.PositionAndShape.RelativePosition.y),u=s.ParentStaff.ParentInstrument.Staves;if(s.ParentStaff===u[0]){var c=void 0;u.length>1&&(c=this.getBottomStaffLine(s).Measures[r]);var l=this.createSystemLine(t,e,n,i,this,o,c),f=a.x+t;l.PositionAndShape.RelativePosition=new h.PointF2D(f,0),l.PositionAndShape.BorderLeft=0,l.PositionAndShape.BorderRight=e,this.SystemLines.push(l)}},e.prototype.setYPositionsToVerticalLineObjectsAndCreateLines=function(t){},e.prototype.calculateBorders=function(t){},e.prototype.alignBeginInstructions=function(){},e.prototype.GetLeftBorderAbsoluteXPosition=function(){return this.StaffLines[0].PositionAndShape.AbsolutePosition.x+this.StaffLines[0].Measures[0].beginInstructionsWidth},e.prototype.GetRightBorderAbsoluteXPosition=function(){return this.StaffLines[0].PositionAndShape.AbsolutePosition.x+this.StaffLines[0].StaffLines[0].End.x},e.prototype.AddStaffMeasures=function(t){for(var e=0,n=t.length;e<n;++e){t[e].parentMusicSystem=this}this.graphicalMeasures.push(t)},e.prototype.GetSystemsFirstTimeStamp=function(){return this.graphicalMeasures[0][0].parentSourceMeasure.AbsoluteTimestamp},e.prototype.GetSystemsLastTimeStamp=function(){var t=this.graphicalMeasures[this.graphicalMeasures.length-1][0].parentSourceMeasure;return a.Fraction.plus(t.AbsoluteTimestamp,t.Duration)},e.prototype.createInstrumentBrackets=function(t,e){for(var n=0,i=t.length;n<i;++n){var r=t[n];if(r.Staves.length>1){for(var o=void 0,s=void 0,a=0,u=this.staffLines.length;a<u;++a){var c=this.staffLines[a];c.ParentStaff===r.Staves[0]&&(o=c),c.ParentStaff===r.Staves[r.Staves.length-1]&&(s=c)}void 0!==o&&void 0!==s&&this.createInstrumentBracket(o,s)}}},e.prototype.createGroupBrackets=function(t,e,n){for(var i=0,r=t.length;i<r;++i){var o=t[i];if(!(o.InstrumentalGroups.length<1)){var s=this.findFirstVisibleInstrumentInInstrumentalGroup(o),a=this.findLastVisibleInstrumentInInstrumentalGroup(o);if(void 0!==s&&void 0!==a){for(var u=void 0,c=void 0,l=0,h=this.staffLines.length;l<h;++l){var f=this.staffLines[l];f.ParentStaff===s.Staves[0]&&(u=f),f.ParentStaff===a.Staves[0]&&(c=f)}void 0!==u&&void 0!==c&&this.createGroupBracket(u,c,n),o.InstrumentalGroups.length<1||this.createGroupBrackets(o.InstrumentalGroups,e,n+1)}}}},e.prototype.createMusicSystemLabel=function(t,e,n){if(this.parent===this.parent.Parent.MusicPages[0]&&this===this.parent.MusicSystems[0]){for(var i=this.parent.Parent.ParentMusicSheet.getVisibleInstruments(),r=0,o=i.length;r<o;++r){var s=i[r],a=new c.GraphicalLabel(s.NameLabel,t,u.TextAlignment.LeftCenter,this.boundingBox);a.setLabelPositionAndShapeBorders(),this.labels.setValue(a,s)}this.maxLabelLength=0;var l=this.labels.keys();for(r=0,o=l.length;r<o;++r){var h=l[r];h.PositionAndShape.Size.width>this.maxLabelLength&&(this.maxLabelLength=h.PositionAndShape.Size.width)}this.updateMusicSystemStaffLineXPosition(e)}},e.prototype.setMusicSystemLabelsYPosition=function(){var t=this;this.parent===this.parent.Parent.MusicPages[0]&&this===this.parent.MusicSystems[0]&&this.labels.forEach(function(e,n){for(var i=0,r=0,o=0;o<t.staffLines.length;o++)if(t.staffLines[o].ParentStaff.ParentInstrument===n){for(var s=o;s<t.staffLines.length;s++){var a=t.staffLines[s];if(a.ParentStaff.ParentInstrument!==n)break;i+=a.PositionAndShape.RelativePosition.y,r++}break}r>0&&(e.PositionAndShape.RelativePosition=new h.PointF2D(0,i/r+2))})},e.prototype.checkStaffEntriesForStaffEntryLink=function(){for(var t=!1,e=!1,n=0;n<this.staffLines.length-1;n++){for(var i=0,r=this.staffLines[n].Measures.length;i<r;++i)for(var o=0,s=(a=this.staffLines[n].Measures[i]).staffEntries.length;o<s;++o){void 0!==a.staffEntries[o].sourceStaffEntry.Link&&(t=!0)}for(i=0,r=this.staffLines[n+1].Measures.length;i<r;++i){var a;for(o=0,s=(a=this.staffLines[n+1].Measures[i]).staffEntries.length;o<s;++o){void 0!==a.staffEntries[o].sourceStaffEntry.Link&&(e=!0)}}}return!(!t||!e)},e.prototype.getBottomStaffLine=function(t){for(var e=t.ParentStaff.ParentInstrument.Staves,n=e[e.length-1],i=0,r=t.ParentMusicSystem.staffLines;i<r.length;i++){var o=r[i];if(o.ParentStaff===n)return o}},e.prototype.createSystemLine=function(t,e,n,i,r,o,s){throw void 0===s&&(s=void 0),new Error("not implemented")},e.prototype.createLinesForSystemLine=function(t){},e.prototype.calcBracketsWidth=function(){for(var t=0,e=0,n=this.GroupBrackets.length;e<n;++e){var i=this.GroupBrackets[e];t=Math.max(t,i.PositionAndShape.Size.width)}for(var r=0,o=this.InstrumentBrackets.length;r<o;++r){var s=this.InstrumentBrackets[r];t=Math.max(t,s.PositionAndShape.Size.width)}return t},e.prototype.createInstrumentBracket=function(t,e){},e.prototype.createGroupBracket=function(t,e,n){},e.prototype.findFirstVisibleInstrumentInInstrumentalGroup=function(t){for(var e=0,n=t.InstrumentalGroups.length;e<n;++e){var i=t.InstrumentalGroups[e];if(!(i instanceof o.Instrument))return this.findFirstVisibleInstrumentInInstrumentalGroup(i);if(!0===i.Visible)return i}},e.prototype.findLastVisibleInstrumentInInstrumentalGroup=function(t){for(var e,n=t.InstrumentalGroups.length-1;n>=0;n--){if(!((e=t.InstrumentalGroups[n])instanceof o.Instrument))return this.findLastVisibleInstrumentInInstrumentalGroup(e);if(!0===e.Visible)return e}},e.prototype.updateMusicSystemStaffLineXPosition=function(t){for(var e=0,n=this.StaffLines.length;e<n;++e){var i=this.StaffLines[e],r=i.PositionAndShape.RelativePosition;r.x=this.maxLabelLength+t,i.PositionAndShape.RelativePosition=r,i.PositionAndShape.BorderRight=this.boundingBox.Size.width-this.maxLabelLength-t;for(var o=0;o<i.StaffLines.length;o++){var s=new h.PointF2D(i.PositionAndShape.Size.width,i.StaffLines[o].End.y);i.StaffLines[o].End=s}}},e}(l.GraphicalObject);e.MusicSystem=b},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(228),s=n(226),a=n(25),u=n(100),c=n(220),l=function(t){function e(e,n){return t.call(this,e,n)||this}return r(e,t),e.prototype.calculateBorders=function(t){if(0!==this.staffLines.length){var e=this.calcBracketsWidth();this.boundingBox.BorderLeft=-e,this.boundingBox.BorderMarginLeft=-e,this.boundingBox.XBordersHaveBeenSet=!0}},e.prototype.createSystemLine=function(t,e,n,i,r,o,u){return void 0===u&&(u=void 0),o.addMeasureLine(n,i),u&&(u.lineTo(o,a.VexFlowConverter.line(n,i)),u.addMeasureLine(n,i)),new s.SystemLine(n,i,this,o,u)},e.prototype.createInstrumentBracket=function(t,e){var n=t,i=e,r=new c.VexFlowInstrumentBrace(n,i);this.InstrumentBrackets.push(r)},e.prototype.createGroupBracket=function(t,e,n){var i=t,r=e;if(0===n){var o=new u.VexFlowInstrumentBracket(i,r,n);this.GroupBrackets.push(o)}else{var s=new c.VexFlowInstrumentBrace(i,r,n);this.GroupBrackets.push(s)}},e}(o.MusicSystem);e.VexFlowMusicSystem=l},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(229),r=n(219),o=n(98),s=n(215),a=n(58),u=n(213),c=n(211),l=n(57),h=n(96),f=function(){function t(){}return t.prototype.createMusicSystem=function(t,e){return new i.VexFlowMusicSystem(t,e)},t.prototype.createStaffLine=function(t,e){return new r.VexFlowStaffLine(t,e)},t.prototype.createStaffMeasure=function(t,e){return new o.VexFlowMeasure(e,void 0,t)},t.prototype.createExtraStaffMeasure=function(t){return new o.VexFlowMeasure(t.ParentStaff,t)},t.prototype.createStaffEntry=function(t,e){return new s.VexFlowStaffEntry(e,t,void 0)},t.prototype.createGraceStaffEntry=function(t,e){return new s.VexFlowStaffEntry(e,void 0,t)},t.prototype.createVoiceEntry=function(t,e){return new h.VexFlowVoiceEntry(t,e)},t.prototype.createNote=function(t,e,n,i,r){return void 0===i&&(i=a.OctaveEnum.NONE),void 0===r&&(r=void 0),new u.VexFlowGraphicalNote(t,e,n,i,r)},t.prototype.createGraceNote=function(t,e,n,i){return void 0===i&&(i=a.OctaveEnum.NONE),new u.VexFlowGraphicalNote(t,e,n,i)},t.prototype.addGraphicalAccidental=function(t,e,n,i){t.setPitch(e)},t.prototype.addFermataAtTiedEndNote=function(t,e){},t.prototype.createInStaffClef=function(t,e){},t.prototype.createChordSymbol=function(t,e,n){var i=new c.GraphicalChordSymbolContainer(t.ChordContainer,e.PositionAndShape,l.EngravingRules.Rules.ChordSymbolTextHeight,n);i.GetGraphicalLabel.setLabelPositionAndShapeBorders(),i.PositionAndShape.calculateBoundingBox(),e.graphicalChordContainer=i},t.prototype.createGraphicalTechnicalInstruction=function(t,e){},t}();e.VexFlowGraphicalSymbolFactory=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(2),r=n(12),o=n(10),s=n(20),a=function(){function t(){this.keySignatureNoteAlterationsDict=new o.default,this.currentAlterationsComparedToKeyInstructionList=[],this.currentInMeasureNoteAlterationsDict=new o.default}return Object.defineProperty(t.prototype,"ActiveKeyInstruction",{get:function(){return this.activeKeyInstruction},set:function(t){this.activeKeyInstruction=t,this.reactOnKeyInstructionChange()},enumerable:!0,configurable:!0}),t.prototype.doCalculationsAtEndOfMeasure=function(){this.currentInMeasureNoteAlterationsDict.clear();for(var t=0,e=this.keySignatureNoteAlterationsDict.keys();t<e.length;t++){var n=e[t];this.currentInMeasureNoteAlterationsDict.setValue(n,this.keySignatureNoteAlterationsDict.getValue(n))}},t.prototype.checkAccidental=function(t,e,n,r){if(void 0!==e){var o=e.FundamentalNote+12*e.Octave,a=this.currentAlterationsComparedToKeyInstructionList.indexOf(o)>=0;this.currentInMeasureNoteAlterationsDict.containsKey(o)?(a&&this.currentAlterationsComparedToKeyInstructionList.splice(this.currentAlterationsComparedToKeyInstructionList.indexOf(o),1),this.currentInMeasureNoteAlterationsDict.getValue(o)!==e.Accidental&&(this.keySignatureNoteAlterationsDict.containsKey(o)&&this.keySignatureNoteAlterationsDict.getValue(o)!==e.Accidental?(this.currentAlterationsComparedToKeyInstructionList.push(o),this.currentInMeasureNoteAlterationsDict.setValue(o,e.Accidental)):this.currentInMeasureNoteAlterationsDict.remove(o),s.MusicSheetCalculator.symbolFactory.addGraphicalAccidental(t,e,n,r))):e.Accidental!==i.AccidentalEnum.NONE?(a||this.currentAlterationsComparedToKeyInstructionList.push(o),this.currentInMeasureNoteAlterationsDict.setValue(o,e.Accidental),s.MusicSheetCalculator.symbolFactory.addGraphicalAccidental(t,e,n,r)):a&&(this.currentAlterationsComparedToKeyInstructionList.splice(this.currentAlterationsComparedToKeyInstructionList.indexOf(o),1),s.MusicSheetCalculator.symbolFactory.addGraphicalAccidental(t,e,n,r))}},t.prototype.reactOnKeyInstructionChange=function(){var t,e=r.KeyInstruction.getNoteEnumList(this.activeKeyInstruction);t=this.activeKeyInstruction.Key>0?i.AccidentalEnum.SHARP:i.AccidentalEnum.FLAT,this.keySignatureNoteAlterationsDict.clear(),this.currentAlterationsComparedToKeyInstructionList.length=0;for(var n=-9;n<9;n++)for(var o=0;o<e.length;o++)this.keySignatureNoteAlterationsDict.setValue(e[o]+12*n,t);this.doCalculationsAtEndOfMeasure()},t}();e.AccidentalCalculator=a},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){return function(t,e,n){this.getOpenOctaveShift=t,this.getAbsoluteStartTimestamp=e,this.getAbsoluteEndTimestamp=n}}();e.OctaveShiftParams=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e}(n(7).GraphicalObject);e.Clickable=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(106),r=n(16),o=n(12),s=n(8),a=n(5),u=n(45),c=n(35),l=n(20),h=n(8),f=n(44),p=n(43),d=function(){function t(){this.globalSystemIndex=0,this.leadSheet=!1}return t.prototype.initialize=function(t,e,n){this.leadSheet=t.LeadSheet,this.graphicalMusicSheet=t,this.rules=this.graphicalMusicSheet.ParentMusicSheet.rules,this.measureList=e,this.currentMusicPage=this.createMusicPage(),this.currentPageHeight=0,this.numberOfVisibleStaffLines=n,this.activeRhythm=new Array(this.numberOfVisibleStaffLines),this.activeKeys=new Array(this.numberOfVisibleStaffLines),this.activeClefs=new Array(this.numberOfVisibleStaffLines),this.initializeActiveInstructions(this.measureList[0])},t.prototype.buildMusicSystems=function(){var t=!1,e=this.getFullPageSystemWidth();this.measureListIndex=0,this.currentSystemParams=new b,this.currentSystemParams.currentSystem=this.initMusicSystem(),this.layoutSystemStaves(),this.currentSystemParams.currentSystem.createMusicSystemLabel(this.rules.InstrumentLabelTextHeight,this.rules.SystemLabelsRightMargin,this.rules.LabelMarginBorderFactor),this.currentPageHeight+=this.currentSystemParams.currentSystem.PositionAndShape.RelativePosition.y;for(var n=0,i=0,r=this.measureList.length;i<r;++i)this.measureList[i].length>0&&n++;for(;this.measureListIndex<n;){var o=this.measureList[this.measureListIndex];for(i=0,r=o.length;i<r;++i)o[i].resetLayout();var s=o[0].parentSourceMeasure,a=s.BreakSystemAfter,u=this.currentSystemParams.IsSystemStartMeasure(),c=s===this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure(),l=this.rules.MeasureLeftMargin,h=0,f=this.getMeasureStartLine();l+=this.getLineWidth(o[0],f,u),this.leadSheet||(l+=this.addBeginInstructions(o,u,c),h+=this.addEndInstructions(o));for(var p=0,d=0;d<this.numberOfVisibleStaffLines;d++)p=Math.max(p,o[d].minimumStaffEntriesWidth);var y=this.getMeasureEndLine();h+=this.getLineWidth(o[0],y,u);var m=this.rules.MeasureLeftMargin;if(this.measureListIndex+1<this.measureList.length){var v=this.measureList[this.measureListIndex+1];v[0].parentSourceMeasure.hasBeginInstructions()&&(m+=this.addBeginInstructions(v,!1,!1))}var g=l+h+p,_=this.currentSystemParams.currentWidth+g+m<e;u||_?(this.addMeasureToSystem(o,f,y,g,l,p,h),this.updateActiveClefs(s,o),this.measureListIndex++):this.finalizeCurrentAndCreateNewSystem(o,t),t=a}this.finalizeCurrentAndCreateNewSystem(this.measureList[this.measureList.length-1],!0)},t.prototype.setMeasureWidth=function(t,e,n,i){for(var r=0,o=t.length;r<o;++r){var s=t[r];s.setWidth(e),n>0&&(s.beginInstructionsWidth=n),i>0&&(s.endInstructionsWidth=i)}},t.prototype.finalizeCurrentAndCreateNewSystem=function(t,e){void 0===e&&(e=!1),this.adaptRepetitionLineWithIfNeeded(),e||this.checkAndCreateExtraInstructionMeasure(t),this.stretchMusicSystem(e),this.currentPageHeight+this.currentSystemParams.currentSystem.PositionAndShape.Size.height+this.rules.SystemDistance<=this.rules.PageHeight?(this.currentPageHeight+=this.currentSystemParams.currentSystem.PositionAndShape.Size.height+this.rules.SystemDistance,this.currentPageHeight+this.currentSystemParams.currentSystem.PositionAndShape.Size.height+this.rules.SystemDistance>=this.rules.PageHeight&&(this.currentMusicPage=this.createMusicPage(),this.currentPageHeight=this.rules.PageTopMargin+this.rules.TitleTopDistance)):(this.currentMusicPage=this.createMusicPage(),this.currentPageHeight=this.rules.PageTopMargin+this.rules.TitleTopDistance),this.currentSystemParams=new b,this.measureListIndex<this.measureList.length&&(this.currentSystemParams.currentSystem=this.initMusicSystem(),this.layoutSystemStaves())},t.prototype.adaptRepetitionLineWithIfNeeded=function(){var t=this.currentSystemParams.systemMeasures;if(t.length>=1){var e=this.currentSystemParams.currentSystem.GraphicalMeasures[this.currentSystemParams.currentSystem.GraphicalMeasures.length-1],n=t[t.length-1],i=0;n.endLine===c.SystemLinesEnum.DotsBoldBoldDots&&(n.endLine=c.SystemLinesEnum.DotsThinBold,i=e[0].getLineWidth(c.SystemLinesEnum.DotsBoldBoldDots)/2-e[0].getLineWidth(c.SystemLinesEnum.DotsThinBold)),this.currentSystemParams.currentSystemFixWidth-=i;for(var r=0,o=e.length;r<o;++r){e[r].endInstructionsWidth-=i}}},t.prototype.addMeasureToSystem=function(t,e,n,i,r,o,s){this.currentSystemParams.systemMeasures.push({beginLine:e,endLine:n}),this.setMeasureWidth(t,i,r,s),this.addStaveMeasuresToSystem(t),this.currentSystemParams.currentWidth+=i,this.currentSystemParams.currentSystemFixWidth+=r+s,this.currentSystemParams.currentSystemVarWidth+=o,this.currentSystemParams.systemMeasureIndex++},t.prototype.createMusicPage=function(){var t=new i.GraphicalMusicPage(this.graphicalMusicSheet);return this.graphicalMusicSheet.MusicPages.push(t),t.PositionAndShape.BorderLeft=0,t.PositionAndShape.BorderRight=this.graphicalMusicSheet.ParentMusicSheet.pageWidth,t.PositionAndShape.BorderTop=0,t.PositionAndShape.BorderBottom=this.rules.PageHeight,t.PositionAndShape.RelativePosition=new a.PointF2D(0,0),t},t.prototype.initMusicSystem=function(){var t=l.MusicSheetCalculator.symbolFactory.createMusicSystem(this.currentMusicPage,this.globalSystemIndex++);return this.currentMusicPage.MusicSystems.push(t),t},t.prototype.getFullPageSystemWidth=function(){return this.currentMusicPage.PositionAndShape.Size.width-this.rules.PageLeftMargin-this.rules.PageRightMargin-this.rules.SystemLeftMargin-this.rules.SystemRightMargin},t.prototype.layoutSystemStaves=function(){var t=this.getFullPageSystemWidth(),e=this.currentSystemParams.currentSystem,n=e.PositionAndShape;n.BorderLeft=0,n.BorderRight=t,n.BorderTop=0;for(var i=[],r=this.graphicalMusicSheet.ParentMusicSheet.Instruments,o=0,s=r.length;o<s;++o){var a=r[o];if(0!==a.Voices.length&&a.Visible)for(var u=0,c=a.Staves.length;u<c;++u){var l=a.Staves[u];i.push(l)}}var h=!1;if(this.leadSheet)for(o=0,s=i.length;o<s;++o){if((l=i[o]).ParentInstrument.LyricVersesNumbers.length>1){h=!0;break}}for(var f=0,p=0;p<i.length;p++)if(this.addStaffLineToMusicSystem(e,f,i[p]),f+=this.rules.StaffHeight,p+1<i.length){f+=this.leadSheet&&!h?2.5:i[p].ParentInstrument===i[p+1].ParentInstrument?this.rules.BetweenStaffDistance:this.rules.StaffDistance}n.BorderBottom=f},t.prototype.addStaffLineToMusicSystem=function(t,e,n){if(void 0!==t){var i=l.MusicSheetCalculator.symbolFactory.createStaffLine(t,n);t.StaffLines.push(i);var r=i.PositionAndShape,o=new a.PointF2D;t.Parent.MusicSystems[0]===t&&t.Parent===t.Parent.Parent.MusicPages[0]?o.x=this.rules.FirstSystemMargin:o.x=0,o.y=e,r.RelativePosition=o,t.Parent.MusicSystems[0]===t&&t.Parent===t.Parent.Parent.MusicPages[0]?r.BorderRight=t.PositionAndShape.Size.width-this.rules.FirstSystemMargin:r.BorderRight=t.PositionAndShape.Size.width,r.BorderLeft=0,r.BorderTop=0,r.BorderBottom=this.rules.StaffHeight;for(var s=0;s<5;s++){var c=new a.PointF2D;c.x=0,c.y=s*this.rules.StaffHeight/4;var h=new a.PointF2D;h.x=i.PositionAndShape.Size.width,h.y=s*this.rules.StaffHeight/4,this.leadSheet&&(c.y=h.y=0),i.StaffLines[s]=new u.GraphicalLine(c,h,this.rules.StaffLineWidth)}}},t.prototype.initializeActiveInstructions=function(t){var e=this.graphicalMusicSheet.ParentMusicSheet.getFirstSourceMeasure();if(void 0!==e){this.visibleStaffIndices=this.graphicalMusicSheet.getVisibleStavesIndecesFromSourceMeasure(t);for(var n=0,i=this.visibleStaffIndices.length;n<i;n++){var r=this.visibleStaffIndices[n],s=this.graphicalMusicSheet.getGraphicalMeasureFromSourceMeasureAndIndex(e,r);this.activeClefs[n]=e.FirstInstructionsStaffEntries[r].Instructions[0];var a=o.KeyInstruction.copy(e.FirstInstructionsStaffEntries[r].Instructions[1]);a=this.transposeKeyInstruction(a,s),this.activeKeys[n]=a,this.activeRhythm[n]=e.FirstInstructionsStaffEntries[r].Instructions[2]}}},t.prototype.transposeKeyInstruction=function(t,e){return 0!==this.graphicalMusicSheet.ParentMusicSheet.Transpose&&e.ParentStaff.ParentInstrument.MidiInstrumentId!==h.MidiInstrument.Percussion&&void 0!==l.MusicSheetCalculator.transposeCalculator&&l.MusicSheetCalculator.transposeCalculator.transposeKey(t,this.graphicalMusicSheet.ParentMusicSheet.Transpose),t},t.prototype.addBeginInstructions=function(t,e,n){var i=t.length;if(0===i)return 0;for(var r=0,o=t[0].parentSourceMeasure,s=0;s<i;++s){var a=t[s],u=this.visibleStaffIndices[s],c=o.FirstInstructionsStaffEntries[u],l=this.AddInstructionsAtMeasureBegin(c,a,s,n,e);r=Math.max(r,l)}return r},t.prototype.addEndInstructions=function(t){var e=t.length;if(0===e)return 0;for(var n=.5,i=t[0].parentSourceMeasure,r=0;r<e;r++){var o=t[r],s=this.visibleStaffIndices[r],a=i.LastInstructionsStaffEntries[s],u=this.addInstructionsAtMeasureEnd(a,o);n=Math.max(n,u)}return n},t.prototype.AddInstructionsAtMeasureBegin=function(t,e,n,i,a){var u=0,c=void 0,l=void 0,h=void 0;if(void 0!==t)for(var f=0,p=t.Instructions.length;f<p;++f){var d=t.Instructions[f];d instanceof s.ClefInstruction?c=d:d instanceof o.KeyInstruction?l=d:d instanceof r.RhythmInstruction&&(h=d)}a&&(void 0===c&&(c=this.activeClefs[n]),void 0===l&&(l=this.activeKeys[n]),i&&void 0===h&&(h=this.activeRhythm[n]));var b=!1,y=!1,m=!1;if(void 0!==c?(e.addClefAtBegin(c),b=!0):c=this.activeClefs[n],void 0!==l){l=this.transposeKeyInstruction(l,e);var v=a?void 0:this.activeKeys[n];e.addKeyAtBegin(l,v,c),y=!0}return void 0!==h&&(e.addRhythmAtBegin(h),m=!0),(b||y||m)&&(u+=e.beginInstructionsWidth,m&&(u+=this.rules.RhythmRightMargin)),u},t.prototype.addInstructionsAtMeasureEnd=function(t,e){if(void 0===t||void 0===t.Instructions||0===t.Instructions.length)return 0;for(var n=0,i=t.Instructions.length;n<i;++n){var r=t.Instructions[n];if(r instanceof s.ClefInstruction){var o=r;e.addClefAtEnd(o)}}return this.rules.MeasureRightMargin+e.endInstructionsWidth},t.prototype.updateActiveClefs=function(t,e){for(var n=0,i=e.length;n<i;n++){var a=this.visibleStaffIndices[n],u=t.FirstInstructionsStaffEntries[a];if(void 0!==u)for(var c=0,l=u.Instructions.length;c<l;++c){(m=u.Instructions[c])instanceof s.ClefInstruction?this.activeClefs[n]=m:m instanceof o.KeyInstruction?this.activeKeys[n]=m:m instanceof r.RhythmInstruction&&(this.activeRhythm[n]=m)}var h=t.getEntriesPerStaff(a);for(c=0,l=h.length;c<l;++c){var f=h[c];if(void 0!==f.Instructions)for(var p=0,d=f.Instructions.length;p<d;++p){(m=f.Instructions[p])instanceof s.ClefInstruction&&(this.activeClefs[n]=m)}}var b=t.LastInstructionsStaffEntries[a];if(void 0!==b){var y=b.Instructions;for(c=0,d=y.length;c<d;++c){var m;(m=y[c])instanceof s.ClefInstruction&&(this.activeClefs[n]=m)}}}},t.prototype.checkAndCreateExtraInstructionMeasure=function(t){for(var e=t[0].parentSourceMeasure.FirstInstructionsStaffEntries,n=[],i=0,s=t.length;i<s;++i){var a=t[i];n.push(e[a.ParentStaff.idInMusicSheet])}var u=0,l=0;for(s=n.length;l<s;++l){var h=n[l];if(void 0!==h){for(var f=h.Instructions,p=void 0,d=void 0,b=0,y=f.length;b<y;++b){var m=f[b];m instanceof o.KeyInstruction&&m.Key!==this.activeKeys[l].Key&&(p=m),m instanceof r.RhythmInstruction&&m!==this.activeRhythm[l]&&(d=m)}if(void 0!==p||void 0!==d){var v=this.addExtraInstructionMeasure(l,p,d);u=Math.max(u,v)}}}u>0&&(this.currentSystemParams.systemMeasures.push({beginLine:c.SystemLinesEnum.None,endLine:c.SystemLinesEnum.None}),this.currentSystemParams.currentWidth+=u,this.currentSystemParams.currentSystemFixWidth+=u)},t.prototype.addExtraInstructionMeasure=function(t,e,n){var i=this.currentSystemParams.currentSystem,r=l.MusicSheetCalculator.symbolFactory.createExtraStaffMeasure(i.StaffLines[t]);[].push(r),void 0!==e&&r.addKeyAtBegin(e,this.activeKeys[t],this.activeClefs[t]),void 0!==n&&r.addRhythmAtBegin(n),r.PositionAndShape.BorderLeft=0,r.PositionAndShape.BorderTop=0,r.PositionAndShape.BorderBottom=this.rules.StaffHeight;var o=this.rules.MeasureLeftMargin+r.beginInstructionsWidth+this.rules.MeasureRightMargin;return r.PositionAndShape.BorderRight=o,i.StaffLines[t].Measures.push(r),o},t.prototype.addStaveMeasuresToSystem=function(t){if(void 0!==t[0]){for(var e=[],n=0;n<t.length;n++)e.push(t[n]);for(var i=this.currentSystemParams.currentSystem,r=0;r<this.numberOfVisibleStaffLines;r++){var o=e[r];i.StaffLines[r].Measures.push(o),o.ParentStaffLine=i.StaffLines[r]}i.AddStaffMeasures(e)}},t.prototype.getMeasureStartLine=function(){if(this.thisMeasureBeginsLineRepetition()){var t=this.currentSystemParams.IsSystemStartMeasure(),e=0===this.measureListIndex;if(this.previousMeasureEndsLineRepetition()&&!t)return c.SystemLinesEnum.DotsBoldBoldDots;if(!e)return c.SystemLinesEnum.BoldThinDots}return c.SystemLinesEnum.None},t.prototype.getMeasureEndLine=function(){return this.nextMeasureBeginsLineRepetition()&&this.thisMeasureEndsLineRepetition()?c.SystemLinesEnum.DotsBoldBoldDots:this.thisMeasureEndsLineRepetition()?c.SystemLinesEnum.DotsThinBold:this.measureListIndex===this.measureList.length-1||this.measureList[this.measureListIndex][0].parentSourceMeasure.endsPiece?c.SystemLinesEnum.ThinBold:this.nextMeasureHasKeyInstructionChange()||this.thisMeasureEndsWordRepetition()||this.nextMeasureBeginsWordRepetition()?c.SystemLinesEnum.DoubleThin:c.SystemLinesEnum.SingleThin},t.prototype.getLineWidth=function(t,e,n){var i=t.getLineWidth(e);return e===c.SystemLinesEnum.DotsBoldBoldDots&&(i/=2),n&&e===c.SystemLinesEnum.BoldThinDots&&(i+=this.rules.DistanceBetweenLastInstructionAndRepetitionBarline),i},t.prototype.previousMeasureEndsLineRepetition=function(){if(0===this.measureListIndex)return!1;for(var t=0,e=this.measureList[this.measureListIndex-1].length;t<e;++t){if(this.measureList[this.measureListIndex-1][t].endsWithLineRepetition())return!0}return!1},t.prototype.thisMeasureBeginsLineRepetition=function(){for(var t=0,e=this.measureList[this.measureListIndex].length;t<e;++t){if(this.measureList[this.measureListIndex][t].beginsWithLineRepetition())return!0}return!1},t.prototype.nextMeasureBeginsLineRepetition=function(){var t=this.measureListIndex+1;if(t>=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length)return!1;for(var e=0,n=this.measureList[t].length;e<n;++e){if(this.measureList[t][e].beginsWithLineRepetition())return!0}return!1},t.prototype.thisMeasureEndsLineRepetition=function(){for(var t=0,e=this.measureList[this.measureListIndex].length;t<e;++t){if(this.measureList[this.measureListIndex][t].endsWithLineRepetition())return!0}return!1},t.prototype.nextMeasureBeginsWordRepetition=function(){var t=this.measureListIndex+1;if(t>=this.graphicalMusicSheet.ParentMusicSheet.SourceMeasures.length)return!1;for(var e=0,n=this.measureList[t].length;e<n;++e){if(this.measureList[t][e].beginsWithWordRepetition())return!0}return!1},t.prototype.thisMeasureEndsWordRepetition=function(){for(var t=0,e=this.measureList[this.measureListIndex].length;t<e;++t){if(this.measureList[this.measureListIndex][t].endsWithWordRepetition())return!0}return!1},t.prototype.nextMeasureHasKeyInstructionChange=function(){return void 0!==this.getNextMeasureKeyInstruction()},t.prototype.getNextMeasureKeyInstruction=function(){if(this.measureListIndex<this.measureList.length-1)for(var t=0;t<this.measureList[this.measureListIndex].length;t++){var e=this.measureList[this.measureListIndex+1][t].parentSourceMeasure;if(void 0===e)return;return e.getKeyInstruction(this.visibleStaffIndices[t])}},t.prototype.calculateXScalingFactor=function(t,e){return Math.abs(e-0)<1e-5||Math.abs(t-0)<1e-5?1:(this.currentSystemParams.currentSystem.StaffLines[0].PositionAndShape.Size.width-t)/e},t.prototype.stretchMusicSystem=function(t){var e=this.calculateXScalingFactor(this.currentSystemParams.currentSystemFixWidth,this.currentSystemParams.currentSystemVarWidth);t&&(e=Math.min(e,this.rules.LastSystemMaxScalingFactor));for(var n=this.currentSystemParams.currentSystem,i=0,r=n.StaffLines.length;i<r;++i)for(var o=n.StaffLines[i],s=0,a=0;a<o.Measures.length;a++){var u=o.Measures[a];if(u.setPositionInStaffline(s),u.setWidth(u.beginInstructionsWidth+u.minimumStaffEntriesWidth*e+u.endInstructionsWidth),a<this.currentSystemParams.systemMeasures.length){var l=this.currentSystemParams.systemMeasures[a].beginLine,h=u.getLineWidth(c.SystemLinesEnum.BoldThinDots);switch(l){case c.SystemLinesEnum.BoldThinDots:var f=s;0===a&&(f=s+u.beginInstructionsWidth-h),n.createVerticalLineForMeasure(f,h,l,p.SystemLinePosition.MeasureBegin,a,u)}}if(u.staffEntriesScaleFactor=e,u.layoutSymbols(),!(a+1<this.currentSystemParams.systemMeasures.length&&this.currentSystemParams.systemMeasures[a+1].beginLine===c.SystemLinesEnum.BoldThinDots)){var d=c.SystemLinesEnum.SingleThin;a<this.currentSystemParams.systemMeasures.length&&(d=this.currentSystemParams.systemMeasures[a].endLine);h=u.getLineWidth(d);var b=u.PositionAndShape.RelativePosition.x+u.PositionAndShape.BorderRight-h;d===c.SystemLinesEnum.DotsBoldBoldDots&&(b-=h/2),n.createVerticalLineForMeasure(b,h,d,p.SystemLinePosition.MeasureEnd,a,u)}s=u.PositionAndShape.RelativePosition.x+u.PositionAndShape.BorderRight}t&&this.decreaseMusicSystemBorders()},t.prototype.decreaseMusicSystemBorders=function(){for(var t=this.currentSystemParams.currentSystem,e=f.CollectionUtil.last(t.StaffLines[0].Measures).PositionAndShape,n=e.RelativePosition.x+e.Size.width,i=0,r=t.StaffLines.length;i<r;++i){var o=t.StaffLines[i];o.PositionAndShape.BorderRight=n;for(var s=0,u=o.StaffLines.length;s<u;++s){var c=o.StaffLines[s];c.End=new a.PointF2D(n,c.End.y)}}t.PositionAndShape.BorderRight=n+this.currentSystemParams.maxLabelLength+this.rules.SystemLabelsRightMargin},t}();e.MusicSystemBuilder=d;var b=function(){function t(){this.systemMeasures=[],this.systemMeasureIndex=0,this.currentWidth=0,this.currentSystemFixWidth=0,this.currentSystemVarWidth=0,this.maxLabelLength=0}return t.prototype.IsSystemStartMeasure=function(){return 0===this.systemMeasureIndex},t}();e.SystemBuildParameters=b;var y=function(){return function(){}}();e.MeasureBuildParameters=y},function(t,e,n){"use strict";var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.BEFORE=0]="BEFORE",t[t.AFTER=1]="AFTER",t[t.INSIDE_AT_END=2]="INSIDE_AT_END",t[t.INSIDE_AT_START=3]="INSIDE_AT_START"}(i||(i={}));var r=function(){function t(t,e){void 0===t&&(t=[]),void 0===e&&(e={}),this.rootIds=t,this.nodes=e,this.initRootIds(),this.initNodes()}return t.prototype.initRootIds=function(){for(var t=0,e=this.rootIds;t<e.length;t++){var n=e[t];this.createEmptyNodeIfNotExist(n)}},t.prototype.initNodes=function(){for(var t in this.nodes)if(this.nodes.hasOwnProperty(t))for(var e=0,n=this.nodes[t];e<n.length;e++){var i=n[e];this.createEmptyNodeIfNotExist(i)}},t.prototype.createEmptyNodeIfNotExist=function(t){this.nodes[t]||(this.nodes[t]=[])},t.prototype.getRootIds=function(){return this.rootIds.slice()},t.prototype.getNodes=function(){var t={};for(var e in this.nodes)this.nodes.hasOwnProperty(e)&&(t[e]=this.nodes[e].slice());return t},t.prototype.getObject=function(){return{rootIds:this.getRootIds(),nodes:this.getNodes()}},t.prototype.toObject=function(){return this.getObject()},t.prototype.flatten=function(){for(var t=this,e=[],n=0;n<this.rootIds.length;n++){var i=this.rootIds[n];e.push({id:i,level:0,hasParent:!1,childrenCount:void 0}),u(i,this.nodes,e,0)}for(var r=0,o=e;r<o.length;r++){var s=o[r];s.childrenCount=a(s.id)}return e;function a(e){return t.nodes[e]?t.nodes[e].length:0}function u(t,e,n,i){if(void 0===i&&(i=0),t&&e&&n&&e[t]){i++;for(var r=e[t],o=0;o<r.length;o++){var s=r[o];n.push({id:s,level:i,hasParent:!0}),u(s,e,n,i)}i--}}},t.prototype.moveIdBeforeId=function(t,e){return this.moveId(t,e,i.BEFORE)},t.prototype.moveIdAfterId=function(t,e){return this.moveId(t,e,i.AFTER)},t.prototype.moveIdIntoId=function(t,e,n){return void 0===n&&(n=!0),n?this.moveId(t,e,i.INSIDE_AT_START):this.moveId(t,e,i.INSIDE_AT_END)},t.prototype.swapRootIdWithRootId=function(t,e){var n=this.findRootId(t),i=this.findRootId(e);this.swapRootPositionWithRootPosition(n,i)},t.prototype.swapRootPositionWithRootPosition=function(t,e){var n=this.rootIds[e];this.rootIds[e]=this.rootIds[t],this.rootIds[t]=n},t.prototype.deleteId=function(t){this.rootDeleteId(t),this.nodeAndSubNodesDelete(t),this.nodeRefrencesDelete(t)},t.prototype.insertIdBeforeId=function(t,e){var n=this.findRootId(t);for(var i in n>-1&&this.insertIdIntoRoot(e,n),this.nodes)if(this.nodes.hasOwnProperty(i)){var r=this.findNodeId(i,t);r>-1&&this.insertIdIntoNode(i,e,r)}},t.prototype.insertIdAfterId=function(t,e){var n=this.findRootId(t);for(var i in n>-1&&this.insertIdIntoRoot(e,n+1),this.nodes)if(this.nodes.hasOwnProperty(i)){var r=this.findNodeId(i,t);r>-1&&this.insertIdIntoNode(i,e,r+1)}},t.prototype.insertIdIntoId=function(t,e){this.nodeInsertAtEnd(t,e),this.nodes[e]=[]},t.prototype.insertIdIntoRoot=function(t,e){if(void 0===e)this.rootInsertAtEnd(t);else if(e<0){var n=this.rootIds.length;this.rootIds.splice(e+n+1,0,t)}else this.rootIds.splice(e,0,t);this.nodes[t]=this.nodes[t]||[]},t.prototype.insertIdIntoNode=function(t,e,n){if(this.nodes[t]=this.nodes[t]||[],this.nodes[e]=this.nodes[e]||[],void 0===n)this.nodeInsertAtEnd(t,e);else if(n<0){var i=this.nodes[t].length;this.nodes[t].splice(n+i+1,0,e)}else this.nodes[t].splice(n,0,e)},t.prototype.moveId=function(t,e,n){var r=t,o=this.findRootId(r);for(var s in this.nodes[e]&&e,this.nodes)if(this.nodes.hasOwnProperty(s)){this.findNodeId(s,e);break}var a=e,u=this.findRootId(a);for(var s in this.nodes[e]&&e,this.nodes)if(this.nodes.hasOwnProperty(s)){this.findNodeId(s,e);break}if(o>-1)if(u>-1)switch(this.rootDelete(o),u>o&&u--,n){case i.BEFORE:this.insertIdIntoRoot(r,u);break;case i.AFTER:this.insertIdIntoRoot(r,u+1);break;case i.INSIDE_AT_START:this.nodeInsertAtStart(a,r);break;case i.INSIDE_AT_END:this.nodeInsertAtEnd(a,r)}else for(var s in this.rootDelete(o),this.nodes){if(this.nodes.hasOwnProperty(s))if((c=this.findNodeId(s,a))>-1){switch(n){case i.BEFORE:this.insertIdIntoNode(s,r,c);break;case i.AFTER:this.insertIdIntoNode(s,r,c+1);break;case i.INSIDE_AT_START:this.nodeInsertAtStart(a,r);break;case i.INSIDE_AT_END:this.nodeInsertAtEnd(a,r)}break}}else if(u>-1){for(var s in this.nodes){if(this.nodes.hasOwnProperty(s))if((c=this.findNodeId(s,r))>-1){this.nodeDeleteAtIndex(s,c);break}}switch(n){case i.BEFORE:this.insertIdIntoRoot(r,u);break;case i.AFTER:this.insertIdIntoRoot(r,u+1);break;case i.INSIDE_AT_START:this.nodeInsertAtStart(a,r);break;case i.INSIDE_AT_END:this.nodeInsertAtEnd(a,r)}}else{for(var s in this.nodes){if(this.nodes.hasOwnProperty(s))if((c=this.findNodeId(s,r))>-1){this.nodeDeleteAtIndex(s,c);break}}for(var s in this.nodes){var c;if(this.nodes.hasOwnProperty(s))if((c=this.findNodeId(s,a))>-1){switch(n){case i.BEFORE:this.insertIdIntoNode(s,r,c);break;case i.AFTER:this.insertIdIntoNode(s,r,c+1);break;case i.INSIDE_AT_START:this.nodeInsertAtStart(a,r);break;case i.INSIDE_AT_END:this.nodeInsertAtEnd(a,r)}break}}}},t.prototype.swapArrayElements=function(t,e,n){var i=t[e];return t[e]=t[n],t[n]=i,t},t.prototype.rootDeleteId=function(t){var e=this.findRootId(t);e>-1&&this.rootDelete(e)},t.prototype.nodeAndSubNodesDelete=function(t){for(var e=[],n=0;n<this.nodes[t].length;n++){var i=this.nodes[t][n];this.nodeAndSubNodesDelete(i),e.push(t)}this.nodeDelete(t);for(n=0;n<e.length;n++)this.nodeDelete(e[n])},t.prototype.nodeRefrencesDelete=function(t){for(var e in this.nodes)if(this.nodes.hasOwnProperty(e))for(var n=0;n<this.nodes[e].length;n++){this.nodes[e][n]===t&&this.nodeDeleteAtIndex(e,n)}},t.prototype.nodeDelete=function(t){delete this.nodes[t]},t.prototype.findRootId=function(t){return this.rootIds.indexOf(t)},t.prototype.findNodeId=function(t,e){return this.nodes[t].indexOf(e)},t.prototype.findNode=function(t){return this.nodes[t]},t.prototype.nodeInsertAtStart=function(t,e){this.nodes[t].unshift(e)},t.prototype.nodeInsertAtEnd=function(t,e){this.nodes[t].push(e)},t.prototype.rootDelete=function(t){this.rootIds.splice(t,1)},t.prototype.nodeDeleteAtIndex=function(t,e){this.nodes[t].splice(e,1)},t.prototype.rootInsertAtStart=function(t){this.rootIds.unshift(t)},t.prototype.rootInsertAtEnd=function(t){this.rootIds.push(t)},t}();e.default=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(62),r=function(){function t(){this.list=new i.default}return t.prototype.push=function(t){return this.list.add(t,0)},t.prototype.add=function(t){return this.list.add(t,0)},t.prototype.pop=function(){return this.list.removeElementAtIndex(0)},t.prototype.peek=function(){return this.list.first()},t.prototype.size=function(){return this.list.size()},t.prototype.contains=function(t,e){return this.list.contains(t,e)},t.prototype.isEmpty=function(){return this.list.isEmpty()},t.prototype.clear=function(){this.list.clear()},t.prototype.forEach=function(t){this.list.forEach(t)},t}();e.default=r},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(110),o=function(){function t(t){this.heap=new r.default(i.reverseCompareFunction(t))}return t.prototype.enqueue=function(t){return this.heap.add(t)},t.prototype.add=function(t){return this.heap.add(t)},t.prototype.dequeue=function(){if(0!==this.heap.size()){var t=this.heap.peek();return this.heap.removeRoot(),t}},t.prototype.peek=function(){return this.heap.peek()},t.prototype.contains=function(t){return this.heap.contains(t)},t.prototype.isEmpty=function(){return this.heap.isEmpty()},t.prototype.size=function(){return this.heap.size()},t.prototype.clear=function(){this.heap.clear()},t.prototype.forEach=function(t){this.heap.forEach(t)},t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(10),o=n(36),s=function(){function t(t,e,n){void 0===n&&(n=!1),this.dict=new r.default(t),this.equalsF=e||i.defaultEquals,this.allowDuplicate=n}return t.prototype.getValue=function(t){var e=this.dict.getValue(t);return i.isUndefined(e)?[]:o.copy(e)},t.prototype.setValue=function(t,e){if(i.isUndefined(t)||i.isUndefined(e))return!1;if(!this.containsKey(t))return this.dict.setValue(t,[e]),!0;var n=this.dict.getValue(t);return!(!this.allowDuplicate&&o.contains(n,e,this.equalsF))&&(n.push(e),!0)},t.prototype.remove=function(t,e){if(i.isUndefined(e)){var n=this.dict.remove(t);return!i.isUndefined(n)}var r=this.dict.getValue(t);return!!o.remove(r,e,this.equalsF)&&(0===r.length&&this.dict.remove(t),!0)},t.prototype.keys=function(){return this.dict.keys()},t.prototype.values=function(){for(var t=[],e=0,n=this.dict.values();e<n.length;e++)for(var i=0,r=n[e];i<r.length;i++){var o=r[i];t.push(o)}return t},t.prototype.containsKey=function(t){return this.dict.containsKey(t)},t.prototype.clear=function(){this.dict.clear()},t.prototype.size=function(){return this.dict.size()},t.prototype.isEmpty=function(){return this.dict.isEmpty()},t}();e.default=s},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(10),s=n(9),a=function(){function t(t,e){this.key=t,this.value=e}return t.prototype.unlink=function(){this.prev.next=this.next,this.next.prev=this.prev},t}(),u=function(t){function e(e){var n=t.call(this,e)||this;return n.head=new a(null,null),n.tail=new a(null,null),n.head.next=n.tail,n.tail.prev=n.head,n}return r(e,t),e.prototype.appendToTail=function(t){var e=this.tail.prev;e.next=t,t.prev=e,t.next=this.tail,this.tail.prev=t},e.prototype.getLinkedDictionaryPair=function(t){if(!s.isUndefined(t)){var e="$"+this.toStr(t);return this.table[e]}},e.prototype.getValue=function(t){var e=this.getLinkedDictionaryPair(t);if(!s.isUndefined(e))return e.value},e.prototype.remove=function(e){var n=this.getLinkedDictionaryPair(e);if(!s.isUndefined(n))return t.prototype.remove.call(this,e),n.unlink(),n.value},e.prototype.clear=function(){t.prototype.clear.call(this),this.head.next=this.tail,this.tail.prev=this.head},e.prototype.replace=function(t,e){var n="$"+this.toStr(e.key);e.next=t.next,e.prev=t.prev,this.remove(t.key),e.prev.next=e,e.next.prev=e,this.table[n]=e,++this.nElements},e.prototype.setValue=function(t,e){if(!s.isUndefined(t)&&!s.isUndefined(e)){var n=this.getLinkedDictionaryPair(t),i=new a(t,e),r="$"+this.toStr(t);return s.isUndefined(n)?(this.appendToTail(i),this.table[r]=i,void++this.nElements):(this.replace(n,i),n.value)}},e.prototype.keys=function(){var t=[];return this.forEach(function(e,n){t.push(e)}),t},e.prototype.values=function(){var t=[];return this.forEach(function(e,n){t.push(n)}),t},e.prototype.forEach=function(t){for(var e=this.head.next;null!=e.next;){if(!1===t(e.key,e.value))return;e=e.next}},e}(o.default);e.default=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(111),o=function(){function t(t){this.root=null,this.compare=t||i.defaultCompare,this.nElements=0}return t.prototype.add=function(t){return!i.isUndefined(t)&&(null!==this.insertNode(this.createNode(t))&&(this.nElements++,!0))},t.prototype.clear=function(){this.root=null,this.nElements=0},t.prototype.isEmpty=function(){return 0===this.nElements},t.prototype.size=function(){return this.nElements},t.prototype.contains=function(t){return!i.isUndefined(t)&&null!==this.searchNode(this.root,t)},t.prototype.remove=function(t){var e=this.searchNode(this.root,t);return null!==e&&(this.removeNode(e),this.nElements--,!0)},t.prototype.inorderTraversal=function(t){this.inorderTraversalAux(this.root,t,{stop:!1})},t.prototype.preorderTraversal=function(t){this.preorderTraversalAux(this.root,t,{stop:!1})},t.prototype.postorderTraversal=function(t){this.postorderTraversalAux(this.root,t,{stop:!1})},t.prototype.levelTraversal=function(t){this.levelTraversalAux(this.root,t)},t.prototype.minimum=function(){if(!this.isEmpty())return this.minimumAux(this.root).element},t.prototype.maximum=function(){if(!this.isEmpty())return this.maximumAux(this.root).element},t.prototype.forEach=function(t){this.inorderTraversal(t)},t.prototype.toArray=function(){var t=[];return this.inorderTraversal(function(e){return t.push(e),!0}),t},t.prototype.height=function(){return this.heightAux(this.root)},t.prototype.searchNode=function(t,e){for(var n=null;null!==t&&0!==n;)(n=this.compare(e,t.element))<0?t=t.leftCh:n>0&&(t=t.rightCh);return t},t.prototype.transplant=function(t,e){null===t.parent?this.root=e:t===t.parent.leftCh?t.parent.leftCh=e:t.parent.rightCh=e,null!==e&&(e.parent=t.parent)},t.prototype.removeNode=function(t){if(null===t.leftCh)this.transplant(t,t.rightCh);else if(null===t.rightCh)this.transplant(t,t.leftCh);else{var e=this.minimumAux(t.rightCh);e.parent!==t&&(this.transplant(e,e.rightCh),e.rightCh=t.rightCh,e.rightCh.parent=e),this.transplant(t,e),e.leftCh=t.leftCh,e.leftCh.parent=e}},t.prototype.inorderTraversalAux=function(t,e,n){null===t||n.stop||(this.inorderTraversalAux(t.leftCh,e,n),n.stop||(n.stop=!1===e(t.element),n.stop||this.inorderTraversalAux(t.rightCh,e,n)))},t.prototype.levelTraversalAux=function(t,e){var n=new r.default;for(null!==t&&n.enqueue(t);!n.isEmpty();){if(!1===e((t=n.dequeue()).element))return;null!==t.leftCh&&n.enqueue(t.leftCh),null!==t.rightCh&&n.enqueue(t.rightCh)}},t.prototype.preorderTraversalAux=function(t,e,n){null===t||n.stop||(n.stop=!1===e(t.element),n.stop||(this.preorderTraversalAux(t.leftCh,e,n),n.stop||this.preorderTraversalAux(t.rightCh,e,n)))},t.prototype.postorderTraversalAux=function(t,e,n){null===t||n.stop||(this.postorderTraversalAux(t.leftCh,e,n),n.stop||(this.postorderTraversalAux(t.rightCh,e,n),n.stop||(n.stop=!1===e(t.element))))},t.prototype.minimumAux=function(t){for(;null!==t.leftCh;)t=t.leftCh;return t},t.prototype.maximumAux=function(t){for(;null!==t.rightCh;)t=t.rightCh;return t},t.prototype.heightAux=function(t){return null===t?-1:Math.max(this.heightAux(t.leftCh),this.heightAux(t.rightCh))+1},t.prototype.insertNode=function(t){for(var e=null,n=this.root,i=null;null!==n;){if(0===(i=this.compare(t.element,n.element)))return null;i<0?(e=n,n=n.leftCh):(e=n,n=n.rightCh)}return t.parent=e,null===e?this.root=t:this.compare(t.element,e.element)<0?e.leftCh=t:e.rightCh=t,t},t.prototype.createNode=function(t){return{element:t,leftCh:null,rightCh:null,parent:null}},t}();e.default=o},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=n(10),o=n(112),s=function(){function t(t){this.toStrF=t||i.defaultToString,this.dictionary=new r.default(this.toStrF),this.nElements=0}return t.prototype.add=function(t,e){if(void 0===e&&(e=1),i.isUndefined(t)||e<=0)return!1;if(this.contains(t))this.dictionary.getValue(t).copies+=e;else{var n={value:t,copies:e};this.dictionary.setValue(t,n)}return this.nElements+=e,!0},t.prototype.count=function(t){return this.contains(t)?this.dictionary.getValue(t).copies:0},t.prototype.contains=function(t){return this.dictionary.containsKey(t)},t.prototype.remove=function(t,e){if(void 0===e&&(e=1),i.isUndefined(t)||e<=0)return!1;if(this.contains(t)){var n=this.dictionary.getValue(t);return e>n.copies?this.nElements-=n.copies:this.nElements-=e,n.copies-=e,n.copies<=0&&this.dictionary.remove(t),!0}return!1},t.prototype.toArray=function(){for(var t=[],e=0,n=this.dictionary.values();e<n.length;e++)for(var i=n[e],r=i.value,o=i.copies,s=0;s<o;s++)t.push(r);return t},t.prototype.toSet=function(){for(var t=new o.default(this.toStrF),e=0,n=this.dictionary.values();e<n.length;e++){var i=n[e].value;t.add(i)}return t},t.prototype.forEach=function(t){this.dictionary.forEach(function(e,n){for(var i=n.value,r=n.copies,o=0;o<r;o++)if(!1===t(i))return!1;return!0})},t.prototype.size=function(){return this.nElements},t.prototype.isEmpty=function(){return 0===this.nElements},t.prototype.clear=function(){this.nElements=0,this.dictionary.clear()},t}();e.default=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(36);e.arrays=i;var r=n(241);e.Bag=r.default;var o=n(240);e.BSTree=o.default;var s=n(10);e.Dictionary=s.default;var a=n(110);e.Heap=a.default;var u=n(239);e.LinkedDictionary=u.default;var c=n(62);e.LinkedList=c.default;var l=n(238);e.MultiDictionary=l.default;var h=n(109);e.FactoryDictionary=h.default;var f=n(109);e.DefaultDictionary=f.default;var p=n(111);e.Queue=p.default;var d=n(237);e.PriorityQueue=d.default;var b=n(112);e.Set=b.default;var y=n(236);e.Stack=y.default;var m=n(235);e.MultiRootTree=m.default;var v=n(9);e.util=v},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.staffEntries=[],this.absoluteTimestamp=e,this.staffEntries=new Array(t)}return Object.defineProperty(t.prototype,"Index",{get:function(){return this.index},set:function(t){this.index=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"AbsoluteTimestamp",{get:function(){return this.absoluteTimestamp},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"StaffEntries",{get:function(){return this.staffEntries},set:function(t){this.staffEntries=t},enumerable:!0,configurable:!0}),t.compareByTimestamp=function(t,e){var n=t.absoluteTimestamp.RealValue,i=e.absoluteTimestamp.RealValue;return n<i?-1:n>i?1:0},t.prototype.getFirstNonNullStaffEntry=function(){for(var t=0,e=this.staffEntries.length;t<e;++t){var n=this.staffEntries[t];if(void 0!==n)return n}},t}();e.VerticalGraphicalStaffEntryContainer=i},function(t,e,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)});Object.defineProperty(e,"__esModule",{value:!0});var o=n(20),s=n(230),a=n(210),u=n(99),c=n(15),l=n(3),h=n(32),f=n(209),p=n(208),d=function(t){function e(){var e=t.call(this)||this;return o.MusicSheetCalculator.symbolFactory=new s.VexFlowGraphicalSymbolFactory,o.MusicSheetCalculator.TextMeasurer=new u.VexFlowTextMeasurer,e}return r(e,t),e.prototype.clearRecreatedObjects=function(){t.prototype.clearRecreatedObjects.call(this);for(var e=0,n=this.graphicalMusicSheet.MeasureList;e<n.length;e++)for(var i=0,r=n[e];i<r.length;i++){r[i].clean()}},e.prototype.formatMeasures=function(){for(var t=0,e=this.graphicalMusicSheet.MeasureList;t<e.length;t++)for(var n=0,i=e[t];n<i.length;n++){var r=i[n];r.format();for(var o=0,s=r.staffEntries;o<s.length;o++){s[o].calculateXPosition()}}},e.prototype.calculateMeasureXLayout=function(t){for(var e=[],n=new c.Flow.Formatter({align_rests:!0}),i=0,r=t;i<r.length;i++){var o=(d=r[i]).vfVoices,s=[];for(var a in o)o.hasOwnProperty(a)&&(s.push(o[a]),e.push(o[a]));0!==s.length?n.joinVoices(s):l.warn("Found a measure with no voices... Continuing anyway.",o)}var u=200;if(e.length>0){u=n.preCalculateMinTotalWidth(e)/h.unitInPixels+5;for(var f=0,p=t;f<p.length;f++){var d;(d=p[f]).minimumStaffEntriesWidth=u,d!==t[0]?d.formatVoices=void 0:d.formatVoices=function(t){n.format(e,t)}}}return u},e.prototype.createGraphicalTie=function(t,e,n,i,r){return new a.GraphicalTie(t,i,r)},e.prototype.updateStaffLineBorders=function(t){},e.prototype.staffMeasureCreatedCalculations=function(t){t.staffMeasureCreatedCalculations()},e.prototype.layoutVoiceEntry=function(t,e,n,i,r){},e.prototype.layoutStaffEntry=function(t){t.parentMeasure.layoutStaffEntry(t)},e.prototype.calculateSystemYLayout=function(){for(var t=0,e=this.graphicalMusicSheet.MusicPages.length;t<e;++t){var n=this.graphicalMusicSheet.MusicPages[t];if(!this.leadSheet)for(var i=this.rules.PageTopMargin+this.rules.TitleTopDistance+this.rules.SheetTitleHeight+this.rules.TitleBottomDistance,r=0,o=n.MusicSystems.length;r<o;++r){for(var s=n.MusicSystems[r],a=0,u=0,c=s.StaffLines;u<c.length;u++){c[u].PositionAndShape.RelativePosition.y=a,a+=10}s.PositionAndShape.BorderBottom=a+0,s.PositionAndShape.RelativePosition.x=this.rules.PageLeftMargin+this.rules.SystemLeftMargin,s.PositionAndShape.RelativePosition.y=i,i+=a+5}}},e.prototype.initStaffMeasuresCreation=function(){},e.prototype.layoutArticulationMarks=function(t,e,n){},e.prototype.layoutGraphicalTie=function(t,e){var n=t.StartNote,i=t.EndNote,r=void 0,o=0;void 0!==n&&(r=n.vfnote[0],o=n.vfnote[1]);var s=void 0,a=0;if(void 0!==i&&(s=i.vfnote[0],a=i.vfnote[1]),e){var u=new c.Flow.StaveTie({first_indices:[o],first_note:r});n.parentVoiceEntry.parentStaffEntry.parentMeasure.vfTies.push(u);var l=new c.Flow.StaveTie({last_indices:[a],last_note:s});i.parentVoiceEntry.parentStaffEntry.parentMeasure.vfTies.push(l)}else{var h=new c.Flow.StaveTie({first_indices:[o],first_note:r,last_indices:[a],last_note:s});i.parentVoiceEntry.parentStaffEntry.parentMeasure.vfTies.push(h)}},e.prototype.calculateSingleOctaveShift=function(t,e,n,i){},e.prototype.calculateWordRepetitionInstruction=function(t,e){for(var n=void 0,i=this.graphicalMusicSheet.MeasureList[e],r=0,o=i.length;r<o;++r){var s=i[r];if(void 0!==s.ParentStaffLine&&s.ParentStaff.ParentInstrument.Visible){n=s;break}}void 0!==n&&n.addWordRepetition(t.type)},e.prototype.calculateMoodAndUnknownExpression=function(t,e,n){},e.prototype.handleTiedGraphicalNote=function(t,e,n,i,r,o,s,a){},e.prototype.handleBeam=function(t,e,n){t.parentVoiceEntry.parentStaffEntry.parentMeasure.handleBeam(t,e)},e.prototype.handleVoiceEntryLyrics=function(t,e,n){var i=this;t.LyricsEntries.forEach(function(t,r){var o=new f.GraphicalLyricEntry(r,e,i.rules.LyricsHeight,i.rules.StaffHeight);if(e.LyricsEntries.push(o),o.GraphicalLabel.setLabelPositionAndShapeBorders(),void 0!==r.Word){var s=r.Word.Syllables.indexOf(r),a=n.indexOf(r.Word);if(-1===a&&(n.push(r.Word),a=n.indexOf(r.Word)),0===i.graphicalLyricWords.length||a>i.graphicalLyricWords.length-1){var u=new p.GraphicalLyricWord(r.Word);o.ParentLyricWord=u,u.GraphicalLyricsEntries[s]=o,i.graphicalLyricWords.push(u)}else{u=i.graphicalLyricWords[a];o.ParentLyricWord=u,u.GraphicalLyricsEntries[s]=o,u.isFilled()&&(n.splice(a,1),i.graphicalLyricWords.splice(i.graphicalLyricWords.indexOf(u),1))}}})},e.prototype.handleVoiceEntryOrnaments=function(t,e,n){},e.prototype.handleVoiceEntryArticulations=function(t,e,n){},e.prototype.handleVoiceEntryTechnicalInstructions=function(t,e,n){},e.prototype.handleTuplet=function(t,e,n){t.parentVoiceEntry.parentStaffEntry.parentMeasure.handleTuplet(t,e)},e}(o.MusicSheetCalculator);e.VexFlowMusicSheetCalculator=d}])});

/***/ }),

/***/ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../../node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader!/home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/sass-loader/lib/loader.js!/home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(/*! ../../css-loader/lib/url/escape.js */ "../../node_modules/css-loader/lib/url/escape.js");
exports = module.exports = __webpack_require__(/*! ../../css-loader/lib/css-base.js */ "../../node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/* ---------------------------------------\n/* Fine Uploader Gallery View Styles\n/* ---------------------------------------\n\n\n/* Buttons\n------------------------------------------ */\n.qq-gallery .qq-btn {\n  float: right;\n  border: none;\n  padding: 0;\n  margin: 0;\n  box-shadow: none; }\n\n/* Upload Button\n------------------------------------------ */\n.qq-gallery .qq-upload-button {\n  display: inline;\n  width: 105px;\n  padding: 7px 10px;\n  float: left;\n  text-align: center;\n  background: #00ABC7;\n  color: #FFFFFF;\n  border-radius: 2px;\n  border: 1px solid #37B7CC;\n  box-shadow: 0 1px 1px rgba(255, 255, 255, 0.37) inset, 1px 0 1px rgba(255, 255, 255, 0.07) inset, 0 1px 0 rgba(0, 0, 0, 0.36), 0 -2px 12px rgba(0, 0, 0, 0.08) inset; }\n\n.qq-gallery .qq-upload-button-hover {\n  background: #33B6CC; }\n\n.qq-gallery .qq-upload-button-focus {\n  outline: 1px dotted #000000; }\n\n/* Drop Zone\n------------------------------------------ */\n.qq-gallery.qq-uploader {\n  position: relative;\n  min-height: 200px;\n  max-height: 490px;\n  overflow-y: hidden;\n  width: inherit;\n  border-radius: 6px;\n  border: 1px dashed #CCCCCC;\n  background-color: #FAFAFA;\n  padding: 20px; }\n\n.qq-gallery.qq-uploader:before {\n  content: attr(qq-drop-area-text) \" \";\n  position: absolute;\n  font-size: 200%;\n  left: 0;\n  width: 100%;\n  text-align: center;\n  top: 45%;\n  opacity: 0.25;\n  filter: alpha(opacity=25); }\n\n.qq-gallery .qq-upload-drop-area, .qq-upload-extra-drop-area {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  min-height: 30px;\n  z-index: 2;\n  background: #F9F9F9;\n  border-radius: 4px;\n  text-align: center; }\n\n.qq-gallery .qq-upload-drop-area span {\n  display: block;\n  position: absolute;\n  top: 50%;\n  width: 100%;\n  margin-top: -8px;\n  font-size: 16px; }\n\n.qq-gallery .qq-upload-extra-drop-area {\n  position: relative;\n  margin-top: 50px;\n  font-size: 16px;\n  padding-top: 30px;\n  height: 20px;\n  min-height: 40px; }\n\n.qq-gallery .qq-upload-drop-area-active {\n  background: #FDFDFD;\n  border-radius: 4px; }\n\n.qq-gallery .qq-upload-list {\n  margin: 0;\n  padding: 10px 0 0;\n  list-style: none;\n  max-height: 450px;\n  overflow-y: auto;\n  clear: both;\n  box-shadow: none; }\n\n/* Uploaded Elements\n------------------------------------------ */\n.qq-gallery .qq-upload-list li {\n  display: inline-block;\n  position: relative;\n  max-width: 120px;\n  margin: 0 25px 25px 0;\n  padding: 0;\n  line-height: 16px;\n  font-size: 13px;\n  color: #424242;\n  background-color: #FFFFFF;\n  border-radius: 2px;\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.22);\n  vertical-align: top;\n  /* to ensure consistent size of tiles - may need to change if qq-max-size attr on preview img changes */\n  height: 186px; }\n\n.qq-gallery .qq-upload-spinner,\n.qq-gallery .qq-upload-size,\n.qq-gallery .qq-upload-retry,\n.qq-gallery .qq-upload-failed-text,\n.qq-gallery .qq-upload-delete,\n.qq-gallery .qq-upload-pause,\n.qq-gallery .qq-upload-continue {\n  display: inline; }\n\n.qq-gallery .qq-upload-retry:hover,\n.qq-gallery .qq-upload-delete:hover,\n.qq-gallery .qq-upload-pause:hover,\n.qq-gallery .qq-upload-continue:hover {\n  background-color: transparent; }\n\n.qq-gallery .qq-upload-delete,\n.qq-gallery .qq-upload-pause,\n.qq-gallery .qq-upload-continue,\n.qq-gallery .qq-upload-cancel {\n  cursor: pointer; }\n\n.qq-gallery .qq-upload-delete,\n.qq-gallery .qq-upload-pause,\n.qq-gallery .qq-upload-continue {\n  border: none;\n  background: none;\n  color: #00A0BA;\n  font-size: 12px;\n  padding: 0; }\n\n/* to ensure consistent size of tiles - only display status text before auto-retry or after failure */\n.qq-gallery .qq-upload-status-text {\n  color: #333333;\n  font-size: 12px;\n  padding-left: 3px;\n  padding-top: 2px;\n  width: inherit;\n  display: none;\n  width: 108px; }\n\n.qq-gallery .qq-upload-fail .qq-upload-status-text {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow-x: hidden;\n  display: block; }\n\n.qq-gallery .qq-upload-retrying .qq-upload-status-text {\n  display: inline-block; }\n\n.qq-gallery .qq-upload-retrying .qq-progress-bar-container {\n  display: none; }\n\n.qq-gallery .qq-upload-cancel {\n  background-color: #525252;\n  color: #F7F7F7;\n  font-weight: bold;\n  font-family: Arial, Helvetica, sans-serif;\n  border-radius: 12px;\n  border: none;\n  height: 22px;\n  width: 22px;\n  padding: 4px;\n  position: absolute;\n  right: -5px;\n  top: -6px;\n  margin: 0;\n  line-height: 17px; }\n\n.qq-gallery .qq-upload-cancel:hover {\n  background-color: #525252; }\n\n.qq-gallery .qq-upload-retry {\n  cursor: pointer;\n  position: absolute;\n  top: 30px;\n  left: 50%;\n  margin-left: -31px;\n  box-shadow: 0 1px 1px rgba(255, 255, 255, 0.37) inset, 1px 0 1px rgba(255, 255, 255, 0.07) inset, 0 4px 4px rgba(0, 0, 0, 0.5), 0 -2px 12px rgba(0, 0, 0, 0.08) inset;\n  padding: 3px 4px;\n  border: 1px solid #d2ddc7;\n  border-radius: 2px;\n  color: inherit;\n  background-color: #EBF6E0;\n  z-index: 1; }\n\n.qq-gallery .qq-upload-retry:hover {\n  background-color: #f7ffec; }\n\n.qq-gallery .qq-file-info {\n  padding: 10px 6px 4px;\n  margin-top: -3px;\n  border-radius: 0 0 2px 2px;\n  text-align: left;\n  overflow: hidden; }\n\n.qq-gallery .qq-file-info .qq-file-name {\n  position: relative; }\n\n.qq-gallery .qq-upload-file {\n  display: block;\n  margin-right: 0;\n  margin-bottom: 3px;\n  width: auto;\n  /* to ensure consistent size of tiles - constrain text to single line */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow-x: hidden; }\n\n.qq-gallery .qq-upload-spinner {\n  display: inline-block;\n  background: url(" + escape(__webpack_require__(/*! ./loading.gif */ "../../node_modules/fine-uploader/fine-uploader/loading.gif")) + ");\n  position: absolute;\n  left: 50%;\n  margin-left: -7px;\n  top: 53px;\n  width: 15px;\n  height: 15px;\n  vertical-align: text-bottom; }\n\n.qq-gallery .qq-drop-processing {\n  display: block; }\n\n.qq-gallery .qq-drop-processing-spinner {\n  display: inline-block;\n  background: url(" + escape(__webpack_require__(/*! ./processing.gif */ "../../node_modules/fine-uploader/fine-uploader/processing.gif")) + ");\n  width: 24px;\n  height: 24px;\n  vertical-align: text-bottom; }\n\n.qq-gallery .qq-upload-failed-text {\n  display: none;\n  font-style: italic;\n  font-weight: bold; }\n\n.qq-gallery .qq-upload-failed-icon {\n  display: none;\n  width: 15px;\n  height: 15px;\n  vertical-align: text-bottom; }\n\n.qq-gallery .qq-upload-fail .qq-upload-failed-text {\n  display: inline; }\n\n.qq-gallery .qq-upload-retrying .qq-upload-failed-text {\n  display: inline; }\n\n.qq-gallery .qq-upload-list li.qq-upload-success {\n  background-color: #F2F7ED; }\n\n.qq-gallery .qq-upload-list li.qq-upload-fail {\n  background-color: #F5EDED;\n  box-shadow: 0 0 1px 0 red;\n  border: 0; }\n\n.qq-gallery .qq-progress-bar {\n  display: block;\n  background: #00abc7;\n  width: 0%;\n  height: 15px;\n  border-radius: 6px;\n  margin-bottom: 3px; }\n\n.qq-gallery .qq-total-progress-bar {\n  height: 25px;\n  border-radius: 9px; }\n\n.qq-gallery .qq-total-progress-bar-container {\n  margin-left: 9px;\n  display: inline;\n  float: right;\n  width: 500px; }\n\n.qq-gallery .qq-upload-size {\n  float: left;\n  font-size: 11px;\n  color: #929292;\n  margin-bottom: 3px;\n  margin-right: 0;\n  display: inline-block; }\n\n.qq-gallery INPUT.qq-edit-filename {\n  position: absolute;\n  opacity: 0;\n  filter: alpha(opacity=0);\n  z-index: -1;\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\"; }\n\n.qq-gallery .qq-upload-file.qq-editable {\n  cursor: pointer;\n  margin-right: 20px; }\n\n.qq-gallery .qq-edit-filename-icon.qq-editable {\n  display: inline-block;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  top: 0; }\n\n.qq-gallery INPUT.qq-edit-filename.qq-editing {\n  position: static;\n  height: 28px;\n  width: 90px;\n  width: -moz-available;\n  padding: 0 8px;\n  margin-bottom: 3px;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  font-size: 13px;\n  opacity: 1;\n  filter: alpha(opacity=100);\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\"; }\n\n.qq-gallery .qq-edit-filename-icon {\n  display: none;\n  background: url(" + escape(__webpack_require__(/*! ./edit.gif */ "../../node_modules/fine-uploader/fine-uploader/edit.gif")) + ");\n  width: 15px;\n  height: 15px;\n  vertical-align: text-bottom; }\n\n.qq-gallery .qq-delete-icon {\n  background: url(" + escape(__webpack_require__(/*! ./trash.gif */ "../../node_modules/fine-uploader/fine-uploader/trash.gif")) + ");\n  width: 15px;\n  height: 15px;\n  vertical-align: sub;\n  display: inline-block; }\n\n.qq-gallery .qq-retry-icon {\n  background: url(" + escape(__webpack_require__(/*! ./retry.gif */ "../../node_modules/fine-uploader/fine-uploader/retry.gif")) + ");\n  width: 15px;\n  height: 15px;\n  vertical-align: sub;\n  display: inline-block;\n  float: none; }\n\n.qq-gallery .qq-continue-icon {\n  background: url(" + escape(__webpack_require__(/*! ./continue.gif */ "../../node_modules/fine-uploader/fine-uploader/continue.gif")) + ");\n  width: 15px;\n  height: 15px;\n  vertical-align: sub;\n  display: inline-block; }\n\n.qq-gallery .qq-pause-icon {\n  background: url(" + escape(__webpack_require__(/*! ./pause.gif */ "../../node_modules/fine-uploader/fine-uploader/pause.gif")) + ");\n  width: 15px;\n  height: 15px;\n  vertical-align: sub;\n  display: inline-block; }\n\n.qq-gallery .qq-hide {\n  display: none; }\n\n/* Thumbnail\n------------------------------------------ */\n.qq-gallery .qq-in-progress .qq-thumbnail-wrapper {\n  /* makes the spinner on top of the thumbnail more visible */\n  opacity: 0.5;\n  filter: alpha(opacity=50); }\n\n.qq-gallery .qq-thumbnail-wrapper {\n  overflow: hidden;\n  position: relative;\n  /* to ensure consistent size of tiles - should match qq-max-size attribute value on qq-thumbnail-selector IMG element */\n  height: 120px;\n  width: 120px; }\n\n.qq-gallery .qq-thumbnail-selector {\n  border-radius: 2px 2px 0 0;\n  bottom: 0;\n  /* we will override this in the :root thumbnail selector (to help center the preview) for everything other than IE8 */\n  top: 0;\n  /* center the thumb horizontally in the tile */\n  margin: auto;\n  display: block; }\n\n/* hack to ensure we don't try to center preview in IE8, since -ms-filter doesn't mimic translateY as expected in all cases */\n:root * > .qq-gallery .qq-thumbnail-selector {\n  /* vertically center preview image on tile */\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -webkit-transform: translateY(-50%); }\n\n/* <dialog> element styles */\n.qq-gallery.qq-uploader DIALOG {\n  display: none; }\n\n.qq-gallery.qq-uploader DIALOG[open] {\n  display: block; }\n\n.qq-gallery.qq-uploader DIALOG {\n  display: none; }\n\n.qq-gallery.qq-uploader DIALOG[open] {\n  display: block; }\n\n.qq-gallery.qq-uploader DIALOG .qq-dialog-buttons {\n  text-align: center;\n  padding-top: 10px; }\n\n.qq-gallery.qq-uploader DIALOG .qq-dialog-buttons BUTTON {\n  margin-left: 5px;\n  margin-right: 5px; }\n\n.qq-gallery.qq-uploader DIALOG .qq-dialog-message-selector {\n  padding-bottom: 10px; }\n\n.qq-gallery .qq-uploader DIALOG::backdrop {\n  background-color: rgba(0, 0, 0, 0.7); }\n", ""]);

// exports


/***/ }),

/***/ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/main.scss":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader!/home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/sass-loader/lib/loader.js!../common/styles/main.scss ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ "../../node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body {\n  background-color: #fff7f8;\n  font-family: \"Ubuntu\", sans-serif;\n  /* box-shadow: 19px 6px 20px 0px black; */ }\n\ndiv[nexus-ui] select, div[nexus-ui] input {\n  font-family: \"Ubuntu\", sans-serif !important;\n  font-weight: bold !important; }\n\n#top-controls {\n  display: grid;\n  width: 30%;\n  grid-template-columns: repeat(3, 1fr); }\n\n#lfo-controls {\n  display: grid;\n  width: 40%;\n  grid-template-columns: repeat(3, 1fr);\n  text-align: center; }\n\n.header {\n  padding: 1em;\n  position: absolute;\n  left: 50%; }\n", ""]);

// exports


/***/ }),

/***/ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/osmd.scss":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader!/home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/sass-loader/lib/loader.js!../common/styles/osmd.scss ***!
  \*********************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ "../../node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".osmd-container {\n  pointer-events: none; }\n", ""]);

// exports


/***/ }),

/***/ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/overlays.scss":
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader!/home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/sass-loader/lib/loader.js!../common/styles/overlays.scss ***!
  \*************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../node_modules/css-loader/lib/css-base.js */ "../../node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".timecontainer {\n  position: absolute;\n  pointer-events: auto; }\n  .timecontainer.busy:hover {\n    cursor: wait !important; }\n  .timecontainer.busy *:hover {\n    cursor: wait !important; }\n\n.notebox {\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #009ceb;\n  opacity: 0;\n  pointer-events: none;\n  border-radius: 15px; }\n  .notebox.active {\n    opacity: 0.1; }\n    .notebox.active.available {\n      pointer-events: auto; }\n      .notebox.active.available:hover {\n        cursor: crosshair; }\n    .notebox.active:hover {\n      opacity: 0.25; }\n    .notebox.active.busy {\n      background-color: grey;\n      opacity: 0.05; }\n    .notebox.active.playing {\n      background-color: #f40081;\n      top: -1.4em;\n      height: calc(100% + 2*1.2em);\n      border: solid 0.2em;\n      border-color: blue;\n      opacity: 0.25; }\n      .notebox.active.playing:hover {\n        opacity: 0.3; }\n\n.FermataBox {\n  position: absolute;\n  pointer-events: auto;\n  z-index: 1;\n  width: 100%;\n  height: 2em;\n  top: -4.5em;\n  box-sizing: border-box;\n  border-radius: 15px;\n  border: dashed 0.15em;\n  border-color: black;\n  border-color: rgba(0, 0, 0, 0.7); }\n  .FermataBox:hover {\n    cursor: pointer;\n    background-color: rgba(0, 0, 0, 0.3); }\n  .FermataBox.active {\n    background-color: rgba(0, 0, 0, 0.6); }\n  .FermataBox.imposed {\n    background-color: rgba(0, 0, 0, 0.8);\n    cursor: not-allowed; }\n\n.ChordSelector {\n  position: absolute;\n  z-index: 2;\n  pointer-events: none;\n  top: -4.5em; }\n  .ChordSelector.active {\n    z-index: 3; }\n\n.ChordSelector > svg {\n  pointer-events: none; }\n\n.ChordSelector > svg > * {\n  pointer-events: auto; }\n\n.ChordSelector text {\n  font-family: \"Boogaloo\", cursive !important; }\n\n.ChordSelector tspan {\n  pointer-events: none; }\n\npath[id*='-spreader'] {\n  z-index: 3;\n  background-color: red; }\n\n.noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Safari */\n  -khtml-user-select: none;\n  /* Konqueror HTML */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */ }\n", ""]);

// exports


/***/ }),

/***/ "../../node_modules/css-loader/lib/css-base.js":
/*!***************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader/lib/css-base.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "../../node_modules/css-loader/lib/url/escape.js":
/*!*****************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/css-loader/lib/url/escape.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function escape(url) {
    if (typeof url !== 'string') {
        return url
    }
    // If url is already wrapped in quotes, remove them
    if (/^['"].*['"]$/.test(url)) {
        url = url.slice(1, -1);
    }
    // Should url be wrapped?
    // See https://drafts.csswg.org/css-values-3/#urls
    if (/["'() \t\n]/.test(url)) {
        return '"' + url.replace(/"/g, '\\"').replace(/\n/g, '\\n') + '"'
    }

    return url
}


/***/ }),

/***/ "../../node_modules/deep-equal/index.js":
/*!********************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/deep-equal/index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pSlice = Array.prototype.slice;
var objectKeys = __webpack_require__(/*! ./lib/keys.js */ "../../node_modules/deep-equal/lib/keys.js");
var isArguments = __webpack_require__(/*! ./lib/is_arguments.js */ "../../node_modules/deep-equal/lib/is_arguments.js");

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}


/***/ }),

/***/ "../../node_modules/deep-equal/lib/is_arguments.js":
/*!*******************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/deep-equal/lib/is_arguments.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};


/***/ }),

/***/ "../../node_modules/deep-equal/lib/keys.js":
/*!***********************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/deep-equal/lib/keys.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}


/***/ }),

/***/ "../../node_modules/fine-uploader/all.fine-uploader/templates/gallery.html":
/*!*******************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/all.fine-uploader/templates/gallery.html ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\n    Read the \"Getting Started Guide\" at http://docs.fineuploader.com/quickstart/01-getting-started.html\n    if you are not yet familiar with Fine Uploader UI.\n    Please see http://docs.fineuploader.com/features/styling.html for information\n    on how to customize this template.\n-->\n<script type=\"text/template\" id=\"qq-template\">\n    <div class=\"qq-uploader-selector qq-uploader qq-gallery\" qq-drop-area-text=\"Drop files here\">\n        <div class=\"qq-total-progress-bar-container-selector qq-total-progress-bar-container\">\n            <div role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" class=\"qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar\"></div>\n        </div>\n        <div class=\"qq-upload-drop-area-selector qq-upload-drop-area\" qq-hide-dropzone>\n            <span class=\"qq-upload-drop-area-text-selector\"></span>\n        </div>\n        <div class=\"qq-upload-button-selector qq-upload-button\">\n            <div>Upload a file</div>\n        </div>\n        <span class=\"qq-drop-processing-selector qq-drop-processing\">\n            <span>Processing dropped files...</span>\n            <span class=\"qq-drop-processing-spinner-selector qq-drop-processing-spinner\"></span>\n        </span>\n        <ul class=\"qq-upload-list-selector qq-upload-list\" role=\"region\" aria-live=\"polite\" aria-relevant=\"additions removals\">\n            <li>\n                <span role=\"status\" class=\"qq-upload-status-text-selector qq-upload-status-text\"></span>\n                <div class=\"qq-progress-bar-container-selector qq-progress-bar-container\">\n                    <div role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" class=\"qq-progress-bar-selector qq-progress-bar\"></div>\n                </div>\n                <span class=\"qq-upload-spinner-selector qq-upload-spinner\"></span>\n                <div class=\"qq-thumbnail-wrapper\">\n                    <img class=\"qq-thumbnail-selector\" qq-max-size=\"120\" qq-server-scale>\n                </div>\n                <button type=\"button\" class=\"qq-upload-cancel-selector qq-upload-cancel\">X</button>\n                <button type=\"button\" class=\"qq-upload-retry-selector qq-upload-retry\">\n                    <span class=\"qq-btn qq-retry-icon\" aria-label=\"Retry\"></span>\n                    Retry\n                </button>\n\n                <div class=\"qq-file-info\">\n                    <div class=\"qq-file-name\">\n                        <span class=\"qq-upload-file-selector qq-upload-file\"></span>\n                        <span class=\"qq-edit-filename-icon-selector qq-btn qq-edit-filename-icon\" aria-label=\"Edit filename\"></span>\n                    </div>\n                    <input class=\"qq-edit-filename-selector qq-edit-filename\" tabindex=\"0\" type=\"text\">\n                    <span class=\"qq-upload-size-selector qq-upload-size\"></span>\n                    <button type=\"button\" class=\"qq-btn qq-upload-delete-selector qq-upload-delete\">\n                        <span class=\"qq-btn qq-delete-icon\" aria-label=\"Delete\"></span>\n                    </button>\n                    <button type=\"button\" class=\"qq-btn qq-upload-pause-selector qq-upload-pause\">\n                        <span class=\"qq-btn qq-pause-icon\" aria-label=\"Pause\"></span>\n                    </button>\n                    <button type=\"button\" class=\"qq-btn qq-upload-continue-selector qq-upload-continue\">\n                        <span class=\"qq-btn qq-continue-icon\" aria-label=\"Continue\"></span>\n                    </button>\n                </div>\n            </li>\n        </ul>\n\n        <dialog class=\"qq-alert-dialog-selector\">\n            <div class=\"qq-dialog-message-selector\"></div>\n            <div class=\"qq-dialog-buttons\">\n                <button type=\"button\" class=\"qq-cancel-button-selector\">Close</button>\n            </div>\n        </dialog>\n\n        <dialog class=\"qq-confirm-dialog-selector\">\n            <div class=\"qq-dialog-message-selector\"></div>\n            <div class=\"qq-dialog-buttons\">\n                <button type=\"button\" class=\"qq-cancel-button-selector\">No</button>\n                <button type=\"button\" class=\"qq-ok-button-selector\">Yes</button>\n            </div>\n        </dialog>\n\n        <dialog class=\"qq-prompt-dialog-selector\">\n            <div class=\"qq-dialog-message-selector\"></div>\n            <input type=\"text\">\n            <div class=\"qq-dialog-buttons\">\n                <button type=\"button\" class=\"qq-cancel-button-selector\">Cancel</button>\n                <button type=\"button\" class=\"qq-ok-button-selector\">Ok</button>\n            </div>\n        </dialog>\n    </div>\n</script>\n";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/continue.gif":
/*!*****************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/continue.gif ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "1cb65b42ecd454657c4f258251ca1b61.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/edit.gif":
/*!*************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/edit.gif ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "1115b1192665d62c2c0fef7f2fb4f3b0.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css":
/*!******************************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../css-loader!../../sass-loader/lib/loader.js!./fine-uploader-gallery.css */ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../../node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ "../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/fine-uploader.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/fine-uploader.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;// Fine Uploader 5.16.2 - MIT licensed. http://fineuploader.com
(function(global) {
    var qq = function(element) {
        "use strict";
        return {
            hide: function() {
                element.style.display = "none";
                return this;
            },
            attach: function(type, fn) {
                if (element.addEventListener) {
                    element.addEventListener(type, fn, false);
                } else if (element.attachEvent) {
                    element.attachEvent("on" + type, fn);
                }
                return function() {
                    qq(element).detach(type, fn);
                };
            },
            detach: function(type, fn) {
                if (element.removeEventListener) {
                    element.removeEventListener(type, fn, false);
                } else if (element.attachEvent) {
                    element.detachEvent("on" + type, fn);
                }
                return this;
            },
            contains: function(descendant) {
                if (!descendant) {
                    return false;
                }
                if (element === descendant) {
                    return true;
                }
                if (element.contains) {
                    return element.contains(descendant);
                } else {
                    return !!(descendant.compareDocumentPosition(element) & 8);
                }
            },
            insertBefore: function(elementB) {
                elementB.parentNode.insertBefore(element, elementB);
                return this;
            },
            remove: function() {
                element.parentNode.removeChild(element);
                return this;
            },
            css: function(styles) {
                if (element.style == null) {
                    throw new qq.Error("Can't apply style to node as it is not on the HTMLElement prototype chain!");
                }
                if (styles.opacity != null) {
                    if (typeof element.style.opacity !== "string" && typeof element.filters !== "undefined") {
                        styles.filter = "alpha(opacity=" + Math.round(100 * styles.opacity) + ")";
                    }
                }
                qq.extend(element.style, styles);
                return this;
            },
            hasClass: function(name, considerParent) {
                var re = new RegExp("(^| )" + name + "( |$)");
                return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));
            },
            addClass: function(name) {
                if (!qq(element).hasClass(name)) {
                    element.className += " " + name;
                }
                return this;
            },
            removeClass: function(name) {
                var re = new RegExp("(^| )" + name + "( |$)");
                element.className = element.className.replace(re, " ").replace(/^\s+|\s+$/g, "");
                return this;
            },
            getByClass: function(className, first) {
                var candidates, result = [];
                if (first && element.querySelector) {
                    return element.querySelector("." + className);
                } else if (element.querySelectorAll) {
                    return element.querySelectorAll("." + className);
                }
                candidates = element.getElementsByTagName("*");
                qq.each(candidates, function(idx, val) {
                    if (qq(val).hasClass(className)) {
                        result.push(val);
                    }
                });
                return first ? result[0] : result;
            },
            getFirstByClass: function(className) {
                return qq(element).getByClass(className, true);
            },
            children: function() {
                var children = [], child = element.firstChild;
                while (child) {
                    if (child.nodeType === 1) {
                        children.push(child);
                    }
                    child = child.nextSibling;
                }
                return children;
            },
            setText: function(text) {
                element.innerText = text;
                element.textContent = text;
                return this;
            },
            clearText: function() {
                return qq(element).setText("");
            },
            hasAttribute: function(attrName) {
                var attrVal;
                if (element.hasAttribute) {
                    if (!element.hasAttribute(attrName)) {
                        return false;
                    }
                    return /^false$/i.exec(element.getAttribute(attrName)) == null;
                } else {
                    attrVal = element[attrName];
                    if (attrVal === undefined) {
                        return false;
                    }
                    return /^false$/i.exec(attrVal) == null;
                }
            }
        };
    };
    (function() {
        "use strict";
        qq.canvasToBlob = function(canvas, mime, quality) {
            return qq.dataUriToBlob(canvas.toDataURL(mime, quality));
        };
        qq.dataUriToBlob = function(dataUri) {
            var arrayBuffer, byteString, createBlob = function(data, mime) {
                var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, blobBuilder = BlobBuilder && new BlobBuilder();
                if (blobBuilder) {
                    blobBuilder.append(data);
                    return blobBuilder.getBlob(mime);
                } else {
                    return new Blob([ data ], {
                        type: mime
                    });
                }
            }, intArray, mimeString;
            if (dataUri.split(",")[0].indexOf("base64") >= 0) {
                byteString = atob(dataUri.split(",")[1]);
            } else {
                byteString = decodeURI(dataUri.split(",")[1]);
            }
            mimeString = dataUri.split(",")[0].split(":")[1].split(";")[0];
            arrayBuffer = new ArrayBuffer(byteString.length);
            intArray = new Uint8Array(arrayBuffer);
            qq.each(byteString, function(idx, character) {
                intArray[idx] = character.charCodeAt(0);
            });
            return createBlob(arrayBuffer, mimeString);
        };
        qq.log = function(message, level) {
            if (window.console) {
                if (!level || level === "info") {
                    window.console.log(message);
                } else {
                    if (window.console[level]) {
                        window.console[level](message);
                    } else {
                        window.console.log("<" + level + "> " + message);
                    }
                }
            }
        };
        qq.isObject = function(variable) {
            return variable && !variable.nodeType && Object.prototype.toString.call(variable) === "[object Object]";
        };
        qq.isFunction = function(variable) {
            return typeof variable === "function";
        };
        qq.isArray = function(value) {
            return Object.prototype.toString.call(value) === "[object Array]" || value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer;
        };
        qq.isItemList = function(maybeItemList) {
            return Object.prototype.toString.call(maybeItemList) === "[object DataTransferItemList]";
        };
        qq.isNodeList = function(maybeNodeList) {
            return Object.prototype.toString.call(maybeNodeList) === "[object NodeList]" || maybeNodeList.item && maybeNodeList.namedItem;
        };
        qq.isString = function(maybeString) {
            return Object.prototype.toString.call(maybeString) === "[object String]";
        };
        qq.trimStr = function(string) {
            if (String.prototype.trim) {
                return string.trim();
            }
            return string.replace(/^\s+|\s+$/g, "");
        };
        qq.format = function(str) {
            var args = Array.prototype.slice.call(arguments, 1), newStr = str, nextIdxToReplace = newStr.indexOf("{}");
            qq.each(args, function(idx, val) {
                var strBefore = newStr.substring(0, nextIdxToReplace), strAfter = newStr.substring(nextIdxToReplace + 2);
                newStr = strBefore + val + strAfter;
                nextIdxToReplace = newStr.indexOf("{}", nextIdxToReplace + val.length);
                if (nextIdxToReplace < 0) {
                    return false;
                }
            });
            return newStr;
        };
        qq.isFile = function(maybeFile) {
            return window.File && Object.prototype.toString.call(maybeFile) === "[object File]";
        };
        qq.isFileList = function(maybeFileList) {
            return window.FileList && Object.prototype.toString.call(maybeFileList) === "[object FileList]";
        };
        qq.isFileOrInput = function(maybeFileOrInput) {
            return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);
        };
        qq.isInput = function(maybeInput, notFile) {
            var evaluateType = function(type) {
                var normalizedType = type.toLowerCase();
                if (notFile) {
                    return normalizedType !== "file";
                }
                return normalizedType === "file";
            };
            if (window.HTMLInputElement) {
                if (Object.prototype.toString.call(maybeInput) === "[object HTMLInputElement]") {
                    if (maybeInput.type && evaluateType(maybeInput.type)) {
                        return true;
                    }
                }
            }
            if (maybeInput.tagName) {
                if (maybeInput.tagName.toLowerCase() === "input") {
                    if (maybeInput.type && evaluateType(maybeInput.type)) {
                        return true;
                    }
                }
            }
            return false;
        };
        qq.isBlob = function(maybeBlob) {
            if (window.Blob && Object.prototype.toString.call(maybeBlob) === "[object Blob]") {
                return true;
            }
        };
        qq.isXhrUploadSupported = function() {
            var input = document.createElement("input");
            input.type = "file";
            return input.multiple !== undefined && typeof File !== "undefined" && typeof FormData !== "undefined" && typeof qq.createXhrInstance().upload !== "undefined";
        };
        qq.createXhrInstance = function() {
            if (window.XMLHttpRequest) {
                return new XMLHttpRequest();
            }
            try {
                return new ActiveXObject("MSXML2.XMLHTTP.3.0");
            } catch (error) {
                qq.log("Neither XHR or ActiveX are supported!", "error");
                return null;
            }
        };
        qq.isFolderDropSupported = function(dataTransfer) {
            return dataTransfer.items && dataTransfer.items.length > 0 && dataTransfer.items[0].webkitGetAsEntry;
        };
        qq.isFileChunkingSupported = function() {
            return !qq.androidStock() && qq.isXhrUploadSupported() && (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);
        };
        qq.sliceBlob = function(fileOrBlob, start, end) {
            var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;
            return slicer.call(fileOrBlob, start, end);
        };
        qq.arrayBufferToHex = function(buffer) {
            var bytesAsHex = "", bytes = new Uint8Array(buffer);
            qq.each(bytes, function(idx, byt) {
                var byteAsHexStr = byt.toString(16);
                if (byteAsHexStr.length < 2) {
                    byteAsHexStr = "0" + byteAsHexStr;
                }
                bytesAsHex += byteAsHexStr;
            });
            return bytesAsHex;
        };
        qq.readBlobToHex = function(blob, startOffset, length) {
            var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length), fileReader = new FileReader(), promise = new qq.Promise();
            fileReader.onload = function() {
                promise.success(qq.arrayBufferToHex(fileReader.result));
            };
            fileReader.onerror = promise.failure;
            fileReader.readAsArrayBuffer(initialBlob);
            return promise;
        };
        qq.extend = function(first, second, extendNested) {
            qq.each(second, function(prop, val) {
                if (extendNested && qq.isObject(val)) {
                    if (first[prop] === undefined) {
                        first[prop] = {};
                    }
                    qq.extend(first[prop], val, true);
                } else {
                    first[prop] = val;
                }
            });
            return first;
        };
        qq.override = function(target, sourceFn) {
            var super_ = {}, source = sourceFn(super_);
            qq.each(source, function(srcPropName, srcPropVal) {
                if (target[srcPropName] !== undefined) {
                    super_[srcPropName] = target[srcPropName];
                }
                target[srcPropName] = srcPropVal;
            });
            return target;
        };
        qq.indexOf = function(arr, elt, from) {
            if (arr.indexOf) {
                return arr.indexOf(elt, from);
            }
            from = from || 0;
            var len = arr.length;
            if (from < 0) {
                from += len;
            }
            for (;from < len; from += 1) {
                if (arr.hasOwnProperty(from) && arr[from] === elt) {
                    return from;
                }
            }
            return -1;
        };
        qq.getUniqueId = function() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
                var r = Math.random() * 16 | 0, v = c == "x" ? r : r & 3 | 8;
                return v.toString(16);
            });
        };
        qq.ie = function() {
            return navigator.userAgent.indexOf("MSIE") !== -1 || navigator.userAgent.indexOf("Trident") !== -1;
        };
        qq.ie7 = function() {
            return navigator.userAgent.indexOf("MSIE 7") !== -1;
        };
        qq.ie8 = function() {
            return navigator.userAgent.indexOf("MSIE 8") !== -1;
        };
        qq.ie10 = function() {
            return navigator.userAgent.indexOf("MSIE 10") !== -1;
        };
        qq.ie11 = function() {
            return qq.ie() && navigator.userAgent.indexOf("rv:11") !== -1;
        };
        qq.edge = function() {
            return navigator.userAgent.indexOf("Edge") >= 0;
        };
        qq.safari = function() {
            return navigator.vendor !== undefined && navigator.vendor.indexOf("Apple") !== -1;
        };
        qq.chrome = function() {
            return navigator.vendor !== undefined && navigator.vendor.indexOf("Google") !== -1;
        };
        qq.opera = function() {
            return navigator.vendor !== undefined && navigator.vendor.indexOf("Opera") !== -1;
        };
        qq.firefox = function() {
            return !qq.edge() && !qq.ie11() && navigator.userAgent.indexOf("Mozilla") !== -1 && navigator.vendor !== undefined && navigator.vendor === "";
        };
        qq.windows = function() {
            return navigator.platform === "Win32";
        };
        qq.android = function() {
            return navigator.userAgent.toLowerCase().indexOf("android") !== -1;
        };
        qq.androidStock = function() {
            return qq.android() && navigator.userAgent.toLowerCase().indexOf("chrome") < 0;
        };
        qq.ios6 = function() {
            return qq.ios() && navigator.userAgent.indexOf(" OS 6_") !== -1;
        };
        qq.ios7 = function() {
            return qq.ios() && navigator.userAgent.indexOf(" OS 7_") !== -1;
        };
        qq.ios8 = function() {
            return qq.ios() && navigator.userAgent.indexOf(" OS 8_") !== -1;
        };
        qq.ios800 = function() {
            return qq.ios() && navigator.userAgent.indexOf(" OS 8_0 ") !== -1;
        };
        qq.ios = function() {
            return navigator.userAgent.indexOf("iPad") !== -1 || navigator.userAgent.indexOf("iPod") !== -1 || navigator.userAgent.indexOf("iPhone") !== -1;
        };
        qq.iosChrome = function() {
            return qq.ios() && navigator.userAgent.indexOf("CriOS") !== -1;
        };
        qq.iosSafari = function() {
            return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf("Safari") !== -1;
        };
        qq.iosSafariWebView = function() {
            return qq.ios() && !qq.iosChrome() && !qq.iosSafari();
        };
        qq.preventDefault = function(e) {
            if (e.preventDefault) {
                e.preventDefault();
            } else {
                e.returnValue = false;
            }
        };
        qq.toElement = function() {
            var div = document.createElement("div");
            return function(html) {
                div.innerHTML = html;
                var element = div.firstChild;
                div.removeChild(element);
                return element;
            };
        }();
        qq.each = function(iterableItem, callback) {
            var keyOrIndex, retVal;
            if (iterableItem) {
                if (window.Storage && iterableItem.constructor === window.Storage) {
                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {
                        retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));
                        if (retVal === false) {
                            break;
                        }
                    }
                } else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {
                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {
                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);
                        if (retVal === false) {
                            break;
                        }
                    }
                } else if (qq.isString(iterableItem)) {
                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {
                        retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));
                        if (retVal === false) {
                            break;
                        }
                    }
                } else {
                    for (keyOrIndex in iterableItem) {
                        if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {
                            retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);
                            if (retVal === false) {
                                break;
                            }
                        }
                    }
                }
            }
        };
        qq.bind = function(oldFunc, context) {
            if (qq.isFunction(oldFunc)) {
                var args = Array.prototype.slice.call(arguments, 2);
                return function() {
                    var newArgs = qq.extend([], args);
                    if (arguments.length) {
                        newArgs = newArgs.concat(Array.prototype.slice.call(arguments));
                    }
                    return oldFunc.apply(context, newArgs);
                };
            }
            throw new Error("first parameter must be a function!");
        };
        qq.obj2url = function(obj, temp, prefixDone) {
            var uristrings = [], prefix = "&", add = function(nextObj, i) {
                var nextTemp = temp ? /\[\]$/.test(temp) ? temp : temp + "[" + i + "]" : i;
                if (nextTemp !== "undefined" && i !== "undefined") {
                    uristrings.push(typeof nextObj === "object" ? qq.obj2url(nextObj, nextTemp, true) : Object.prototype.toString.call(nextObj) === "[object Function]" ? encodeURIComponent(nextTemp) + "=" + encodeURIComponent(nextObj()) : encodeURIComponent(nextTemp) + "=" + encodeURIComponent(nextObj));
                }
            };
            if (!prefixDone && temp) {
                prefix = /\?/.test(temp) ? /\?$/.test(temp) ? "" : "&" : "?";
                uristrings.push(temp);
                uristrings.push(qq.obj2url(obj));
            } else if (Object.prototype.toString.call(obj) === "[object Array]" && typeof obj !== "undefined") {
                qq.each(obj, function(idx, val) {
                    add(val, idx);
                });
            } else if (typeof obj !== "undefined" && obj !== null && typeof obj === "object") {
                qq.each(obj, function(prop, val) {
                    add(val, prop);
                });
            } else {
                uristrings.push(encodeURIComponent(temp) + "=" + encodeURIComponent(obj));
            }
            if (temp) {
                return uristrings.join(prefix);
            } else {
                return uristrings.join(prefix).replace(/^&/, "").replace(/%20/g, "+");
            }
        };
        qq.obj2FormData = function(obj, formData, arrayKeyName) {
            if (!formData) {
                formData = new FormData();
            }
            qq.each(obj, function(key, val) {
                key = arrayKeyName ? arrayKeyName + "[" + key + "]" : key;
                if (qq.isObject(val)) {
                    qq.obj2FormData(val, formData, key);
                } else if (qq.isFunction(val)) {
                    formData.append(key, val());
                } else {
                    formData.append(key, val);
                }
            });
            return formData;
        };
        qq.obj2Inputs = function(obj, form) {
            var input;
            if (!form) {
                form = document.createElement("form");
            }
            qq.obj2FormData(obj, {
                append: function(key, val) {
                    input = document.createElement("input");
                    input.setAttribute("name", key);
                    input.setAttribute("value", val);
                    form.appendChild(input);
                }
            });
            return form;
        };
        qq.parseJson = function(json) {
            if (window.JSON && qq.isFunction(JSON.parse)) {
                return JSON.parse(json);
            } else {
                return eval("(" + json + ")");
            }
        };
        qq.getExtension = function(filename) {
            var extIdx = filename.lastIndexOf(".") + 1;
            if (extIdx > 0) {
                return filename.substr(extIdx, filename.length - extIdx);
            }
        };
        qq.getFilename = function(blobOrFileInput) {
            if (qq.isInput(blobOrFileInput)) {
                return blobOrFileInput.value.replace(/.*(\/|\\)/, "");
            } else if (qq.isFile(blobOrFileInput)) {
                if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {
                    return blobOrFileInput.fileName;
                }
            }
            return blobOrFileInput.name;
        };
        qq.DisposeSupport = function() {
            var disposers = [];
            return {
                dispose: function() {
                    var disposer;
                    do {
                        disposer = disposers.shift();
                        if (disposer) {
                            disposer();
                        }
                    } while (disposer);
                },
                attach: function() {
                    var args = arguments;
                    this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));
                },
                addDisposer: function(disposeFunction) {
                    disposers.push(disposeFunction);
                }
            };
        };
    })();
    (function() {
        "use strict";
        if (true) {
            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                return qq;
            }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {}
    })();
    (function() {
        "use strict";
        qq.Error = function(message) {
            this.message = "[Fine Uploader " + qq.version + "] " + message;
        };
        qq.Error.prototype = new Error();
    })();
    qq.version = "5.16.2";
    qq.supportedFeatures = function() {
        "use strict";
        var supportsUploading, supportsUploadingBlobs, supportsFileDrop, supportsAjaxFileUploading, supportsFolderDrop, supportsChunking, supportsResume, supportsUploadViaPaste, supportsUploadCors, supportsDeleteFileXdr, supportsDeleteFileCorsXhr, supportsDeleteFileCors, supportsFolderSelection, supportsImagePreviews, supportsUploadProgress;
        function testSupportsFileInputElement() {
            var supported = true, tempInput;
            try {
                tempInput = document.createElement("input");
                tempInput.type = "file";
                qq(tempInput).hide();
                if (tempInput.disabled) {
                    supported = false;
                }
            } catch (ex) {
                supported = false;
            }
            return supported;
        }
        function isChrome14OrHigher() {
            return (qq.chrome() || qq.opera()) && navigator.userAgent.match(/Chrome\/[1][4-9]|Chrome\/[2-9][0-9]/) !== undefined;
        }
        function isCrossOriginXhrSupported() {
            if (window.XMLHttpRequest) {
                var xhr = qq.createXhrInstance();
                return xhr.withCredentials !== undefined;
            }
            return false;
        }
        function isXdrSupported() {
            return window.XDomainRequest !== undefined;
        }
        function isCrossOriginAjaxSupported() {
            if (isCrossOriginXhrSupported()) {
                return true;
            }
            return isXdrSupported();
        }
        function isFolderSelectionSupported() {
            return document.createElement("input").webkitdirectory !== undefined;
        }
        function isLocalStorageSupported() {
            try {
                return !!window.localStorage && qq.isFunction(window.localStorage.setItem);
            } catch (error) {
                return false;
            }
        }
        function isDragAndDropSupported() {
            var span = document.createElement("span");
            return ("draggable" in span || "ondragstart" in span && "ondrop" in span) && !qq.android() && !qq.ios();
        }
        supportsUploading = testSupportsFileInputElement();
        supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();
        supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();
        supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();
        supportsFolderDrop = supportsFileDrop && function() {
            var input = document.createElement("input");
            input.type = "file";
            return !!("webkitdirectory" in (input || document.querySelectorAll("input[type=file]")[0]));
        }();
        supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();
        supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();
        supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();
        supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);
        supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();
        supportsDeleteFileXdr = isXdrSupported();
        supportsDeleteFileCors = isCrossOriginAjaxSupported();
        supportsFolderSelection = isFolderSelectionSupported();
        supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;
        supportsUploadProgress = function() {
            if (supportsAjaxFileUploading) {
                return !qq.androidStock() && !qq.iosChrome();
            }
            return false;
        }();
        return {
            ajaxUploading: supportsAjaxFileUploading,
            blobUploading: supportsUploadingBlobs,
            canDetermineSize: supportsAjaxFileUploading,
            chunking: supportsChunking,
            deleteFileCors: supportsDeleteFileCors,
            deleteFileCorsXdr: supportsDeleteFileXdr,
            deleteFileCorsXhr: supportsDeleteFileCorsXhr,
            dialogElement: !!window.HTMLDialogElement,
            fileDrop: supportsFileDrop,
            folderDrop: supportsFolderDrop,
            folderSelection: supportsFolderSelection,
            imagePreviews: supportsImagePreviews,
            imageValidation: supportsImagePreviews,
            itemSizeValidation: supportsAjaxFileUploading,
            pause: supportsChunking,
            progressBar: supportsUploadProgress,
            resume: supportsResume,
            scaling: supportsImagePreviews && supportsUploadingBlobs,
            tiffPreviews: qq.safari(),
            unlimitedScaledImageSize: !qq.ios(),
            uploading: supportsUploading,
            uploadCors: supportsUploadCors,
            uploadCustomHeaders: supportsAjaxFileUploading,
            uploadNonMultipart: supportsAjaxFileUploading,
            uploadViaPaste: supportsUploadViaPaste
        };
    }();
    qq.isGenericPromise = function(maybePromise) {
        "use strict";
        return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));
    };
    qq.Promise = function() {
        "use strict";
        var successArgs, failureArgs, successCallbacks = [], failureCallbacks = [], doneCallbacks = [], state = 0;
        qq.extend(this, {
            then: function(onSuccess, onFailure) {
                if (state === 0) {
                    if (onSuccess) {
                        successCallbacks.push(onSuccess);
                    }
                    if (onFailure) {
                        failureCallbacks.push(onFailure);
                    }
                } else if (state === -1) {
                    onFailure && onFailure.apply(null, failureArgs);
                } else if (onSuccess) {
                    onSuccess.apply(null, successArgs);
                }
                return this;
            },
            done: function(callback) {
                if (state === 0) {
                    doneCallbacks.push(callback);
                } else {
                    callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);
                }
                return this;
            },
            success: function() {
                state = 1;
                successArgs = arguments;
                if (successCallbacks.length) {
                    qq.each(successCallbacks, function(idx, callback) {
                        callback.apply(null, successArgs);
                    });
                }
                if (doneCallbacks.length) {
                    qq.each(doneCallbacks, function(idx, callback) {
                        callback.apply(null, successArgs);
                    });
                }
                return this;
            },
            failure: function() {
                state = -1;
                failureArgs = arguments;
                if (failureCallbacks.length) {
                    qq.each(failureCallbacks, function(idx, callback) {
                        callback.apply(null, failureArgs);
                    });
                }
                if (doneCallbacks.length) {
                    qq.each(doneCallbacks, function(idx, callback) {
                        callback.apply(null, failureArgs);
                    });
                }
                return this;
            }
        });
    };
    qq.BlobProxy = function(referenceBlob, onCreate) {
        "use strict";
        qq.extend(this, {
            referenceBlob: referenceBlob,
            create: function() {
                return onCreate(referenceBlob);
            }
        });
    };
    qq.UploadButton = function(o) {
        "use strict";
        var self = this, disposeSupport = new qq.DisposeSupport(), options = {
            acceptFiles: null,
            element: null,
            focusClass: "qq-upload-button-focus",
            folders: false,
            hoverClass: "qq-upload-button-hover",
            ios8BrowserCrashWorkaround: false,
            multiple: false,
            name: "qqfile",
            onChange: function(input) {},
            title: null
        }, input, buttonId;
        qq.extend(options, o);
        buttonId = qq.getUniqueId();
        function createInput() {
            var input = document.createElement("input");
            input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);
            input.setAttribute("title", options.title);
            self.setMultiple(options.multiple, input);
            if (options.folders && qq.supportedFeatures.folderSelection) {
                input.setAttribute("webkitdirectory", "");
            }
            if (options.acceptFiles) {
                input.setAttribute("accept", options.acceptFiles);
            }
            input.setAttribute("type", "file");
            input.setAttribute("name", options.name);
            qq(input).css({
                position: "absolute",
                right: 0,
                top: 0,
                fontFamily: "Arial",
                fontSize: qq.ie() && !qq.ie8() ? "3500px" : "118px",
                margin: 0,
                padding: 0,
                cursor: "pointer",
                opacity: 0
            });
            !qq.ie7() && qq(input).css({
                height: "100%"
            });
            options.element.appendChild(input);
            disposeSupport.attach(input, "change", function() {
                options.onChange(input);
            });
            disposeSupport.attach(input, "mouseover", function() {
                qq(options.element).addClass(options.hoverClass);
            });
            disposeSupport.attach(input, "mouseout", function() {
                qq(options.element).removeClass(options.hoverClass);
            });
            disposeSupport.attach(input, "focus", function() {
                qq(options.element).addClass(options.focusClass);
            });
            disposeSupport.attach(input, "blur", function() {
                qq(options.element).removeClass(options.focusClass);
            });
            return input;
        }
        qq(options.element).css({
            position: "relative",
            overflow: "hidden",
            direction: "ltr"
        });
        qq.extend(this, {
            getInput: function() {
                return input;
            },
            getButtonId: function() {
                return buttonId;
            },
            setMultiple: function(isMultiple, optInput) {
                var input = optInput || this.getInput();
                if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {
                    input.setAttribute("multiple", "");
                } else {
                    if (isMultiple) {
                        input.setAttribute("multiple", "");
                    } else {
                        input.removeAttribute("multiple");
                    }
                }
            },
            setAcceptFiles: function(acceptFiles) {
                if (acceptFiles !== options.acceptFiles) {
                    input.setAttribute("accept", acceptFiles);
                }
            },
            reset: function() {
                if (input.parentNode) {
                    qq(input).remove();
                }
                qq(options.element).removeClass(options.focusClass);
                input = null;
                input = createInput();
            }
        });
        input = createInput();
    };
    qq.UploadButton.BUTTON_ID_ATTR_NAME = "qq-button-id";
    qq.UploadData = function(uploaderProxy) {
        "use strict";
        var data = [], byUuid = {}, byStatus = {}, byProxyGroupId = {}, byBatchId = {};
        function getDataByIds(idOrIds) {
            if (qq.isArray(idOrIds)) {
                var entries = [];
                qq.each(idOrIds, function(idx, id) {
                    entries.push(data[id]);
                });
                return entries;
            }
            return data[idOrIds];
        }
        function getDataByUuids(uuids) {
            if (qq.isArray(uuids)) {
                var entries = [];
                qq.each(uuids, function(idx, uuid) {
                    entries.push(data[byUuid[uuid]]);
                });
                return entries;
            }
            return data[byUuid[uuids]];
        }
        function getDataByStatus(status) {
            var statusResults = [], statuses = [].concat(status);
            qq.each(statuses, function(index, statusEnum) {
                var statusResultIndexes = byStatus[statusEnum];
                if (statusResultIndexes !== undefined) {
                    qq.each(statusResultIndexes, function(i, dataIndex) {
                        statusResults.push(data[dataIndex]);
                    });
                }
            });
            return statusResults;
        }
        qq.extend(this, {
            addFile: function(spec) {
                var status = spec.status || qq.status.SUBMITTING, id = data.push({
                    name: spec.name,
                    originalName: spec.name,
                    uuid: spec.uuid,
                    size: spec.size == null ? -1 : spec.size,
                    status: status,
                    file: spec.file
                }) - 1;
                if (spec.batchId) {
                    data[id].batchId = spec.batchId;
                    if (byBatchId[spec.batchId] === undefined) {
                        byBatchId[spec.batchId] = [];
                    }
                    byBatchId[spec.batchId].push(id);
                }
                if (spec.proxyGroupId) {
                    data[id].proxyGroupId = spec.proxyGroupId;
                    if (byProxyGroupId[spec.proxyGroupId] === undefined) {
                        byProxyGroupId[spec.proxyGroupId] = [];
                    }
                    byProxyGroupId[spec.proxyGroupId].push(id);
                }
                data[id].id = id;
                byUuid[spec.uuid] = id;
                if (byStatus[status] === undefined) {
                    byStatus[status] = [];
                }
                byStatus[status].push(id);
                spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);
                uploaderProxy.onStatusChange(id, null, status);
                return id;
            },
            retrieve: function(optionalFilter) {
                if (qq.isObject(optionalFilter) && data.length) {
                    if (optionalFilter.id !== undefined) {
                        return getDataByIds(optionalFilter.id);
                    } else if (optionalFilter.uuid !== undefined) {
                        return getDataByUuids(optionalFilter.uuid);
                    } else if (optionalFilter.status) {
                        return getDataByStatus(optionalFilter.status);
                    }
                } else {
                    return qq.extend([], data, true);
                }
            },
            removeFileRef: function(id) {
                var record = getDataByIds(id);
                if (record) {
                    delete record.file;
                }
            },
            reset: function() {
                data = [];
                byUuid = {};
                byStatus = {};
                byBatchId = {};
            },
            setStatus: function(id, newStatus) {
                var oldStatus = data[id].status, byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);
                byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);
                data[id].status = newStatus;
                if (byStatus[newStatus] === undefined) {
                    byStatus[newStatus] = [];
                }
                byStatus[newStatus].push(id);
                uploaderProxy.onStatusChange(id, oldStatus, newStatus);
            },
            uuidChanged: function(id, newUuid) {
                var oldUuid = data[id].uuid;
                data[id].uuid = newUuid;
                byUuid[newUuid] = id;
                delete byUuid[oldUuid];
            },
            updateName: function(id, newName) {
                data[id].name = newName;
            },
            updateSize: function(id, newSize) {
                data[id].size = newSize;
            },
            setParentId: function(targetId, parentId) {
                data[targetId].parentId = parentId;
            },
            getIdsInProxyGroup: function(id) {
                var proxyGroupId = data[id].proxyGroupId;
                if (proxyGroupId) {
                    return byProxyGroupId[proxyGroupId];
                }
                return [];
            },
            getIdsInBatch: function(id) {
                var batchId = data[id].batchId;
                return byBatchId[batchId];
            }
        });
    };
    qq.status = {
        SUBMITTING: "submitting",
        SUBMITTED: "submitted",
        REJECTED: "rejected",
        QUEUED: "queued",
        CANCELED: "canceled",
        PAUSED: "paused",
        UPLOADING: "uploading",
        UPLOAD_FINALIZING: "upload finalizing",
        UPLOAD_RETRYING: "retrying upload",
        UPLOAD_SUCCESSFUL: "upload successful",
        UPLOAD_FAILED: "upload failed",
        DELETE_FAILED: "delete failed",
        DELETING: "deleting",
        DELETED: "deleted"
    };
    (function() {
        "use strict";
        qq.basePublicApi = {
            addBlobs: function(blobDataOrArray, params, endpoint) {
                this.addFiles(blobDataOrArray, params, endpoint);
            },
            addInitialFiles: function(cannedFileList) {
                var self = this;
                qq.each(cannedFileList, function(index, cannedFile) {
                    self._addCannedFile(cannedFile);
                });
            },
            addFiles: function(data, params, endpoint) {
                this._maybeHandleIos8SafariWorkaround();
                var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId, processBlob = qq.bind(function(blob) {
                    this._handleNewFile({
                        blob: blob,
                        name: this._options.blobs.defaultName
                    }, batchId, verifiedFiles);
                }, this), processBlobData = qq.bind(function(blobData) {
                    this._handleNewFile(blobData, batchId, verifiedFiles);
                }, this), processCanvas = qq.bind(function(canvas) {
                    var blob = qq.canvasToBlob(canvas);
                    this._handleNewFile({
                        blob: blob,
                        name: this._options.blobs.defaultName + ".png"
                    }, batchId, verifiedFiles);
                }, this), processCanvasData = qq.bind(function(canvasData) {
                    var normalizedQuality = canvasData.quality && canvasData.quality / 100, blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);
                    this._handleNewFile({
                        blob: blob,
                        name: canvasData.name
                    }, batchId, verifiedFiles);
                }, this), processFileOrInput = qq.bind(function(fileOrInput) {
                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {
                        var files = Array.prototype.slice.call(fileOrInput.files), self = this;
                        qq.each(files, function(idx, file) {
                            self._handleNewFile(file, batchId, verifiedFiles);
                        });
                    } else {
                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);
                    }
                }, this), normalizeData = function() {
                    if (qq.isFileList(data)) {
                        data = Array.prototype.slice.call(data);
                    }
                    data = [].concat(data);
                }, self = this, verifiedFiles = [];
                this._currentBatchId = batchId;
                if (data) {
                    normalizeData();
                    qq.each(data, function(idx, fileContainer) {
                        if (qq.isFileOrInput(fileContainer)) {
                            processFileOrInput(fileContainer);
                        } else if (qq.isBlob(fileContainer)) {
                            processBlob(fileContainer);
                        } else if (qq.isObject(fileContainer)) {
                            if (fileContainer.blob && fileContainer.name) {
                                processBlobData(fileContainer);
                            } else if (fileContainer.canvas && fileContainer.name) {
                                processCanvasData(fileContainer);
                            }
                        } else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === "canvas") {
                            processCanvas(fileContainer);
                        } else {
                            self.log(fileContainer + " is not a valid file container!  Ignoring!", "warn");
                        }
                    });
                    this.log("Received " + verifiedFiles.length + " files.");
                    this._prepareItemsForUpload(verifiedFiles, params, endpoint);
                }
            },
            cancel: function(id) {
                var uploadData = this._uploadData.retrieve({
                    id: id
                });
                if (uploadData && uploadData.status === qq.status.UPLOAD_FINALIZING) {
                    this.log(qq.format("Ignoring cancel for file ID {} ({}).  Finalizing upload.", id, this.getName(id)), "error");
                } else {
                    this._handler.cancel(id);
                }
            },
            cancelAll: function() {
                var storedIdsCopy = [], self = this;
                qq.extend(storedIdsCopy, this._storedIds);
                qq.each(storedIdsCopy, function(idx, storedFileId) {
                    self.cancel(storedFileId);
                });
                this._handler.cancelAll();
            },
            clearStoredFiles: function() {
                this._storedIds = [];
            },
            continueUpload: function(id) {
                var uploadData = this._uploadData.retrieve({
                    id: id
                });
                if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {
                    return false;
                }
                if (uploadData.status === qq.status.PAUSED) {
                    this.log(qq.format("Paused file ID {} ({}) will be continued.  Not paused.", id, this.getName(id)));
                    this._uploadFile(id);
                    return true;
                } else {
                    this.log(qq.format("Ignoring continue for file ID {} ({}).  Not paused.", id, this.getName(id)), "error");
                }
                return false;
            },
            deleteFile: function(id) {
                return this._onSubmitDelete(id);
            },
            doesExist: function(fileOrBlobId) {
                return this._handler.isValid(fileOrBlobId);
            },
            drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {
                var promiseToReturn = new qq.Promise(), fileOrUrl, options;
                if (this._imageGenerator) {
                    fileOrUrl = this._thumbnailUrls[fileId];
                    options = {
                        customResizeFunction: customResizeFunction,
                        maxSize: maxSize > 0 ? maxSize : null,
                        scale: maxSize > 0
                    };
                    if (!fromServer && qq.supportedFeatures.imagePreviews) {
                        fileOrUrl = this.getFile(fileId);
                    }
                    if (fileOrUrl == null) {
                        promiseToReturn.failure({
                            container: imgOrCanvas,
                            error: "File or URL not found."
                        });
                    } else {
                        this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(function success(modifiedContainer) {
                            promiseToReturn.success(modifiedContainer);
                        }, function failure(container, reason) {
                            promiseToReturn.failure({
                                container: container,
                                error: reason || "Problem generating thumbnail"
                            });
                        });
                    }
                } else {
                    promiseToReturn.failure({
                        container: imgOrCanvas,
                        error: "Missing image generator module"
                    });
                }
                return promiseToReturn;
            },
            getButton: function(fileId) {
                return this._getButton(this._buttonIdsForFileIds[fileId]);
            },
            getEndpoint: function(fileId) {
                return this._endpointStore.get(fileId);
            },
            getFile: function(fileOrBlobId) {
                var file = this._handler.getFile(fileOrBlobId);
                var uploadDataRecord;
                if (!file) {
                    uploadDataRecord = this._uploadData.retrieve({
                        id: fileOrBlobId
                    });
                    if (uploadDataRecord) {
                        file = uploadDataRecord.file;
                    }
                }
                return file || null;
            },
            getInProgress: function() {
                return this._uploadData.retrieve({
                    status: [ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING, qq.status.QUEUED ]
                }).length;
            },
            getName: function(id) {
                return this._uploadData.retrieve({
                    id: id
                }).name;
            },
            getParentId: function(id) {
                var uploadDataEntry = this.getUploads({
                    id: id
                }), parentId = null;
                if (uploadDataEntry) {
                    if (uploadDataEntry.parentId !== undefined) {
                        parentId = uploadDataEntry.parentId;
                    }
                }
                return parentId;
            },
            getResumableFilesData: function() {
                return this._handler.getResumableFilesData();
            },
            getSize: function(id) {
                return this._uploadData.retrieve({
                    id: id
                }).size;
            },
            getNetUploads: function() {
                return this._netUploaded;
            },
            getRemainingAllowedItems: function() {
                var allowedItems = this._currentItemLimit;
                if (allowedItems > 0) {
                    return allowedItems - this._netUploadedOrQueued;
                }
                return null;
            },
            getUploads: function(optionalFilter) {
                return this._uploadData.retrieve(optionalFilter);
            },
            getUuid: function(id) {
                return this._uploadData.retrieve({
                    id: id
                }).uuid;
            },
            isResumable: function(id) {
                return this._handler.hasResumeRecord(id);
            },
            log: function(str, level) {
                if (this._options.debug && (!level || level === "info")) {
                    qq.log("[Fine Uploader " + qq.version + "] " + str);
                } else if (level && level !== "info") {
                    qq.log("[Fine Uploader " + qq.version + "] " + str, level);
                }
            },
            pauseUpload: function(id) {
                var uploadData = this._uploadData.retrieve({
                    id: id
                });
                if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {
                    return false;
                }
                if (qq.indexOf([ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING ], uploadData.status) >= 0) {
                    if (this._handler.pause(id)) {
                        this._uploadData.setStatus(id, qq.status.PAUSED);
                        return true;
                    } else {
                        this.log(qq.format("Unable to pause file ID {} ({}).", id, this.getName(id)), "error");
                    }
                } else {
                    this.log(qq.format("Ignoring pause for file ID {} ({}).  Not in progress.", id, this.getName(id)), "error");
                }
                return false;
            },
            removeFileRef: function(id) {
                this._handler.expunge(id);
                this._uploadData.removeFileRef(id);
            },
            reset: function() {
                this.log("Resetting uploader...");
                this._handler.reset();
                this._storedIds = [];
                this._autoRetries = [];
                this._retryTimeouts = [];
                this._preventRetries = [];
                this._thumbnailUrls = [];
                qq.each(this._buttons, function(idx, button) {
                    button.reset();
                });
                this._paramsStore.reset();
                this._endpointStore.reset();
                this._netUploadedOrQueued = 0;
                this._netUploaded = 0;
                this._uploadData.reset();
                this._buttonIdsForFileIds = [];
                this._pasteHandler && this._pasteHandler.reset();
                this._options.session.refreshOnReset && this._refreshSessionData();
                this._succeededSinceLastAllComplete = [];
                this._failedSinceLastAllComplete = [];
                this._totalProgress && this._totalProgress.reset();
                this._customResumeDataStore.reset();
            },
            retry: function(id) {
                return this._manualRetry(id);
            },
            scaleImage: function(id, specs) {
                var self = this;
                return qq.Scaler.prototype.scaleImage(id, specs, {
                    log: qq.bind(self.log, self),
                    getFile: qq.bind(self.getFile, self),
                    uploadData: self._uploadData
                });
            },
            setCustomHeaders: function(headers, id) {
                this._customHeadersStore.set(headers, id);
            },
            setCustomResumeData: function(id, data) {
                this._customResumeDataStore.set(data, id);
            },
            setDeleteFileCustomHeaders: function(headers, id) {
                this._deleteFileCustomHeadersStore.set(headers, id);
            },
            setDeleteFileEndpoint: function(endpoint, id) {
                this._deleteFileEndpointStore.set(endpoint, id);
            },
            setDeleteFileParams: function(params, id) {
                this._deleteFileParamsStore.set(params, id);
            },
            setEndpoint: function(endpoint, id) {
                this._endpointStore.set(endpoint, id);
            },
            setForm: function(elementOrId) {
                this._updateFormSupportAndParams(elementOrId);
            },
            setItemLimit: function(newItemLimit) {
                this._currentItemLimit = newItemLimit;
            },
            setName: function(id, newName) {
                this._uploadData.updateName(id, newName);
            },
            setParams: function(params, id) {
                this._paramsStore.set(params, id);
            },
            setUuid: function(id, newUuid) {
                return this._uploadData.uuidChanged(id, newUuid);
            },
            setStatus: function(id, newStatus) {
                var fileRecord = this.getUploads({
                    id: id
                });
                if (!fileRecord) {
                    throw new qq.Error(id + " is not a valid file ID.");
                }
                switch (newStatus) {
                  case qq.status.DELETED:
                    this._onDeleteComplete(id, null, false);
                    break;

                  case qq.status.DELETE_FAILED:
                    this._onDeleteComplete(id, null, true);
                    break;

                  default:
                    var errorMessage = "Method setStatus called on '" + name + "' not implemented yet for " + newStatus;
                    this.log(errorMessage);
                    throw new qq.Error(errorMessage);
                }
            },
            uploadStoredFiles: function() {
                if (this._storedIds.length === 0) {
                    this._itemError("noFilesError");
                } else {
                    this._uploadStoredFiles();
                }
            }
        };
        qq.basePrivateApi = {
            _addCannedFile: function(sessionData) {
                var self = this;
                return this._uploadData.addFile({
                    uuid: sessionData.uuid,
                    name: sessionData.name,
                    size: sessionData.size,
                    status: qq.status.UPLOAD_SUCCESSFUL,
                    onBeforeStatusChange: function(id) {
                        sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);
                        sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);
                        if (sessionData.thumbnailUrl) {
                            self._thumbnailUrls[id] = sessionData.thumbnailUrl;
                        }
                        self._netUploaded++;
                        self._netUploadedOrQueued++;
                    }
                });
            },
            _annotateWithButtonId: function(file, associatedInput) {
                if (qq.isFile(file)) {
                    file.qqButtonId = this._getButtonId(associatedInput);
                }
            },
            _batchError: function(message) {
                this._options.callbacks.onError(null, null, message, undefined);
            },
            _createDeleteHandler: function() {
                var self = this;
                return new qq.DeleteFileAjaxRequester({
                    method: this._options.deleteFile.method.toUpperCase(),
                    maxConnections: this._options.maxConnections,
                    uuidParamName: this._options.request.uuidName,
                    customHeaders: this._deleteFileCustomHeadersStore,
                    paramsStore: this._deleteFileParamsStore,
                    endpointStore: this._deleteFileEndpointStore,
                    cors: this._options.cors,
                    log: qq.bind(self.log, self),
                    onDelete: function(id) {
                        self._onDelete(id);
                        self._options.callbacks.onDelete(id);
                    },
                    onDeleteComplete: function(id, xhrOrXdr, isError) {
                        self._onDeleteComplete(id, xhrOrXdr, isError);
                        self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);
                    }
                });
            },
            _createPasteHandler: function() {
                var self = this;
                return new qq.PasteSupport({
                    targetElement: this._options.paste.targetElement,
                    callbacks: {
                        log: qq.bind(self.log, self),
                        pasteReceived: function(blob) {
                            self._handleCheckedCallback({
                                name: "onPasteReceived",
                                callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),
                                onSuccess: qq.bind(self._handlePasteSuccess, self, blob),
                                identifier: "pasted image"
                            });
                        }
                    }
                });
            },
            _createStore: function(initialValue, _readOnlyValues_) {
                var store = {}, catchall = initialValue, perIdReadOnlyValues = {}, readOnlyValues = _readOnlyValues_, copy = function(orig) {
                    if (qq.isObject(orig)) {
                        return qq.extend({}, orig);
                    }
                    return orig;
                }, getReadOnlyValues = function() {
                    if (qq.isFunction(readOnlyValues)) {
                        return readOnlyValues();
                    }
                    return readOnlyValues;
                }, includeReadOnlyValues = function(id, existing) {
                    if (readOnlyValues && qq.isObject(existing)) {
                        qq.extend(existing, getReadOnlyValues());
                    }
                    if (perIdReadOnlyValues[id]) {
                        qq.extend(existing, perIdReadOnlyValues[id]);
                    }
                };
                return {
                    set: function(val, id) {
                        if (id == null) {
                            store = {};
                            catchall = copy(val);
                        } else {
                            store[id] = copy(val);
                        }
                    },
                    get: function(id) {
                        var values;
                        if (id != null && store[id]) {
                            values = store[id];
                        } else {
                            values = copy(catchall);
                        }
                        includeReadOnlyValues(id, values);
                        return copy(values);
                    },
                    addReadOnly: function(id, values) {
                        if (qq.isObject(store)) {
                            if (id === null) {
                                if (qq.isFunction(values)) {
                                    readOnlyValues = values;
                                } else {
                                    readOnlyValues = readOnlyValues || {};
                                    qq.extend(readOnlyValues, values);
                                }
                            } else {
                                perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};
                                qq.extend(perIdReadOnlyValues[id], values);
                            }
                        }
                    },
                    remove: function(fileId) {
                        return delete store[fileId];
                    },
                    reset: function() {
                        store = {};
                        perIdReadOnlyValues = {};
                        catchall = initialValue;
                    }
                };
            },
            _createUploadDataTracker: function() {
                var self = this;
                return new qq.UploadData({
                    getName: function(id) {
                        return self.getName(id);
                    },
                    getUuid: function(id) {
                        return self.getUuid(id);
                    },
                    getSize: function(id) {
                        return self.getSize(id);
                    },
                    onStatusChange: function(id, oldStatus, newStatus) {
                        self._onUploadStatusChange(id, oldStatus, newStatus);
                        self._options.callbacks.onStatusChange(id, oldStatus, newStatus);
                        self._maybeAllComplete(id, newStatus);
                        if (self._totalProgress) {
                            setTimeout(function() {
                                self._totalProgress.onStatusChange(id, oldStatus, newStatus);
                            }, 0);
                        }
                    }
                });
            },
            _createUploadButton: function(spec) {
                var self = this, acceptFiles = spec.accept || this._options.validation.acceptFiles, allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions, button;
                function allowMultiple() {
                    if (qq.supportedFeatures.ajaxUploading) {
                        if (self._options.workarounds.iosEmptyVideos && qq.ios() && !qq.ios6() && self._isAllowedExtension(allowedExtensions, ".mov")) {
                            return false;
                        }
                        if (spec.multiple === undefined) {
                            return self._options.multiple;
                        }
                        return spec.multiple;
                    }
                    return false;
                }
                button = new qq.UploadButton({
                    acceptFiles: acceptFiles,
                    element: spec.element,
                    focusClass: this._options.classes.buttonFocus,
                    folders: spec.folders,
                    hoverClass: this._options.classes.buttonHover,
                    ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,
                    multiple: allowMultiple(),
                    name: this._options.request.inputName,
                    onChange: function(input) {
                        self._onInputChange(input);
                    },
                    title: spec.title == null ? this._options.text.fileInputTitle : spec.title
                });
                this._disposeSupport.addDisposer(function() {
                    button.dispose();
                });
                self._buttons.push(button);
                return button;
            },
            _createUploadHandler: function(additionalOptions, namespace) {
                var self = this, lastOnProgress = {}, options = {
                    debug: this._options.debug,
                    maxConnections: this._options.maxConnections,
                    cors: this._options.cors,
                    paramsStore: this._paramsStore,
                    endpointStore: this._endpointStore,
                    chunking: this._options.chunking,
                    resume: this._options.resume,
                    blobs: this._options.blobs,
                    log: qq.bind(self.log, self),
                    preventRetryParam: this._options.retry.preventRetryResponseProperty,
                    onProgress: function(id, name, loaded, total) {
                        if (loaded < 0 || total < 0) {
                            return;
                        }
                        if (lastOnProgress[id]) {
                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {
                                self._onProgress(id, name, loaded, total);
                                self._options.callbacks.onProgress(id, name, loaded, total);
                            }
                        } else {
                            self._onProgress(id, name, loaded, total);
                            self._options.callbacks.onProgress(id, name, loaded, total);
                        }
                        lastOnProgress[id] = {
                            loaded: loaded,
                            total: total
                        };
                    },
                    onComplete: function(id, name, result, xhr) {
                        delete lastOnProgress[id];
                        var status = self.getUploads({
                            id: id
                        }).status, retVal;
                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {
                            return;
                        }
                        retVal = self._onComplete(id, name, result, xhr);
                        if (retVal instanceof qq.Promise) {
                            retVal.done(function() {
                                self._options.callbacks.onComplete(id, name, result, xhr);
                            });
                        } else {
                            self._options.callbacks.onComplete(id, name, result, xhr);
                        }
                    },
                    onCancel: function(id, name, cancelFinalizationEffort) {
                        var promise = new qq.Promise();
                        self._handleCheckedCallback({
                            name: "onCancel",
                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),
                            onFailure: promise.failure,
                            onSuccess: function() {
                                cancelFinalizationEffort.then(function() {
                                    self._onCancel(id, name);
                                });
                                promise.success();
                            },
                            identifier: id
                        });
                        return promise;
                    },
                    onUploadPrep: qq.bind(this._onUploadPrep, this),
                    onUpload: function(id, name) {
                        self._onUpload(id, name);
                        var onUploadResult = self._options.callbacks.onUpload(id, name);
                        if (qq.isGenericPromise(onUploadResult)) {
                            self.log(qq.format("onUpload for {} returned a Promise - waiting for resolution.", id));
                            return onUploadResult;
                        }
                        return new qq.Promise().success();
                    },
                    onUploadChunk: function(id, name, chunkData) {
                        self._onUploadChunk(id, chunkData);
                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);
                        if (qq.isGenericPromise(onUploadChunkResult)) {
                            self.log(qq.format("onUploadChunk for {}.{} returned a Promise - waiting for resolution.", id, chunkData.partIndex));
                            return onUploadChunkResult;
                        }
                        return new qq.Promise().success();
                    },
                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {
                        self._onUploadChunkSuccess(id, chunkData);
                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);
                    },
                    onResume: function(id, name, chunkData, customResumeData) {
                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);
                    },
                    onAutoRetry: function(id, name, responseJSON, xhr) {
                        return self._onAutoRetry.apply(self, arguments);
                    },
                    onUuidChanged: function(id, newUuid) {
                        self.log("Server requested UUID change from '" + self.getUuid(id) + "' to '" + newUuid + "'");
                        self.setUuid(id, newUuid);
                    },
                    getName: qq.bind(self.getName, self),
                    getUuid: qq.bind(self.getUuid, self),
                    getSize: qq.bind(self.getSize, self),
                    setSize: qq.bind(self._setSize, self),
                    getDataByUuid: function(uuid) {
                        return self.getUploads({
                            uuid: uuid
                        });
                    },
                    isQueued: function(id) {
                        var status = self.getUploads({
                            id: id
                        }).status;
                        return status === qq.status.QUEUED || status === qq.status.SUBMITTED || status === qq.status.UPLOAD_RETRYING || status === qq.status.PAUSED;
                    },
                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,
                    getIdsInBatch: self._uploadData.getIdsInBatch,
                    isInProgress: function(id) {
                        return self.getUploads({
                            id: id
                        }).status === qq.status.UPLOADING;
                    },
                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),
                    setStatus: function(id, status) {
                        self._uploadData.setStatus(id, status);
                    }
                };
                qq.each(this._options.request, function(prop, val) {
                    options[prop] = val;
                });
                options.customHeaders = this._customHeadersStore;
                if (additionalOptions) {
                    qq.each(additionalOptions, function(key, val) {
                        options[key] = val;
                    });
                }
                return new qq.UploadHandlerController(options, namespace);
            },
            _fileOrBlobRejected: function(id) {
                this._netUploadedOrQueued--;
                this._uploadData.setStatus(id, qq.status.REJECTED);
            },
            _formatSize: function(bytes) {
                if (bytes === 0) {
                    return bytes + this._options.text.sizeSymbols[0];
                }
                var i = -1;
                do {
                    bytes = bytes / 1e3;
                    i++;
                } while (bytes > 999);
                return Math.max(bytes, .1).toFixed(1) + this._options.text.sizeSymbols[i];
            },
            _generateExtraButtonSpecs: function() {
                var self = this;
                this._extraButtonSpecs = {};
                qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {
                    var multiple = extraButtonOptionEntry.multiple, validation = qq.extend({}, self._options.validation, true), extraButtonSpec = qq.extend({}, extraButtonOptionEntry);
                    if (multiple === undefined) {
                        multiple = self._options.multiple;
                    }
                    if (extraButtonSpec.validation) {
                        qq.extend(validation, extraButtonOptionEntry.validation, true);
                    }
                    qq.extend(extraButtonSpec, {
                        multiple: multiple,
                        validation: validation
                    }, true);
                    self._initExtraButton(extraButtonSpec);
                });
            },
            _getButton: function(buttonId) {
                var extraButtonsSpec = this._extraButtonSpecs[buttonId];
                if (extraButtonsSpec) {
                    return extraButtonsSpec.element;
                } else if (buttonId === this._defaultButtonId) {
                    return this._options.button;
                }
            },
            _getButtonId: function(buttonOrFileInputOrFile) {
                var inputs, fileInput, fileBlobOrInput = buttonOrFileInputOrFile;
                if (fileBlobOrInput instanceof qq.BlobProxy) {
                    fileBlobOrInput = fileBlobOrInput.referenceBlob;
                }
                if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {
                    if (qq.isFile(fileBlobOrInput)) {
                        return fileBlobOrInput.qqButtonId;
                    } else if (fileBlobOrInput.tagName.toLowerCase() === "input" && fileBlobOrInput.type.toLowerCase() === "file") {
                        return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);
                    }
                    inputs = fileBlobOrInput.getElementsByTagName("input");
                    qq.each(inputs, function(idx, input) {
                        if (input.getAttribute("type") === "file") {
                            fileInput = input;
                            return false;
                        }
                    });
                    if (fileInput) {
                        return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);
                    }
                }
            },
            _getCustomResumeData: function(fileId) {
                return this._customResumeDataStore.get(fileId);
            },
            _getNotFinished: function() {
                return this._uploadData.retrieve({
                    status: [ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING, qq.status.QUEUED, qq.status.SUBMITTING, qq.status.SUBMITTED, qq.status.PAUSED ]
                }).length;
            },
            _getValidationBase: function(buttonId) {
                var extraButtonSpec = this._extraButtonSpecs[buttonId];
                return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;
            },
            _getValidationDescriptor: function(fileWrapper) {
                if (fileWrapper.file instanceof qq.BlobProxy) {
                    return {
                        name: qq.getFilename(fileWrapper.file.referenceBlob),
                        size: fileWrapper.file.referenceBlob.size
                    };
                }
                return {
                    name: this.getUploads({
                        id: fileWrapper.id
                    }).name,
                    size: this.getUploads({
                        id: fileWrapper.id
                    }).size
                };
            },
            _getValidationDescriptors: function(fileWrappers) {
                var self = this, fileDescriptors = [];
                qq.each(fileWrappers, function(idx, fileWrapper) {
                    fileDescriptors.push(self._getValidationDescriptor(fileWrapper));
                });
                return fileDescriptors;
            },
            _handleCameraAccess: function() {
                if (this._options.camera.ios && qq.ios()) {
                    var acceptIosCamera = "image/*;capture=camera", button = this._options.camera.button, buttonId = button ? this._getButtonId(button) : this._defaultButtonId, optionRoot = this._options;
                    if (buttonId && buttonId !== this._defaultButtonId) {
                        optionRoot = this._extraButtonSpecs[buttonId];
                    }
                    optionRoot.multiple = false;
                    if (optionRoot.validation.acceptFiles === null) {
                        optionRoot.validation.acceptFiles = acceptIosCamera;
                    } else {
                        optionRoot.validation.acceptFiles += "," + acceptIosCamera;
                    }
                    qq.each(this._buttons, function(idx, button) {
                        if (button.getButtonId() === buttonId) {
                            button.setMultiple(optionRoot.multiple);
                            button.setAcceptFiles(optionRoot.acceptFiles);
                            return false;
                        }
                    });
                }
            },
            _handleCheckedCallback: function(details) {
                var self = this, callbackRetVal = details.callback();
                if (qq.isGenericPromise(callbackRetVal)) {
                    this.log(details.name + " - waiting for " + details.name + " promise to be fulfilled for " + details.identifier);
                    return callbackRetVal.then(function(successParam) {
                        self.log(details.name + " promise success for " + details.identifier);
                        details.onSuccess(successParam);
                    }, function() {
                        if (details.onFailure) {
                            self.log(details.name + " promise failure for " + details.identifier);
                            details.onFailure();
                        } else {
                            self.log(details.name + " promise failure for " + details.identifier);
                        }
                    });
                }
                if (callbackRetVal !== false) {
                    details.onSuccess(callbackRetVal);
                } else {
                    if (details.onFailure) {
                        this.log(details.name + " - return value was 'false' for " + details.identifier + ".  Invoking failure callback.");
                        details.onFailure();
                    } else {
                        this.log(details.name + " - return value was 'false' for " + details.identifier + ".  Will not proceed.");
                    }
                }
                return callbackRetVal;
            },
            _handleNewFile: function(file, batchId, newFileWrapperList) {
                var self = this, uuid = qq.getUniqueId(), size = -1, name = qq.getFilename(file), actualFile = file.blob || file, handler = this._customNewFileHandler ? this._customNewFileHandler : qq.bind(self._handleNewFileGeneric, self);
                if (!qq.isInput(actualFile) && actualFile.size >= 0) {
                    size = actualFile.size;
                }
                handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {
                    uploadData: self._uploadData,
                    paramsStore: self._paramsStore,
                    addFileToHandler: function(id, file) {
                        self._handler.add(id, file);
                        self._netUploadedOrQueued++;
                        self._trackButton(id);
                    }
                });
            },
            _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {
                var id = this._uploadData.addFile({
                    uuid: uuid,
                    name: name,
                    size: size,
                    batchId: batchId,
                    file: file
                });
                this._handler.add(id, file);
                this._trackButton(id);
                this._netUploadedOrQueued++;
                fileList.push({
                    id: id,
                    file: file
                });
            },
            _handlePasteSuccess: function(blob, extSuppliedName) {
                var extension = blob.type.split("/")[1], name = extSuppliedName;
                if (name == null) {
                    name = this._options.paste.defaultName;
                }
                name += "." + extension;
                this.addFiles({
                    name: name,
                    blob: blob
                });
            },
            _handleDeleteSuccess: function(id) {
                if (this.getUploads({
                    id: id
                }).status !== qq.status.DELETED) {
                    var name = this.getName(id);
                    this._netUploadedOrQueued--;
                    this._netUploaded--;
                    this._handler.expunge(id);
                    this._uploadData.setStatus(id, qq.status.DELETED);
                    this.log("Delete request for '" + name + "' has succeeded.");
                }
            },
            _handleDeleteFailed: function(id, xhrOrXdr) {
                var name = this.getName(id);
                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);
                this.log("Delete request for '" + name + "' has failed.", "error");
                if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {
                    this._options.callbacks.onError(id, name, "Delete request failed", xhrOrXdr);
                } else {
                    this._options.callbacks.onError(id, name, "Delete request failed with response code " + xhrOrXdr.status, xhrOrXdr);
                }
            },
            _initExtraButton: function(spec) {
                var button = this._createUploadButton({
                    accept: spec.validation.acceptFiles,
                    allowedExtensions: spec.validation.allowedExtensions,
                    element: spec.element,
                    folders: spec.folders,
                    multiple: spec.multiple,
                    title: spec.fileInputTitle
                });
                this._extraButtonSpecs[button.getButtonId()] = spec;
            },
            _initFormSupportAndParams: function() {
                this._formSupport = qq.FormSupport && new qq.FormSupport(this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this));
                if (this._formSupport && this._formSupport.attachedToForm) {
                    this._paramsStore = this._createStore(this._options.request.params, this._formSupport.getFormInputsAsObject);
                    this._options.autoUpload = this._formSupport.newAutoUpload;
                    if (this._formSupport.newEndpoint) {
                        this._options.request.endpoint = this._formSupport.newEndpoint;
                    }
                } else {
                    this._paramsStore = this._createStore(this._options.request.params);
                }
            },
            _isDeletePossible: function() {
                if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {
                    return false;
                }
                if (this._options.cors.expected) {
                    if (qq.supportedFeatures.deleteFileCorsXhr) {
                        return true;
                    }
                    if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {
                        return true;
                    }
                    return false;
                }
                return true;
            },
            _isAllowedExtension: function(allowed, fileName) {
                var valid = false;
                if (!allowed.length) {
                    return true;
                }
                qq.each(allowed, function(idx, allowedExt) {
                    if (qq.isString(allowedExt)) {
                        var extRegex = new RegExp("\\." + allowedExt + "$", "i");
                        if (fileName.match(extRegex) != null) {
                            valid = true;
                            return false;
                        }
                    }
                });
                return valid;
            },
            _itemError: function(code, maybeNameOrNames, item) {
                var message = this._options.messages[code], allowedExtensions = [], names = [].concat(maybeNameOrNames), name = names[0], buttonId = this._getButtonId(item), validationBase = this._getValidationBase(buttonId), extensionsForMessage, placeholderMatch;
                function r(name, replacement) {
                    message = message.replace(name, replacement);
                }
                qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {
                    if (qq.isString(allowedExtension)) {
                        allowedExtensions.push(allowedExtension);
                    }
                });
                extensionsForMessage = allowedExtensions.join(", ").toLowerCase();
                r("{file}", this._options.formatFileName(name));
                r("{extensions}", extensionsForMessage);
                r("{sizeLimit}", this._formatSize(validationBase.sizeLimit));
                r("{minSizeLimit}", this._formatSize(validationBase.minSizeLimit));
                placeholderMatch = message.match(/(\{\w+\})/g);
                if (placeholderMatch !== null) {
                    qq.each(placeholderMatch, function(idx, placeholder) {
                        r(placeholder, names[idx]);
                    });
                }
                this._options.callbacks.onError(null, name, message, undefined);
                return message;
            },
            _manualRetry: function(id, callback) {
                if (this._onBeforeManualRetry(id)) {
                    this._netUploadedOrQueued++;
                    this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);
                    if (callback) {
                        callback(id);
                    } else {
                        this._handler.retry(id);
                    }
                    return true;
                }
            },
            _maybeAllComplete: function(id, status) {
                var self = this, notFinished = this._getNotFinished();
                if (status === qq.status.UPLOAD_SUCCESSFUL) {
                    this._succeededSinceLastAllComplete.push(id);
                } else if (status === qq.status.UPLOAD_FAILED) {
                    this._failedSinceLastAllComplete.push(id);
                }
                if (notFinished === 0 && (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {
                    setTimeout(function() {
                        self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);
                    }, 0);
                }
            },
            _maybeHandleIos8SafariWorkaround: function() {
                var self = this;
                if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {
                    setTimeout(function() {
                        window.alert(self._options.messages.unsupportedBrowserIos8Safari);
                    }, 0);
                    throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);
                }
            },
            _maybeParseAndSendUploadError: function(id, name, response, xhr) {
                if (!response.success) {
                    if (xhr && xhr.status !== 200 && !response.error) {
                        this._options.callbacks.onError(id, name, "XHR returned response code " + xhr.status, xhr);
                    } else {
                        var errorReason = response.error ? response.error : this._options.text.defaultResponseError;
                        this._options.callbacks.onError(id, name, errorReason, xhr);
                    }
                }
            },
            _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {
                var self = this;
                if (items.length > index) {
                    if (validItem || !this._options.validation.stopOnFirstInvalidFile) {
                        setTimeout(function() {
                            var validationDescriptor = self._getValidationDescriptor(items[index]), buttonId = self._getButtonId(items[index].file), button = self._getButton(buttonId);
                            self._handleCheckedCallback({
                                name: "onValidate",
                                callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),
                                onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),
                                onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),
                                identifier: "Item '" + validationDescriptor.name + "', size: " + validationDescriptor.size
                            });
                        }, 0);
                    } else if (!validItem) {
                        for (;index < items.length; index++) {
                            self._fileOrBlobRejected(items[index].id);
                        }
                    }
                }
            },
            _onAllComplete: function(successful, failed) {
                this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);
                this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));
                this._succeededSinceLastAllComplete = [];
                this._failedSinceLastAllComplete = [];
            },
            _onAutoRetry: function(id, name, responseJSON, xhr, callback) {
                var self = this;
                self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];
                if (self._shouldAutoRetry(id)) {
                    var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1e3;
                    self._maybeParseAndSendUploadError.apply(self, arguments);
                    self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);
                    self._onBeforeAutoRetry(id, name);
                    self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);
                    self._retryTimeouts[id] = setTimeout(function() {
                        self.log("Starting retry for " + name + "...");
                        if (callback) {
                            callback(id);
                        } else {
                            self._handler.retry(id);
                        }
                    }, retryWaitPeriod);
                    return true;
                }
            },
            _onBeforeAutoRetry: function(id, name) {
                this.log("Waiting " + this._options.retry.autoAttemptDelay + " seconds before retrying " + name + "...");
            },
            _onBeforeManualRetry: function(id) {
                var itemLimit = this._currentItemLimit, fileName;
                if (this._preventRetries[id]) {
                    this.log("Retries are forbidden for id " + id, "warn");
                    return false;
                } else if (this._handler.isValid(id)) {
                    fileName = this.getName(id);
                    if (this._options.callbacks.onManualRetry(id, fileName) === false) {
                        return false;
                    }
                    if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {
                        this._itemError("retryFailTooManyItems");
                        return false;
                    }
                    this.log("Retrying upload for '" + fileName + "' (id: " + id + ")...");
                    return true;
                } else {
                    this.log("'" + id + "' is not a valid file ID", "error");
                    return false;
                }
            },
            _onCancel: function(id, name) {
                this._netUploadedOrQueued--;
                clearTimeout(this._retryTimeouts[id]);
                var storedItemIndex = qq.indexOf(this._storedIds, id);
                if (!this._options.autoUpload && storedItemIndex >= 0) {
                    this._storedIds.splice(storedItemIndex, 1);
                }
                this._uploadData.setStatus(id, qq.status.CANCELED);
            },
            _onComplete: function(id, name, result, xhr) {
                if (!result.success) {
                    this._netUploadedOrQueued--;
                    this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);
                    if (result[this._options.retry.preventRetryResponseProperty] === true) {
                        this._preventRetries[id] = true;
                    }
                } else {
                    if (result.thumbnailUrl) {
                        this._thumbnailUrls[id] = result.thumbnailUrl;
                    }
                    this._netUploaded++;
                    this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);
                }
                this._maybeParseAndSendUploadError(id, name, result, xhr);
                return result.success ? true : false;
            },
            _onDelete: function(id) {
                this._uploadData.setStatus(id, qq.status.DELETING);
            },
            _onDeleteComplete: function(id, xhrOrXdr, isError) {
                var name = this.getName(id);
                if (isError) {
                    this._handleDeleteFailed(id, xhrOrXdr);
                } else {
                    this._handleDeleteSuccess(id);
                }
            },
            _onInputChange: function(input) {
                var fileIndex;
                if (qq.supportedFeatures.ajaxUploading) {
                    for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {
                        this._annotateWithButtonId(input.files[fileIndex], input);
                    }
                    this.addFiles(input.files);
                } else if (input.value.length > 0) {
                    this.addFiles(input);
                }
                qq.each(this._buttons, function(idx, button) {
                    button.reset();
                });
            },
            _onProgress: function(id, name, loaded, total) {
                this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);
            },
            _onSubmit: function(id, name) {},
            _onSubmitCallbackSuccess: function(id, name) {
                this._onSubmit.apply(this, arguments);
                this._uploadData.setStatus(id, qq.status.SUBMITTED);
                this._onSubmitted.apply(this, arguments);
                if (this._options.autoUpload) {
                    this._options.callbacks.onSubmitted.apply(this, arguments);
                    this._uploadFile(id);
                } else {
                    this._storeForLater(id);
                    this._options.callbacks.onSubmitted.apply(this, arguments);
                }
            },
            _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {
                var uuid = this.getUuid(id), adjustedOnSuccessCallback;
                if (onSuccessCallback) {
                    adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);
                }
                if (this._isDeletePossible()) {
                    this._handleCheckedCallback({
                        name: "onSubmitDelete",
                        callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),
                        onSuccess: adjustedOnSuccessCallback || qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),
                        identifier: id
                    });
                    return true;
                } else {
                    this.log("Delete request ignored for ID " + id + ", delete feature is disabled or request not possible " + "due to CORS on a user agent that does not support pre-flighting.", "warn");
                    return false;
                }
            },
            _onSubmitted: function(id) {},
            _onTotalProgress: function(loaded, total) {
                this._options.callbacks.onTotalProgress(loaded, total);
            },
            _onUploadPrep: function(id) {},
            _onUpload: function(id, name) {
                this._uploadData.setStatus(id, qq.status.UPLOADING);
            },
            _onUploadChunk: function(id, chunkData) {},
            _onUploadChunkSuccess: function(id, chunkData) {
                if (!this._preventRetries[id] && this._options.retry.enableAuto) {
                    this._autoRetries[id] = 0;
                }
            },
            _onUploadStatusChange: function(id, oldStatus, newStatus) {
                if (newStatus === qq.status.PAUSED) {
                    clearTimeout(this._retryTimeouts[id]);
                }
            },
            _onValidateBatchCallbackFailure: function(fileWrappers) {
                var self = this;
                qq.each(fileWrappers, function(idx, fileWrapper) {
                    self._fileOrBlobRejected(fileWrapper.id);
                });
            },
            _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {
                var errorMessage, itemLimit = this._currentItemLimit, proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;
                if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {
                    if (items.length > 0) {
                        this._handleCheckedCallback({
                            name: "onValidate",
                            callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),
                            onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),
                            onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),
                            identifier: "Item '" + items[0].file.name + "', size: " + items[0].file.size
                        });
                    } else {
                        this._itemError("noFilesError");
                    }
                } else {
                    this._onValidateBatchCallbackFailure(items);
                    errorMessage = this._options.messages.tooManyItemsError.replace(/\{netItems\}/g, proposedNetFilesUploadedOrQueued).replace(/\{itemLimit\}/g, itemLimit);
                    this._batchError(errorMessage);
                }
            },
            _onValidateCallbackFailure: function(items, index, params, endpoint) {
                var nextIndex = index + 1;
                this._fileOrBlobRejected(items[index].id, items[index].file.name);
                this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);
            },
            _onValidateCallbackSuccess: function(items, index, params, endpoint) {
                var self = this, nextIndex = index + 1, validationDescriptor = this._getValidationDescriptor(items[index]);
                this._validateFileOrBlobData(items[index], validationDescriptor).then(function() {
                    self._upload(items[index].id, params, endpoint);
                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);
                }, function() {
                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);
                });
            },
            _prepareItemsForUpload: function(items, params, endpoint) {
                if (items.length === 0) {
                    this._itemError("noFilesError");
                    return;
                }
                var validationDescriptors = this._getValidationDescriptors(items), buttonId = this._getButtonId(items[0].file), button = this._getButton(buttonId);
                this._handleCheckedCallback({
                    name: "onValidateBatch",
                    callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),
                    onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),
                    onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),
                    identifier: "batch validation"
                });
            },
            _preventLeaveInProgress: function() {
                var self = this;
                this._disposeSupport.attach(window, "beforeunload", function(e) {
                    if (self.getInProgress()) {
                        e = e || window.event;
                        e.returnValue = self._options.messages.onLeave;
                        return self._options.messages.onLeave;
                    }
                });
            },
            _refreshSessionData: function() {
                var self = this, options = this._options.session;
                if (qq.Session && this._options.session.endpoint != null) {
                    if (!this._session) {
                        qq.extend(options, {
                            cors: this._options.cors
                        });
                        options.log = qq.bind(this.log, this);
                        options.addFileRecord = qq.bind(this._addCannedFile, this);
                        this._session = new qq.Session(options);
                    }
                    setTimeout(function() {
                        self._session.refresh().then(function(response, xhrOrXdr) {
                            self._sessionRequestComplete();
                            self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);
                        }, function(response, xhrOrXdr) {
                            self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);
                        });
                    }, 0);
                }
            },
            _sessionRequestComplete: function() {},
            _setSize: function(id, newSize) {
                this._uploadData.updateSize(id, newSize);
                this._totalProgress && this._totalProgress.onNewSize(id);
            },
            _shouldAutoRetry: function(id) {
                var uploadData = this._uploadData.retrieve({
                    id: id
                });
                if (!this._preventRetries[id] && this._options.retry.enableAuto && uploadData.status !== qq.status.PAUSED) {
                    if (this._autoRetries[id] === undefined) {
                        this._autoRetries[id] = 0;
                    }
                    if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {
                        this._autoRetries[id] += 1;
                        return true;
                    }
                }
                return false;
            },
            _storeForLater: function(id) {
                this._storedIds.push(id);
            },
            _trackButton: function(id) {
                var buttonId;
                if (qq.supportedFeatures.ajaxUploading) {
                    buttonId = this._handler.getFile(id).qqButtonId;
                } else {
                    buttonId = this._getButtonId(this._handler.getInput(id));
                }
                if (buttonId) {
                    this._buttonIdsForFileIds[id] = buttonId;
                }
            },
            _updateFormSupportAndParams: function(formElementOrId) {
                this._options.form.element = formElementOrId;
                this._formSupport = qq.FormSupport && new qq.FormSupport(this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this));
                if (this._formSupport && this._formSupport.attachedToForm) {
                    this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);
                    this._options.autoUpload = this._formSupport.newAutoUpload;
                    if (this._formSupport.newEndpoint) {
                        this.setEndpoint(this._formSupport.newEndpoint);
                    }
                }
            },
            _upload: function(id, params, endpoint) {
                var name = this.getName(id);
                if (params) {
                    this.setParams(params, id);
                }
                if (endpoint) {
                    this.setEndpoint(endpoint, id);
                }
                this._handleCheckedCallback({
                    name: "onSubmit",
                    callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),
                    onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),
                    onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),
                    identifier: id
                });
            },
            _uploadFile: function(id) {
                if (!this._handler.upload(id)) {
                    this._uploadData.setStatus(id, qq.status.QUEUED);
                }
            },
            _uploadStoredFiles: function() {
                var idToUpload, stillSubmitting, self = this;
                while (this._storedIds.length) {
                    idToUpload = this._storedIds.shift();
                    this._uploadFile(idToUpload);
                }
                stillSubmitting = this.getUploads({
                    status: qq.status.SUBMITTING
                }).length;
                if (stillSubmitting) {
                    qq.log("Still waiting for " + stillSubmitting + " files to clear submit queue. Will re-parse stored IDs array shortly.");
                    setTimeout(function() {
                        self._uploadStoredFiles();
                    }, 1e3);
                }
            },
            _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {
                var self = this, file = function() {
                    if (fileWrapper.file instanceof qq.BlobProxy) {
                        return fileWrapper.file.referenceBlob;
                    }
                    return fileWrapper.file;
                }(), name = validationDescriptor.name, size = validationDescriptor.size, buttonId = this._getButtonId(fileWrapper.file), validationBase = this._getValidationBase(buttonId), validityChecker = new qq.Promise();
                validityChecker.then(function() {}, function() {
                    self._fileOrBlobRejected(fileWrapper.id, name);
                });
                if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {
                    this._itemError("typeError", name, file);
                    return validityChecker.failure();
                }
                if (!this._options.validation.allowEmpty && size === 0) {
                    this._itemError("emptyError", name, file);
                    return validityChecker.failure();
                }
                if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {
                    this._itemError("sizeError", name, file);
                    return validityChecker.failure();
                }
                if (size > 0 && size < validationBase.minSizeLimit) {
                    this._itemError("minSizeError", name, file);
                    return validityChecker.failure();
                }
                if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {
                    new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(validityChecker.success, function(errorCode) {
                        self._itemError(errorCode + "ImageError", name, file);
                        validityChecker.failure();
                    });
                } else {
                    validityChecker.success();
                }
                return validityChecker;
            },
            _wrapCallbacks: function() {
                var self, safeCallback, prop;
                self = this;
                safeCallback = function(name, callback, args) {
                    var errorMsg;
                    try {
                        return callback.apply(self, args);
                    } catch (exception) {
                        errorMsg = exception.message || exception.toString();
                        self.log("Caught exception in '" + name + "' callback - " + errorMsg, "error");
                    }
                };
                for (prop in this._options.callbacks) {
                    (function() {
                        var callbackName, callbackFunc;
                        callbackName = prop;
                        callbackFunc = self._options.callbacks[callbackName];
                        self._options.callbacks[callbackName] = function() {
                            return safeCallback(callbackName, callbackFunc, arguments);
                        };
                    })();
                }
            }
        };
    })();
    (function() {
        "use strict";
        qq.FineUploaderBasic = function(o) {
            var self = this;
            this._options = {
                debug: false,
                button: null,
                multiple: true,
                maxConnections: 3,
                disableCancelForFormUploads: false,
                autoUpload: true,
                warnBeforeUnload: true,
                request: {
                    customHeaders: {},
                    endpoint: "/server/upload",
                    filenameParam: "qqfilename",
                    forceMultipart: true,
                    inputName: "qqfile",
                    method: "POST",
                    omitDefaultParams: false,
                    params: {},
                    paramsInBody: true,
                    requireSuccessJson: true,
                    totalFileSizeName: "qqtotalfilesize",
                    uuidName: "qquuid"
                },
                validation: {
                    allowedExtensions: [],
                    sizeLimit: 0,
                    minSizeLimit: 0,
                    itemLimit: 0,
                    stopOnFirstInvalidFile: true,
                    acceptFiles: null,
                    image: {
                        maxHeight: 0,
                        maxWidth: 0,
                        minHeight: 0,
                        minWidth: 0
                    },
                    allowEmpty: false
                },
                callbacks: {
                    onSubmit: function(id, name) {},
                    onSubmitted: function(id, name) {},
                    onComplete: function(id, name, responseJSON, maybeXhr) {},
                    onAllComplete: function(successful, failed) {},
                    onCancel: function(id, name) {},
                    onUpload: function(id, name) {},
                    onUploadChunk: function(id, name, chunkData) {},
                    onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},
                    onResume: function(id, fileName, chunkData, customResumeData) {},
                    onProgress: function(id, name, loaded, total) {},
                    onTotalProgress: function(loaded, total) {},
                    onError: function(id, name, reason, maybeXhrOrXdr) {},
                    onAutoRetry: function(id, name, attemptNumber) {},
                    onManualRetry: function(id, name) {},
                    onValidateBatch: function(fileOrBlobData) {},
                    onValidate: function(fileOrBlobData) {},
                    onSubmitDelete: function(id) {},
                    onDelete: function(id) {},
                    onDeleteComplete: function(id, xhrOrXdr, isError) {},
                    onPasteReceived: function(blob) {},
                    onStatusChange: function(id, oldStatus, newStatus) {},
                    onSessionRequestComplete: function(response, success, xhrOrXdr) {}
                },
                messages: {
                    typeError: "{file} has an invalid extension. Valid extension(s): {extensions}.",
                    sizeError: "{file} is too large, maximum file size is {sizeLimit}.",
                    minSizeError: "{file} is too small, minimum file size is {minSizeLimit}.",
                    emptyError: "{file} is empty, please select files again without it.",
                    noFilesError: "No files to upload.",
                    tooManyItemsError: "Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.",
                    maxHeightImageError: "Image is too tall.",
                    maxWidthImageError: "Image is too wide.",
                    minHeightImageError: "Image is not tall enough.",
                    minWidthImageError: "Image is not wide enough.",
                    retryFailTooManyItems: "Retry failed - you have reached your file limit.",
                    onLeave: "The files are being uploaded, if you leave now the upload will be canceled.",
                    unsupportedBrowserIos8Safari: "Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues."
                },
                retry: {
                    enableAuto: false,
                    maxAutoAttempts: 3,
                    autoAttemptDelay: 5,
                    preventRetryResponseProperty: "preventRetry"
                },
                classes: {
                    buttonHover: "qq-upload-button-hover",
                    buttonFocus: "qq-upload-button-focus"
                },
                chunking: {
                    enabled: false,
                    concurrent: {
                        enabled: false
                    },
                    mandatory: false,
                    paramNames: {
                        partIndex: "qqpartindex",
                        partByteOffset: "qqpartbyteoffset",
                        chunkSize: "qqchunksize",
                        totalFileSize: "qqtotalfilesize",
                        totalParts: "qqtotalparts"
                    },
                    partSize: function(id) {
                        return 2e6;
                    },
                    success: {
                        endpoint: null,
                        headers: function(id) {
                            return null;
                        },
                        jsonPayload: false,
                        method: "POST",
                        params: function(id) {
                            return null;
                        },
                        resetOnStatus: []
                    }
                },
                resume: {
                    enabled: false,
                    recordsExpireIn: 7,
                    paramNames: {
                        resuming: "qqresume"
                    },
                    customKeys: function(fileId) {
                        return [];
                    }
                },
                formatFileName: function(fileOrBlobName) {
                    return fileOrBlobName;
                },
                text: {
                    defaultResponseError: "Upload failure reason unknown",
                    fileInputTitle: "file input",
                    sizeSymbols: [ "kB", "MB", "GB", "TB", "PB", "EB" ]
                },
                deleteFile: {
                    enabled: false,
                    method: "DELETE",
                    endpoint: "/server/upload",
                    customHeaders: {},
                    params: {}
                },
                cors: {
                    expected: false,
                    sendCredentials: false,
                    allowXdr: false
                },
                blobs: {
                    defaultName: "misc_data"
                },
                paste: {
                    targetElement: null,
                    defaultName: "pasted_image"
                },
                camera: {
                    ios: false,
                    button: null
                },
                extraButtons: [],
                session: {
                    endpoint: null,
                    params: {},
                    customHeaders: {},
                    refreshOnReset: true
                },
                form: {
                    element: "qq-form",
                    autoUpload: false,
                    interceptSubmit: true
                },
                scaling: {
                    customResizer: null,
                    sendOriginal: true,
                    orient: true,
                    defaultType: null,
                    defaultQuality: 80,
                    failureText: "Failed to scale",
                    includeExif: false,
                    sizes: []
                },
                workarounds: {
                    iosEmptyVideos: true,
                    ios8SafariUploads: true,
                    ios8BrowserCrash: false
                }
            };
            qq.extend(this._options, o, true);
            this._buttons = [];
            this._extraButtonSpecs = {};
            this._buttonIdsForFileIds = [];
            this._wrapCallbacks();
            this._disposeSupport = new qq.DisposeSupport();
            this._storedIds = [];
            this._autoRetries = [];
            this._retryTimeouts = [];
            this._preventRetries = [];
            this._thumbnailUrls = [];
            this._netUploadedOrQueued = 0;
            this._netUploaded = 0;
            this._uploadData = this._createUploadDataTracker();
            this._initFormSupportAndParams();
            this._customHeadersStore = this._createStore(this._options.request.customHeaders);
            this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);
            this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);
            this._endpointStore = this._createStore(this._options.request.endpoint);
            this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);
            this._handler = this._createUploadHandler();
            this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();
            if (this._options.button) {
                this._defaultButtonId = this._createUploadButton({
                    element: this._options.button,
                    title: this._options.text.fileInputTitle
                }).getButtonId();
            }
            this._generateExtraButtonSpecs();
            this._handleCameraAccess();
            if (this._options.paste.targetElement) {
                if (qq.PasteSupport) {
                    this._pasteHandler = this._createPasteHandler();
                } else {
                    this.log("Paste support module not found", "error");
                }
            }
            this._options.warnBeforeUnload && this._preventLeaveInProgress();
            this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));
            this._refreshSessionData();
            this._succeededSinceLastAllComplete = [];
            this._failedSinceLastAllComplete = [];
            this._scaler = qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this)) || {};
            if (this._scaler.enabled) {
                this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);
            }
            if (qq.TotalProgress && qq.supportedFeatures.progressBar) {
                this._totalProgress = new qq.TotalProgress(qq.bind(this._onTotalProgress, this), function(id) {
                    var entry = self._uploadData.retrieve({
                        id: id
                    });
                    return entry && entry.size || 0;
                });
            }
            this._currentItemLimit = this._options.validation.itemLimit;
            this._customResumeDataStore = this._createStore();
        };
        qq.FineUploaderBasic.prototype = qq.basePublicApi;
        qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);
    })();
    qq.AjaxRequester = function(o) {
        "use strict";
        var log, shouldParamsBeInQueryString, queue = [], requestData = {}, options = {
            acceptHeader: null,
            validMethods: [ "PATCH", "POST", "PUT" ],
            method: "POST",
            contentType: "application/x-www-form-urlencoded",
            maxConnections: 3,
            customHeaders: {},
            endpointStore: {},
            paramsStore: {},
            mandatedParams: {},
            allowXRequestedWithAndCacheControl: true,
            successfulResponseCodes: {
                DELETE: [ 200, 202, 204 ],
                PATCH: [ 200, 201, 202, 203, 204 ],
                POST: [ 200, 201, 202, 203, 204 ],
                PUT: [ 200, 201, 202, 203, 204 ],
                GET: [ 200 ]
            },
            cors: {
                expected: false,
                sendCredentials: false
            },
            log: function(str, level) {},
            onSend: function(id) {},
            onComplete: function(id, xhrOrXdr, isError) {},
            onProgress: null
        };
        qq.extend(options, o);
        log = options.log;
        if (qq.indexOf(options.validMethods, options.method) < 0) {
            throw new Error("'" + options.method + "' is not a supported method for this type of request!");
        }
        function isSimpleMethod() {
            return qq.indexOf([ "GET", "POST", "HEAD" ], options.method) >= 0;
        }
        function containsNonSimpleHeaders(headers) {
            var containsNonSimple = false;
            qq.each(containsNonSimple, function(idx, header) {
                if (qq.indexOf([ "Accept", "Accept-Language", "Content-Language", "Content-Type" ], header) < 0) {
                    containsNonSimple = true;
                    return false;
                }
            });
            return containsNonSimple;
        }
        function isXdr(xhr) {
            return options.cors.expected && xhr.withCredentials === undefined;
        }
        function getCorsAjaxTransport() {
            var xhrOrXdr;
            if (window.XMLHttpRequest || window.ActiveXObject) {
                xhrOrXdr = qq.createXhrInstance();
                if (xhrOrXdr.withCredentials === undefined) {
                    xhrOrXdr = new XDomainRequest();
                    xhrOrXdr.onload = function() {};
                    xhrOrXdr.onerror = function() {};
                    xhrOrXdr.ontimeout = function() {};
                    xhrOrXdr.onprogress = function() {};
                }
            }
            return xhrOrXdr;
        }
        function getXhrOrXdr(id, suppliedXhr) {
            var xhrOrXdr = requestData[id] && requestData[id].xhr;
            if (!xhrOrXdr) {
                if (suppliedXhr) {
                    xhrOrXdr = suppliedXhr;
                } else {
                    if (options.cors.expected) {
                        xhrOrXdr = getCorsAjaxTransport();
                    } else {
                        xhrOrXdr = qq.createXhrInstance();
                    }
                }
                requestData[id].xhr = xhrOrXdr;
            }
            return xhrOrXdr;
        }
        function dequeue(id) {
            var i = qq.indexOf(queue, id), max = options.maxConnections, nextId;
            delete requestData[id];
            queue.splice(i, 1);
            if (queue.length >= max && i < max) {
                nextId = queue[max - 1];
                sendRequest(nextId);
            }
        }
        function onComplete(id, xdrError) {
            var xhr = getXhrOrXdr(id), method = options.method, isError = xdrError === true;
            dequeue(id);
            if (isError) {
                log(method + " request for " + id + " has failed", "error");
            } else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {
                isError = true;
                log(method + " request for " + id + " has failed - response code " + xhr.status, "error");
            }
            options.onComplete(id, xhr, isError);
        }
        function getParams(id) {
            var onDemandParams = requestData[id].additionalParams, mandatedParams = options.mandatedParams, params;
            if (options.paramsStore.get) {
                params = options.paramsStore.get(id);
            }
            if (onDemandParams) {
                qq.each(onDemandParams, function(name, val) {
                    params = params || {};
                    params[name] = val;
                });
            }
            if (mandatedParams) {
                qq.each(mandatedParams, function(name, val) {
                    params = params || {};
                    params[name] = val;
                });
            }
            return params;
        }
        function sendRequest(id, optXhr) {
            var xhr = getXhrOrXdr(id, optXhr), method = options.method, params = getParams(id), payload = requestData[id].payload, url;
            options.onSend(id);
            url = createUrl(id, params, requestData[id].additionalQueryParams);
            if (isXdr(xhr)) {
                xhr.onload = getXdrLoadHandler(id);
                xhr.onerror = getXdrErrorHandler(id);
            } else {
                xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);
            }
            registerForUploadProgress(id);
            xhr.open(method, url, true);
            if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {
                xhr.withCredentials = true;
            }
            setHeaders(id);
            log("Sending " + method + " request for " + id);
            if (payload) {
                xhr.send(payload);
            } else if (shouldParamsBeInQueryString || !params) {
                xhr.send();
            } else if (params && options.contentType && options.contentType.toLowerCase().indexOf("application/x-www-form-urlencoded") >= 0) {
                xhr.send(qq.obj2url(params, ""));
            } else if (params && options.contentType && options.contentType.toLowerCase().indexOf("application/json") >= 0) {
                xhr.send(JSON.stringify(params));
            } else {
                xhr.send(params);
            }
            return xhr;
        }
        function createUrl(id, params, additionalQueryParams) {
            var endpoint = options.endpointStore.get(id), addToPath = requestData[id].addToPath;
            if (addToPath != undefined) {
                endpoint += "/" + addToPath;
            }
            if (shouldParamsBeInQueryString && params) {
                endpoint = qq.obj2url(params, endpoint);
            }
            if (additionalQueryParams) {
                endpoint = qq.obj2url(additionalQueryParams, endpoint);
            }
            return endpoint;
        }
        function getXhrReadyStateChangeHandler(id) {
            return function() {
                if (getXhrOrXdr(id).readyState === 4) {
                    onComplete(id);
                }
            };
        }
        function registerForUploadProgress(id) {
            var onProgress = options.onProgress;
            if (onProgress) {
                getXhrOrXdr(id).upload.onprogress = function(e) {
                    if (e.lengthComputable) {
                        onProgress(id, e.loaded, e.total);
                    }
                };
            }
        }
        function getXdrLoadHandler(id) {
            return function() {
                onComplete(id);
            };
        }
        function getXdrErrorHandler(id) {
            return function() {
                onComplete(id, true);
            };
        }
        function setHeaders(id) {
            var xhr = getXhrOrXdr(id), customHeaders = options.customHeaders, onDemandHeaders = requestData[id].additionalHeaders || {}, method = options.method, allHeaders = {};
            if (!isXdr(xhr)) {
                options.acceptHeader && xhr.setRequestHeader("Accept", options.acceptHeader);
                if (options.allowXRequestedWithAndCacheControl) {
                    if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {
                        xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                        xhr.setRequestHeader("Cache-Control", "no-cache");
                    }
                }
                if (options.contentType && (method === "POST" || method === "PUT")) {
                    xhr.setRequestHeader("Content-Type", options.contentType);
                }
                qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);
                qq.extend(allHeaders, onDemandHeaders);
                qq.each(allHeaders, function(name, val) {
                    xhr.setRequestHeader(name, val);
                });
            }
        }
        function isResponseSuccessful(responseCode) {
            return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;
        }
        function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {
            requestData[id] = {
                addToPath: addToPath,
                additionalParams: additionalParams,
                additionalQueryParams: additionalQueryParams,
                additionalHeaders: additionalHeaders,
                payload: payload
            };
            var len = queue.push(id);
            if (len <= options.maxConnections) {
                return sendRequest(id, optXhr);
            }
        }
        shouldParamsBeInQueryString = options.method === "GET" || options.method === "DELETE";
        qq.extend(this, {
            initTransport: function(id) {
                var path, params, headers, payload, cacheBuster, additionalQueryParams;
                return {
                    withPath: function(appendToPath) {
                        path = appendToPath;
                        return this;
                    },
                    withParams: function(additionalParams) {
                        params = additionalParams;
                        return this;
                    },
                    withQueryParams: function(_additionalQueryParams_) {
                        additionalQueryParams = _additionalQueryParams_;
                        return this;
                    },
                    withHeaders: function(additionalHeaders) {
                        headers = additionalHeaders;
                        return this;
                    },
                    withPayload: function(thePayload) {
                        payload = thePayload;
                        return this;
                    },
                    withCacheBuster: function() {
                        cacheBuster = true;
                        return this;
                    },
                    send: function(optXhr) {
                        if (cacheBuster && qq.indexOf([ "GET", "DELETE" ], options.method) >= 0) {
                            params.qqtimestamp = new Date().getTime();
                        }
                        return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);
                    }
                };
            },
            canceled: function(id) {
                dequeue(id);
            }
        });
    };
    qq.UploadHandler = function(spec) {
        "use strict";
        var proxy = spec.proxy, fileState = {}, onCancel = proxy.onCancel, getName = proxy.getName;
        qq.extend(this, {
            add: function(id, fileItem) {
                fileState[id] = fileItem;
                fileState[id].temp = {};
            },
            cancel: function(id) {
                var self = this, cancelFinalizationEffort = new qq.Promise(), onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);
                onCancelRetVal.then(function() {
                    if (self.isValid(id)) {
                        fileState[id].canceled = true;
                        self.expunge(id);
                    }
                    cancelFinalizationEffort.success();
                });
            },
            expunge: function(id) {
                delete fileState[id];
            },
            getThirdPartyFileId: function(id) {
                return fileState[id].key;
            },
            isValid: function(id) {
                return fileState[id] !== undefined;
            },
            reset: function() {
                fileState = {};
            },
            _getFileState: function(id) {
                return fileState[id];
            },
            _setThirdPartyFileId: function(id, thirdPartyFileId) {
                fileState[id].key = thirdPartyFileId;
            },
            _wasCanceled: function(id) {
                return !!fileState[id].canceled;
            }
        });
    };
    qq.UploadHandlerController = function(o, namespace) {
        "use strict";
        var controller = this, chunkingPossible = false, concurrentChunkingPossible = false, chunking, preventRetryResponse, log, handler, options = {
            paramsStore: {},
            maxConnections: 3,
            chunking: {
                enabled: false,
                multiple: {
                    enabled: false
                }
            },
            log: function(str, level) {},
            onProgress: function(id, fileName, loaded, total) {},
            onComplete: function(id, fileName, response, xhr) {},
            onCancel: function(id, fileName) {},
            onUploadPrep: function(id) {},
            onUpload: function(id, fileName) {},
            onUploadChunk: function(id, fileName, chunkData) {},
            onUploadChunkSuccess: function(id, chunkData, response, xhr) {},
            onAutoRetry: function(id, fileName, response, xhr) {},
            onResume: function(id, fileName, chunkData, customResumeData) {},
            onUuidChanged: function(id, newUuid) {},
            getName: function(id) {},
            setSize: function(id, newSize) {},
            isQueued: function(id) {},
            getIdsInProxyGroup: function(id) {},
            getIdsInBatch: function(id) {},
            isInProgress: function(id) {}
        }, chunked = {
            done: function(id, chunkIdx, response, xhr) {
                var chunkData = handler._getChunkData(id, chunkIdx);
                handler._getFileState(id).attemptingResume = false;
                delete handler._getFileState(id).temp.chunkProgress[chunkIdx];
                handler._getFileState(id).loaded += chunkData.size;
                options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);
            },
            finalize: function(id) {
                var size = options.getSize(id), name = options.getName(id);
                log("All chunks have been uploaded for " + id + " - finalizing....");
                handler.finalizeChunks(id).then(function(response, xhr) {
                    log("Finalize successful for " + id);
                    var normaizedResponse = upload.normalizeResponse(response, true);
                    options.onProgress(id, name, size, size);
                    handler._maybeDeletePersistedChunkData(id);
                    upload.cleanup(id, normaizedResponse, xhr);
                }, function(response, xhr) {
                    var normalizedResponse = upload.normalizeResponse(response, false);
                    log("Problem finalizing chunks for file ID " + id + " - " + normalizedResponse.error, "error");
                    if (normalizedResponse.reset || xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0) {
                        chunked.reset(id);
                    }
                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {
                        upload.cleanup(id, normalizedResponse, xhr);
                    }
                });
            },
            handleFailure: function(chunkIdx, id, response, xhr) {
                var name = options.getName(id);
                log("Chunked upload request failed for " + id + ", chunk " + chunkIdx);
                handler.clearCachedChunk(id, chunkIdx);
                var responseToReport = upload.normalizeResponse(response, false), inProgressIdx;
                if (responseToReport.reset) {
                    chunked.reset(id);
                } else {
                    var inProgressChunksArray = handler._getFileState(id).chunking.inProgress;
                    inProgressIdx = inProgressChunksArray ? qq.indexOf(inProgressChunksArray, chunkIdx) : -1;
                    if (inProgressIdx >= 0) {
                        handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);
                        handler._getFileState(id).chunking.remaining.unshift(chunkIdx);
                    }
                }
                if (!handler._getFileState(id).temp.ignoreFailure) {
                    if (concurrentChunkingPossible) {
                        handler._getFileState(id).temp.ignoreFailure = true;
                        log(qq.format("Going to attempt to abort these chunks: {}. These are currently in-progress: {}.", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));
                        qq.each(handler._getXhrs(id), function(ckid, ckXhr) {
                            log(qq.format("Attempting to abort file {}.{}. XHR readyState {}. ", id, ckid, ckXhr.readyState));
                            ckXhr.abort();
                            ckXhr._cancelled = true;
                        });
                        handler.moveInProgressToRemaining(id);
                        connectionManager.free(id, true);
                    }
                    if (!options.onAutoRetry(id, name, responseToReport, xhr)) {
                        upload.cleanup(id, responseToReport, xhr);
                    }
                }
            },
            hasMoreParts: function(id) {
                return !!handler._getFileState(id).chunking.remaining.length;
            },
            nextPart: function(id) {
                var nextIdx = handler._getFileState(id).chunking.remaining.shift();
                if (nextIdx >= handler._getTotalChunks(id)) {
                    nextIdx = null;
                }
                return nextIdx;
            },
            reset: function(id) {
                log("Server or callback has ordered chunking effort to be restarted on next attempt for item ID " + id, "error");
                handler._maybeDeletePersistedChunkData(id);
                handler.reevaluateChunking(id);
                handler._getFileState(id).loaded = 0;
                handler._getFileState(id).attemptingResume = false;
            },
            sendNext: function(id) {
                var size = options.getSize(id), name = options.getName(id), chunkIdx = chunked.nextPart(id), chunkData = handler._getChunkData(id, chunkIdx), fileState = handler._getFileState(id), resuming = fileState.attemptingResume, inProgressChunks = fileState.chunking.inProgress || [];
                if (fileState.loaded == null) {
                    fileState.loaded = 0;
                }
                if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {
                    chunked.reset(id);
                    chunkIdx = chunked.nextPart(id);
                    chunkData = handler._getChunkData(id, chunkIdx);
                    resuming = false;
                }
                if (chunkIdx == null && inProgressChunks.length === 0) {
                    chunked.finalize(id);
                } else {
                    inProgressChunks.push(chunkIdx);
                    handler._getFileState(id).chunking.inProgress = inProgressChunks;
                    if (concurrentChunkingPossible) {
                        connectionManager.open(id, chunkIdx);
                    }
                    if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {
                        chunked.sendNext(id);
                    }
                    if (chunkData.blob.size === 0) {
                        log(qq.format("Chunk {} for file {} will not be uploaded, zero sized chunk.", chunkIdx, id), "error");
                        chunked.handleFailure(chunkIdx, id, "File is no longer available", null);
                    }
                    var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));
                    onUploadChunkPromise.then(function(requestOverrides) {
                        if (!options.isInProgress(id)) {
                            log(qq.format("Not sending chunked upload request for item {}.{} - no longer in progress.", id, chunkIdx));
                        } else {
                            log(qq.format("Sending chunked upload request for item {}.{}, bytes {}-{} of {}.", id, chunkIdx, chunkData.start + 1, chunkData.end, size));
                            var uploadChunkData = {
                                chunkIdx: chunkIdx,
                                id: id,
                                overrides: requestOverrides,
                                resuming: resuming
                            };
                            handler.uploadChunk(uploadChunkData).then(function success(response, xhr) {
                                log("Chunked upload request succeeded for " + id + ", chunk " + chunkIdx);
                                handler.clearCachedChunk(id, chunkIdx);
                                var inProgressChunks = handler._getFileState(id).chunking.inProgress || [], responseToReport = upload.normalizeResponse(response, true), inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);
                                log(qq.format("Chunk {} for file {} uploaded successfully.", chunkIdx, id));
                                chunked.done(id, chunkIdx, responseToReport, xhr);
                                if (inProgressChunkIdx >= 0) {
                                    inProgressChunks.splice(inProgressChunkIdx, 1);
                                }
                                handler._maybePersistChunkedState(id);
                                if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {
                                    chunked.finalize(id);
                                } else if (chunked.hasMoreParts(id)) {
                                    chunked.sendNext(id);
                                } else {
                                    log(qq.format("File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}", id, JSON.stringify(inProgressChunks)));
                                }
                            }, function failure(response, xhr) {
                                chunked.handleFailure(chunkIdx, id, response, xhr);
                            }).done(function() {
                                handler.clearXhr(id, chunkIdx);
                            });
                        }
                    }, function(error) {
                        chunked.handleFailure(chunkIdx, id, error, null);
                    });
                }
            }
        }, connectionManager = {
            _open: [],
            _openChunks: {},
            _waiting: [],
            available: function() {
                var max = options.maxConnections, openChunkEntriesCount = 0, openChunksCount = 0;
                qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {
                    openChunkEntriesCount++;
                    openChunksCount += openChunkIndexes.length;
                });
                return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);
            },
            free: function(id, dontAllowNext) {
                var allowNext = !dontAllowNext, waitingIndex = qq.indexOf(connectionManager._waiting, id), connectionsIndex = qq.indexOf(connectionManager._open, id), nextId;
                delete connectionManager._openChunks[id];
                if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {
                    log("Generated blob upload has ended for " + id + ", disposing generated blob.");
                    delete handler._getFileState(id).file;
                }
                if (waitingIndex >= 0) {
                    connectionManager._waiting.splice(waitingIndex, 1);
                } else if (allowNext && connectionsIndex >= 0) {
                    connectionManager._open.splice(connectionsIndex, 1);
                    nextId = connectionManager._waiting.shift();
                    if (nextId >= 0) {
                        connectionManager._open.push(nextId);
                        upload.start(nextId);
                    }
                }
            },
            getWaitingOrConnected: function() {
                var waitingOrConnected = [];
                qq.each(connectionManager._openChunks, function(fileId, chunks) {
                    if (chunks && chunks.length) {
                        waitingOrConnected.push(parseInt(fileId));
                    }
                });
                qq.each(connectionManager._open, function(idx, fileId) {
                    if (!connectionManager._openChunks[fileId]) {
                        waitingOrConnected.push(parseInt(fileId));
                    }
                });
                waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);
                return waitingOrConnected;
            },
            isUsingConnection: function(id) {
                return qq.indexOf(connectionManager._open, id) >= 0;
            },
            open: function(id, chunkIdx) {
                if (chunkIdx == null) {
                    connectionManager._waiting.push(id);
                }
                if (connectionManager.available()) {
                    if (chunkIdx == null) {
                        connectionManager._waiting.pop();
                        connectionManager._open.push(id);
                    } else {
                        (function() {
                            var openChunksEntry = connectionManager._openChunks[id] || [];
                            openChunksEntry.push(chunkIdx);
                            connectionManager._openChunks[id] = openChunksEntry;
                        })();
                    }
                    return true;
                }
                return false;
            },
            reset: function() {
                connectionManager._waiting = [];
                connectionManager._open = [];
            }
        }, simple = {
            send: function(id, name) {
                var fileState = handler._getFileState(id);
                if (!fileState) {
                    log("Ignoring send request as this upload may have been cancelled, File ID " + id, "warn");
                    return;
                }
                fileState.loaded = 0;
                log("Sending simple upload request for " + id);
                handler.uploadFile(id).then(function(response, optXhr) {
                    log("Simple upload request succeeded for " + id);
                    var responseToReport = upload.normalizeResponse(response, true), size = options.getSize(id);
                    options.onProgress(id, name, size, size);
                    upload.maybeNewUuid(id, responseToReport);
                    upload.cleanup(id, responseToReport, optXhr);
                }, function(response, optXhr) {
                    log("Simple upload request failed for " + id);
                    var responseToReport = upload.normalizeResponse(response, false);
                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {
                        upload.cleanup(id, responseToReport, optXhr);
                    }
                });
            }
        }, upload = {
            cancel: function(id) {
                log("Cancelling " + id);
                options.paramsStore.remove(id);
                connectionManager.free(id);
            },
            cleanup: function(id, response, optXhr) {
                var name = options.getName(id);
                options.onComplete(id, name, response, optXhr);
                if (handler._getFileState(id)) {
                    handler._clearXhrs && handler._clearXhrs(id);
                }
                connectionManager.free(id);
            },
            getProxyOrBlob: function(id) {
                return handler.getProxy && handler.getProxy(id) || handler.getFile && handler.getFile(id);
            },
            initHandler: function() {
                var handlerType = namespace ? qq[namespace] : qq.traditional, handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? "Xhr" : "Form";
                handler = new handlerType[handlerModuleSubtype + "UploadHandler"](options, {
                    getCustomResumeData: options.getCustomResumeData,
                    getDataByUuid: options.getDataByUuid,
                    getName: options.getName,
                    getSize: options.getSize,
                    getUuid: options.getUuid,
                    log: log,
                    onCancel: options.onCancel,
                    onProgress: options.onProgress,
                    onUuidChanged: options.onUuidChanged,
                    onFinalizing: function(id) {
                        options.setStatus(id, qq.status.UPLOAD_FINALIZING);
                    }
                });
                if (handler._removeExpiredChunkingRecords) {
                    handler._removeExpiredChunkingRecords();
                }
            },
            isDeferredEligibleForUpload: function(id) {
                return options.isQueued(id);
            },
            maybeDefer: function(id, blob) {
                if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {
                    options.onUploadPrep(id);
                    log("Attempting to generate a blob on-demand for " + id);
                    blob.create().then(function(generatedBlob) {
                        log("Generated an on-demand blob for " + id);
                        handler.updateBlob(id, generatedBlob);
                        options.setSize(id, generatedBlob.size);
                        handler.reevaluateChunking(id);
                        upload.maybeSendDeferredFiles(id);
                    }, function(errorMessage) {
                        var errorResponse = {};
                        if (errorMessage) {
                            errorResponse.error = errorMessage;
                        }
                        log(qq.format("Failed to generate blob for ID {}.  Error message: {}.", id, errorMessage), "error");
                        options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);
                        upload.maybeSendDeferredFiles(id);
                        connectionManager.free(id);
                    });
                } else {
                    return upload.maybeSendDeferredFiles(id);
                }
                return false;
            },
            maybeSendDeferredFiles: function(id) {
                var idsInGroup = options.getIdsInProxyGroup(id), uploadedThisId = false;
                if (idsInGroup && idsInGroup.length) {
                    log("Maybe ready to upload proxy group file " + id);
                    qq.each(idsInGroup, function(idx, idInGroup) {
                        if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {
                            uploadedThisId = idInGroup === id;
                            upload.now(idInGroup);
                        } else if (upload.isDeferredEligibleForUpload(idInGroup)) {
                            return false;
                        }
                    });
                } else {
                    uploadedThisId = true;
                    upload.now(id);
                }
                return uploadedThisId;
            },
            maybeNewUuid: function(id, response) {
                if (response.newUuid !== undefined) {
                    options.onUuidChanged(id, response.newUuid);
                }
            },
            normalizeResponse: function(originalResponse, successful) {
                var response = originalResponse;
                if (!qq.isObject(originalResponse)) {
                    response = {};
                    if (qq.isString(originalResponse) && !successful) {
                        response.error = originalResponse;
                    }
                }
                response.success = successful;
                return response;
            },
            now: function(id) {
                var name = options.getName(id);
                if (!controller.isValid(id)) {
                    throw new qq.Error(id + " is not a valid file ID to upload!");
                }
                options.onUpload(id, name).then(function(response) {
                    if (response && response.pause) {
                        options.setStatus(id, qq.status.PAUSED);
                        handler.pause(id);
                        connectionManager.free(id);
                    } else {
                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {
                            chunked.sendNext(id);
                        } else {
                            simple.send(id, name);
                        }
                    }
                }, function(error) {
                    error = error || {};
                    log(id + " upload start aborted due to rejected onUpload Promise - details: " + error, "error");
                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {
                        var response = upload.normalizeResponse(error.responseJSON, false);
                        upload.cleanup(id, response);
                    }
                });
            },
            start: function(id) {
                var blobToUpload = upload.getProxyOrBlob(id);
                if (blobToUpload) {
                    return upload.maybeDefer(id, blobToUpload);
                } else {
                    upload.now(id);
                    return true;
                }
            }
        };
        qq.extend(this, {
            add: function(id, file) {
                handler.add.apply(this, arguments);
            },
            upload: function(id) {
                if (connectionManager.open(id)) {
                    return upload.start(id);
                }
                return false;
            },
            retry: function(id) {
                if (concurrentChunkingPossible) {
                    handler._getFileState(id).temp.ignoreFailure = false;
                }
                if (connectionManager.isUsingConnection(id)) {
                    return upload.start(id);
                } else {
                    return controller.upload(id);
                }
            },
            cancel: function(id) {
                var cancelRetVal = handler.cancel(id);
                if (qq.isGenericPromise(cancelRetVal)) {
                    cancelRetVal.then(function() {
                        upload.cancel(id);
                    });
                } else if (cancelRetVal !== false) {
                    upload.cancel(id);
                }
            },
            cancelAll: function() {
                var waitingOrConnected = connectionManager.getWaitingOrConnected(), i;
                if (waitingOrConnected.length) {
                    for (i = waitingOrConnected.length - 1; i >= 0; i--) {
                        controller.cancel(waitingOrConnected[i]);
                    }
                }
                connectionManager.reset();
            },
            getFile: function(id) {
                if (handler.getProxy && handler.getProxy(id)) {
                    return handler.getProxy(id).referenceBlob;
                }
                return handler.getFile && handler.getFile(id);
            },
            isProxied: function(id) {
                return !!(handler.getProxy && handler.getProxy(id));
            },
            getInput: function(id) {
                if (handler.getInput) {
                    return handler.getInput(id);
                }
            },
            reset: function() {
                log("Resetting upload handler");
                controller.cancelAll();
                connectionManager.reset();
                handler.reset();
            },
            expunge: function(id) {
                if (controller.isValid(id)) {
                    return handler.expunge(id);
                }
            },
            isValid: function(id) {
                return handler.isValid(id);
            },
            hasResumeRecord: function(id) {
                var key = handler.isValid(id) && handler._getLocalStorageId && handler._getLocalStorageId(id);
                if (key) {
                    return !!localStorage.getItem(key);
                }
                return false;
            },
            getResumableFilesData: function() {
                if (handler.getResumableFilesData) {
                    return handler.getResumableFilesData();
                }
                return [];
            },
            getThirdPartyFileId: function(id) {
                if (controller.isValid(id)) {
                    return handler.getThirdPartyFileId(id);
                }
            },
            pause: function(id) {
                if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {
                    connectionManager.free(id);
                    handler.moveInProgressToRemaining(id);
                    return true;
                }
                return false;
            },
            isAttemptingResume: function(id) {
                return !!handler.isAttemptingResume && handler.isAttemptingResume(id);
            },
            isResumable: function(id) {
                return !!handler.isResumable && handler.isResumable(id);
            }
        });
        qq.extend(options, o);
        log = options.log;
        chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;
        concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;
        preventRetryResponse = function() {
            var response = {};
            response[options.preventRetryParam] = true;
            return response;
        }();
        upload.initHandler();
    };
    qq.WindowReceiveMessage = function(o) {
        "use strict";
        var options = {
            log: function(message, level) {}
        }, callbackWrapperDetachers = {};
        qq.extend(options, o);
        qq.extend(this, {
            receiveMessage: function(id, callback) {
                var onMessageCallbackWrapper = function(event) {
                    callback(event.data);
                };
                if (window.postMessage) {
                    callbackWrapperDetachers[id] = qq(window).attach("message", onMessageCallbackWrapper);
                } else {
                    log("iframe message passing not supported in this browser!", "error");
                }
            },
            stopReceivingMessages: function(id) {
                if (window.postMessage) {
                    var detacher = callbackWrapperDetachers[id];
                    if (detacher) {
                        detacher();
                    }
                }
            }
        });
    };
    qq.FormUploadHandler = function(spec) {
        "use strict";
        var options = spec.options, handler = this, proxy = spec.proxy, formHandlerInstanceId = qq.getUniqueId(), onloadCallbacks = {}, detachLoadEvents = {}, postMessageCallbackTimers = {}, isCors = options.isCors, inputName = options.inputName, getUuid = proxy.getUuid, log = proxy.log, corsMessageReceiver = new qq.WindowReceiveMessage({
            log: log
        });
        function expungeFile(id) {
            delete detachLoadEvents[id];
            if (isCors) {
                clearTimeout(postMessageCallbackTimers[id]);
                delete postMessageCallbackTimers[id];
                corsMessageReceiver.stopReceivingMessages(id);
            }
            var iframe = document.getElementById(handler._getIframeName(id));
            if (iframe) {
                iframe.setAttribute("src", "javascript:false;");
                qq(iframe).remove();
            }
        }
        function getFileIdForIframeName(iframeName) {
            return iframeName.split("_")[0];
        }
        function initIframeForUpload(name) {
            var iframe = qq.toElement("<iframe src='javascript:false;' name='" + name + "' />");
            iframe.setAttribute("id", name);
            iframe.style.display = "none";
            document.body.appendChild(iframe);
            return iframe;
        }
        function registerPostMessageCallback(iframe, callback) {
            var iframeName = iframe.id, fileId = getFileIdForIframeName(iframeName), uuid = getUuid(fileId);
            onloadCallbacks[uuid] = callback;
            detachLoadEvents[fileId] = qq(iframe).attach("load", function() {
                if (handler.getInput(fileId)) {
                    log("Received iframe load event for CORS upload request (iframe name " + iframeName + ")");
                    postMessageCallbackTimers[iframeName] = setTimeout(function() {
                        var errorMessage = "No valid message received from loaded iframe for iframe name " + iframeName;
                        log(errorMessage, "error");
                        callback({
                            error: errorMessage
                        });
                    }, 1e3);
                }
            });
            corsMessageReceiver.receiveMessage(iframeName, function(message) {
                log("Received the following window message: '" + message + "'");
                var fileId = getFileIdForIframeName(iframeName), response = handler._parseJsonResponse(message), uuid = response.uuid, onloadCallback;
                if (uuid && onloadCallbacks[uuid]) {
                    log("Handling response for iframe name " + iframeName);
                    clearTimeout(postMessageCallbackTimers[iframeName]);
                    delete postMessageCallbackTimers[iframeName];
                    handler._detachLoadEvent(iframeName);
                    onloadCallback = onloadCallbacks[uuid];
                    delete onloadCallbacks[uuid];
                    corsMessageReceiver.stopReceivingMessages(iframeName);
                    onloadCallback(response);
                } else if (!uuid) {
                    log("'" + message + "' does not contain a UUID - ignoring.");
                }
            });
        }
        qq.extend(this, new qq.UploadHandler(spec));
        qq.override(this, function(super_) {
            return {
                add: function(id, fileInput) {
                    super_.add(id, {
                        input: fileInput
                    });
                    fileInput.setAttribute("name", inputName);
                    if (fileInput.parentNode) {
                        qq(fileInput).remove();
                    }
                },
                expunge: function(id) {
                    expungeFile(id);
                    super_.expunge(id);
                },
                isValid: function(id) {
                    return super_.isValid(id) && handler._getFileState(id).input !== undefined;
                }
            };
        });
        qq.extend(this, {
            getInput: function(id) {
                return handler._getFileState(id).input;
            },
            _attachLoadEvent: function(iframe, callback) {
                var responseDescriptor;
                if (isCors) {
                    registerPostMessageCallback(iframe, callback);
                } else {
                    detachLoadEvents[iframe.id] = qq(iframe).attach("load", function() {
                        log("Received response for " + iframe.id);
                        if (!iframe.parentNode) {
                            return;
                        }
                        try {
                            if (iframe.contentDocument && iframe.contentDocument.body && iframe.contentDocument.body.innerHTML == "false") {
                                return;
                            }
                        } catch (error) {
                            log("Error when attempting to access iframe during handling of upload response (" + error.message + ")", "error");
                            responseDescriptor = {
                                success: false
                            };
                        }
                        callback(responseDescriptor);
                    });
                }
            },
            _createIframe: function(id) {
                var iframeName = handler._getIframeName(id);
                return initIframeForUpload(iframeName);
            },
            _detachLoadEvent: function(id) {
                if (detachLoadEvents[id] !== undefined) {
                    detachLoadEvents[id]();
                    delete detachLoadEvents[id];
                }
            },
            _getIframeName: function(fileId) {
                return fileId + "_" + formHandlerInstanceId;
            },
            _initFormForUpload: function(spec) {
                var method = spec.method, endpoint = spec.endpoint, params = spec.params, paramsInBody = spec.paramsInBody, targetName = spec.targetName, form = qq.toElement("<form method='" + method + "' enctype='multipart/form-data'></form>"), url = endpoint;
                if (paramsInBody) {
                    qq.obj2Inputs(params, form);
                } else {
                    url = qq.obj2url(params, endpoint);
                }
                form.setAttribute("action", url);
                form.setAttribute("target", targetName);
                form.style.display = "none";
                document.body.appendChild(form);
                return form;
            },
            _parseJsonResponse: function(innerHtmlOrMessage) {
                var response = {};
                try {
                    response = qq.parseJson(innerHtmlOrMessage);
                } catch (error) {
                    log("Error when attempting to parse iframe upload response (" + error.message + ")", "error");
                }
                return response;
            }
        });
    };
    qq.XhrUploadHandler = function(spec) {
        "use strict";
        var handler = this, namespace = spec.options.namespace, proxy = spec.proxy, chunking = spec.options.chunking, getChunkSize = function(id) {
            var fileState = handler._getFileState(id);
            if (fileState.chunkSize) {
                return fileState.chunkSize;
            } else {
                var chunkSize = chunking.partSize;
                if (qq.isFunction(chunkSize)) {
                    chunkSize = chunkSize(id, getSize(id));
                }
                fileState.chunkSize = chunkSize;
                return chunkSize;
            }
        }, resume = spec.options.resume, chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking, resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume, getName = proxy.getName, getSize = proxy.getSize, getUuid = proxy.getUuid, getEndpoint = proxy.getEndpoint, getDataByUuid = proxy.getDataByUuid, onUuidChanged = proxy.onUuidChanged, onProgress = proxy.onProgress, log = proxy.log, getCustomResumeData = proxy.getCustomResumeData;
        function abort(id) {
            qq.each(handler._getXhrs(id), function(xhrId, xhr) {
                var ajaxRequester = handler._getAjaxRequester(id, xhrId);
                xhr.onreadystatechange = null;
                xhr.upload.onprogress = null;
                xhr.abort();
                ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);
            });
        }
        qq.extend(this, new qq.UploadHandler(spec));
        qq.override(this, function(super_) {
            return {
                add: function(id, blobOrProxy) {
                    if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {
                        super_.add(id, {
                            file: blobOrProxy
                        });
                    } else if (blobOrProxy instanceof qq.BlobProxy) {
                        super_.add(id, {
                            proxy: blobOrProxy
                        });
                    } else {
                        throw new Error("Passed obj is not a File, Blob, or proxy");
                    }
                    handler._initTempState(id);
                    resumeEnabled && handler._maybePrepareForResume(id);
                },
                expunge: function(id) {
                    abort(id);
                    handler._maybeDeletePersistedChunkData(id);
                    handler._clearXhrs(id);
                    super_.expunge(id);
                }
            };
        });
        qq.extend(this, {
            clearCachedChunk: function(id, chunkIdx) {
                var fileState = handler._getFileState(id);
                if (fileState) {
                    delete fileState.temp.cachedChunks[chunkIdx];
                }
            },
            clearXhr: function(id, chunkIdx) {
                var tempState = handler._getFileState(id).temp;
                if (tempState.xhrs) {
                    delete tempState.xhrs[chunkIdx];
                }
                if (tempState.ajaxRequesters) {
                    delete tempState.ajaxRequesters[chunkIdx];
                }
            },
            finalizeChunks: function(id, responseParser) {
                var lastChunkIdx = handler._getTotalChunks(id) - 1, xhr = handler._getXhr(id, lastChunkIdx);
                if (responseParser) {
                    return new qq.Promise().success(responseParser(xhr), xhr);
                }
                return new qq.Promise().success({}, xhr);
            },
            getFile: function(id) {
                return handler.isValid(id) && handler._getFileState(id).file;
            },
            getProxy: function(id) {
                return handler.isValid(id) && handler._getFileState(id).proxy;
            },
            getResumableFilesData: function() {
                var resumableFilesData = [];
                handler._iterateResumeRecords(function(key, uploadData) {
                    handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress, uploadData.chunking.remaining);
                    var data = {
                        name: uploadData.name,
                        remaining: uploadData.chunking.remaining,
                        size: uploadData.size,
                        uuid: uploadData.uuid
                    };
                    if (uploadData.key) {
                        data.key = uploadData.key;
                    }
                    if (uploadData.customResumeData) {
                        data.customResumeData = uploadData.customResumeData;
                    }
                    resumableFilesData.push(data);
                });
                return resumableFilesData;
            },
            isAttemptingResume: function(id) {
                return handler._getFileState(id).attemptingResume;
            },
            isResumable: function(id) {
                return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;
            },
            moveInProgressToRemaining: function(id, optInProgress, optRemaining) {
                var fileState = handler._getFileState(id) || {}, chunkingState = fileState.chunking || {}, inProgress = optInProgress || chunkingState.inProgress, remaining = optRemaining || chunkingState.remaining;
                if (inProgress) {
                    log(qq.format("Moving these chunks from in-progress {}, to remaining.", JSON.stringify(inProgress)));
                    inProgress.reverse();
                    qq.each(inProgress, function(idx, chunkIdx) {
                        remaining.unshift(chunkIdx);
                    });
                    inProgress.length = 0;
                }
            },
            pause: function(id) {
                if (handler.isValid(id)) {
                    log(qq.format("Aborting XHR upload for {} '{}' due to pause instruction.", id, getName(id)));
                    handler._getFileState(id).paused = true;
                    abort(id);
                    return true;
                }
            },
            reevaluateChunking: function(id) {
                if (chunking && handler.isValid(id)) {
                    var state = handler._getFileState(id), totalChunks, i;
                    delete state.chunking;
                    state.chunking = {};
                    totalChunks = handler._getTotalChunks(id);
                    if (totalChunks > 1 || chunking.mandatory) {
                        state.chunking.enabled = true;
                        state.chunking.parts = totalChunks;
                        state.chunking.remaining = [];
                        for (i = 0; i < totalChunks; i++) {
                            state.chunking.remaining.push(i);
                        }
                        handler._initTempState(id);
                    } else {
                        state.chunking.enabled = false;
                    }
                }
            },
            updateBlob: function(id, newBlob) {
                if (handler.isValid(id)) {
                    handler._getFileState(id).file = newBlob;
                }
            },
            _clearXhrs: function(id) {
                var tempState = handler._getFileState(id).temp;
                qq.each(tempState.ajaxRequesters, function(chunkId) {
                    delete tempState.ajaxRequesters[chunkId];
                });
                qq.each(tempState.xhrs, function(chunkId) {
                    delete tempState.xhrs[chunkId];
                });
            },
            _createXhr: function(id, optChunkIdx) {
                return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());
            },
            _getAjaxRequester: function(id, optChunkIdx) {
                var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;
                return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];
            },
            _getChunkData: function(id, chunkIndex) {
                var chunkSize = getChunkSize(id), fileSize = getSize(id), fileOrBlob = handler.getFile(id), startBytes = chunkSize * chunkIndex, endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize, totalChunks = handler._getTotalChunks(id), cachedChunks = this._getFileState(id).temp.cachedChunks, blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);
                cachedChunks[chunkIndex] = blob;
                return {
                    part: chunkIndex,
                    start: startBytes,
                    end: endBytes,
                    count: totalChunks,
                    blob: blob,
                    size: endBytes - startBytes
                };
            },
            _getChunkDataForCallback: function(chunkData) {
                return {
                    partIndex: chunkData.part,
                    startByte: chunkData.start + 1,
                    endByte: chunkData.end,
                    totalParts: chunkData.count
                };
            },
            _getLocalStorageId: function(id) {
                var formatVersion = "5.0", name = getName(id), size = getSize(id), chunkSize = getChunkSize(id), endpoint = getEndpoint(id), customKeys = resume.customKeys(id), localStorageId = qq.format("qq{}resume{}-{}-{}-{}-{}", namespace, formatVersion, name, size, chunkSize, endpoint);
                customKeys.forEach(function(key) {
                    localStorageId += "-" + key;
                });
                return localStorageId;
            },
            _getMimeType: function(id) {
                return handler.getFile(id).type;
            },
            _getPersistableData: function(id) {
                return handler._getFileState(id).chunking;
            },
            _getTotalChunks: function(id) {
                if (chunking) {
                    var fileSize = getSize(id), chunkSize = getChunkSize(id);
                    return Math.ceil(fileSize / chunkSize);
                }
            },
            _getXhr: function(id, optChunkIdx) {
                var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;
                return handler._getFileState(id).temp.xhrs[chunkIdx];
            },
            _getXhrs: function(id) {
                return handler._getFileState(id).temp.xhrs;
            },
            _iterateResumeRecords: function(callback) {
                if (resumeEnabled) {
                    qq.each(localStorage, function(key, item) {
                        if (key.indexOf(qq.format("qq{}resume", namespace)) === 0) {
                            var uploadData = JSON.parse(item);
                            callback(key, uploadData);
                        }
                    });
                }
            },
            _initTempState: function(id) {
                handler._getFileState(id).temp = {
                    ajaxRequesters: {},
                    chunkProgress: {},
                    xhrs: {},
                    cachedChunks: {}
                };
            },
            _markNotResumable: function(id) {
                handler._getFileState(id).notResumable = true;
            },
            _maybeDeletePersistedChunkData: function(id) {
                var localStorageId;
                if (resumeEnabled && handler.isResumable(id)) {
                    localStorageId = handler._getLocalStorageId(id);
                    if (localStorageId && localStorage.getItem(localStorageId)) {
                        localStorage.removeItem(localStorageId);
                        return true;
                    }
                }
                return false;
            },
            _maybePrepareForResume: function(id) {
                var state = handler._getFileState(id), localStorageId, persistedData;
                if (resumeEnabled && state.key === undefined) {
                    localStorageId = handler._getLocalStorageId(id);
                    persistedData = localStorage.getItem(localStorageId);
                    if (persistedData) {
                        persistedData = JSON.parse(persistedData);
                        if (getDataByUuid(persistedData.uuid)) {
                            handler._markNotResumable(id);
                        } else {
                            log(qq.format("Identified file with ID {} and name of {} as resumable.", id, getName(id)));
                            onUuidChanged(id, persistedData.uuid);
                            state.key = persistedData.key;
                            state.chunking = persistedData.chunking;
                            state.loaded = persistedData.loaded;
                            state.customResumeData = persistedData.customResumeData;
                            state.attemptingResume = true;
                            handler.moveInProgressToRemaining(id);
                        }
                    }
                }
            },
            _maybePersistChunkedState: function(id) {
                var state = handler._getFileState(id), localStorageId, persistedData;
                if (resumeEnabled && handler.isResumable(id)) {
                    var customResumeData = getCustomResumeData(id);
                    localStorageId = handler._getLocalStorageId(id);
                    persistedData = {
                        name: getName(id),
                        size: getSize(id),
                        uuid: getUuid(id),
                        key: state.key,
                        chunking: state.chunking,
                        loaded: state.loaded,
                        lastUpdated: Date.now()
                    };
                    if (customResumeData) {
                        persistedData.customResumeData = customResumeData;
                    }
                    try {
                        localStorage.setItem(localStorageId, JSON.stringify(persistedData));
                    } catch (error) {
                        log(qq.format("Unable to save resume data for '{}' due to error: '{}'.", id, error.toString()), "warn");
                    }
                }
            },
            _registerProgressHandler: function(id, chunkIdx, chunkSize) {
                var xhr = handler._getXhr(id, chunkIdx), name = getName(id), progressCalculator = {
                    simple: function(loaded, total) {
                        var fileSize = getSize(id);
                        if (loaded === total) {
                            onProgress(id, name, fileSize, fileSize);
                        } else {
                            onProgress(id, name, loaded >= fileSize ? fileSize - 1 : loaded, fileSize);
                        }
                    },
                    chunked: function(loaded, total) {
                        var chunkProgress = handler._getFileState(id).temp.chunkProgress, totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded, loadedForRequest = loaded, totalForRequest = total, totalFileSize = getSize(id), estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize), totalLoadedForFile = totalSuccessfullyLoadedForFile;
                        chunkProgress[chunkIdx] = estActualChunkLoaded;
                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {
                            totalLoadedForFile += chunkLoaded;
                        });
                        onProgress(id, name, totalLoadedForFile, totalFileSize);
                    }
                };
                xhr.upload.onprogress = function(e) {
                    if (e.lengthComputable) {
                        var type = chunkSize == null ? "simple" : "chunked";
                        progressCalculator[type](e.loaded, e.total);
                    }
                };
            },
            _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {
                var xhrsId = optChunkIdx == null ? -1 : optChunkIdx, tempState = handler._getFileState(id).temp;
                tempState.xhrs = tempState.xhrs || {};
                tempState.ajaxRequesters = tempState.ajaxRequesters || {};
                tempState.xhrs[xhrsId] = xhr;
                if (optAjaxRequester) {
                    tempState.ajaxRequesters[xhrsId] = optAjaxRequester;
                }
                return xhr;
            },
            _removeExpiredChunkingRecords: function() {
                var expirationDays = resume.recordsExpireIn;
                handler._iterateResumeRecords(function(key, uploadData) {
                    var expirationDate = new Date(uploadData.lastUpdated);
                    expirationDate.setDate(expirationDate.getDate() + expirationDays);
                    if (expirationDate.getTime() <= Date.now()) {
                        log("Removing expired resume record with key " + key);
                        localStorage.removeItem(key);
                    }
                });
            },
            _shouldChunkThisFile: function(id) {
                var state = handler._getFileState(id);
                if (state) {
                    if (!state.chunking) {
                        handler.reevaluateChunking(id);
                    }
                    return state.chunking.enabled;
                }
            }
        });
    };
    qq.DeleteFileAjaxRequester = function(o) {
        "use strict";
        var requester, options = {
            method: "DELETE",
            uuidParamName: "qquuid",
            endpointStore: {},
            maxConnections: 3,
            customHeaders: function(id) {
                return {};
            },
            paramsStore: {},
            cors: {
                expected: false,
                sendCredentials: false
            },
            log: function(str, level) {},
            onDelete: function(id) {},
            onDeleteComplete: function(id, xhrOrXdr, isError) {}
        };
        qq.extend(options, o);
        function getMandatedParams() {
            if (options.method.toUpperCase() === "POST") {
                return {
                    _method: "DELETE"
                };
            }
            return {};
        }
        requester = qq.extend(this, new qq.AjaxRequester({
            acceptHeader: "application/json",
            validMethods: [ "POST", "DELETE" ],
            method: options.method,
            endpointStore: options.endpointStore,
            paramsStore: options.paramsStore,
            mandatedParams: getMandatedParams(),
            maxConnections: options.maxConnections,
            customHeaders: function(id) {
                return options.customHeaders.get(id);
            },
            log: options.log,
            onSend: options.onDelete,
            onComplete: options.onDeleteComplete,
            cors: options.cors
        }));
        qq.extend(this, {
            sendDelete: function(id, uuid, additionalMandatedParams) {
                var additionalOptions = additionalMandatedParams || {};
                options.log("Submitting delete file request for " + id);
                if (options.method === "DELETE") {
                    requester.initTransport(id).withPath(uuid).withParams(additionalOptions).send();
                } else {
                    additionalOptions[options.uuidParamName] = uuid;
                    requester.initTransport(id).withParams(additionalOptions).send();
                }
            }
        });
    };
    (function() {
        function detectSubsampling(img) {
            var iw = img.naturalWidth, ih = img.naturalHeight, canvas = document.createElement("canvas"), ctx;
            if (iw * ih > 1024 * 1024) {
                canvas.width = canvas.height = 1;
                ctx = canvas.getContext("2d");
                ctx.drawImage(img, -iw + 1, 0);
                return ctx.getImageData(0, 0, 1, 1).data[3] === 0;
            } else {
                return false;
            }
        }
        function detectVerticalSquash(img, iw, ih) {
            var canvas = document.createElement("canvas"), sy = 0, ey = ih, py = ih, ctx, data, alpha, ratio;
            canvas.width = 1;
            canvas.height = ih;
            ctx = canvas.getContext("2d");
            ctx.drawImage(img, 0, 0);
            data = ctx.getImageData(0, 0, 1, ih).data;
            while (py > sy) {
                alpha = data[(py - 1) * 4 + 3];
                if (alpha === 0) {
                    ey = py;
                } else {
                    sy = py;
                }
                py = ey + sy >> 1;
            }
            ratio = py / ih;
            return ratio === 0 ? 1 : ratio;
        }
        function renderImageToDataURL(img, blob, options, doSquash) {
            var canvas = document.createElement("canvas"), mime = options.mime || "image/jpeg", promise = new qq.Promise();
            renderImageToCanvas(img, blob, canvas, options, doSquash).then(function() {
                promise.success(canvas.toDataURL(mime, options.quality || .8));
            });
            return promise;
        }
        function maybeCalculateDownsampledDimensions(spec) {
            var maxPixels = 5241e3;
            if (!qq.ios()) {
                throw new qq.Error("Downsampled dimensions can only be reliably calculated for iOS!");
            }
            if (spec.origHeight * spec.origWidth > maxPixels) {
                return {
                    newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),
                    newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))
                };
            }
        }
        function renderImageToCanvas(img, blob, canvas, options, doSquash) {
            var iw = img.naturalWidth, ih = img.naturalHeight, width = options.width, height = options.height, ctx = canvas.getContext("2d"), promise = new qq.Promise(), modifiedDimensions;
            ctx.save();
            if (options.resize) {
                return renderImageToCanvasWithCustomResizer({
                    blob: blob,
                    canvas: canvas,
                    image: img,
                    imageHeight: ih,
                    imageWidth: iw,
                    orientation: options.orientation,
                    resize: options.resize,
                    targetHeight: height,
                    targetWidth: width
                });
            }
            if (!qq.supportedFeatures.unlimitedScaledImageSize) {
                modifiedDimensions = maybeCalculateDownsampledDimensions({
                    origWidth: width,
                    origHeight: height
                });
                if (modifiedDimensions) {
                    qq.log(qq.format("Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h", width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight), "warn");
                    width = modifiedDimensions.newWidth;
                    height = modifiedDimensions.newHeight;
                }
            }
            transformCoordinate(canvas, width, height, options.orientation);
            if (qq.ios()) {
                (function() {
                    if (detectSubsampling(img)) {
                        iw /= 2;
                        ih /= 2;
                    }
                    var d = 1024, tmpCanvas = document.createElement("canvas"), vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1, dw = Math.ceil(d * width / iw), dh = Math.ceil(d * height / ih / vertSquashRatio), sy = 0, dy = 0, tmpCtx, sx, dx;
                    tmpCanvas.width = tmpCanvas.height = d;
                    tmpCtx = tmpCanvas.getContext("2d");
                    while (sy < ih) {
                        sx = 0;
                        dx = 0;
                        while (sx < iw) {
                            tmpCtx.clearRect(0, 0, d, d);
                            tmpCtx.drawImage(img, -sx, -sy);
                            ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);
                            sx += d;
                            dx += dw;
                        }
                        sy += d;
                        dy += dh;
                    }
                    ctx.restore();
                    tmpCanvas = tmpCtx = null;
                })();
            } else {
                ctx.drawImage(img, 0, 0, width, height);
            }
            canvas.qqImageRendered && canvas.qqImageRendered();
            promise.success();
            return promise;
        }
        function renderImageToCanvasWithCustomResizer(resizeInfo) {
            var blob = resizeInfo.blob, image = resizeInfo.image, imageHeight = resizeInfo.imageHeight, imageWidth = resizeInfo.imageWidth, orientation = resizeInfo.orientation, promise = new qq.Promise(), resize = resizeInfo.resize, sourceCanvas = document.createElement("canvas"), sourceCanvasContext = sourceCanvas.getContext("2d"), targetCanvas = resizeInfo.canvas, targetHeight = resizeInfo.targetHeight, targetWidth = resizeInfo.targetWidth;
            transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);
            targetCanvas.height = targetHeight;
            targetCanvas.width = targetWidth;
            sourceCanvasContext.drawImage(image, 0, 0);
            resize({
                blob: blob,
                height: targetHeight,
                image: image,
                sourceCanvas: sourceCanvas,
                targetCanvas: targetCanvas,
                width: targetWidth
            }).then(function success() {
                targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();
                promise.success();
            }, promise.failure);
            return promise;
        }
        function transformCoordinate(canvas, width, height, orientation) {
            switch (orientation) {
              case 5:
              case 6:
              case 7:
              case 8:
                canvas.width = height;
                canvas.height = width;
                break;

              default:
                canvas.width = width;
                canvas.height = height;
            }
            var ctx = canvas.getContext("2d");
            switch (orientation) {
              case 2:
                ctx.translate(width, 0);
                ctx.scale(-1, 1);
                break;

              case 3:
                ctx.translate(width, height);
                ctx.rotate(Math.PI);
                break;

              case 4:
                ctx.translate(0, height);
                ctx.scale(1, -1);
                break;

              case 5:
                ctx.rotate(.5 * Math.PI);
                ctx.scale(1, -1);
                break;

              case 6:
                ctx.rotate(.5 * Math.PI);
                ctx.translate(0, -height);
                break;

              case 7:
                ctx.rotate(.5 * Math.PI);
                ctx.translate(width, -height);
                ctx.scale(-1, 1);
                break;

              case 8:
                ctx.rotate(-.5 * Math.PI);
                ctx.translate(-width, 0);
                break;

              default:
                break;
            }
        }
        function MegaPixImage(srcImage, errorCallback) {
            var self = this;
            if (window.Blob && srcImage instanceof Blob) {
                (function() {
                    var img = new Image(), URL = window.URL && window.URL.createObjectURL ? window.URL : window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;
                    if (!URL) {
                        throw Error("No createObjectURL function found to create blob url");
                    }
                    img.src = URL.createObjectURL(srcImage);
                    self.blob = srcImage;
                    srcImage = img;
                })();
            }
            if (!srcImage.naturalWidth && !srcImage.naturalHeight) {
                srcImage.onload = function() {
                    var listeners = self.imageLoadListeners;
                    if (listeners) {
                        self.imageLoadListeners = null;
                        setTimeout(function() {
                            for (var i = 0, len = listeners.length; i < len; i++) {
                                listeners[i]();
                            }
                        }, 0);
                    }
                };
                srcImage.onerror = errorCallback;
                this.imageLoadListeners = [];
            }
            this.srcImage = srcImage;
        }
        MegaPixImage.prototype.render = function(target, options) {
            options = options || {};
            var self = this, imgWidth = this.srcImage.naturalWidth, imgHeight = this.srcImage.naturalHeight, width = options.width, height = options.height, maxWidth = options.maxWidth, maxHeight = options.maxHeight, doSquash = !this.blob || this.blob.type === "image/jpeg", tagName = target.tagName.toLowerCase(), opt;
            if (this.imageLoadListeners) {
                this.imageLoadListeners.push(function() {
                    self.render(target, options);
                });
                return;
            }
            if (width && !height) {
                height = imgHeight * width / imgWidth << 0;
            } else if (height && !width) {
                width = imgWidth * height / imgHeight << 0;
            } else {
                width = imgWidth;
                height = imgHeight;
            }
            if (maxWidth && width > maxWidth) {
                width = maxWidth;
                height = imgHeight * width / imgWidth << 0;
            }
            if (maxHeight && height > maxHeight) {
                height = maxHeight;
                width = imgWidth * height / imgHeight << 0;
            }
            opt = {
                width: width,
                height: height
            }, qq.each(options, function(optionsKey, optionsValue) {
                opt[optionsKey] = optionsValue;
            });
            if (tagName === "img") {
                (function() {
                    var oldTargetSrc = target.src;
                    renderImageToDataURL(self.srcImage, self.blob, opt, doSquash).then(function(dataUri) {
                        target.src = dataUri;
                        oldTargetSrc === target.src && target.onload();
                    });
                })();
            } else if (tagName === "canvas") {
                renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);
            }
            if (typeof this.onrender === "function") {
                this.onrender(target);
            }
        };
        qq.MegaPixImage = MegaPixImage;
    })();
    qq.ImageGenerator = function(log) {
        "use strict";
        function isImg(el) {
            return el.tagName.toLowerCase() === "img";
        }
        function isCanvas(el) {
            return el.tagName.toLowerCase() === "canvas";
        }
        function isImgCorsSupported() {
            return new Image().crossOrigin !== undefined;
        }
        function isCanvasSupported() {
            var canvas = document.createElement("canvas");
            return canvas.getContext && canvas.getContext("2d");
        }
        function determineMimeOfFileName(nameWithPath) {
            var pathSegments = nameWithPath.split("/"), name = pathSegments[pathSegments.length - 1].split("?")[0], extension = qq.getExtension(name);
            extension = extension && extension.toLowerCase();
            switch (extension) {
              case "jpeg":
              case "jpg":
                return "image/jpeg";

              case "png":
                return "image/png";

              case "bmp":
                return "image/bmp";

              case "gif":
                return "image/gif";

              case "tiff":
              case "tif":
                return "image/tiff";
            }
        }
        function isCrossOrigin(url) {
            var targetAnchor = document.createElement("a"), targetProtocol, targetHostname, targetPort;
            targetAnchor.href = url;
            targetProtocol = targetAnchor.protocol;
            targetPort = targetAnchor.port;
            targetHostname = targetAnchor.hostname;
            if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {
                return true;
            }
            if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {
                return true;
            }
            if (targetPort !== window.location.port && !qq.ie()) {
                return true;
            }
            return false;
        }
        function registerImgLoadListeners(img, promise) {
            img.onload = function() {
                img.onload = null;
                img.onerror = null;
                promise.success(img);
            };
            img.onerror = function() {
                img.onload = null;
                img.onerror = null;
                log("Problem drawing thumbnail!", "error");
                promise.failure(img, "Problem drawing thumbnail!");
            };
        }
        function registerCanvasDrawImageListener(canvas, promise) {
            canvas.qqImageRendered = function() {
                promise.success(canvas);
            };
        }
        function registerThumbnailRenderedListener(imgOrCanvas, promise) {
            var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);
            if (isImg(imgOrCanvas)) {
                registerImgLoadListeners(imgOrCanvas, promise);
            } else if (isCanvas(imgOrCanvas)) {
                registerCanvasDrawImageListener(imgOrCanvas, promise);
            } else {
                promise.failure(imgOrCanvas);
                log(qq.format("Element container of type {} is not supported!", imgOrCanvas.tagName), "error");
            }
            return registered;
        }
        function draw(fileOrBlob, container, options) {
            var drawPreview = new qq.Promise(), identifier = new qq.Identify(fileOrBlob, log), maxSize = options.maxSize, orient = options.orient == null ? true : options.orient, megapixErrorHandler = function() {
                container.onerror = null;
                container.onload = null;
                log("Could not render preview, file may be too large!", "error");
                drawPreview.failure(container, "Browser cannot render image!");
            };
            identifier.isPreviewable().then(function(mime) {
                var dummyExif = {
                    parse: function() {
                        return new qq.Promise().success();
                    }
                }, exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif, mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);
                if (registerThumbnailRenderedListener(container, drawPreview)) {
                    exif.parse().then(function(exif) {
                        var orientation = exif && exif.Orientation;
                        mpImg.render(container, {
                            maxWidth: maxSize,
                            maxHeight: maxSize,
                            orientation: orientation,
                            mime: mime,
                            resize: options.customResizeFunction
                        });
                    }, function(failureMsg) {
                        log(qq.format("EXIF data could not be parsed ({}).  Assuming orientation = 1.", failureMsg));
                        mpImg.render(container, {
                            maxWidth: maxSize,
                            maxHeight: maxSize,
                            mime: mime,
                            resize: options.customResizeFunction
                        });
                    });
                }
            }, function() {
                log("Not previewable");
                drawPreview.failure(container, "Not previewable");
            });
            return drawPreview;
        }
        function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {
            var tempImg = new Image(), tempImgRender = new qq.Promise();
            registerThumbnailRenderedListener(tempImg, tempImgRender);
            if (isCrossOrigin(url)) {
                tempImg.crossOrigin = "anonymous";
            }
            tempImg.src = url;
            tempImgRender.then(function rendered() {
                registerThumbnailRenderedListener(canvasOrImg, draw);
                var mpImg = new qq.MegaPixImage(tempImg);
                mpImg.render(canvasOrImg, {
                    maxWidth: maxSize,
                    maxHeight: maxSize,
                    mime: determineMimeOfFileName(url),
                    resize: customResizeFunction
                });
            }, draw.failure);
        }
        function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {
            registerThumbnailRenderedListener(img, draw);
            qq(img).css({
                maxWidth: maxSize + "px",
                maxHeight: maxSize + "px"
            });
            img.src = url;
        }
        function drawFromUrl(url, container, options) {
            var draw = new qq.Promise(), scale = options.scale, maxSize = scale ? options.maxSize : null;
            if (scale && isImg(container)) {
                if (isCanvasSupported()) {
                    if (isCrossOrigin(url) && !isImgCorsSupported()) {
                        drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);
                    } else {
                        drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);
                    }
                } else {
                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);
                }
            } else if (isCanvas(container)) {
                drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);
            } else if (registerThumbnailRenderedListener(container, draw)) {
                container.src = url;
            }
            return draw;
        }
        qq.extend(this, {
            generate: function(fileBlobOrUrl, container, options) {
                if (qq.isString(fileBlobOrUrl)) {
                    log("Attempting to update thumbnail based on server response.");
                    return drawFromUrl(fileBlobOrUrl, container, options || {});
                } else {
                    log("Attempting to draw client-side image preview.");
                    return draw(fileBlobOrUrl, container, options || {});
                }
            }
        });
        this._testing = {};
        this._testing.isImg = isImg;
        this._testing.isCanvas = isCanvas;
        this._testing.isCrossOrigin = isCrossOrigin;
        this._testing.determineMimeOfFileName = determineMimeOfFileName;
    };
    qq.Exif = function(fileOrBlob, log) {
        "use strict";
        var TAG_IDS = [ 274 ], TAG_INFO = {
            274: {
                name: "Orientation",
                bytes: 2
            }
        };
        function parseLittleEndian(hex) {
            var result = 0, pow = 0;
            while (hex.length > 0) {
                result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);
                hex = hex.substring(2, hex.length);
                pow += 8;
            }
            return result;
        }
        function seekToApp1(offset, promise) {
            var theOffset = offset, thePromise = promise;
            if (theOffset === undefined) {
                theOffset = 2;
                thePromise = new qq.Promise();
            }
            qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {
                var match = /^ffe([0-9])/.exec(hex), segmentLength;
                if (match) {
                    if (match[1] !== "1") {
                        segmentLength = parseInt(hex.slice(4, 8), 16);
                        seekToApp1(theOffset + segmentLength + 2, thePromise);
                    } else {
                        thePromise.success(theOffset);
                    }
                } else {
                    thePromise.failure("No EXIF header to be found!");
                }
            });
            return thePromise;
        }
        function getApp1Offset() {
            var promise = new qq.Promise();
            qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {
                if (hex.indexOf("ffd8") !== 0) {
                    promise.failure("Not a valid JPEG!");
                } else {
                    seekToApp1().then(function(offset) {
                        promise.success(offset);
                    }, function(error) {
                        promise.failure(error);
                    });
                }
            });
            return promise;
        }
        function isLittleEndian(app1Start) {
            var promise = new qq.Promise();
            qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {
                promise.success(hex === "4949");
            });
            return promise;
        }
        function getDirEntryCount(app1Start, littleEndian) {
            var promise = new qq.Promise();
            qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {
                if (littleEndian) {
                    return promise.success(parseLittleEndian(hex));
                } else {
                    promise.success(parseInt(hex, 16));
                }
            });
            return promise;
        }
        function getIfd(app1Start, dirEntries) {
            var offset = app1Start + 20, bytes = dirEntries * 12;
            return qq.readBlobToHex(fileOrBlob, offset, bytes);
        }
        function getDirEntries(ifdHex) {
            var entries = [], offset = 0;
            while (offset + 24 <= ifdHex.length) {
                entries.push(ifdHex.slice(offset, offset + 24));
                offset += 24;
            }
            return entries;
        }
        function getTagValues(littleEndian, dirEntries) {
            var TAG_VAL_OFFSET = 16, tagsToFind = qq.extend([], TAG_IDS), vals = {};
            qq.each(dirEntries, function(idx, entry) {
                var idHex = entry.slice(0, 4), id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16), tagsToFindIdx = tagsToFind.indexOf(id), tagValHex, tagName, tagValLength;
                if (tagsToFindIdx >= 0) {
                    tagName = TAG_INFO[id].name;
                    tagValLength = TAG_INFO[id].bytes;
                    tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + tagValLength * 2);
                    vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);
                    tagsToFind.splice(tagsToFindIdx, 1);
                }
                if (tagsToFind.length === 0) {
                    return false;
                }
            });
            return vals;
        }
        qq.extend(this, {
            parse: function() {
                var parser = new qq.Promise(), onParseFailure = function(message) {
                    log(qq.format("EXIF header parse failed: '{}' ", message));
                    parser.failure(message);
                };
                getApp1Offset().then(function(app1Offset) {
                    log(qq.format("Moving forward with EXIF header parsing for '{}'", fileOrBlob.name === undefined ? "blob" : fileOrBlob.name));
                    isLittleEndian(app1Offset).then(function(littleEndian) {
                        log(qq.format("EXIF Byte order is {} endian", littleEndian ? "little" : "big"));
                        getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {
                            log(qq.format("Found {} APP1 directory entries", dirEntryCount));
                            getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {
                                var dirEntries = getDirEntries(ifdHex), tagValues = getTagValues(littleEndian, dirEntries);
                                log("Successfully parsed some EXIF tags");
                                parser.success(tagValues);
                            }, onParseFailure);
                        }, onParseFailure);
                    }, onParseFailure);
                }, onParseFailure);
                return parser;
            }
        });
        this._testing = {};
        this._testing.parseLittleEndian = parseLittleEndian;
    };
    qq.Identify = function(fileOrBlob, log) {
        "use strict";
        function isIdentifiable(magicBytes, questionableBytes) {
            var identifiable = false, magicBytesEntries = [].concat(magicBytes);
            qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {
                if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {
                    identifiable = true;
                    return false;
                }
            });
            return identifiable;
        }
        qq.extend(this, {
            isPreviewable: function() {
                var self = this, identifier = new qq.Promise(), previewable = false, name = fileOrBlob.name === undefined ? "blob" : fileOrBlob.name;
                log(qq.format("Attempting to determine if {} can be rendered in this browser", name));
                log("First pass: check type attribute of blob object.");
                if (this.isPreviewableSync()) {
                    log("Second pass: check for magic bytes in file header.");
                    qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {
                        qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {
                            if (isIdentifiable(bytes, hex)) {
                                if (mime !== "image/tiff" || qq.supportedFeatures.tiffPreviews) {
                                    previewable = true;
                                    identifier.success(mime);
                                }
                                return false;
                            }
                        });
                        log(qq.format("'{}' is {} able to be rendered in this browser", name, previewable ? "" : "NOT"));
                        if (!previewable) {
                            identifier.failure();
                        }
                    }, function() {
                        log("Error reading file w/ name '" + name + "'.  Not able to be rendered in this browser.");
                        identifier.failure();
                    });
                } else {
                    identifier.failure();
                }
                return identifier;
            },
            isPreviewableSync: function() {
                var fileMime = fileOrBlob.type, isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0, previewable = false, name = fileOrBlob.name === undefined ? "blob" : fileOrBlob.name;
                if (isRecognizedImage) {
                    if (fileMime === "image/tiff") {
                        previewable = qq.supportedFeatures.tiffPreviews;
                    } else {
                        previewable = true;
                    }
                }
                !previewable && log(name + " is not previewable in this browser per the blob's type attr");
                return previewable;
            }
        });
    };
    qq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {
        "image/jpeg": "ffd8ff",
        "image/gif": "474946",
        "image/png": "89504e",
        "image/bmp": "424d",
        "image/tiff": [ "49492a00", "4d4d002a" ]
    };
    qq.ImageValidation = function(blob, log) {
        "use strict";
        function hasNonZeroLimits(limits) {
            var atLeastOne = false;
            qq.each(limits, function(limit, value) {
                if (value > 0) {
                    atLeastOne = true;
                    return false;
                }
            });
            return atLeastOne;
        }
        function getWidthHeight() {
            var sizeDetermination = new qq.Promise();
            new qq.Identify(blob, log).isPreviewable().then(function() {
                var image = new Image(), url = window.URL && window.URL.createObjectURL ? window.URL : window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;
                if (url) {
                    image.onerror = function() {
                        log("Cannot determine dimensions for image.  May be too large.", "error");
                        sizeDetermination.failure();
                    };
                    image.onload = function() {
                        sizeDetermination.success({
                            width: this.width,
                            height: this.height
                        });
                    };
                    image.src = url.createObjectURL(blob);
                } else {
                    log("No createObjectURL function available to generate image URL!", "error");
                    sizeDetermination.failure();
                }
            }, sizeDetermination.failure);
            return sizeDetermination;
        }
        function getFailingLimit(limits, dimensions) {
            var failingLimit;
            qq.each(limits, function(limitName, limitValue) {
                if (limitValue > 0) {
                    var limitMatcher = /(max|min)(Width|Height)/.exec(limitName), dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1), actualValue = dimensions[dimensionPropName];
                    switch (limitMatcher[1]) {
                      case "min":
                        if (actualValue < limitValue) {
                            failingLimit = limitName;
                            return false;
                        }
                        break;

                      case "max":
                        if (actualValue > limitValue) {
                            failingLimit = limitName;
                            return false;
                        }
                        break;
                    }
                }
            });
            return failingLimit;
        }
        this.validate = function(limits) {
            var validationEffort = new qq.Promise();
            log("Attempting to validate image.");
            if (hasNonZeroLimits(limits)) {
                getWidthHeight().then(function(dimensions) {
                    var failingLimit = getFailingLimit(limits, dimensions);
                    if (failingLimit) {
                        validationEffort.failure(failingLimit);
                    } else {
                        validationEffort.success();
                    }
                }, validationEffort.success);
            } else {
                validationEffort.success();
            }
            return validationEffort;
        };
    };
    qq.Session = function(spec) {
        "use strict";
        var options = {
            endpoint: null,
            params: {},
            customHeaders: {},
            cors: {},
            addFileRecord: function(sessionData) {},
            log: function(message, level) {}
        };
        qq.extend(options, spec, true);
        function isJsonResponseValid(response) {
            if (qq.isArray(response)) {
                return true;
            }
            options.log("Session response is not an array.", "error");
        }
        function handleFileItems(fileItems, success, xhrOrXdr, promise) {
            var someItemsIgnored = false;
            success = success && isJsonResponseValid(fileItems);
            if (success) {
                qq.each(fileItems, function(idx, fileItem) {
                    if (fileItem.uuid == null) {
                        someItemsIgnored = true;
                        options.log(qq.format("Session response item {} did not include a valid UUID - ignoring.", idx), "error");
                    } else if (fileItem.name == null) {
                        someItemsIgnored = true;
                        options.log(qq.format("Session response item {} did not include a valid name - ignoring.", idx), "error");
                    } else {
                        try {
                            options.addFileRecord(fileItem);
                            return true;
                        } catch (err) {
                            someItemsIgnored = true;
                            options.log(err.message, "error");
                        }
                    }
                    return false;
                });
            }
            promise[success && !someItemsIgnored ? "success" : "failure"](fileItems, xhrOrXdr);
        }
        this.refresh = function() {
            var refreshEffort = new qq.Promise(), refreshCompleteCallback = function(response, success, xhrOrXdr) {
                handleFileItems(response, success, xhrOrXdr, refreshEffort);
            }, requesterOptions = qq.extend({}, options), requester = new qq.SessionAjaxRequester(qq.extend(requesterOptions, {
                onComplete: refreshCompleteCallback
            }));
            requester.queryServer();
            return refreshEffort;
        };
    };
    qq.SessionAjaxRequester = function(spec) {
        "use strict";
        var requester, options = {
            endpoint: null,
            customHeaders: {},
            params: {},
            cors: {
                expected: false,
                sendCredentials: false
            },
            onComplete: function(response, success, xhrOrXdr) {},
            log: function(str, level) {}
        };
        qq.extend(options, spec);
        function onComplete(id, xhrOrXdr, isError) {
            var response = null;
            if (xhrOrXdr.responseText != null) {
                try {
                    response = qq.parseJson(xhrOrXdr.responseText);
                } catch (err) {
                    options.log("Problem parsing session response: " + err.message, "error");
                    isError = true;
                }
            }
            options.onComplete(response, !isError, xhrOrXdr);
        }
        requester = qq.extend(this, new qq.AjaxRequester({
            acceptHeader: "application/json",
            validMethods: [ "GET" ],
            method: "GET",
            endpointStore: {
                get: function() {
                    return options.endpoint;
                }
            },
            customHeaders: options.customHeaders,
            log: options.log,
            onComplete: onComplete,
            cors: options.cors
        }));
        qq.extend(this, {
            queryServer: function() {
                var params = qq.extend({}, options.params);
                options.log("Session query request.");
                requester.initTransport("sessionRefresh").withParams(params).withCacheBuster().send();
            }
        });
    };
    qq.Scaler = function(spec, log) {
        "use strict";
        var self = this, customResizeFunction = spec.customResizer, includeOriginal = spec.sendOriginal, orient = spec.orient, defaultType = spec.defaultType, defaultQuality = spec.defaultQuality / 100, failedToScaleText = spec.failureText, includeExif = spec.includeExif, sizes = this._getSortedSizes(spec.sizes);
        qq.extend(this, {
            enabled: qq.supportedFeatures.scaling && sizes.length > 0,
            getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {
                var self = this, records = [], originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData, identifier = new qq.Identify(originalBlob, log);
                if (identifier.isPreviewableSync()) {
                    qq.each(sizes, function(idx, sizeRecord) {
                        var outputType = self._determineOutputType({
                            defaultType: defaultType,
                            requestedType: sizeRecord.type,
                            refType: originalBlob.type
                        });
                        records.push({
                            uuid: qq.getUniqueId(),
                            name: self._getName(originalFileName, {
                                name: sizeRecord.name,
                                type: outputType,
                                refType: originalBlob.type
                            }),
                            blob: new qq.BlobProxy(originalBlob, qq.bind(self._generateScaledImage, self, {
                                customResizeFunction: customResizeFunction,
                                maxSize: sizeRecord.maxSize,
                                orient: orient,
                                type: outputType,
                                quality: defaultQuality,
                                failedText: failedToScaleText,
                                includeExif: includeExif,
                                log: log
                            }))
                        });
                    });
                    records.push({
                        uuid: originalFileUuid,
                        name: originalFileName,
                        size: originalBlob.size,
                        blob: includeOriginal ? originalBlob : null
                    });
                } else {
                    records.push({
                        uuid: originalFileUuid,
                        name: originalFileName,
                        size: originalBlob.size,
                        blob: originalBlob
                    });
                }
                return records;
            },
            handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {
                var self = this, buttonId = file.qqButtonId || file.blob && file.blob.qqButtonId, scaledIds = [], originalId = null, addFileToHandler = api.addFileToHandler, uploadData = api.uploadData, paramsStore = api.paramsStore, proxyGroupId = qq.getUniqueId();
                qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {
                    var blobSize = record.size, id;
                    if (record.blob instanceof qq.BlobProxy) {
                        blobSize = -1;
                    }
                    id = uploadData.addFile({
                        uuid: record.uuid,
                        name: record.name,
                        size: blobSize,
                        batchId: batchId,
                        proxyGroupId: proxyGroupId
                    });
                    if (record.blob instanceof qq.BlobProxy) {
                        scaledIds.push(id);
                    } else {
                        originalId = id;
                    }
                    if (record.blob) {
                        addFileToHandler(id, record.blob);
                        fileList.push({
                            id: id,
                            file: record.blob
                        });
                    } else {
                        uploadData.setStatus(id, qq.status.REJECTED);
                    }
                });
                if (originalId !== null) {
                    qq.each(scaledIds, function(idx, scaledId) {
                        var params = {
                            qqparentuuid: uploadData.retrieve({
                                id: originalId
                            }).uuid,
                            qqparentsize: uploadData.retrieve({
                                id: originalId
                            }).size
                        };
                        params[uuidParamName] = uploadData.retrieve({
                            id: scaledId
                        }).uuid;
                        uploadData.setParentId(scaledId, originalId);
                        paramsStore.addReadOnly(scaledId, params);
                    });
                    if (scaledIds.length) {
                        (function() {
                            var param = {};
                            param[uuidParamName] = uploadData.retrieve({
                                id: originalId
                            }).uuid;
                            paramsStore.addReadOnly(originalId, param);
                        })();
                    }
                }
            }
        });
    };
    qq.extend(qq.Scaler.prototype, {
        scaleImage: function(id, specs, api) {
            "use strict";
            if (!qq.supportedFeatures.scaling) {
                throw new qq.Error("Scaling is not supported in this browser!");
            }
            var scalingEffort = new qq.Promise(), log = api.log, file = api.getFile(id), uploadData = api.uploadData.retrieve({
                id: id
            }), name = uploadData && uploadData.name, uuid = uploadData && uploadData.uuid, scalingOptions = {
                customResizer: specs.customResizer,
                sendOriginal: false,
                orient: specs.orient,
                defaultType: specs.type || null,
                defaultQuality: specs.quality,
                failedToScaleText: "Unable to scale",
                sizes: [ {
                    name: "",
                    maxSize: specs.maxSize
                } ]
            }, scaler = new qq.Scaler(scalingOptions, log);
            if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {
                scalingEffort.failure();
                log("Could not generate requested scaled image for " + id + ".  " + "Scaling is either not possible in this browser, or the file could not be located.", "error");
            } else {
                qq.bind(function() {
                    var record = scaler.getFileRecords(uuid, name, file)[0];
                    if (record && record.blob instanceof qq.BlobProxy) {
                        record.blob.create().then(scalingEffort.success, scalingEffort.failure);
                    } else {
                        log(id + " is not a scalable image!", "error");
                        scalingEffort.failure();
                    }
                }, this)();
            }
            return scalingEffort;
        },
        _determineOutputType: function(spec) {
            "use strict";
            var requestedType = spec.requestedType, defaultType = spec.defaultType, referenceType = spec.refType;
            if (!defaultType && !requestedType) {
                if (referenceType !== "image/jpeg") {
                    return "image/png";
                }
                return referenceType;
            }
            if (!requestedType) {
                return defaultType;
            }
            if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {
                if (requestedType === "image/tiff") {
                    return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;
                }
                return requestedType;
            }
            return defaultType;
        },
        _getName: function(originalName, scaledVersionProperties) {
            "use strict";
            var startOfExt = originalName.lastIndexOf("."), versionType = scaledVersionProperties.type || "image/png", referenceType = scaledVersionProperties.refType, scaledName = "", scaledExt = qq.getExtension(originalName), nameAppendage = "";
            if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {
                nameAppendage = " (" + scaledVersionProperties.name + ")";
            }
            if (startOfExt >= 0) {
                scaledName = originalName.substr(0, startOfExt);
                if (referenceType !== versionType) {
                    scaledExt = versionType.split("/")[1];
                }
                scaledName += nameAppendage + "." + scaledExt;
            } else {
                scaledName = originalName + nameAppendage;
            }
            return scaledName;
        },
        _getSortedSizes: function(sizes) {
            "use strict";
            sizes = qq.extend([], sizes);
            return sizes.sort(function(a, b) {
                if (a.maxSize > b.maxSize) {
                    return 1;
                }
                if (a.maxSize < b.maxSize) {
                    return -1;
                }
                return 0;
            });
        },
        _generateScaledImage: function(spec, sourceFile) {
            "use strict";
            var self = this, customResizeFunction = spec.customResizeFunction, log = spec.log, maxSize = spec.maxSize, orient = spec.orient, type = spec.type, quality = spec.quality, failedText = spec.failedText, includeExif = spec.includeExif && sourceFile.type === "image/jpeg" && type === "image/jpeg", scalingEffort = new qq.Promise(), imageGenerator = new qq.ImageGenerator(log), canvas = document.createElement("canvas");
            log("Attempting to generate scaled version for " + sourceFile.name);
            imageGenerator.generate(sourceFile, canvas, {
                maxSize: maxSize,
                orient: orient,
                customResizeFunction: customResizeFunction
            }).then(function() {
                var scaledImageDataUri = canvas.toDataURL(type, quality), signalSuccess = function() {
                    log("Success generating scaled version for " + sourceFile.name);
                    var blob = qq.dataUriToBlob(scaledImageDataUri);
                    scalingEffort.success(blob);
                };
                if (includeExif) {
                    self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {
                        scaledImageDataUri = scaledImageDataUriWithExif;
                        signalSuccess();
                    }, function() {
                        log("Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.", "error");
                        signalSuccess();
                    });
                } else {
                    signalSuccess();
                }
            }, function() {
                log("Failed attempt to generate scaled version for " + sourceFile.name, "error");
                scalingEffort.failure(failedText);
            });
            return scalingEffort;
        },
        _insertExifHeader: function(originalImage, scaledImageDataUri, log) {
            "use strict";
            var reader = new FileReader(), insertionEffort = new qq.Promise(), originalImageDataUri = "";
            reader.onload = function() {
                originalImageDataUri = reader.result;
                insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));
            };
            reader.onerror = function() {
                log("Problem reading " + originalImage.name + " during attempt to transfer EXIF data to scaled version.", "error");
                insertionEffort.failure();
            };
            reader.readAsDataURL(originalImage);
            return insertionEffort;
        },
        _dataUriToBlob: function(dataUri) {
            "use strict";
            var byteString, mimeString, arrayBuffer, intArray;
            if (dataUri.split(",")[0].indexOf("base64") >= 0) {
                byteString = atob(dataUri.split(",")[1]);
            } else {
                byteString = decodeURI(dataUri.split(",")[1]);
            }
            mimeString = dataUri.split(",")[0].split(":")[1].split(";")[0];
            arrayBuffer = new ArrayBuffer(byteString.length);
            intArray = new Uint8Array(arrayBuffer);
            qq.each(byteString, function(idx, character) {
                intArray[idx] = character.charCodeAt(0);
            });
            return this._createBlob(arrayBuffer, mimeString);
        },
        _createBlob: function(data, mime) {
            "use strict";
            var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, blobBuilder = BlobBuilder && new BlobBuilder();
            if (blobBuilder) {
                blobBuilder.append(data);
                return blobBuilder.getBlob(mime);
            } else {
                return new Blob([ data ], {
                    type: mime
                });
            }
        }
    });
    qq.ExifRestorer = function() {
        var ExifRestorer = {};
        ExifRestorer.KEY_STR = "ABCDEFGHIJKLMNOP" + "QRSTUVWXYZabcdef" + "ghijklmnopqrstuv" + "wxyz0123456789+/" + "=";
        ExifRestorer.encode64 = function(input) {
            var output = "", chr1, chr2, chr3 = "", enc1, enc2, enc3, enc4 = "", i = 0;
            do {
                chr1 = input[i++];
                chr2 = input[i++];
                chr3 = input[i++];
                enc1 = chr1 >> 2;
                enc2 = (chr1 & 3) << 4 | chr2 >> 4;
                enc3 = (chr2 & 15) << 2 | chr3 >> 6;
                enc4 = chr3 & 63;
                if (isNaN(chr2)) {
                    enc3 = enc4 = 64;
                } else if (isNaN(chr3)) {
                    enc4 = 64;
                }
                output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);
                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";
            } while (i < input.length);
            return output;
        };
        ExifRestorer.restore = function(origFileBase64, resizedFileBase64) {
            var expectedBase64Header = "data:image/jpeg;base64,";
            if (!origFileBase64.match(expectedBase64Header)) {
                return resizedFileBase64;
            }
            var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, ""));
            var segments = this.slice2Segments(rawImage);
            var image = this.exifManipulation(resizedFileBase64, segments);
            return expectedBase64Header + this.encode64(image);
        };
        ExifRestorer.exifManipulation = function(resizedFileBase64, segments) {
            var exifArray = this.getExifArray(segments), newImageArray = this.insertExif(resizedFileBase64, exifArray), aBuffer = new Uint8Array(newImageArray);
            return aBuffer;
        };
        ExifRestorer.getExifArray = function(segments) {
            var seg;
            for (var x = 0; x < segments.length; x++) {
                seg = segments[x];
                if (seg[0] == 255 & seg[1] == 225) {
                    return seg;
                }
            }
            return [];
        };
        ExifRestorer.insertExif = function(resizedFileBase64, exifArray) {
            var imageData = resizedFileBase64.replace("data:image/jpeg;base64,", ""), buf = this.decode64(imageData), separatePoint = buf.indexOf(255, 3), mae = buf.slice(0, separatePoint), ato = buf.slice(separatePoint), array = mae;
            array = array.concat(exifArray);
            array = array.concat(ato);
            return array;
        };
        ExifRestorer.slice2Segments = function(rawImageArray) {
            var head = 0, segments = [];
            while (1) {
                if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218) {
                    break;
                }
                if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216) {
                    head += 2;
                } else {
                    var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3], endPoint = head + length + 2, seg = rawImageArray.slice(head, endPoint);
                    segments.push(seg);
                    head = endPoint;
                }
                if (head > rawImageArray.length) {
                    break;
                }
            }
            return segments;
        };
        ExifRestorer.decode64 = function(input) {
            var output = "", chr1, chr2, chr3 = "", enc1, enc2, enc3, enc4 = "", i = 0, buf = [];
            var base64test = /[^A-Za-z0-9\+\/\=]/g;
            if (base64test.exec(input)) {
                throw new Error("There were invalid base64 characters in the input text.  " + "Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='");
            }
            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            do {
                enc1 = this.KEY_STR.indexOf(input.charAt(i++));
                enc2 = this.KEY_STR.indexOf(input.charAt(i++));
                enc3 = this.KEY_STR.indexOf(input.charAt(i++));
                enc4 = this.KEY_STR.indexOf(input.charAt(i++));
                chr1 = enc1 << 2 | enc2 >> 4;
                chr2 = (enc2 & 15) << 4 | enc3 >> 2;
                chr3 = (enc3 & 3) << 6 | enc4;
                buf.push(chr1);
                if (enc3 != 64) {
                    buf.push(chr2);
                }
                if (enc4 != 64) {
                    buf.push(chr3);
                }
                chr1 = chr2 = chr3 = "";
                enc1 = enc2 = enc3 = enc4 = "";
            } while (i < input.length);
            return buf;
        };
        return ExifRestorer;
    }();
    qq.TotalProgress = function(callback, getSize) {
        "use strict";
        var perFileProgress = {}, totalLoaded = 0, totalSize = 0, lastLoadedSent = -1, lastTotalSent = -1, callbackProxy = function(loaded, total) {
            if (loaded !== lastLoadedSent || total !== lastTotalSent) {
                callback(loaded, total);
            }
            lastLoadedSent = loaded;
            lastTotalSent = total;
        }, noRetryableFiles = function(failed, retryable) {
            var none = true;
            qq.each(failed, function(idx, failedId) {
                if (qq.indexOf(retryable, failedId) >= 0) {
                    none = false;
                    return false;
                }
            });
            return none;
        }, onCancel = function(id) {
            updateTotalProgress(id, -1, -1);
            delete perFileProgress[id];
        }, onAllComplete = function(successful, failed, retryable) {
            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {
                callbackProxy(totalSize, totalSize);
                this.reset();
            }
        }, onNew = function(id) {
            var size = getSize(id);
            if (size > 0) {
                updateTotalProgress(id, 0, size);
                perFileProgress[id] = {
                    loaded: 0,
                    total: size
                };
            }
        }, updateTotalProgress = function(id, newLoaded, newTotal) {
            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0, oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;
            if (newLoaded === -1 && newTotal === -1) {
                totalLoaded -= oldLoaded;
                totalSize -= oldTotal;
            } else {
                if (newLoaded) {
                    totalLoaded += newLoaded - oldLoaded;
                }
                if (newTotal) {
                    totalSize += newTotal - oldTotal;
                }
            }
            callbackProxy(totalLoaded, totalSize);
        };
        qq.extend(this, {
            onAllComplete: onAllComplete,
            onStatusChange: function(id, oldStatus, newStatus) {
                if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {
                    onCancel(id);
                } else if (newStatus === qq.status.SUBMITTING) {
                    onNew(id);
                }
            },
            onIndividualProgress: function(id, loaded, total) {
                updateTotalProgress(id, loaded, total);
                perFileProgress[id] = {
                    loaded: loaded,
                    total: total
                };
            },
            onNewSize: function(id) {
                onNew(id);
            },
            reset: function() {
                perFileProgress = {};
                totalLoaded = 0;
                totalSize = 0;
            }
        });
    };
    qq.PasteSupport = function(o) {
        "use strict";
        var options, detachPasteHandler;
        options = {
            targetElement: null,
            callbacks: {
                log: function(message, level) {},
                pasteReceived: function(blob) {}
            }
        };
        function isImage(item) {
            return item.type && item.type.indexOf("image/") === 0;
        }
        function registerPasteHandler() {
            detachPasteHandler = qq(options.targetElement).attach("paste", function(event) {
                var clipboardData = event.clipboardData;
                if (clipboardData) {
                    qq.each(clipboardData.items, function(idx, item) {
                        if (isImage(item)) {
                            var blob = item.getAsFile();
                            options.callbacks.pasteReceived(blob);
                        }
                    });
                }
            });
        }
        function unregisterPasteHandler() {
            if (detachPasteHandler) {
                detachPasteHandler();
            }
        }
        qq.extend(options, o);
        registerPasteHandler();
        qq.extend(this, {
            reset: function() {
                unregisterPasteHandler();
            }
        });
    };
    qq.FormSupport = function(options, startUpload, log) {
        "use strict";
        var self = this, interceptSubmit = options.interceptSubmit, formEl = options.element, autoUpload = options.autoUpload;
        qq.extend(this, {
            newEndpoint: null,
            newAutoUpload: autoUpload,
            attachedToForm: false,
            getFormInputsAsObject: function() {
                if (formEl == null) {
                    return null;
                }
                return self._form2Obj(formEl);
            }
        });
        function determineNewEndpoint(formEl) {
            if (formEl.getAttribute("action")) {
                self.newEndpoint = formEl.getAttribute("action");
            }
        }
        function validateForm(formEl, nativeSubmit) {
            if (formEl.checkValidity && !formEl.checkValidity()) {
                log("Form did not pass validation checks - will not upload.", "error");
                nativeSubmit();
            } else {
                return true;
            }
        }
        function maybeUploadOnSubmit(formEl) {
            var nativeSubmit = formEl.submit;
            qq(formEl).attach("submit", function(event) {
                event = event || window.event;
                if (event.preventDefault) {
                    event.preventDefault();
                } else {
                    event.returnValue = false;
                }
                validateForm(formEl, nativeSubmit) && startUpload();
            });
            formEl.submit = function() {
                validateForm(formEl, nativeSubmit) && startUpload();
            };
        }
        function determineFormEl(formEl) {
            if (formEl) {
                if (qq.isString(formEl)) {
                    formEl = document.getElementById(formEl);
                }
                if (formEl) {
                    log("Attaching to form element.");
                    determineNewEndpoint(formEl);
                    interceptSubmit && maybeUploadOnSubmit(formEl);
                }
            }
            return formEl;
        }
        formEl = determineFormEl(formEl);
        this.attachedToForm = !!formEl;
    };
    qq.extend(qq.FormSupport.prototype, {
        _form2Obj: function(form) {
            "use strict";
            var obj = {}, notIrrelevantType = function(type) {
                var irrelevantTypes = [ "button", "image", "reset", "submit" ];
                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;
            }, radioOrCheckbox = function(type) {
                return qq.indexOf([ "checkbox", "radio" ], type.toLowerCase()) >= 0;
            }, ignoreValue = function(el) {
                if (radioOrCheckbox(el.type) && !el.checked) {
                    return true;
                }
                return el.disabled && el.type.toLowerCase() !== "hidden";
            }, selectValue = function(select) {
                var value = null;
                qq.each(qq(select).children(), function(idx, child) {
                    if (child.tagName.toLowerCase() === "option" && child.selected) {
                        value = child.value;
                        return false;
                    }
                });
                return value;
            };
            qq.each(form.elements, function(idx, el) {
                if ((qq.isInput(el, true) || el.tagName.toLowerCase() === "textarea") && notIrrelevantType(el.type) && !ignoreValue(el)) {
                    obj[el.name] = el.value;
                } else if (el.tagName.toLowerCase() === "select" && !ignoreValue(el)) {
                    var value = selectValue(el);
                    if (value !== null) {
                        obj[el.name] = value;
                    }
                }
            });
            return obj;
        }
    });
    qq.traditional = qq.traditional || {};
    qq.traditional.FormUploadHandler = function(options, proxy) {
        "use strict";
        var handler = this, getName = proxy.getName, getUuid = proxy.getUuid, log = proxy.log;
        function getIframeContentJson(id, iframe) {
            var response, doc, innerHtml;
            try {
                doc = iframe.contentDocument || iframe.contentWindow.document;
                innerHtml = doc.body.innerHTML;
                log("converting iframe's innerHTML to JSON");
                log("innerHTML = " + innerHtml);
                if (innerHtml && innerHtml.match(/^<pre/i)) {
                    innerHtml = doc.body.firstChild.firstChild.nodeValue;
                }
                response = handler._parseJsonResponse(innerHtml);
            } catch (error) {
                log("Error when attempting to parse form upload response (" + error.message + ")", "error");
                response = {
                    success: false
                };
            }
            return response;
        }
        function createForm(id, iframe) {
            var params = options.paramsStore.get(id), method = options.method.toLowerCase() === "get" ? "GET" : "POST", endpoint = options.endpointStore.get(id), name = getName(id);
            params[options.uuidName] = getUuid(id);
            params[options.filenameParam] = name;
            return handler._initFormForUpload({
                method: method,
                endpoint: endpoint,
                params: params,
                paramsInBody: options.paramsInBody,
                targetName: iframe.name
            });
        }
        this.uploadFile = function(id) {
            var input = handler.getInput(id), iframe = handler._createIframe(id), promise = new qq.Promise(), form;
            form = createForm(id, iframe);
            form.appendChild(input);
            handler._attachLoadEvent(iframe, function(responseFromMessage) {
                log("iframe loaded");
                var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);
                handler._detachLoadEvent(id);
                if (!options.cors.expected) {
                    qq(iframe).remove();
                }
                if (response.success) {
                    promise.success(response);
                } else {
                    promise.failure(response);
                }
            });
            log("Sending upload request for " + id);
            form.submit();
            qq(form).remove();
            return promise;
        };
        qq.extend(this, new qq.FormUploadHandler({
            options: {
                isCors: options.cors.expected,
                inputName: options.inputName
            },
            proxy: {
                onCancel: options.onCancel,
                getName: getName,
                getUuid: getUuid,
                log: log
            }
        }));
    };
    qq.traditional = qq.traditional || {};
    qq.traditional.XhrUploadHandler = function(spec, proxy) {
        "use strict";
        var handler = this, getName = proxy.getName, getSize = proxy.getSize, getUuid = proxy.getUuid, log = proxy.log, multipart = spec.forceMultipart || spec.paramsInBody, addChunkingSpecificParams = function(id, params, chunkData) {
            var size = getSize(id), name = getName(id);
            if (!spec.omitDefaultParams) {
                params[spec.chunking.paramNames.partIndex] = chunkData.part;
                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;
                params[spec.chunking.paramNames.chunkSize] = chunkData.size;
                params[spec.chunking.paramNames.totalParts] = chunkData.count;
                params[spec.totalFileSizeName] = size;
            }
            if (multipart && !spec.omitDefaultParams) {
                params[spec.filenameParam] = name;
            }
        }, allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({
            cors: spec.cors,
            endpoint: spec.chunking.success.endpoint,
            headers: spec.chunking.success.headers,
            jsonPayload: spec.chunking.success.jsonPayload,
            log: log,
            method: spec.chunking.success.method,
            params: spec.chunking.success.params
        }), createReadyStateChangedHandler = function(id, xhr) {
            var promise = new qq.Promise();
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                    var result = onUploadOrChunkComplete(id, xhr);
                    if (result.success) {
                        promise.success(result.response, xhr);
                    } else {
                        promise.failure(result.response, xhr);
                    }
                }
            };
            return promise;
        }, getChunksCompleteParams = function(id) {
            var params = spec.paramsStore.get(id), name = getName(id), size = getSize(id);
            params[spec.uuidName] = getUuid(id);
            params[spec.filenameParam] = name;
            params[spec.totalFileSizeName] = size;
            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);
            return params;
        }, isErrorUploadResponse = function(xhr, response) {
            return qq.indexOf([ 200, 201, 202, 203, 204 ], xhr.status) < 0 || spec.requireSuccessJson && !response.success || response.reset;
        }, onUploadOrChunkComplete = function(id, xhr) {
            var response;
            log("xhr - server response received for " + id);
            log("responseText = " + xhr.responseText);
            response = parseResponse(true, xhr);
            return {
                success: !isErrorUploadResponse(xhr, response),
                response: response
            };
        }, parseResponse = function(upload, xhr) {
            var response = {};
            try {
                log(qq.format("Received response status {} with body: {}", xhr.status, xhr.responseText));
                response = qq.parseJson(xhr.responseText);
            } catch (error) {
                upload && spec.requireSuccessJson && log("Error when attempting to parse xhr response text (" + error.message + ")", "error");
            }
            return response;
        }, sendChunksCompleteRequest = function(id) {
            var promise = new qq.Promise();
            allChunksDoneRequester.complete(id, handler._createXhr(id), getChunksCompleteParams(id), spec.customHeaders.get(id)).then(function(xhr) {
                promise.success(parseResponse(false, xhr), xhr);
            }, function(xhr) {
                promise.failure(parseResponse(false, xhr), xhr);
            });
            return promise;
        }, setParamsAndGetEntityToSend = function(entityToSendParams) {
            var fileOrBlob = entityToSendParams.fileOrBlob;
            var id = entityToSendParams.id;
            var xhr = entityToSendParams.xhr;
            var xhrOverrides = entityToSendParams.xhrOverrides || {};
            var customParams = entityToSendParams.customParams || {};
            var defaultParams = entityToSendParams.params || {};
            var xhrOverrideParams = xhrOverrides.params || {};
            var params;
            var formData = multipart ? new FormData() : null, method = xhrOverrides.method || spec.method, endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id), name = getName(id), size = getSize(id);
            if (spec.omitDefaultParams) {
                params = qq.extend({}, customParams);
                qq.extend(params, xhrOverrideParams);
            } else {
                params = qq.extend({}, customParams);
                qq.extend(params, xhrOverrideParams);
                qq.extend(params, defaultParams);
                params[spec.uuidName] = getUuid(id);
                params[spec.filenameParam] = name;
                if (multipart) {
                    params[spec.totalFileSizeName] = size;
                } else if (!spec.paramsInBody) {
                    params[spec.inputName] = name;
                }
            }
            if (!spec.paramsInBody) {
                endpoint = qq.obj2url(params, endpoint);
            }
            xhr.open(method, endpoint, true);
            if (spec.cors.expected && spec.cors.sendCredentials) {
                xhr.withCredentials = true;
            }
            if (multipart) {
                if (spec.paramsInBody) {
                    qq.obj2FormData(params, formData);
                }
                formData.append(spec.inputName, fileOrBlob);
                return formData;
            }
            return fileOrBlob;
        }, setUploadHeaders = function(headersOptions) {
            var headerOverrides = headersOptions.headerOverrides;
            var id = headersOptions.id;
            var xhr = headersOptions.xhr;
            if (headerOverrides) {
                qq.each(headerOverrides, function(headerName, headerValue) {
                    xhr.setRequestHeader(headerName, headerValue);
                });
            } else {
                var extraHeaders = spec.customHeaders.get(id), fileOrBlob = handler.getFile(id);
                xhr.setRequestHeader("Accept", "application/json");
                xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                xhr.setRequestHeader("Cache-Control", "no-cache");
                if (!multipart) {
                    xhr.setRequestHeader("Content-Type", "application/octet-stream");
                    xhr.setRequestHeader("X-Mime-Type", fileOrBlob.type);
                }
                qq.each(extraHeaders, function(name, val) {
                    xhr.setRequestHeader(name, val);
                });
            }
        };
        qq.extend(this, {
            uploadChunk: function(uploadChunkParams) {
                var id = uploadChunkParams.id;
                var chunkIdx = uploadChunkParams.chunkIdx;
                var overrides = uploadChunkParams.overrides || {};
                var resuming = uploadChunkParams.resuming;
                var chunkData = handler._getChunkData(id, chunkIdx), xhr = handler._createXhr(id, chunkIdx), promise, toSend, customParams, params = {};
                promise = createReadyStateChangedHandler(id, xhr);
                handler._registerProgressHandler(id, chunkIdx, chunkData.size);
                customParams = spec.paramsStore.get(id);
                addChunkingSpecificParams(id, params, chunkData);
                if (resuming) {
                    params[spec.resume.paramNames.resuming] = true;
                }
                toSend = setParamsAndGetEntityToSend({
                    fileOrBlob: chunkData.blob,
                    id: id,
                    customParams: customParams,
                    params: params,
                    xhr: xhr,
                    xhrOverrides: overrides
                });
                setUploadHeaders({
                    headerOverrides: overrides.headers,
                    id: id,
                    xhr: xhr
                });
                xhr.send(toSend);
                return promise;
            },
            uploadFile: function(id) {
                var fileOrBlob = handler.getFile(id), promise, xhr, customParams, toSend;
                xhr = handler._createXhr(id);
                handler._registerProgressHandler(id);
                promise = createReadyStateChangedHandler(id, xhr);
                customParams = spec.paramsStore.get(id);
                toSend = setParamsAndGetEntityToSend({
                    fileOrBlob: fileOrBlob,
                    id: id,
                    customParams: customParams,
                    xhr: xhr
                });
                setUploadHeaders({
                    id: id,
                    xhr: xhr
                });
                xhr.send(toSend);
                return promise;
            }
        });
        qq.extend(this, new qq.XhrUploadHandler({
            options: qq.extend({
                namespace: "traditional"
            }, spec),
            proxy: qq.extend({
                getEndpoint: spec.endpointStore.get
            }, proxy)
        }));
        qq.override(this, function(super_) {
            return {
                finalizeChunks: function(id) {
                    proxy.onFinalizing(id);
                    if (spec.chunking.success.endpoint) {
                        return sendChunksCompleteRequest(id);
                    } else {
                        return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));
                    }
                }
            };
        });
    };
    qq.traditional.AllChunksDoneAjaxRequester = function(o) {
        "use strict";
        var requester, options = {
            cors: {
                allowXdr: false,
                expected: false,
                sendCredentials: false
            },
            endpoint: null,
            log: function(str, level) {},
            method: "POST"
        }, promises = {}, endpointHandler = {
            get: function(id) {
                if (qq.isFunction(options.endpoint)) {
                    return options.endpoint(id);
                }
                return options.endpoint;
            }
        };
        qq.extend(options, o);
        requester = qq.extend(this, new qq.AjaxRequester({
            acceptHeader: "application/json",
            contentType: options.jsonPayload ? "application/json" : "application/x-www-form-urlencoded",
            validMethods: [ options.method ],
            method: options.method,
            endpointStore: endpointHandler,
            allowXRequestedWithAndCacheControl: false,
            cors: options.cors,
            log: options.log,
            onComplete: function(id, xhr, isError) {
                var promise = promises[id];
                delete promises[id];
                if (isError) {
                    promise.failure(xhr);
                } else {
                    promise.success(xhr);
                }
            }
        }));
        qq.extend(this, {
            complete: function(id, xhr, params, headers) {
                var promise = new qq.Promise();
                options.log("Submitting All Chunks Done request for " + id);
                promises[id] = promise;
                requester.initTransport(id).withParams(options.params(id) || params).withHeaders(options.headers(id) || headers).send(xhr);
                return promise;
            }
        });
    };
    qq.DragAndDrop = function(o) {
        "use strict";
        var options, HIDE_ZONES_EVENT_NAME = "qq-hidezones", HIDE_BEFORE_ENTER_ATTR = "qq-hide-dropzone", uploadDropZones = [], droppedFiles = [], disposeSupport = new qq.DisposeSupport();
        options = {
            dropZoneElements: [],
            allowMultipleItems: true,
            classes: {
                dropActive: null
            },
            callbacks: new qq.DragAndDrop.callbacks()
        };
        qq.extend(options, o, true);
        function uploadDroppedFiles(files, uploadDropZone) {
            var filesAsArray = Array.prototype.slice.call(files);
            options.callbacks.dropLog("Grabbed " + files.length + " dropped files.");
            uploadDropZone.dropDisabled(false);
            options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());
        }
        function traverseFileTree(entry) {
            var parseEntryPromise = new qq.Promise();
            if (entry.isFile) {
                entry.file(function(file) {
                    file.qqPath = extractDirectoryPath(entry);
                    droppedFiles.push(file);
                    parseEntryPromise.success();
                }, function(fileError) {
                    options.callbacks.dropLog("Problem parsing '" + entry.fullPath + "'.  FileError code " + fileError.code + ".", "error");
                    parseEntryPromise.failure();
                });
            } else if (entry.isDirectory) {
                getFilesInDirectory(entry).then(function allEntriesRead(entries) {
                    var entriesLeft = entries.length;
                    qq.each(entries, function(idx, entry) {
                        traverseFileTree(entry).done(function() {
                            entriesLeft -= 1;
                            if (entriesLeft === 0) {
                                parseEntryPromise.success();
                            }
                        });
                    });
                    if (!entries.length) {
                        parseEntryPromise.success();
                    }
                }, function readFailure(fileError) {
                    options.callbacks.dropLog("Problem parsing '" + entry.fullPath + "'.  FileError code " + fileError.code + ".", "error");
                    parseEntryPromise.failure();
                });
            }
            return parseEntryPromise;
        }
        function extractDirectoryPath(entry) {
            var name = entry.name, fullPath = entry.fullPath, indexOfNameInFullPath = fullPath.lastIndexOf(name);
            fullPath = fullPath.substr(0, indexOfNameInFullPath);
            if (fullPath.charAt(0) === "/") {
                fullPath = fullPath.substr(1);
            }
            return fullPath;
        }
        function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {
            var promise = existingPromise || new qq.Promise(), dirReader = reader || entry.createReader();
            dirReader.readEntries(function readSuccess(entries) {
                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;
                if (entries.length) {
                    setTimeout(function() {
                        getFilesInDirectory(entry, dirReader, newEntries, promise);
                    }, 0);
                } else {
                    promise.success(newEntries);
                }
            }, promise.failure);
            return promise;
        }
        function handleDataTransfer(dataTransfer, uploadDropZone) {
            var pendingFolderPromises = [], handleDataTransferPromise = new qq.Promise();
            options.callbacks.processingDroppedFiles();
            uploadDropZone.dropDisabled(true);
            if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {
                options.callbacks.processingDroppedFilesComplete([]);
                options.callbacks.dropError("tooManyFilesError", "");
                uploadDropZone.dropDisabled(false);
                handleDataTransferPromise.failure();
            } else {
                droppedFiles = [];
                if (qq.isFolderDropSupported(dataTransfer)) {
                    qq.each(dataTransfer.items, function(idx, item) {
                        var entry = item.webkitGetAsEntry();
                        if (entry) {
                            if (entry.isFile) {
                                droppedFiles.push(item.getAsFile());
                            } else {
                                pendingFolderPromises.push(traverseFileTree(entry).done(function() {
                                    pendingFolderPromises.pop();
                                    if (pendingFolderPromises.length === 0) {
                                        handleDataTransferPromise.success();
                                    }
                                }));
                            }
                        }
                    });
                } else {
                    droppedFiles = dataTransfer.files;
                }
                if (pendingFolderPromises.length === 0) {
                    handleDataTransferPromise.success();
                }
            }
            return handleDataTransferPromise;
        }
        function setupDropzone(dropArea) {
            var dropZone = new qq.UploadDropZone({
                HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,
                element: dropArea,
                onEnter: function(e) {
                    qq(dropArea).addClass(options.classes.dropActive);
                    e.stopPropagation();
                },
                onLeaveNotDescendants: function(e) {
                    qq(dropArea).removeClass(options.classes.dropActive);
                },
                onDrop: function(e) {
                    handleDataTransfer(e.dataTransfer, dropZone).then(function() {
                        uploadDroppedFiles(droppedFiles, dropZone);
                    }, function() {
                        options.callbacks.dropLog("Drop event DataTransfer parsing failed.  No files will be uploaded.", "error");
                    });
                }
            });
            disposeSupport.addDisposer(function() {
                dropZone.dispose();
            });
            qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();
            uploadDropZones.push(dropZone);
            return dropZone;
        }
        function isFileDrag(dragEvent) {
            var fileDrag;
            qq.each(dragEvent.dataTransfer.types, function(key, val) {
                if (val === "Files") {
                    fileDrag = true;
                    return false;
                }
            });
            return fileDrag;
        }
        function leavingDocumentOut(e) {
            if (qq.safari()) {
                return e.x < 0 || e.y < 0;
            }
            return e.x === 0 && e.y === 0;
        }
        function setupDragDrop() {
            var dropZones = options.dropZoneElements, maybeHideDropZones = function() {
                setTimeout(function() {
                    qq.each(dropZones, function(idx, dropZone) {
                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();
                        qq(dropZone).removeClass(options.classes.dropActive);
                    });
                }, 10);
            };
            qq.each(dropZones, function(idx, dropZone) {
                var uploadDropZone = setupDropzone(dropZone);
                if (dropZones.length && qq.supportedFeatures.fileDrop) {
                    disposeSupport.attach(document, "dragenter", function(e) {
                        if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {
                            qq.each(dropZones, function(idx, dropZone) {
                                if (dropZone instanceof HTMLElement && qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {
                                    qq(dropZone).css({
                                        display: "block"
                                    });
                                }
                            });
                        }
                    });
                }
            });
            disposeSupport.attach(document, "dragleave", function(e) {
                if (leavingDocumentOut(e)) {
                    maybeHideDropZones();
                }
            });
            disposeSupport.attach(qq(document).children()[0], "mouseenter", function(e) {
                maybeHideDropZones();
            });
            disposeSupport.attach(document, "drop", function(e) {
                if (isFileDrag(e)) {
                    e.preventDefault();
                    maybeHideDropZones();
                }
            });
            disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);
        }
        setupDragDrop();
        qq.extend(this, {
            setupExtraDropzone: function(element) {
                options.dropZoneElements.push(element);
                setupDropzone(element);
            },
            removeDropzone: function(element) {
                var i, dzs = options.dropZoneElements;
                for (i in dzs) {
                    if (dzs[i] === element) {
                        return dzs.splice(i, 1);
                    }
                }
            },
            dispose: function() {
                disposeSupport.dispose();
                qq.each(uploadDropZones, function(idx, dropZone) {
                    dropZone.dispose();
                });
            }
        });
        this._testing = {};
        this._testing.extractDirectoryPath = extractDirectoryPath;
    };
    qq.DragAndDrop.callbacks = function() {
        "use strict";
        return {
            processingDroppedFiles: function() {},
            processingDroppedFilesComplete: function(files, targetEl) {},
            dropError: function(code, errorSpecifics) {
                qq.log("Drag & drop error code '" + code + " with these specifics: '" + errorSpecifics + "'", "error");
            },
            dropLog: function(message, level) {
                qq.log(message, level);
            }
        };
    };
    qq.UploadDropZone = function(o) {
        "use strict";
        var disposeSupport = new qq.DisposeSupport(), options, element, preventDrop, dropOutsideDisabled;
        options = {
            element: null,
            onEnter: function(e) {},
            onLeave: function(e) {},
            onLeaveNotDescendants: function(e) {},
            onDrop: function(e) {}
        };
        qq.extend(options, o);
        element = options.element;
        function dragoverShouldBeCanceled() {
            return qq.safari() || qq.firefox() && qq.windows();
        }
        function disableDropOutside(e) {
            if (!dropOutsideDisabled) {
                if (dragoverShouldBeCanceled) {
                    disposeSupport.attach(document, "dragover", function(e) {
                        e.preventDefault();
                    });
                } else {
                    disposeSupport.attach(document, "dragover", function(e) {
                        if (e.dataTransfer) {
                            e.dataTransfer.dropEffect = "none";
                            e.preventDefault();
                        }
                    });
                }
                dropOutsideDisabled = true;
            }
        }
        function isValidFileDrag(e) {
            if (!qq.supportedFeatures.fileDrop) {
                return false;
            }
            var effectTest, dt = e.dataTransfer, isSafari = qq.safari();
            effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== "none";
            return dt && effectTest && (dt.files && dt.files.length || !isSafari && dt.types.contains && dt.types.contains("Files") || dt.types.includes && dt.types.includes("Files"));
        }
        function isOrSetDropDisabled(isDisabled) {
            if (isDisabled !== undefined) {
                preventDrop = isDisabled;
            }
            return preventDrop;
        }
        function triggerHidezonesEvent() {
            var hideZonesEvent;
            function triggerUsingOldApi() {
                hideZonesEvent = document.createEvent("Event");
                hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);
            }
            if (window.CustomEvent) {
                try {
                    hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);
                } catch (err) {
                    triggerUsingOldApi();
                }
            } else {
                triggerUsingOldApi();
            }
            document.dispatchEvent(hideZonesEvent);
        }
        function attachEvents() {
            disposeSupport.attach(element, "dragover", function(e) {
                if (!isValidFileDrag(e)) {
                    return;
                }
                var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;
                if (effect === "move" || effect === "linkMove") {
                    e.dataTransfer.dropEffect = "move";
                } else {
                    e.dataTransfer.dropEffect = "copy";
                }
                e.stopPropagation();
                e.preventDefault();
            });
            disposeSupport.attach(element, "dragenter", function(e) {
                if (!isOrSetDropDisabled()) {
                    if (!isValidFileDrag(e)) {
                        return;
                    }
                    options.onEnter(e);
                }
            });
            disposeSupport.attach(element, "dragleave", function(e) {
                if (!isValidFileDrag(e)) {
                    return;
                }
                options.onLeave(e);
                var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);
                if (qq(this).contains(relatedTarget)) {
                    return;
                }
                options.onLeaveNotDescendants(e);
            });
            disposeSupport.attach(element, "drop", function(e) {
                if (!isOrSetDropDisabled()) {
                    if (!isValidFileDrag(e)) {
                        return;
                    }
                    e.preventDefault();
                    e.stopPropagation();
                    options.onDrop(e);
                    triggerHidezonesEvent();
                }
            });
        }
        disableDropOutside();
        attachEvents();
        qq.extend(this, {
            dropDisabled: function(isDisabled) {
                return isOrSetDropDisabled(isDisabled);
            },
            dispose: function() {
                disposeSupport.dispose();
            },
            getElement: function() {
                return element;
            }
        });
        this._testing = {};
        this._testing.isValidFileDrag = isValidFileDrag;
    };
    (function() {
        "use strict";
        qq.uiPublicApi = {
            addInitialFiles: function(cannedFileList) {
                this._parent.prototype.addInitialFiles.apply(this, arguments);
                this._templating.addCacheToDom();
            },
            clearStoredFiles: function() {
                this._parent.prototype.clearStoredFiles.apply(this, arguments);
                this._templating.clearFiles();
            },
            addExtraDropzone: function(element) {
                this._dnd && this._dnd.setupExtraDropzone(element);
            },
            removeExtraDropzone: function(element) {
                if (this._dnd) {
                    return this._dnd.removeDropzone(element);
                }
            },
            getItemByFileId: function(id) {
                if (!this._templating.isHiddenForever(id)) {
                    return this._templating.getFileContainer(id);
                }
            },
            reset: function() {
                this._parent.prototype.reset.apply(this, arguments);
                this._templating.reset();
                if (!this._options.button && this._templating.getButton()) {
                    this._defaultButtonId = this._createUploadButton({
                        element: this._templating.getButton(),
                        title: this._options.text.fileInputTitle
                    }).getButtonId();
                }
                if (this._dnd) {
                    this._dnd.dispose();
                    this._dnd = this._setupDragAndDrop();
                }
                this._totalFilesInBatch = 0;
                this._filesInBatchAddedToUi = 0;
                this._setupClickAndEditEventHandlers();
            },
            setName: function(id, newName) {
                var formattedFilename = this._options.formatFileName(newName);
                this._parent.prototype.setName.apply(this, arguments);
                this._templating.updateFilename(id, formattedFilename);
            },
            pauseUpload: function(id) {
                var paused = this._parent.prototype.pauseUpload.apply(this, arguments);
                paused && this._templating.uploadPaused(id);
                return paused;
            },
            continueUpload: function(id) {
                var continued = this._parent.prototype.continueUpload.apply(this, arguments);
                continued && this._templating.uploadContinued(id);
                return continued;
            },
            getId: function(fileContainerOrChildEl) {
                return this._templating.getFileId(fileContainerOrChildEl);
            },
            getDropTarget: function(fileId) {
                var file = this.getFile(fileId);
                return file.qqDropTarget;
            }
        };
        qq.uiPrivateApi = {
            _getButton: function(buttonId) {
                var button = this._parent.prototype._getButton.apply(this, arguments);
                if (!button) {
                    if (buttonId === this._defaultButtonId) {
                        button = this._templating.getButton();
                    }
                }
                return button;
            },
            _removeFileItem: function(fileId) {
                this._templating.removeFile(fileId);
            },
            _setupClickAndEditEventHandlers: function() {
                this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();
                this._focusinEventSupported = !qq.firefox();
                if (this._isEditFilenameEnabled()) {
                    this._filenameClickHandler = this._bindFilenameClickEvent();
                    this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();
                    this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();
                }
            },
            _setupDragAndDrop: function() {
                var self = this, dropZoneElements = this._options.dragAndDrop.extraDropzones, templating = this._templating, defaultDropZone = templating.getDropZone();
                defaultDropZone && dropZoneElements.push(defaultDropZone);
                return new qq.DragAndDrop({
                    dropZoneElements: dropZoneElements,
                    allowMultipleItems: this._options.multiple,
                    classes: {
                        dropActive: this._options.classes.dropActive
                    },
                    callbacks: {
                        processingDroppedFiles: function() {
                            templating.showDropProcessing();
                        },
                        processingDroppedFilesComplete: function(files, targetEl) {
                            templating.hideDropProcessing();
                            qq.each(files, function(idx, file) {
                                file.qqDropTarget = targetEl;
                            });
                            if (files.length) {
                                self.addFiles(files, null, null);
                            }
                        },
                        dropError: function(code, errorData) {
                            self._itemError(code, errorData);
                        },
                        dropLog: function(message, level) {
                            self.log(message, level);
                        }
                    }
                });
            },
            _bindFileButtonsClickEvent: function() {
                var self = this;
                return new qq.FileButtonsClickHandler({
                    templating: this._templating,
                    log: function(message, lvl) {
                        self.log(message, lvl);
                    },
                    onDeleteFile: function(fileId) {
                        self.deleteFile(fileId);
                    },
                    onCancel: function(fileId) {
                        self.cancel(fileId);
                    },
                    onRetry: function(fileId) {
                        self.retry(fileId);
                    },
                    onPause: function(fileId) {
                        self.pauseUpload(fileId);
                    },
                    onContinue: function(fileId) {
                        self.continueUpload(fileId);
                    },
                    onGetName: function(fileId) {
                        return self.getName(fileId);
                    }
                });
            },
            _isEditFilenameEnabled: function() {
                return this._templating.isEditFilenamePossible() && !this._options.autoUpload && qq.FilenameClickHandler && qq.FilenameInputFocusHandler && qq.FilenameInputFocusHandler;
            },
            _filenameEditHandler: function() {
                var self = this, templating = this._templating;
                return {
                    templating: templating,
                    log: function(message, lvl) {
                        self.log(message, lvl);
                    },
                    onGetUploadStatus: function(fileId) {
                        return self.getUploads({
                            id: fileId
                        }).status;
                    },
                    onGetName: function(fileId) {
                        return self.getName(fileId);
                    },
                    onSetName: function(id, newName) {
                        self.setName(id, newName);
                    },
                    onEditingStatusChange: function(id, isEditing) {
                        var qqInput = qq(templating.getEditInput(id)), qqFileContainer = qq(templating.getFileContainer(id));
                        if (isEditing) {
                            qqInput.addClass("qq-editing");
                            templating.hideFilename(id);
                            templating.hideEditIcon(id);
                        } else {
                            qqInput.removeClass("qq-editing");
                            templating.showFilename(id);
                            templating.showEditIcon(id);
                        }
                        qqFileContainer.addClass("qq-temp").removeClass("qq-temp");
                    }
                };
            },
            _onUploadStatusChange: function(id, oldStatus, newStatus) {
                this._parent.prototype._onUploadStatusChange.apply(this, arguments);
                if (this._isEditFilenameEnabled()) {
                    if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {
                        this._templating.markFilenameEditable(id);
                        this._templating.hideEditIcon(id);
                    }
                }
                if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {
                    this._templating.hideRetry(id);
                    this._templating.setStatusText(id);
                    qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);
                } else if (newStatus === qq.status.UPLOAD_FAILED) {
                    this._templating.hidePause(id);
                }
            },
            _bindFilenameInputFocusInEvent: function() {
                var spec = qq.extend({}, this._filenameEditHandler());
                return new qq.FilenameInputFocusInHandler(spec);
            },
            _bindFilenameInputFocusEvent: function() {
                var spec = qq.extend({}, this._filenameEditHandler());
                return new qq.FilenameInputFocusHandler(spec);
            },
            _bindFilenameClickEvent: function() {
                var spec = qq.extend({}, this._filenameEditHandler());
                return new qq.FilenameClickHandler(spec);
            },
            _storeForLater: function(id) {
                this._parent.prototype._storeForLater.apply(this, arguments);
                this._templating.hideSpinner(id);
            },
            _onAllComplete: function(successful, failed) {
                this._parent.prototype._onAllComplete.apply(this, arguments);
                this._templating.resetTotalProgress();
            },
            _onSubmit: function(id, name) {
                var file = this.getFile(id);
                if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {
                    this._paramsStore.addReadOnly(id, {
                        qqpath: file.qqPath
                    });
                }
                this._parent.prototype._onSubmit.apply(this, arguments);
                this._addToList(id, name);
            },
            _onSubmitted: function(id) {
                if (this._isEditFilenameEnabled()) {
                    this._templating.markFilenameEditable(id);
                    this._templating.showEditIcon(id);
                    if (!this._focusinEventSupported) {
                        this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));
                    }
                }
            },
            _onProgress: function(id, name, loaded, total) {
                this._parent.prototype._onProgress.apply(this, arguments);
                this._templating.updateProgress(id, loaded, total);
                if (total === 0 || Math.round(loaded / total * 100) === 100) {
                    this._templating.hideCancel(id);
                    this._templating.hidePause(id);
                    this._templating.hideProgress(id);
                    this._templating.setStatusText(id, this._options.text.waitingForResponse);
                    this._displayFileSize(id);
                } else {
                    this._displayFileSize(id, loaded, total);
                }
            },
            _onTotalProgress: function(loaded, total) {
                this._parent.prototype._onTotalProgress.apply(this, arguments);
                this._templating.updateTotalProgress(loaded, total);
            },
            _onComplete: function(id, name, result, xhr) {
                var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments), templating = this._templating, fileContainer = templating.getFileContainer(id), self = this;
                function completeUpload(result) {
                    if (!fileContainer) {
                        return;
                    }
                    templating.setStatusText(id);
                    qq(fileContainer).removeClass(self._classes.retrying);
                    templating.hideProgress(id);
                    if (self.getUploads({
                        id: id
                    }).status !== qq.status.UPLOAD_FAILED) {
                        templating.hideCancel(id);
                    }
                    templating.hideSpinner(id);
                    if (result.success) {
                        self._markFileAsSuccessful(id);
                    } else {
                        qq(fileContainer).addClass(self._classes.fail);
                        templating.showCancel(id);
                        if (templating.isRetryPossible() && !self._preventRetries[id]) {
                            qq(fileContainer).addClass(self._classes.retryable);
                            templating.showRetry(id);
                        }
                        self._controlFailureTextDisplay(id, result);
                    }
                }
                if (parentRetVal instanceof qq.Promise) {
                    parentRetVal.done(function(newResult) {
                        completeUpload(newResult);
                    });
                } else {
                    completeUpload(result);
                }
                return parentRetVal;
            },
            _markFileAsSuccessful: function(id) {
                var templating = this._templating;
                if (this._isDeletePossible()) {
                    templating.showDeleteButton(id);
                }
                qq(templating.getFileContainer(id)).addClass(this._classes.success);
                this._maybeUpdateThumbnail(id);
            },
            _onUploadPrep: function(id) {
                this._parent.prototype._onUploadPrep.apply(this, arguments);
                this._templating.showSpinner(id);
            },
            _onUpload: function(id, name) {
                var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);
                this._templating.showSpinner(id);
                return parentRetVal;
            },
            _onUploadChunk: function(id, chunkData) {
                this._parent.prototype._onUploadChunk.apply(this, arguments);
                if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {
                    this._templating.allowPause(id);
                }
            },
            _onCancel: function(id, name) {
                this._parent.prototype._onCancel.apply(this, arguments);
                this._removeFileItem(id);
                if (this._getNotFinished() === 0) {
                    this._templating.resetTotalProgress();
                }
            },
            _onBeforeAutoRetry: function(id) {
                var retryNumForDisplay, maxAuto, retryNote;
                this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);
                this._showCancelLink(id);
                if (this._options.retry.showAutoRetryNote) {
                    retryNumForDisplay = this._autoRetries[id];
                    maxAuto = this._options.retry.maxAutoAttempts;
                    retryNote = this._options.retry.autoRetryNote.replace(/\{retryNum\}/g, retryNumForDisplay);
                    retryNote = retryNote.replace(/\{maxAuto\}/g, maxAuto);
                    this._templating.setStatusText(id, retryNote);
                    qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);
                }
            },
            _onBeforeManualRetry: function(id) {
                if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {
                    this._templating.resetProgress(id);
                    qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);
                    this._templating.setStatusText(id);
                    this._templating.showSpinner(id);
                    this._showCancelLink(id);
                    return true;
                } else {
                    qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);
                    this._templating.showRetry(id);
                    return false;
                }
            },
            _onSubmitDelete: function(id) {
                var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);
                this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);
            },
            _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {
                if (this._options.deleteFile.forceConfirm) {
                    this._showDeleteConfirm.apply(this, arguments);
                } else {
                    this._sendDeleteRequest.apply(this, arguments);
                }
            },
            _onDeleteComplete: function(id, xhr, isError) {
                this._parent.prototype._onDeleteComplete.apply(this, arguments);
                this._templating.hideSpinner(id);
                if (isError) {
                    this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);
                    this._templating.showDeleteButton(id);
                } else {
                    this._removeFileItem(id);
                }
            },
            _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {
                this._templating.hideDeleteButton(id);
                this._templating.showSpinner(id);
                this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);
                this._deleteHandler.sendDelete.apply(this, arguments);
            },
            _showDeleteConfirm: function(id, uuid, mandatedParams) {
                var fileName = this.getName(id), confirmMessage = this._options.deleteFile.confirmMessage.replace(/\{filename\}/g, fileName), uuid = this.getUuid(id), deleteRequestArgs = arguments, self = this, retVal;
                retVal = this._options.showConfirm(confirmMessage);
                if (qq.isGenericPromise(retVal)) {
                    retVal.then(function() {
                        self._sendDeleteRequest.apply(self, deleteRequestArgs);
                    });
                } else if (retVal !== false) {
                    self._sendDeleteRequest.apply(self, deleteRequestArgs);
                }
            },
            _addToList: function(id, name, canned) {
                var prependData, prependIndex = 0, dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled, record;
                if (this._options.display.prependFiles) {
                    if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {
                        prependIndex = this._filesInBatchAddedToUi - 1;
                    }
                    prependData = {
                        index: prependIndex
                    };
                }
                if (!canned) {
                    if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {
                        this._templating.disableCancel();
                    }
                    if (!this._options.multiple) {
                        record = this.getUploads({
                            id: id
                        });
                        this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;
                        if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {
                            this._handler.cancelAll();
                            this._clearList();
                            this._handledProxyGroup = null;
                        }
                    }
                }
                if (canned) {
                    this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);
                    this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);
                } else {
                    this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);
                    this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);
                }
                this._filesInBatchAddedToUi += 1;
                if (canned || this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading) {
                    this._displayFileSize(id);
                }
            },
            _clearList: function() {
                this._templating.clearFiles();
                this.clearStoredFiles();
            },
            _displayFileSize: function(id, loadedSize, totalSize) {
                var size = this.getSize(id), sizeForDisplay = this._formatSize(size);
                if (size >= 0) {
                    if (loadedSize !== undefined && totalSize !== undefined) {
                        sizeForDisplay = this._formatProgress(loadedSize, totalSize);
                    }
                    this._templating.updateSize(id, sizeForDisplay);
                }
            },
            _formatProgress: function(uploadedSize, totalSize) {
                var message = this._options.text.formatProgress;
                function r(name, replacement) {
                    message = message.replace(name, replacement);
                }
                r("{percent}", Math.round(uploadedSize / totalSize * 100));
                r("{total_size}", this._formatSize(totalSize));
                return message;
            },
            _controlFailureTextDisplay: function(id, response) {
                var mode, responseProperty, failureReason;
                mode = this._options.failedUploadTextDisplay.mode;
                responseProperty = this._options.failedUploadTextDisplay.responseProperty;
                if (mode === "custom") {
                    failureReason = response[responseProperty];
                    if (!failureReason) {
                        failureReason = this._options.text.failUpload;
                    }
                    this._templating.setStatusText(id, failureReason);
                    if (this._options.failedUploadTextDisplay.enableTooltip) {
                        this._showTooltip(id, failureReason);
                    }
                } else if (mode === "default") {
                    this._templating.setStatusText(id, this._options.text.failUpload);
                } else if (mode !== "none") {
                    this.log("failedUploadTextDisplay.mode value of '" + mode + "' is not valid", "warn");
                }
            },
            _showTooltip: function(id, text) {
                this._templating.getFileContainer(id).title = text;
            },
            _showCancelLink: function(id) {
                if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {
                    this._templating.showCancel(id);
                }
            },
            _itemError: function(code, name, item) {
                var message = this._parent.prototype._itemError.apply(this, arguments);
                this._options.showMessage(message);
            },
            _batchError: function(message) {
                this._parent.prototype._batchError.apply(this, arguments);
                this._options.showMessage(message);
            },
            _setupPastePrompt: function() {
                var self = this;
                this._options.callbacks.onPasteReceived = function() {
                    var message = self._options.paste.namePromptMessage, defaultVal = self._options.paste.defaultName;
                    return self._options.showPrompt(message, defaultVal);
                };
            },
            _fileOrBlobRejected: function(id, name) {
                this._totalFilesInBatch -= 1;
                this._parent.prototype._fileOrBlobRejected.apply(this, arguments);
            },
            _prepareItemsForUpload: function(items, params, endpoint) {
                this._totalFilesInBatch = items.length;
                this._filesInBatchAddedToUi = 0;
                this._parent.prototype._prepareItemsForUpload.apply(this, arguments);
            },
            _maybeUpdateThumbnail: function(fileId) {
                var thumbnailUrl = this._thumbnailUrls[fileId], fileStatus = this.getUploads({
                    id: fileId
                }).status;
                if (fileStatus !== qq.status.DELETED && (thumbnailUrl || this._options.thumbnails.placeholders.waitUntilResponse || !qq.supportedFeatures.imagePreviews)) {
                    this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);
                }
            },
            _addCannedFile: function(sessionData) {
                var id = this._parent.prototype._addCannedFile.apply(this, arguments);
                this._addToList(id, this.getName(id), true);
                this._templating.hideSpinner(id);
                this._templating.hideCancel(id);
                this._markFileAsSuccessful(id);
                return id;
            },
            _setSize: function(id, newSize) {
                this._parent.prototype._setSize.apply(this, arguments);
                this._templating.updateSize(id, this._formatSize(newSize));
            },
            _sessionRequestComplete: function() {
                this._templating.addCacheToDom();
                this._parent.prototype._sessionRequestComplete.apply(this, arguments);
            }
        };
    })();
    qq.FineUploader = function(o, namespace) {
        "use strict";
        var self = this;
        this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;
        this._parent.apply(this, arguments);
        qq.extend(this._options, {
            element: null,
            button: null,
            listElement: null,
            dragAndDrop: {
                extraDropzones: [],
                reportDirectoryPaths: false
            },
            text: {
                formatProgress: "{percent}% of {total_size}",
                failUpload: "Upload failed",
                waitingForResponse: "Processing...",
                paused: "Paused"
            },
            template: "qq-template",
            classes: {
                retrying: "qq-upload-retrying",
                retryable: "qq-upload-retryable",
                success: "qq-upload-success",
                fail: "qq-upload-fail",
                editable: "qq-editable",
                hide: "qq-hide",
                dropActive: "qq-upload-drop-area-active"
            },
            failedUploadTextDisplay: {
                mode: "default",
                responseProperty: "error",
                enableTooltip: true
            },
            messages: {
                tooManyFilesError: "You may only drop one file",
                unsupportedBrowser: "Unrecoverable error - this browser does not permit file uploading of any kind."
            },
            retry: {
                showAutoRetryNote: true,
                autoRetryNote: "Retrying {retryNum}/{maxAuto}..."
            },
            deleteFile: {
                forceConfirm: false,
                confirmMessage: "Are you sure you want to delete {filename}?",
                deletingStatusText: "Deleting...",
                deletingFailedText: "Delete failed"
            },
            display: {
                fileSizeOnSubmit: false,
                prependFiles: false
            },
            paste: {
                promptForName: false,
                namePromptMessage: "Please name this image"
            },
            thumbnails: {
                customResizer: null,
                maxCount: 0,
                placeholders: {
                    waitUntilResponse: false,
                    notAvailablePath: null,
                    waitingPath: null
                },
                timeBetweenThumbs: 750
            },
            scaling: {
                hideScaled: false
            },
            showMessage: function(message) {
                if (self._templating.hasDialog("alert")) {
                    return self._templating.showDialog("alert", message);
                } else {
                    setTimeout(function() {
                        window.alert(message);
                    }, 0);
                }
            },
            showConfirm: function(message) {
                if (self._templating.hasDialog("confirm")) {
                    return self._templating.showDialog("confirm", message);
                } else {
                    return window.confirm(message);
                }
            },
            showPrompt: function(message, defaultValue) {
                if (self._templating.hasDialog("prompt")) {
                    return self._templating.showDialog("prompt", message, defaultValue);
                } else {
                    return window.prompt(message, defaultValue);
                }
            }
        }, true);
        qq.extend(this._options, o, true);
        this._templating = new qq.Templating({
            log: qq.bind(this.log, this),
            templateIdOrEl: this._options.template,
            containerEl: this._options.element,
            fileContainerEl: this._options.listElement,
            button: this._options.button,
            imageGenerator: this._imageGenerator,
            classes: {
                hide: this._options.classes.hide,
                editable: this._options.classes.editable
            },
            limits: {
                maxThumbs: this._options.thumbnails.maxCount,
                timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs
            },
            placeholders: {
                waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,
                thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,
                waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath
            },
            text: this._options.text
        });
        if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {
            this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);
        } else if (!qq.supportedFeatures.uploading || this._options.cors.expected && !qq.supportedFeatures.uploadCors) {
            this._templating.renderFailure(this._options.messages.unsupportedBrowser);
        } else {
            this._wrapCallbacks();
            this._templating.render();
            this._classes = this._options.classes;
            if (!this._options.button && this._templating.getButton()) {
                this._defaultButtonId = this._createUploadButton({
                    element: this._templating.getButton(),
                    title: this._options.text.fileInputTitle
                }).getButtonId();
            }
            this._setupClickAndEditEventHandlers();
            if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {
                this._dnd = this._setupDragAndDrop();
            }
            if (this._options.paste.targetElement && this._options.paste.promptForName) {
                if (qq.PasteSupport) {
                    this._setupPastePrompt();
                } else {
                    this.log("Paste support module not found.", "error");
                }
            }
            this._totalFilesInBatch = 0;
            this._filesInBatchAddedToUi = 0;
        }
    };
    qq.extend(qq.FineUploader.prototype, qq.basePublicApi);
    qq.extend(qq.FineUploader.prototype, qq.basePrivateApi);
    qq.extend(qq.FineUploader.prototype, qq.uiPublicApi);
    qq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);
    qq.Templating = function(spec) {
        "use strict";
        var FILE_ID_ATTR = "qq-file-id", FILE_CLASS_PREFIX = "qq-file-id-", THUMBNAIL_MAX_SIZE_ATTR = "qq-max-size", THUMBNAIL_SERVER_SCALE_ATTR = "qq-server-scale", HIDE_DROPZONE_ATTR = "qq-hide-dropzone", DROPZPONE_TEXT_ATTR = "qq-drop-area-text", IN_PROGRESS_CLASS = "qq-in-progress", HIDDEN_FOREVER_CLASS = "qq-hidden-forever", fileBatch = {
            content: document.createDocumentFragment(),
            map: {}
        }, isCancelDisabled = false, generatedThumbnails = 0, thumbnailQueueMonitorRunning = false, thumbGenerationQueue = [], thumbnailMaxSize = -1, options = {
            log: null,
            limits: {
                maxThumbs: 0,
                timeBetweenThumbs: 750
            },
            templateIdOrEl: "qq-template",
            containerEl: null,
            fileContainerEl: null,
            button: null,
            imageGenerator: null,
            classes: {
                hide: "qq-hide",
                editable: "qq-editable"
            },
            placeholders: {
                waitUntilUpdate: false,
                thumbnailNotAvailable: null,
                waitingForThumbnail: null
            },
            text: {
                paused: "Paused"
            }
        }, selectorClasses = {
            button: "qq-upload-button-selector",
            alertDialog: "qq-alert-dialog-selector",
            dialogCancelButton: "qq-cancel-button-selector",
            confirmDialog: "qq-confirm-dialog-selector",
            dialogMessage: "qq-dialog-message-selector",
            dialogOkButton: "qq-ok-button-selector",
            promptDialog: "qq-prompt-dialog-selector",
            uploader: "qq-uploader-selector",
            drop: "qq-upload-drop-area-selector",
            list: "qq-upload-list-selector",
            progressBarContainer: "qq-progress-bar-container-selector",
            progressBar: "qq-progress-bar-selector",
            totalProgressBarContainer: "qq-total-progress-bar-container-selector",
            totalProgressBar: "qq-total-progress-bar-selector",
            file: "qq-upload-file-selector",
            spinner: "qq-upload-spinner-selector",
            size: "qq-upload-size-selector",
            cancel: "qq-upload-cancel-selector",
            pause: "qq-upload-pause-selector",
            continueButton: "qq-upload-continue-selector",
            deleteButton: "qq-upload-delete-selector",
            retry: "qq-upload-retry-selector",
            statusText: "qq-upload-status-text-selector",
            editFilenameInput: "qq-edit-filename-selector",
            editNameIcon: "qq-edit-filename-icon-selector",
            dropText: "qq-upload-drop-area-text-selector",
            dropProcessing: "qq-drop-processing-selector",
            dropProcessingSpinner: "qq-drop-processing-spinner-selector",
            thumbnail: "qq-thumbnail-selector"
        }, previewGeneration = {}, cachedThumbnailNotAvailableImg = new qq.Promise(), cachedWaitingForThumbnailImg = new qq.Promise(), log, isEditElementsExist, isRetryElementExist, templateDom, container, fileList, showThumbnails, serverScale, cacheThumbnailPlaceholders = function() {
            var notAvailableUrl = options.placeholders.thumbnailNotAvailable, waitingUrl = options.placeholders.waitingForThumbnail, spec = {
                maxSize: thumbnailMaxSize,
                scale: serverScale
            };
            if (showThumbnails) {
                if (notAvailableUrl) {
                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(function(updatedImg) {
                        cachedThumbnailNotAvailableImg.success(updatedImg);
                    }, function() {
                        cachedThumbnailNotAvailableImg.failure();
                        log("Problem loading 'not available' placeholder image at " + notAvailableUrl, "error");
                    });
                } else {
                    cachedThumbnailNotAvailableImg.failure();
                }
                if (waitingUrl) {
                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(function(updatedImg) {
                        cachedWaitingForThumbnailImg.success(updatedImg);
                    }, function() {
                        cachedWaitingForThumbnailImg.failure();
                        log("Problem loading 'waiting for thumbnail' placeholder image at " + waitingUrl, "error");
                    });
                } else {
                    cachedWaitingForThumbnailImg.failure();
                }
            }
        }, displayWaitingImg = function(thumbnail) {
            var waitingImgPlacement = new qq.Promise();
            cachedWaitingForThumbnailImg.then(function(img) {
                maybeScalePlaceholderViaCss(img, thumbnail);
                if (!thumbnail.src) {
                    thumbnail.src = img.src;
                    thumbnail.onload = function() {
                        thumbnail.onload = null;
                        show(thumbnail);
                        waitingImgPlacement.success();
                    };
                } else {
                    waitingImgPlacement.success();
                }
            }, function() {
                hide(thumbnail);
                waitingImgPlacement.success();
            });
            return waitingImgPlacement;
        }, generateNewPreview = function(id, blob, spec) {
            var thumbnail = getThumbnail(id);
            log("Generating new thumbnail for " + id);
            blob.qqThumbnailId = id;
            return options.imageGenerator.generate(blob, thumbnail, spec).then(function() {
                generatedThumbnails++;
                show(thumbnail);
                previewGeneration[id].success();
            }, function() {
                previewGeneration[id].failure();
                if (!options.placeholders.waitUntilUpdate) {
                    maybeSetDisplayNotAvailableImg(id, thumbnail);
                }
            });
        }, generateNextQueuedPreview = function() {
            if (thumbGenerationQueue.length) {
                thumbnailQueueMonitorRunning = true;
                var queuedThumbRequest = thumbGenerationQueue.shift();
                if (queuedThumbRequest.update) {
                    processUpdateQueuedPreviewRequest(queuedThumbRequest);
                } else {
                    processNewQueuedPreviewRequest(queuedThumbRequest);
                }
            } else {
                thumbnailQueueMonitorRunning = false;
            }
        }, getCancel = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.cancel);
        }, getContinue = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.continueButton);
        }, getDialog = function(type) {
            return getTemplateEl(container, selectorClasses[type + "Dialog"]);
        }, getDelete = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.deleteButton);
        }, getDropProcessing = function() {
            return getTemplateEl(container, selectorClasses.dropProcessing);
        }, getEditIcon = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);
        }, getFile = function(id) {
            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);
        }, getFilename = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.file);
        }, getPause = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.pause);
        }, getProgress = function(id) {
            if (id == null) {
                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) || getTemplateEl(container, selectorClasses.totalProgressBar);
            }
            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) || getTemplateEl(getFile(id), selectorClasses.progressBar);
        }, getRetry = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.retry);
        }, getSize = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.size);
        }, getSpinner = function(id) {
            return getTemplateEl(getFile(id), selectorClasses.spinner);
        }, getTemplateEl = function(context, cssClass) {
            return context && qq(context).getFirstByClass(cssClass);
        }, getThumbnail = function(id) {
            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);
        }, hide = function(el) {
            el && qq(el).addClass(options.classes.hide);
        }, maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {
            var maxWidth = placeholder.style.maxWidth, maxHeight = placeholder.style.maxHeight;
            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {
                qq(thumbnail).css({
                    maxWidth: maxWidth,
                    maxHeight: maxHeight
                });
            }
        }, maybeSetDisplayNotAvailableImg = function(id, thumbnail) {
            var previewing = previewGeneration[id] || new qq.Promise().failure(), notAvailableImgPlacement = new qq.Promise();
            cachedThumbnailNotAvailableImg.then(function(img) {
                previewing.then(function() {
                    notAvailableImgPlacement.success();
                }, function() {
                    maybeScalePlaceholderViaCss(img, thumbnail);
                    thumbnail.onload = function() {
                        thumbnail.onload = null;
                        notAvailableImgPlacement.success();
                    };
                    thumbnail.src = img.src;
                    show(thumbnail);
                });
            });
            return notAvailableImgPlacement;
        }, parseAndGetTemplate = function() {
            var scriptEl, scriptHtml, fileListNode, tempTemplateEl, fileListEl, defaultButton, dropArea, thumbnail, dropProcessing, dropTextEl, uploaderEl;
            log("Parsing template");
            if (options.templateIdOrEl == null) {
                throw new Error("You MUST specify either a template element or ID!");
            }
            if (qq.isString(options.templateIdOrEl)) {
                scriptEl = document.getElementById(options.templateIdOrEl);
                if (scriptEl === null) {
                    throw new Error(qq.format("Cannot find template script at ID '{}'!", options.templateIdOrEl));
                }
                scriptHtml = scriptEl.innerHTML;
            } else {
                if (options.templateIdOrEl.innerHTML === undefined) {
                    throw new Error("You have specified an invalid value for the template option!  " + "It must be an ID or an Element.");
                }
                scriptHtml = options.templateIdOrEl.innerHTML;
            }
            scriptHtml = qq.trimStr(scriptHtml);
            tempTemplateEl = document.createElement("div");
            tempTemplateEl.appendChild(qq.toElement(scriptHtml));
            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);
            if (options.button) {
                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);
                if (defaultButton) {
                    qq(defaultButton).remove();
                }
            }
            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {
                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);
                if (dropProcessing) {
                    qq(dropProcessing).remove();
                }
            }
            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);
            if (dropArea && !qq.DragAndDrop) {
                log("DnD module unavailable.", "info");
                qq(dropArea).remove();
            }
            if (!qq.supportedFeatures.fileDrop) {
                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);
                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {
                    qq(dropArea).css({
                        display: "none"
                    });
                }
            } else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {
                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);
                dropTextEl && qq(dropTextEl).remove();
            }
            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);
            if (!showThumbnails) {
                thumbnail && qq(thumbnail).remove();
            } else if (thumbnail) {
                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));
                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;
                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);
            }
            showThumbnails = showThumbnails && thumbnail;
            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;
            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;
            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);
            if (fileListNode == null) {
                throw new Error("Could not find the file list container in the template!");
            }
            fileListEl = fileListNode.children[0].cloneNode(true);
            fileListNode.innerHTML = "";
            if (tempTemplateEl.getElementsByTagName("DIALOG").length) {
                document.createElement("dialog");
            }
            log("Template parsing complete");
            return {
                template: tempTemplateEl,
                fileTemplate: fileListEl
            };
        }, prependFile = function(el, index, fileList) {
            var parentEl = fileList, beforeEl = parentEl.firstChild;
            if (index > 0) {
                beforeEl = qq(parentEl).children()[index].nextSibling;
            }
            parentEl.insertBefore(el, beforeEl);
        }, processNewQueuedPreviewRequest = function(queuedThumbRequest) {
            var id = queuedThumbRequest.id, optFileOrBlob = queuedThumbRequest.optFileOrBlob, relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId, thumbnail = getThumbnail(id), spec = {
                customResizeFunction: queuedThumbRequest.customResizeFunction,
                maxSize: thumbnailMaxSize,
                orient: true,
                scale: true
            };
            if (qq.supportedFeatures.imagePreviews) {
                if (thumbnail) {
                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {
                        maybeSetDisplayNotAvailableImg(id, thumbnail);
                        generateNextQueuedPreview();
                    } else {
                        displayWaitingImg(thumbnail).done(function() {
                            previewGeneration[id] = new qq.Promise();
                            previewGeneration[id].done(function() {
                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);
                            });
                            if (relatedThumbnailId != null) {
                                useCachedPreview(id, relatedThumbnailId);
                            } else {
                                generateNewPreview(id, optFileOrBlob, spec);
                            }
                        });
                    }
                } else {
                    generateNextQueuedPreview();
                }
            } else if (thumbnail) {
                displayWaitingImg(thumbnail);
                generateNextQueuedPreview();
            }
        }, processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {
            var id = queuedThumbRequest.id, thumbnailUrl = queuedThumbRequest.thumbnailUrl, showWaitingImg = queuedThumbRequest.showWaitingImg, thumbnail = getThumbnail(id), spec = {
                customResizeFunction: queuedThumbRequest.customResizeFunction,
                scale: serverScale,
                maxSize: thumbnailMaxSize
            };
            if (thumbnail) {
                if (thumbnailUrl) {
                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {
                        maybeSetDisplayNotAvailableImg(id, thumbnail);
                        generateNextQueuedPreview();
                    } else {
                        if (showWaitingImg) {
                            displayWaitingImg(thumbnail);
                        }
                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(function() {
                            show(thumbnail);
                            generatedThumbnails++;
                            setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);
                        }, function() {
                            maybeSetDisplayNotAvailableImg(id, thumbnail);
                            setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);
                        });
                    }
                } else {
                    maybeSetDisplayNotAvailableImg(id, thumbnail);
                    generateNextQueuedPreview();
                }
            }
        }, setProgressBarWidth = function(id, percent) {
            var bar = getProgress(id), progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;
            if (bar && !qq(bar).hasClass(progressBarSelector)) {
                bar = qq(bar).getFirstByClass(progressBarSelector);
            }
            if (bar) {
                qq(bar).css({
                    width: percent + "%"
                });
                bar.setAttribute("aria-valuenow", percent);
            }
        }, show = function(el) {
            el && qq(el).removeClass(options.classes.hide);
        }, useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {
            var targetThumbnail = getThumbnail(targetThumbnailId), cachedThumbnail = getThumbnail(cachedThumbnailId);
            log(qq.format("ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));
            previewGeneration[cachedThumbnailId].then(function() {
                generatedThumbnails++;
                previewGeneration[targetThumbnailId].success();
                log(qq.format("Now using previously generated thumbnail created for ID {} on ID {}.", cachedThumbnailId, targetThumbnailId));
                targetThumbnail.src = cachedThumbnail.src;
                show(targetThumbnail);
            }, function() {
                previewGeneration[targetThumbnailId].failure();
                if (!options.placeholders.waitUntilUpdate) {
                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);
                }
            });
        };
        qq.extend(options, spec);
        log = options.log;
        if (!qq.supportedFeatures.imagePreviews) {
            options.limits.timeBetweenThumbs = 0;
            options.limits.maxThumbs = 0;
        }
        container = options.containerEl;
        showThumbnails = options.imageGenerator !== undefined;
        templateDom = parseAndGetTemplate();
        cacheThumbnailPlaceholders();
        qq.extend(this, {
            render: function() {
                log("Rendering template in DOM.");
                generatedThumbnails = 0;
                container.appendChild(templateDom.template.cloneNode(true));
                hide(getDropProcessing());
                this.hideTotalProgress();
                fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);
                log("Template rendering complete");
            },
            renderFailure: function(message) {
                var cantRenderEl = qq.toElement(message);
                container.innerHTML = "";
                container.appendChild(cantRenderEl);
            },
            reset: function() {
                container.innerHTML = "";
                this.render();
            },
            clearFiles: function() {
                fileList.innerHTML = "";
            },
            disableCancel: function() {
                isCancelDisabled = true;
            },
            addFile: function(id, name, prependInfo, hideForever, batch) {
                var fileEl = templateDom.fileTemplate.cloneNode(true), fileNameEl = getTemplateEl(fileEl, selectorClasses.file), uploaderEl = getTemplateEl(container, selectorClasses.uploader), fileContainer = batch ? fileBatch.content : fileList, thumb;
                if (batch) {
                    fileBatch.map[id] = fileEl;
                }
                qq(fileEl).addClass(FILE_CLASS_PREFIX + id);
                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);
                if (fileNameEl) {
                    qq(fileNameEl).setText(name);
                    fileNameEl.setAttribute("title", name);
                }
                fileEl.setAttribute(FILE_ID_ATTR, id);
                if (prependInfo) {
                    prependFile(fileEl, prependInfo.index, fileContainer);
                } else {
                    fileContainer.appendChild(fileEl);
                }
                if (hideForever) {
                    fileEl.style.display = "none";
                    qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);
                } else {
                    hide(getProgress(id));
                    hide(getSize(id));
                    hide(getDelete(id));
                    hide(getRetry(id));
                    hide(getPause(id));
                    hide(getContinue(id));
                    if (isCancelDisabled) {
                        this.hideCancel(id);
                    }
                    thumb = getThumbnail(id);
                    if (thumb && !thumb.src) {
                        cachedWaitingForThumbnailImg.then(function(waitingImg) {
                            thumb.src = waitingImg.src;
                            if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {
                                qq(thumb).css({
                                    maxHeight: waitingImg.style.maxHeight,
                                    maxWidth: waitingImg.style.maxWidth
                                });
                            }
                            show(thumb);
                        });
                    }
                }
            },
            addFileToCache: function(id, name, prependInfo, hideForever) {
                this.addFile(id, name, prependInfo, hideForever, true);
            },
            addCacheToDom: function() {
                fileList.appendChild(fileBatch.content);
                fileBatch.content = document.createDocumentFragment();
                fileBatch.map = {};
            },
            removeFile: function(id) {
                qq(getFile(id)).remove();
            },
            getFileId: function(el) {
                var currentNode = el;
                if (currentNode) {
                    while (currentNode.getAttribute(FILE_ID_ATTR) == null) {
                        currentNode = currentNode.parentNode;
                    }
                    return parseInt(currentNode.getAttribute(FILE_ID_ATTR));
                }
            },
            getFileList: function() {
                return fileList;
            },
            markFilenameEditable: function(id) {
                var filename = getFilename(id);
                filename && qq(filename).addClass(options.classes.editable);
            },
            updateFilename: function(id, name) {
                var filenameEl = getFilename(id);
                if (filenameEl) {
                    qq(filenameEl).setText(name);
                    filenameEl.setAttribute("title", name);
                }
            },
            hideFilename: function(id) {
                hide(getFilename(id));
            },
            showFilename: function(id) {
                show(getFilename(id));
            },
            isFileName: function(el) {
                return qq(el).hasClass(selectorClasses.file);
            },
            getButton: function() {
                return options.button || getTemplateEl(container, selectorClasses.button);
            },
            hideDropProcessing: function() {
                hide(getDropProcessing());
            },
            showDropProcessing: function() {
                show(getDropProcessing());
            },
            getDropZone: function() {
                return getTemplateEl(container, selectorClasses.drop);
            },
            isEditFilenamePossible: function() {
                return isEditElementsExist;
            },
            hideRetry: function(id) {
                hide(getRetry(id));
            },
            isRetryPossible: function() {
                return isRetryElementExist;
            },
            showRetry: function(id) {
                show(getRetry(id));
            },
            getFileContainer: function(id) {
                return getFile(id);
            },
            showEditIcon: function(id) {
                var icon = getEditIcon(id);
                icon && qq(icon).addClass(options.classes.editable);
            },
            isHiddenForever: function(id) {
                return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);
            },
            hideEditIcon: function(id) {
                var icon = getEditIcon(id);
                icon && qq(icon).removeClass(options.classes.editable);
            },
            isEditIcon: function(el) {
                return qq(el).hasClass(selectorClasses.editNameIcon, true);
            },
            getEditInput: function(id) {
                return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);
            },
            isEditInput: function(el) {
                return qq(el).hasClass(selectorClasses.editFilenameInput, true);
            },
            updateProgress: function(id, loaded, total) {
                var bar = getProgress(id), percent;
                if (bar && total > 0) {
                    percent = Math.round(loaded / total * 100);
                    if (percent === 100) {
                        hide(bar);
                    } else {
                        show(bar);
                    }
                    setProgressBarWidth(id, percent);
                }
            },
            updateTotalProgress: function(loaded, total) {
                this.updateProgress(null, loaded, total);
            },
            hideProgress: function(id) {
                var bar = getProgress(id);
                bar && hide(bar);
            },
            hideTotalProgress: function() {
                this.hideProgress();
            },
            resetProgress: function(id) {
                setProgressBarWidth(id, 0);
                this.hideTotalProgress(id);
            },
            resetTotalProgress: function() {
                this.resetProgress();
            },
            showCancel: function(id) {
                if (!isCancelDisabled) {
                    var cancel = getCancel(id);
                    cancel && qq(cancel).removeClass(options.classes.hide);
                }
            },
            hideCancel: function(id) {
                hide(getCancel(id));
            },
            isCancel: function(el) {
                return qq(el).hasClass(selectorClasses.cancel, true);
            },
            allowPause: function(id) {
                show(getPause(id));
                hide(getContinue(id));
            },
            uploadPaused: function(id) {
                this.setStatusText(id, options.text.paused);
                this.allowContinueButton(id);
                hide(getSpinner(id));
            },
            hidePause: function(id) {
                hide(getPause(id));
            },
            isPause: function(el) {
                return qq(el).hasClass(selectorClasses.pause, true);
            },
            isContinueButton: function(el) {
                return qq(el).hasClass(selectorClasses.continueButton, true);
            },
            allowContinueButton: function(id) {
                show(getContinue(id));
                hide(getPause(id));
            },
            uploadContinued: function(id) {
                this.setStatusText(id, "");
                this.allowPause(id);
                show(getSpinner(id));
            },
            showDeleteButton: function(id) {
                show(getDelete(id));
            },
            hideDeleteButton: function(id) {
                hide(getDelete(id));
            },
            isDeleteButton: function(el) {
                return qq(el).hasClass(selectorClasses.deleteButton, true);
            },
            isRetry: function(el) {
                return qq(el).hasClass(selectorClasses.retry, true);
            },
            updateSize: function(id, text) {
                var size = getSize(id);
                if (size) {
                    show(size);
                    qq(size).setText(text);
                }
            },
            setStatusText: function(id, text) {
                var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);
                if (textEl) {
                    if (text == null) {
                        qq(textEl).clearText();
                    } else {
                        qq(textEl).setText(text);
                    }
                }
            },
            hideSpinner: function(id) {
                qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);
                hide(getSpinner(id));
            },
            showSpinner: function(id) {
                qq(getFile(id)).addClass(IN_PROGRESS_CLASS);
                show(getSpinner(id));
            },
            generatePreview: function(id, optFileOrBlob, customResizeFunction) {
                if (!this.isHiddenForever(id)) {
                    thumbGenerationQueue.push({
                        id: id,
                        customResizeFunction: customResizeFunction,
                        optFileOrBlob: optFileOrBlob
                    });
                    !thumbnailQueueMonitorRunning && generateNextQueuedPreview();
                }
            },
            updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {
                if (!this.isHiddenForever(id)) {
                    thumbGenerationQueue.push({
                        customResizeFunction: customResizeFunction,
                        update: true,
                        id: id,
                        thumbnailUrl: thumbnailUrl,
                        showWaitingImg: showWaitingImg
                    });
                    !thumbnailQueueMonitorRunning && generateNextQueuedPreview();
                }
            },
            hasDialog: function(type) {
                return qq.supportedFeatures.dialogElement && !!getDialog(type);
            },
            showDialog: function(type, message, defaultValue) {
                var dialog = getDialog(type), messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage), inputEl = dialog.getElementsByTagName("INPUT")[0], cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton), okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton), promise = new qq.Promise(), closeHandler = function() {
                    cancelBtn.removeEventListener("click", cancelClickHandler);
                    okBtn && okBtn.removeEventListener("click", okClickHandler);
                    promise.failure();
                }, cancelClickHandler = function() {
                    cancelBtn.removeEventListener("click", cancelClickHandler);
                    dialog.close();
                }, okClickHandler = function() {
                    dialog.removeEventListener("close", closeHandler);
                    okBtn.removeEventListener("click", okClickHandler);
                    dialog.close();
                    promise.success(inputEl && inputEl.value);
                };
                dialog.addEventListener("close", closeHandler);
                cancelBtn.addEventListener("click", cancelClickHandler);
                okBtn && okBtn.addEventListener("click", okClickHandler);
                if (inputEl) {
                    inputEl.value = defaultValue;
                }
                messageEl.textContent = message;
                dialog.showModal();
                return promise;
            }
        });
    };
    qq.UiEventHandler = function(s, protectedApi) {
        "use strict";
        var disposer = new qq.DisposeSupport(), spec = {
            eventType: "click",
            attachTo: null,
            onHandled: function(target, event) {}
        };
        qq.extend(this, {
            addHandler: function(element) {
                addHandler(element);
            },
            dispose: function() {
                disposer.dispose();
            }
        });
        function addHandler(element) {
            disposer.attach(element, spec.eventType, function(event) {
                event = event || window.event;
                var target = event.target || event.srcElement;
                spec.onHandled(target, event);
            });
        }
        qq.extend(protectedApi, {
            getFileIdFromItem: function(item) {
                return item.qqFileId;
            },
            getDisposeSupport: function() {
                return disposer;
            }
        });
        qq.extend(spec, s);
        if (spec.attachTo) {
            addHandler(spec.attachTo);
        }
    };
    qq.FileButtonsClickHandler = function(s) {
        "use strict";
        var inheritedInternalApi = {}, spec = {
            templating: null,
            log: function(message, lvl) {},
            onDeleteFile: function(fileId) {},
            onCancel: function(fileId) {},
            onRetry: function(fileId) {},
            onPause: function(fileId) {},
            onContinue: function(fileId) {},
            onGetName: function(fileId) {}
        }, buttonHandlers = {
            cancel: function(id) {
                spec.onCancel(id);
            },
            retry: function(id) {
                spec.onRetry(id);
            },
            deleteButton: function(id) {
                spec.onDeleteFile(id);
            },
            pause: function(id) {
                spec.onPause(id);
            },
            continueButton: function(id) {
                spec.onContinue(id);
            }
        };
        function examineEvent(target, event) {
            qq.each(buttonHandlers, function(buttonType, handler) {
                var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1), fileId;
                if (spec.templating["is" + firstLetterCapButtonType](target)) {
                    fileId = spec.templating.getFileId(target);
                    qq.preventDefault(event);
                    spec.log(qq.format("Detected valid file button click event on file '{}', ID: {}.", spec.onGetName(fileId), fileId));
                    handler(fileId);
                    return false;
                }
            });
        }
        qq.extend(spec, s);
        spec.eventType = "click";
        spec.onHandled = examineEvent;
        spec.attachTo = spec.templating.getFileList();
        qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));
    };
    qq.FilenameClickHandler = function(s) {
        "use strict";
        var inheritedInternalApi = {}, spec = {
            templating: null,
            log: function(message, lvl) {},
            classes: {
                file: "qq-upload-file",
                editNameIcon: "qq-edit-filename-icon"
            },
            onGetUploadStatus: function(fileId) {},
            onGetName: function(fileId) {}
        };
        qq.extend(spec, s);
        function examineEvent(target, event) {
            if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {
                var fileId = spec.templating.getFileId(target), status = spec.onGetUploadStatus(fileId);
                if (status === qq.status.SUBMITTED) {
                    spec.log(qq.format("Detected valid filename click event on file '{}', ID: {}.", spec.onGetName(fileId), fileId));
                    qq.preventDefault(event);
                    inheritedInternalApi.handleFilenameEdit(fileId, target, true);
                }
            }
        }
        spec.eventType = "click";
        spec.onHandled = examineEvent;
        qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));
    };
    qq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {
        "use strict";
        var spec = {
            templating: null,
            onGetUploadStatus: function(fileId) {},
            log: function(message, lvl) {}
        };
        if (!inheritedInternalApi) {
            inheritedInternalApi = {};
        }
        function handleInputFocus(target, event) {
            if (spec.templating.isEditInput(target)) {
                var fileId = spec.templating.getFileId(target), status = spec.onGetUploadStatus(fileId);
                if (status === qq.status.SUBMITTED) {
                    spec.log(qq.format("Detected valid filename input focus event on file '{}', ID: {}.", spec.onGetName(fileId), fileId));
                    inheritedInternalApi.handleFilenameEdit(fileId, target);
                }
            }
        }
        spec.eventType = "focusin";
        spec.onHandled = handleInputFocus;
        qq.extend(spec, s);
        qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));
    };
    qq.FilenameInputFocusHandler = function(spec) {
        "use strict";
        spec.eventType = "focus";
        spec.attachTo = null;
        qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));
    };
    qq.FilenameEditHandler = function(s, inheritedInternalApi) {
        "use strict";
        var spec = {
            templating: null,
            log: function(message, lvl) {},
            onGetUploadStatus: function(fileId) {},
            onGetName: function(fileId) {},
            onSetName: function(fileId, newName) {},
            onEditingStatusChange: function(fileId, isEditing) {}
        };
        function getFilenameSansExtension(fileId) {
            var filenameSansExt = spec.onGetName(fileId), extIdx = filenameSansExt.lastIndexOf(".");
            if (extIdx > 0) {
                filenameSansExt = filenameSansExt.substr(0, extIdx);
            }
            return filenameSansExt;
        }
        function getOriginalExtension(fileId) {
            var origName = spec.onGetName(fileId);
            return qq.getExtension(origName);
        }
        function handleNameUpdate(newFilenameInputEl, fileId) {
            var newName = newFilenameInputEl.value, origExtension;
            if (newName !== undefined && qq.trimStr(newName).length > 0) {
                origExtension = getOriginalExtension(fileId);
                if (origExtension !== undefined) {
                    newName = newName + "." + origExtension;
                }
                spec.onSetName(fileId, newName);
            }
            spec.onEditingStatusChange(fileId, false);
        }
        function registerInputBlurHandler(inputEl, fileId) {
            inheritedInternalApi.getDisposeSupport().attach(inputEl, "blur", function() {
                handleNameUpdate(inputEl, fileId);
            });
        }
        function registerInputEnterKeyHandler(inputEl, fileId) {
            inheritedInternalApi.getDisposeSupport().attach(inputEl, "keyup", function(event) {
                var code = event.keyCode || event.which;
                if (code === 13) {
                    handleNameUpdate(inputEl, fileId);
                }
            });
        }
        qq.extend(spec, s);
        spec.attachTo = spec.templating.getFileList();
        qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));
        qq.extend(inheritedInternalApi, {
            handleFilenameEdit: function(id, target, focusInput) {
                var newFilenameInputEl = spec.templating.getEditInput(id);
                spec.onEditingStatusChange(id, true);
                newFilenameInputEl.value = getFilenameSansExtension(id);
                if (focusInput) {
                    newFilenameInputEl.focus();
                }
                registerInputBlurHandler(newFilenameInputEl, id);
                registerInputEnterKeyHandler(newFilenameInputEl, id);
            }
        });
    };
})(window);
//# sourceMappingURL=fine-uploader.js.map

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/loading.gif":
/*!****************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/loading.gif ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "2da0807814ad64841cd597c4e8a653d1.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/pause.gif":
/*!**************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/pause.gif ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "5aa1c315fa966ea144c1390bd9f341a8.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/processing.gif":
/*!*******************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/processing.gif ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "68110b18c97c78c295ffb4d78e9c7237.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/retry.gif":
/*!**************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/retry.gif ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "291dd47bf94604e664eb664639e8853e.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/fine-uploader/trash.gif":
/*!**************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/fine-uploader/trash.gif ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "656f8f6e62f50c52741e34bf237ac69a.gif";

/***/ }),

/***/ "../../node_modules/fine-uploader/lib/traditional.js":
/*!*********************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/fine-uploader/lib/traditional.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(/*! ../fine-uploader/fine-uploader */ "../../node_modules/fine-uploader/fine-uploader/fine-uploader.js");


/***/ }),

/***/ "../../node_modules/jquery-simple-upload/simpleUpload.js":
/*!*************************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/jquery-simple-upload/simpleUpload.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(jQuery, $) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
 * simpleUpload.js v.1.1
 *
 * Copyright 2018, Michael Brook, All rights reserved.
 * http://simpleupload.michaelcbrook.com/
 *
 * simpleUpload.js is an extremely simple yet powerful jQuery file upload plugin.
 * It is free to use under the MIT License (http://opensource.org/licenses/MIT)
 *
 * https://github.com/michaelcbrook/simpleUpload.js
 * @michaelcbrook
 */

function simpleUpload(ajax_url, DOM_file, options)
{

var forceIframe = false;

var files = null; //files object for HTML5 uploads (if applicable)
var limit = 0; //the max number of files that can be uploaded from this selection (0 = no limit)

var max_file_size = 0; //max file size for an uploaded file in bytes
var allowed_exts = []; //array of allowed file extensions for an uploaded file
var allowed_types = []; //array of allowed MIME types for an uploaded file
var expect_type = "auto"; //the type of result to expect (can either be auto, json, xml, html, script, or text)

var hash_worker = null; //file path (relative to page) to hash worker javascript file
var on_hash_complete = null; //function(hash, callbacks){ callbacks.proceed(); //success(), proceed(), or error() }; //called when hash is calculated for a file, the next step is determined by the callback that is called

var request_file_name = "file"; //name of file to be uploaded (should be the same as DOM_file's name)
var request_data = {}; //additional data to get passed to the backend script with the file upload

var xhrFields = {}; //object of field name/value pairs to send with ajax request (set on native XHR object) - { withCredentials: true } is one example

//default callback functions
var on_init_callback = function(total_uploads){}; //on initialization of instance, given at least one file is queued for upload (can cancel all uploads or set limit by returning either false or an integer, respectively)
var on_start_callback = function(file){}; //on beginning of each file upload (can return false to exclude this file from being uploaded)
var on_progress_callback = function(progress){}; //on upload progress update
var on_success_callback = function(data){}; //on successful file upload
var on_error_callback = function(error){}; //on failed file upload
var on_cancel_callback = function(){}; //on cancelled upload (via this.upload.cancel())
var on_complete_callback = function(status){}; //on completed upload, regardless of success
var on_finish_callback = function(){}; //on completion of all file uploads for this instance, regardless of success

var on_before_send_callback = function(jqXHR, settings){}; //gives the opportunity to modify the XHR object before sending the request

var upload_contexts = []; //an array containing objects for each file upload that can be referenced inside each callback using "this"
var private_upload_data = []; //same as above, except the properties of these objects are not accessible via "this"
var instance_context = { files: upload_contexts }; //an instance-specific context for "this" to pass to non-file-specific events like init() and finish()

var queued_files = 0; //number of files remaining in the queue for this instance
var hidden_form = null; //jquery object containing hidden form appended to body of page, which contains the moved DOM_file, if it exists



//helper function to run after every success, error, or cancel event

var file_completed = function(upload_num, status){

  on_complete(upload_num, status);

  queued_files--;

    if (queued_files==0)
      on_finish();

  simpleUpload.activeUploads--;
  simpleUpload.uploadNext();

};

/* Wrappers to the callback functions that additionally perform internal functions */

var on_init = function(total_uploads){

  return on_init_callback.call(instance_context, total_uploads);

};

var on_start = function(upload_num, file){

    if (getUploadState(upload_num) > 0) //if cancelled via the init function, don't start upload
      return false;

    if (on_start_callback.call(upload_contexts[upload_num], file)===false) { //if start returns false, treat it as a cancellation
      setUploadState(upload_num, 4);
      return false;
    }

    if (getUploadState(upload_num) > 0) //if this.upload.cancel() was called inside the start function, don't start upload
      return false;

  setUploadState(upload_num, 1);

};

var on_progress = function(upload_num, progress){

    if (getUploadState(upload_num)==1)
      on_progress_callback.call(upload_contexts[upload_num], progress);

};

var on_success = function(upload_num, data){

    if (getUploadState(upload_num)==1)
    {
    setUploadState(upload_num, 2);
    on_success_callback.call(upload_contexts[upload_num], data);
    file_completed(upload_num, "success");
    }

};

var on_error = function(upload_num, error){

    if (getUploadState(upload_num)==1)
    {
    setUploadState(upload_num, 3);
    on_error_callback.call(upload_contexts[upload_num], error);
    file_completed(upload_num, "error");
    }

};

var on_cancel = function(upload_num){

  //the this.upload.cancel() function restricts when this can be called

  on_cancel_callback.call(upload_contexts[upload_num]);
  file_completed(upload_num, "cancel");

};

var on_complete = function(upload_num, status){

  on_complete_callback.call(upload_contexts[upload_num], status);

};

var on_finish = function(){

  on_finish_callback.call(instance_context);

    if (hidden_form!=null)
      hidden_form.remove();

};

var on_before_send = function(upload_num, jqXHR, settings){

  on_before_send_callback.call(upload_contexts[upload_num], jqXHR, settings);

};

/* End callback wrappers */



	/*
	 * Initialize instance and put uploads in the queue
	 */

	function create()
	{

	  if (typeof options=="object" && options!==null)
	  {

	    if (typeof options.forceIframe=="boolean")
	    {
	    forceIframe = options.forceIframe;
	    }

	    if (typeof options.init=="function")
	    {
	    on_init_callback = options.init;
	    }

	    if (typeof options.start=="function")
	    {
	    on_start_callback = options.start;
	    }

	    if (typeof options.progress=="function")
	    {
	    on_progress_callback = options.progress;
	    }

	    if (typeof options.success=="function")
	    {
	    on_success_callback = options.success;
	    }

	    if (typeof options.error=="function")
	    {
	    on_error_callback = options.error;
	    }

	    if (typeof options.cancel=="function")
	    {
	    on_cancel_callback = options.cancel;
	    }

	    if (typeof options.complete=="function")
	    {
	    on_complete_callback = options.complete;
	    }

	    if (typeof options.finish=="function")
	    {
	    on_finish_callback = options.finish;
	    }

	    if (typeof options.beforeSend=="function")
	    {
	    on_before_send_callback = options.beforeSend;
	    }

	    if (typeof options.hashWorker=="string" && options.hashWorker!="")
	    {
	    hash_worker = options.hashWorker;
	    }

	    if (typeof options.hashComplete=="function")
	    {
	    on_hash_complete = options.hashComplete;
	    }

	    if (typeof options.data=="object" && options.data!==null)
	    {

	      for (var x in options.data) //copy each item in case options.data is actually an array
	      {
	      request_data[x] = options.data[x];
	      }

	    }

	    if (typeof options.limit=="number" && isInt(options.limit) && options.limit > 0)
	    {
	    limit = options.limit;
	    }

	    if (typeof options.maxFileSize=="number" && isInt(options.maxFileSize) && options.maxFileSize > 0)
	    {
	    max_file_size = options.maxFileSize;
	    }

	    if (typeof options.allowedExts=="object" && options.allowedExts!==null)
	    {

	      for (var x in options.allowedExts) //ensure allowed_exts stays an array
	      {
	      allowed_exts.push(options.allowedExts[x]);
	      }

	    }

	    if (typeof options.allowedTypes=="object" && options.allowedTypes!==null)
	    {

	      for (var x in options.allowedTypes) //ensure allowed_types stays an array
	      {
	      allowed_types.push(options.allowedTypes[x]);
	      }

	    }

	    if (typeof options.expect=="string" && options.expect!="")
	    {

	    var lower_expect = options.expect.toLowerCase();
	    var valid_expect_types = ["auto", "json", "xml", "html", "script", "text"]; //expect_type must be one of these

	      for (var x in valid_expect_types)
	      {

	        if (valid_expect_types[x]==lower_expect)
	        {
	        expect_type = lower_expect;
	        break;
	        }

	      }

	    }

	    if (typeof options.xhrFields=="object" && options.xhrFields!==null)
	    {

	      for (var x in options.xhrFields) //maintain as object
	      {
	      xhrFields[x] = options.xhrFields[x];
	      }

	    }

	  }

	  if (typeof DOM_file=="object" && DOM_file!==null && DOM_file instanceof jQuery)
	  {

	    if (DOM_file.length > 0)
	    {
	    DOM_file = DOM_file.get(0); //if DOM_file was passed in as a jquery object, extract its first DOM element and use it instead
	    }
	    else
	    {
	    return false; //if jquery object was empty, quit now
	    }

	  }

	  if (!forceIframe && window.File && window.FileReader && window.FileList && window.Blob) //check whether browser supports HTML5 File API
	  {

	    if (typeof options=="object" && options!==null && typeof options.files=="object" && options.files!==null)
	    {
	    files = options.files; //if options.files is defined along with DOM_file, it is the caller's responsibility to make sure they are the same
	    }
	    else if (typeof DOM_file=="object" && DOM_file!==null && typeof DOM_file.files=="object" && DOM_file.files!==null)
	    {
	    files = DOM_file.files; //fallback on DOM file input if no options.files are given
	    }

	  }

	  if ((typeof DOM_file!="object" || DOM_file===null) && files==null)
	  {
	  return false; //we've got nothing to work with, so just quit
	  }

	  //request_file_name will be based on (in order of preference) options.name, DOM_file.name, "file"

	  //if there is an attempt to upload multiple files as an array in one request, restrict it to one file per request, otherwise it will break consistency between ajax and iframe upload methods

	  if (typeof options=="object" && options!==null && typeof options.name=="string" && options.name!="")
	  {
	  request_file_name = options.name.replace(/\[\s*\]/g, '[0]');
	  }
	  else if (typeof DOM_file=="object" && DOM_file!==null && typeof DOM_file.name=="string" && DOM_file.name!="")
	  {
	  request_file_name = DOM_file.name.replace(/\[\s*\]/g, '[0]');
	  }

	var num_files = 0;

	  if (files!=null)
	  {

	    if (files.length > 0)
	    {

	      //the following conditions are necessary in order to do an AJAX upload (minus hashing), so don't start more than one upload if we're certain we'll fallback to the iframe method anyway

	      if (files.length > 1 && window.FormData && $.ajaxSettings.xhr().upload)
	      {

	        if (limit > 0 && files.length > limit) //apply limit if multiple files have been selected
	        {
	        num_files = limit;
	        }
	        else
	        {
	        num_files = files.length;
	        }

	      }
	      else
	      {
	      num_files = 1;
	      }

	    }

	  }
	  else
	  {

	    if (DOM_file.value!="")
	    {
	    num_files = 1;
	    }

	  }

	  if (num_files > 0)
	  {

	    if (typeof DOM_file=="object" && DOM_file!==null)
	    {

	    var $DOM_file = $(DOM_file);

	    hidden_form = $('<form>').hide().attr("enctype", "multipart/form-data").attr("method", "post").appendTo('body');

	    //move the original file input into the hidden form and create a clone of the original to replace it (clone doesn't retain value)
	    $DOM_file.after($DOM_file.clone(true).val("")).removeAttr("onchange").off().removeAttr("id").attr("name", request_file_name).appendTo(hidden_form);

	    }

	    for (var i = 0; i < num_files; i++)
	    {

	    (function(i){

	      //setting up contextual data...

	      //not accessible in callbacks directly, but provides data for certain functions that can be run in the callbacks
	      private_upload_data[i] = {
	      	state: 0, //state of upload in number form (0 = init, 1 = uploading, 2 = success, 3 = error, 4 = cancel)
	      	hashWorker: null, //Worker object from hashing
	        xhr: null, //jqXHR object from ajax upload
	        iframe: null //iframe id from iframe upload
	      };

	      //this object is accessible via "this" in each file-specific callback (for init and finish, this object is stacked in an array for each file)
	      upload_contexts[i] = {
	        upload: {
	          index: i,
	          state: "init", //textual form of "state" in private_upload_data
	          file: (files!=null) ? files[i] : { name: DOM_file.value.split(/(\\|\/)/g).pop() }, //ensure "name" always exists, regardless of HTML5 support
	          cancel: function(){

	              if (getUploadState(i)==0) //if upload hasn't started, don't call the callback, just change the state
	              {
	              setUploadState(i, 4);
	              }
	              else if (getUploadState(i)==1) //cancel if active and call the callback
	              {

	              setUploadState(i, 4);

	                if (private_upload_data[i].hashWorker!=null)
	                {
	                private_upload_data[i].hashWorker.terminate();
	                private_upload_data[i].hashWorker = null;
	                }

	                if (private_upload_data[i].xhr!=null)
	                {
	                private_upload_data[i].xhr.abort();
	                private_upload_data[i].xhr = null;
	                }

	                if (private_upload_data[i].iframe!=null)
	                {
	                $('iframe[name=simpleUpload_iframe_' + private_upload_data[i].iframe + ']').attr("src", "javascript:false;"); //for IE
	                simpleUpload.dequeueIframe(private_upload_data[i].iframe);
	                private_upload_data[i].iframe = null;
	                }

	              on_cancel(i);

	              }
	              else //return false if upload has already completed or been cancelled
	              {
	              return false;
	              }

	            return true; //cancel was a success

	          }
	        }
	      };

	    })(i);

	    }

	  var init_value = on_init(num_files);

	    if (init_value!==false)
	    {

	    //if the return value of on_init (init_value) is a number, limit the amount of uploads to that number (a value of 0, like false, will cancel all uploads)

	    var num_files_limit = num_files;

	      if (typeof init_value=="number" && isInt(init_value) && init_value >= 0 && init_value < num_files)
	      {

	      num_files_limit = init_value;

	        for (var z = num_files_limit; z < num_files; z++)
	        {
	        setUploadState(z, 4); //mark each remaining file after the new limit as cancelled
	        }

	      }

	    var remaining_uploads = []; //array of indexes of files to be uploaded from this instance

	      for (var j = 0; j < num_files_limit; j++)
	      {

	        if (on_start(j, upload_contexts[j].upload.file)!==false) //if false is returned, exclude this file from being uploaded
	          remaining_uploads[remaining_uploads.length] = j;

	      }

	      if (remaining_uploads.length > 0)
	      {

	      queued_files = remaining_uploads.length;

	      simpleUpload.queueUpload(remaining_uploads, function(upload_num){
	        validateFile(upload_num);
	      });

	      simpleUpload.uploadNext();

	      }
	      else
	      {
	      on_finish();
	      }

	    }
	    else //init returned false
	    {

	      for (var z in upload_contexts)
	      {
	      setUploadState(z, 4); //mark each file as cancelled
	      }

	    on_finish();

	    }

	  }

	}



	/*
	 * Run each file through the validation process
	 */

	function validateFile(upload_num)
	{

	  if (getUploadState(upload_num)!=1) //stop if upload has been cancelled
	    return;

	var file = null;

	  if (files!=null) //HTML5
	  {

	    if (files[upload_num]!=undefined && files[upload_num]!=null)
	    {
	    file = files[upload_num];
	    }
	    else //shouldn't happen, unless the files parameter passed in the beginning is not valid, or the passed-by-reference files object has been changed
	    {
	    on_error(upload_num, { name: "InternalError", message: "There was an error uploading the file" });
	    return;
	    }

	  }
	  else
	  {

	    if (DOM_file.value=="")
	    {
	    on_error(upload_num, { name: "InternalError", message: "There was an error uploading the file" });
	    return;
	    }

	  }

	//it's okay for file to be null, which signifies lack of HTML5 support

	//if certain information cannot be obtained because of a lack of support via javascript, these checks will return as valid by default, pending server-side checks after uploading

	  if (allowed_exts.length > 0 && !validateFileExtension(allowed_exts, file))
	  {
	  on_error(upload_num, { name: "InvalidFileExtensionError", message: "That file format is not allowed" });
	  return;
	  }

	  if (allowed_types.length > 0 && !validateFileMimeType(allowed_types, file))
	  {
	  on_error(upload_num, { name: "InvalidFileTypeError", message: "That file format is not allowed" });
	  return;
	  }

	  if (max_file_size > 0 && !validateFileSize(max_file_size, file))
	  {
	  on_error(upload_num, { name: "MaxFileSizeError", message: "That file is too big" });
	  return;
	  }

	//file passed validation checks

	  if (hash_worker!=null && on_hash_complete!=null) //if hash worker and hash complete function are present, attempt hashing...
	  {
	  hashFile(upload_num);
	  }
	  else //skip hashing and continue to upload file...
	  {
	  uploadFile(upload_num);
	  }

	}



	/*
	 * If a hash is desired, complete the hashing
	 */

	function hashFile(upload_num)
	{

	  if (files!=null) //HTML5
	  {

	    if (files[upload_num]!=undefined && files[upload_num]!=null)
	    {

	      if (window.Worker) //if the Web Workers API is supported (without it, hashing may lock up the browser)
	      {

	      var file = files[upload_num];

	        if (file.size!=undefined && file.size!=null && file.size!="" && isInt(file.size) && (file.slice || file.webkitSlice || file.mozSlice)) //check whether we've got the necessary HTML5 stuff
	        {

	          try {

	            var worker = new Worker(hash_worker);

	            worker.addEventListener('error', function(event){ //if anything goes wrong, just upload the file
	              worker.terminate();
	              private_upload_data[upload_num].hashWorker = null;
	              uploadFile(upload_num);
	            }, false);

	            worker.addEventListener('message', function(event){
	              if (event.data.result) {
	                var hash = event.data.result;
	                worker.terminate();
	                private_upload_data[upload_num].hashWorker = null;
	                checkHash(upload_num, hash); //hash was calculated successfully, now go check it
	              }
	            }, false);

	            var buffer_size, block, reader, blob, handle_hash_block, handle_load_block;

	            handle_load_block = function(event){
	              worker.postMessage({
	                'message' : event.target.result,
	                'block' : block
	              });
	            };

	            handle_hash_block = function(event){

	              if (block.end !== file.size)
	              {

	              block.start += buffer_size;
	              block.end += buffer_size;

	                if (block.end > file.size)
	                {
	                block.end = file.size;
	                }

	              reader = new FileReader();
	              reader.onload = handle_load_block;

	                if (file.slice) {
	                  blob = file.slice(block.start, block.end);
	                } else if (file.webkitSlice) {
	                  blob = file.webkitSlice(block.start, block.end);
	                } else if (file.mozSlice) {
	                  blob = file.mozSlice(block.start, block.end);
	                }

	              reader.readAsArrayBuffer(blob);

	              }

	            };

	            buffer_size = 64 * 16 * 1024;

	            block = {
	              'file_size' : file.size,
	              'start' : 0
	            };

	            block.end = buffer_size > file.size ? file.size : buffer_size;

	            worker.addEventListener('message', handle_hash_block, false);

	            reader = new FileReader();
	            reader.onload = handle_load_block;

	              if (file.slice) {
	                blob = file.slice(block.start, block.end);
	              } else if (file.webkitSlice) {
	                blob = file.webkitSlice(block.start, block.end);
	              } else if (file.mozSlice) {
	                blob = file.mozSlice(block.start, block.end);
	              }

	            reader.readAsArrayBuffer(blob);

	            private_upload_data[upload_num].hashWorker = worker; //store the worker to make it cancellable

	            return;

	          } catch(e) { //some unknown error occurred

	          }

	        } //else could not determine file size or could not use the File API's slice() method

	      } //else the Web Workers API is not supported

	    }

	  }

	uploadFile(upload_num);

	}



	/*
	 * Once a hash is calculated, send the hash along with some callbacks to the hashComplete() callback
	 */

	function checkHash(upload_num, hash)
	{

	  if (getUploadState(upload_num)!=1) //stop if upload has been cancelled
	    return;

	//because on_hash_complete is likely to run an asynchronous ajax call, pass callbacks to the function in order to take action when ready

	var callback_received = false; //only allow one callback to run once

	var success_callback = function(data){
	  if (getUploadState(upload_num)!=1) return false;
	  if (callback_received) return false;
	  callback_received = true;
	  on_progress(upload_num, 100);
	  on_success(upload_num, data);
	  return true;
	};

	var proceed_callback = function(){
	  if (getUploadState(upload_num)!=1) return false;
	  if (callback_received) return false;
	  callback_received = true;
	  uploadFile(upload_num);
	  return true;
	};

	var error_callback = function(error){
	  if (getUploadState(upload_num)!=1) return false;
	  if (callback_received) return false;
	  callback_received = true;
	  on_error(upload_num, { name: "HashError", message: error });
	  return true;
	};

	on_hash_complete.call(upload_contexts[upload_num], hash, { success: success_callback, proceed: proceed_callback, error: error_callback }); //IE has issues with "continue" as property name

	}



	/*
	 * Either after validation or a proceed() signal is received from the hash callback, continue to upload the file via AJAX
	 */

	function uploadFile(upload_num)
	{

	  if (getUploadState(upload_num)!=1) //stop if upload has been cancelled
	    return;

	  if (files!=null) //HTML5
	  {

	    if (files[upload_num]!=undefined && files[upload_num]!=null)
	    {

	      if (window.FormData)
	      {

	      var ajax_xhr = $.ajaxSettings.xhr();

	        if (ajax_xhr.upload) //check if upload property exists in XMLHttpRequest object
	        {

	        var file = files[upload_num];

	        var formData = new FormData();

	        objectToFormData(formData, request_data);

	        formData.append(request_file_name, file); //associate the file with options.name, the name of the DOM_file element, or "file" if one does not exist (in that order)

	        var ajax_settings = { url: ajax_url, data: formData, type: 'post', cache: false, xhrFields: xhrFields, beforeSend: function(jqXHR, settings) {
            
            on_before_send(upload_num, jqXHR, settings);

	          private_upload_data[upload_num].xhr = jqXHR; //store the jqXHR object to make the upload cancellable

	        }, xhr: function() { //custom xhr

	          ajax_xhr.upload.addEventListener('progress', function(e) {

	            if (e.lengthComputable)
	            {
	            on_progress(upload_num, (e.loaded/e.total)*100);
	            }

	          }, false); // for handling the progress of the upload

	          return ajax_xhr;

	        }, error: function(xhr) {

	          private_upload_data[upload_num].xhr = null;

	          on_error(upload_num, { name: "RequestError", message: "Upload failed", xhr: xhr });

	        }, success: function(data) {

	          private_upload_data[upload_num].xhr = null;

	          on_progress(upload_num, 100);
	          on_success(upload_num, data);

	        }, contentType: false, processData: false }; //options to tell JQuery not to process data or worry about content-type

	          //if expect_type is "auto", let the ajax function determine the type of output based on the mime-type of the response, otherwise force it

	          if (expect_type!="auto")
	          {
	          ajax_settings.dataType = expect_type;
	          }

	        $.ajax(ajax_settings); //execute ajax request

	        return;

	        }

	      }

	    }
	    else
	    {
	    on_error(upload_num, { name: "InternalError", message: "There was an error uploading the file" });
	    return;
	    }

	  }

	  if (typeof DOM_file=="object" && DOM_file!==null) //FALLBACK TO IFRAME IF BROWSER NOT HTML5 CAPABLE
	  {
	  uploadFileFallback(upload_num);
	  }
	  else //can't do AJAX file upload, and we weren't given a DOM_file to fall back on (can be caused by a drag-n-drop operation where "files" was given but DOM_file was not)
	  {
	  on_error(upload_num, { name: "UnsupportedError", message: "Your browser does not support this upload method" });
	  }

	}



	/*
	 * If the browser does not support AJAX file uploads, fall back to the iframe method
	 */

	function uploadFileFallback(upload_num)
	{

	  /*
	   * Limit uploads using the iframe method to 1 for the following reasons:
	   * 1. To keep it consistent with the one-file-per-request structure
	   * 2. To prevent confusingly long wait times on individual files because we must wait for all the files to be processed first
	   */

	  if (upload_num==0)
	  {

	  var iframe_id = simpleUpload.queueIframe({

	    origin: getOrigin(ajax_url), //origin of ajax_url, in order to verify potential cross-domain request via postMessage() is secure

	    expect: expect_type, //expected type of response

	    complete: function(data){ //on complete

	        if (getUploadState(upload_num)!=1) //stop if upload has been cancelled
	          return;

	      private_upload_data[upload_num].iframe = null;

	      simpleUpload.dequeueIframe(iframe_id);

	      on_progress(upload_num, 100);
	      on_success(upload_num, data);

	    },

	    error: function(error){ //on error (since iframes can't catch HTTP status codes, this only happens on parsing error)

	        if (getUploadState(upload_num)!=1) //stop if upload has been cancelled
	          return;

	      private_upload_data[upload_num].iframe = null;

	      simpleUpload.dequeueIframe(iframe_id);

	      on_error(upload_num, { name: "RequestError", message: error });

	    }

	  });

	  private_upload_data[upload_num].iframe = iframe_id; //store the iframe id to make the upload cancellable

	  //hook up hidden form with iframe and include request_data as hidden fields, then submit

	  var upload_data = objectToInput(request_data);

	  //add "_iframeUpload" parameter to ajax_url with id to iframe, and "_" parameter with current time in milliseconds to prevent caching
	  hidden_form.attr("action", ajax_url + ((ajax_url.lastIndexOf("?")==-1) ? "?" : "&") + "_iframeUpload=" + iframe_id + "&_=" + (new Date()).getTime()).attr("target", "simpleUpload_iframe_" + iframe_id).prepend(upload_data).submit();

	  }
	  else
	  {
	  on_error(upload_num, { name: "UnsupportedError", message: "Multiple file uploads not supported" }); //it is very unlikely this error will ever be returned, if not impossible
	  }

	}



	/*
	 * Convert an object to hidden input fields (must return as string to maintain order)
	 */

	function objectToInput(obj, parent_node)
	{

	  if (parent_node===undefined || parent_node===null || parent_node==="")
	  {
	  parent_node = null;
	  }

	var html = "";

	  for (var key in obj)
	  {

	    if (obj[key]===undefined || obj[key]===null)
	    {
	    html += $('<div>').append($('<input type="hidden">').attr("name", (parent_node==null) ? key + "" : parent_node + "[" + key + "]").val("")).html();
	    }
	    else if (typeof obj[key]=="object")
	    {
	    html += objectToInput(obj[key], (parent_node==null) ? key + "" : parent_node + "[" + key + "]");
	    }
	    else if (typeof obj[key]=="boolean")
	    {
	    html += $('<div>').append($('<input type="hidden">').attr("name", (parent_node==null) ? key + "" : parent_node + "[" + key + "]").val((obj[key]) ? "true" : "false")).html();
	    }
	    else if (typeof obj[key]=="number")
	    {
	    html += $('<div>').append($('<input type="hidden">').attr("name", (parent_node==null) ? key + "" : parent_node + "[" + key + "]").val(obj[key] + "")).html();
	    }
	    else if (typeof obj[key]=="string")
	    {
	    html += $('<div>').append($('<input type="hidden">').attr("name", (parent_node==null) ? key + "" : parent_node + "[" + key + "]").val(obj[key])).html();
	    }

	  }

	return html;

	}



	/*
	 * Append each key/value pair in an object to a formData object
	 */

	function objectToFormData(formData, obj, parent_node)
	{

	  if (parent_node===undefined || parent_node===null || parent_node==="")
	  {
	  parent_node = null;
	  }

	  for (var key in obj)
	  {

	    if (obj[key]===undefined || obj[key]===null)
	    {
	    formData.append((parent_node==null) ? key + "" : parent_node + "[" + key + "]", "");
	    }
	    else if (typeof obj[key]=="object")
	    {
	    objectToFormData(formData, obj[key], (parent_node==null) ? key + "" : parent_node + "[" + key + "]");
	    }
	    else if (typeof obj[key]=="boolean")
	    {
	    formData.append((parent_node==null) ? key + "" : parent_node + "[" + key + "]", (obj[key]) ? "true" : "false");
	    }
	    else if (typeof obj[key]=="number")
	    {
	    formData.append((parent_node==null) ? key + "" : parent_node + "[" + key + "]", obj[key] + "");
	    }
	    else if (typeof obj[key]=="string")
	    {
	    formData.append((parent_node==null) ? key + "" : parent_node + "[" + key + "]", obj[key]);
	    }

	  }

	}



	/*
	 * Get/set state in number form and text form in private_upload_data and upload_contexts
	 */

	function getUploadState(upload_num)
	{
	return private_upload_data[upload_num].state;
	}

	function setUploadState(upload_num, state)
	{

	var textState = "";

	  if (state==0)
	    textState = "init";
	  else if (state==1)
	    textState = "uploading";
	  else if (state==2)
	    textState = "success";
	  else if (state==3)
	    textState = "error";
	  else if (state==4)
	    textState = "cancel";
	  else
	    return false;

	private_upload_data[upload_num].state = state; //for internal use

	upload_contexts[upload_num].upload.state = textState; //for public use

	}



	/*
	 * Get the extension of a filename
	 */

	function getFileExtension(filename)
	{
	var filename_dot_pos = filename.lastIndexOf('.');
	return (filename_dot_pos!=-1) ? filename.substr(filename_dot_pos + 1) : "";
	}



	/*
	 * Validate file extension and return true if valid (if not sure, assume it's valid)
	 */

	function validateFileExtension(valid_exts, file)
	{

	  if (file!=undefined && file!=null) //if file is specified (would require HTML5)
	  {

	  var file_name = file.name;

	    if (file_name!=undefined && file_name!=null && file_name!="") //the browser could return an empty value, even if it's a legit upload
	    {

	    var file_ext = getFileExtension(file_name).toLowerCase();

	      if (file_ext!="") //extension exists
	      {

	      var valid_ext = false;

	        for (var i in valid_exts)
	        {

	          if (valid_exts[i].toLowerCase()==file_ext)
	          {
	          valid_ext = true;
	          break;
	          }

	        }

	        if (valid_ext)
	        {
	        return true;
	        }
	        else
	        {
	        return false;
	        }

	      }
	      else
	      {
	      return false;
	      }

	    }

	  }

	//if the HTML5 check fails, fallback to the old-school way (won't support multiple file uploads)

	  if (typeof DOM_file=="object" && DOM_file!==null)
	  {

	  var DOM_file_name = DOM_file.value;

	    if (DOM_file_name!="")
	    {

	    var file_ext = getFileExtension(DOM_file_name).toLowerCase();

	      if (file_ext!="")
	      {

	      var valid_ext = false;

	        for (var i in valid_exts)
	        {

	          if (valid_exts[i].toLowerCase()==file_ext)
	          {
	          valid_ext = true;
	          break;
	          }

	        }

	        if (valid_ext)
	        {
	        return true;
	        }

	      }

	    }

	  }
	  else
	  {
	  return true; //we can't check DOM_file or file, so assume it's valid (could occur during a drag-n-drop operation where we are only given the file, but perhaps the browser won't give us a filename)
	  }

	return false;

	}



	/*
	 * Validate file mime-type and return true if valid (if not sure, assume it's valid)
	 */

	function validateFileMimeType(valid_mime_types, file)
	{

	  if (file!=undefined && file!=null) //if file is specified (would require HTML5)
	  {

	  var file_mime_type = file.type;

	    if (file_mime_type!=undefined && file_mime_type!=null && file_mime_type!="") //the browser could return an empty value, even if it's a legit upload
	    {

	    file_mime_type = file_mime_type.toLowerCase();

	    var valid_mime_type = false;

	      for (var i in valid_mime_types)
	      {

	        if (valid_mime_types[i].toLowerCase()==file_mime_type)
	        {
	        valid_mime_type = true;
	        break;
	        }

	      }

	      if (valid_mime_type)
	      {
	      return true;
	      }
	      else
	      {
	      return false;
	      }

	    }

	  }

	return true; //we can only check the mime-type if the browser has the HTML5 File API, so if that fails, it may be a valid upload for all we know

	}



	/*
	 * Validate file size in bytes and return true if valid (if not sure, assume it's valid)
	 */

	function validateFileSize(max_size, file)
	{

	  if (file!=undefined && file!=null) //if file is specified (would require HTML5)
	  {

	  var file_size = file.size;

	    if (file_size!=undefined && file_size!=null && file_size!="" && isInt(file_size)) //the browser could return an empty value, even if it's a legit upload
	    {

	      if (file_size <= max_size) //must be less than or equal to max_size (in bytes)
	      {
	      return true;
	      }
	      else
	      {
	      return false;
	      }

	    }

	  }

	return true; //we can only check the file size if the browser has the HTML5 File API, so if that fails, it may be a valid upload for all we know

	}



	/*
	 * Input filtering function
	 */

	function isInt(num)
	{

	  if (!isNaN(num))
	  {

	    if ((parseInt(num)+"")==num)
	    {
	    return true;
	    }

	  }

	return false;

	}



	/*
	 * Get the "origin" of a URL (e.g. http://example.org:8080). Used for verifying the identity of messages received via postMessage().
	 */

	function getOrigin(url)
	{

	var a = document.createElement('a');
	a.href = url;

	var host = a.host;
	var protocol = a.protocol;

	  if (host=="")
	    host = window.location.host;

	  if (protocol=="" || protocol==":") //for protocol-relative URLs, sometimes IE will return ":"
	    protocol = window.location.protocol;

	return protocol.replace(/\:$/, '') + "://" + host; //normalize colon in protocol in case of browser inconsistencies

	}



create();



}



/*
 * Global variables and functions that need to be maintained throughout upload instances
 */

simpleUpload.maxUploads = 10; //maximum amount of simultaneous uploads
simpleUpload.activeUploads = 0; //keep track of active uploads

simpleUpload.uploads = []; //multi-dimensional array containing the id's and callbacks of all remaining file uploads

simpleUpload.iframes = {}; //"associative array" where the iframe id is the key
simpleUpload.iframeCount = 0; //more efficient way to keep track of the number of iframes

/*
 * When an upload is started, it is first put into a global queue to ensure the browser isn't under too heavy a load.
 * These functions are used to add and subtract uploads to/from the queue.
 */

simpleUpload.queueUpload = function(remaining_uploads, upload_callback){ //queue upload instance (an instance is a set of files to upload after each file selection)

  simpleUpload.uploads[simpleUpload.uploads.length] = { uploads: remaining_uploads, callback: upload_callback };

};

simpleUpload.uploadNext = function(){

    if (simpleUpload.uploads.length > 0 && simpleUpload.activeUploads < simpleUpload.maxUploads) //there are remaining uploads and we haven't hit the limit of max simultaneous uploads yet
    {

    var upload_instance = simpleUpload.uploads[0];

    var upload_callback = upload_instance.callback;
    var upload_num = upload_instance.uploads.splice(0, 1)[0];

      if (upload_instance.uploads.length==0)
      {
      simpleUpload.uploads.splice(0, 1);
      }

    simpleUpload.activeUploads++;
    upload_callback(upload_num);

    simpleUpload.uploadNext();

    }

};

/*
 * Used to track iframes during an upload
 */

simpleUpload.queueIframe = function(opts){

  var id = 0;

    while (id==0 || id in simpleUpload.iframes)
    {
    id = Math.floor((Math.random()*999999999)+1); //generate unique id for iframe
    }

  simpleUpload.iframes[id] = opts; //an object containing data and callbacks that refer back to the originating upload instance
  simpleUpload.iframeCount++;

  $('body').append('<iframe name="simpleUpload_iframe_' + id + '" style="display: none;"></iframe>');

  return id;

};

simpleUpload.dequeueIframe = function(id){

    if (id in simpleUpload.iframes)
    {

    $('iframe[name=simpleUpload_iframe_' + id + ']').remove(); //remove iframe from the DOM

    delete simpleUpload.iframes[id];
    simpleUpload.iframeCount--;

    }

};

/*
 * Negotiate the correct data type and return the data in the proper format
 *
 * expected_type: as declared by the upload instance's "expect" parameter
 * declared_type: the type defined in the iframe during callback
 * data: data as it was passed in the callback, may be a string, object, or object encoded as a string
 */

simpleUpload.convertDataType = function(expected_type, declared_type, data){

  var type = "auto"; //ultimate type to return data as

    if (expected_type=="auto") //if expected type is auto, base the type on the declared type
    {

      if (typeof declared_type=="string" && declared_type!="")
      {

      var lower_type = declared_type.toLowerCase();
      var valid_types = ["json", "xml", "html", "script", "text"];

        for (var x in valid_types)
        {

          if (valid_types[x]==lower_type)
          {
          type = lower_type; //only set if value is one of the types above
          break;
          }

        }

      }

    }
    else //force the type to be the expected type
    {
    type = expected_type;
    }

    /*
     * Attempt to keep data conversions similar to that of jQuery's $.ajax() function to stay consistent
     * See "dataType" setting: http://api.jquery.com/jquery.ajax/
     */

    if (type=="auto") //type could not be determined, so pass data back as object if it is an object, or string otherwise
    {

    // Output: string, object, null

      if (typeof data=="undefined")
      {
      return ""; //if data was not set, return an empty string
      }

      if (typeof data=="object")
      {
      return data; //if object, return as object (allow null)
      }

    return String(data); //if anything else, convert it to a string and return the string value

    }
    else if (type=="json")
    {

    // Output: object, null

      if (typeof data=="undefined" || data===null)
      {
      return null;
      }

      if (typeof data=="object")
      {
      return data; //if already an object, pass it right through
      }

      if (typeof data=="string")
      {

        try {

          return $.parseJSON(data); //JSON is valid, return object or null

        } catch(e) {

          return false; //JSON not valid

        }

      }

    return false; //data could not possibly be a valid JSON object or string

    }
    else if (type=="xml")
    {

    // Output: object (XMLDoc), null

      if (typeof data=="undefined" || data===null)
      {
      return null;
      }

      if (typeof data=="string")
      {

        try {

          return $.parseXML(data); //XML is valid, return object (native XMLDocument object) or null

        } catch(e) {

          return false; //XML is not valid

        }

      }

    return false; //data is not a string containing valid XML

    }
    else if (type=="script")
    {

    // Output: string

      if (typeof data=="undefined")
      {
      return "";
      }

      if (typeof data=="string")
      {

        try {

          $.globalEval(data); //execute script in the global scope

          return data; //return script as string

        } catch(e) {

          return false; //there was an error while executing the script with $.globalEval() - the script still may have run partially, but this is consistent behavior with $.ajax()

        }

      }

    return false; //data is not a string containing script to execute

    }
    else //if type is html or text, return as plain text...
    {

    // Output: string

      if (typeof data=="undefined")
      {
      return "";
      }

    return String(data); //convert data to string, regardless of data type

    }

};

/*
 * Callbacks to pass data back from an iframe, with the first applying to same-domain exchanges and the second to cross-domain exchanges using postMessage()
 */

simpleUpload.iframeCallback = function(data){

    if (typeof data=="object" && data!==null)
    {

    var id = data.id;

      if (id in simpleUpload.iframes)
      {

      var converted_data = simpleUpload.convertDataType(simpleUpload.iframes[id].expect, data.type, data.data);

        if (converted_data!==false)
        {
        simpleUpload.iframes[id].complete(converted_data);
        }
        else
        {
        simpleUpload.iframes[id].error("Upload failed");
        }

      }

    }

};

simpleUpload.postMessageCallback = function(e){

    try {

      var key = e.message ? "message" : "data";
      var data = e[key];

        if (typeof data=="string" && data!="") //data was passed as string
        {

        data = $.parseJSON(data); //convert JSON string to object (throws error on malformed JSON for jQuery >= 1.9, can return null if data is empty string, null, or undefined for older versions of jQuery)

          if (typeof data=="object" && data!==null) //data is now an object
          {

            //since window.addEventListener casts a large net for all messages, make sure this one is intended for us...

            if (typeof data.namespace=="string" && data.namespace=="simpleUpload")
            {

            //from now on, we can assume the message was meant for us, but NOT that it was delivered from a trusted source

            var id = data.id;

              if (id in simpleUpload.iframes) //id is valid
              {

                if (e.origin===simpleUpload.iframes[id].origin)
                {

                //origin of postMessage() is consistent with the origin of the URL to which the request was made, now we can trust the source

                //now determine the correct type of output and pass our data...

                var converted_data = simpleUpload.convertDataType(simpleUpload.iframes[id].expect, data.type, data.data);

                  if (converted_data!==false)
                  {
                  simpleUpload.iframes[id].complete(converted_data);
                  }
                  else
                  {
                  simpleUpload.iframes[id].error("Upload failed");
                  }

                }

              }

            }

          }

        }

    } catch(e) {

      //an error was thrown, could be the JSON data was unparsable

    }

};



// Listen for messages arriving over iframe using postMessage()

if (window.addEventListener) window.addEventListener("message", simpleUpload.postMessageCallback, false);
else window.attachEvent("onmessage", simpleUpload.postMessageCallback);



/*
 * jQuery plugin for simpleUpload
 */

(function (factory) {

  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}

}(function ($) {

  //the main call

  $.fn.simpleUpload = function(url, opts){

    //if calling with $.fn.simpleUpload() and the "files" option is present, go ahead and pass it along...

  	if ($(this).length==0) {
  	  if (typeof opts=="object" && opts!==null && typeof opts.files=="object" && opts.files!==null) {
  	    new simpleUpload(url, null, opts);
  	    return this;
  	  }
  	}

    //likely being used in a chain

    return this.each(function(){
      new simpleUpload(url, this, opts);
    });

  };

  //allow getting/setting the simpleUpload.maxUploads variable

  $.fn.simpleUpload.maxSimultaneousUploads = function(num){

    if (typeof num==="undefined") {
      return simpleUpload.maxUploads;
    } else if (typeof num==="number" && num > 0) {
      simpleUpload.maxUploads = num;
      return this;
    }

  };

}));
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js"), __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "../../node_modules/jquery/dist/jquery.js":
/*!**********************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/jquery/dist/jquery.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		noModule: true
	};

	function DOMEval( code, doc, node ) {
		doc = doc || document;

		var i,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {
				if ( node[ i ] ) {
					script[ i ] = node[ i ];
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.3.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }

        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }

        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		div.style.position = "absolute";
		scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5
		) );
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),
		val = curCSS( elem, dimension, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox;

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}

	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = valueIsBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ dimension ] );

	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	if ( val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

		val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

		// offsetWidth/offsetHeight provide border-box values
		valueIsBorderBox = true;
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),
				isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra && boxModelAdjustment(
					elem,
					dimension,
					extra,
					isBorderBox,
					styles
				);

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && support.scrollboxSize() === styles.position ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "../../node_modules/jsmidgen/lib/jsmidgen.js":
/*!*************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/jsmidgen/lib/jsmidgen.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var Midi = {};

(function(exported) {

	var DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;
	var DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;
	var DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;

	/* ******************************************************************
	 * Utility functions
	 ****************************************************************** */

	var Util = {

		midi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },

		/**
		 * Convert a symbolic note name (e.g. "c4") to a numeric MIDI pitch (e.g.
		 * 60, middle C).
		 *
		 * @param {string} n - The symbolic note name to parse.
		 * @returns {number} The MIDI pitch that corresponds to the symbolic note
		 * name.
		 */
		midiPitchFromNote: function(n) {
			var matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);
			var note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);
			return (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;
		},

		/**
		 * Ensure that the given argument is converted to a MIDI pitch. Note that
		 * it may already be one (including a purely numeric string).
		 *
		 * @param {string|number} p - The pitch to convert.
		 * @returns {number} The resulting numeric MIDI pitch.
		 */
		ensureMidiPitch: function(p) {
			if (typeof p == 'number' || !/[^0-9]/.test(p)) {
				// numeric pitch
				return parseInt(p, 10);
			} else {
				// assume it's a note name
				return Util.midiPitchFromNote(p);
			}
		},

		midi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },
		midi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },

		/**
		 * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name
		 * (e.g. "c4").
		 *
		 * @param {number} n - The numeric MIDI pitch value to convert.
		 * @param {boolean} [returnFlattened=false] - Whether to prefer flattened
		 * notes to sharpened ones. Optional, default false.
		 * @returns {string} The resulting symbolic note name.
		 */
		noteFromMidiPitch: function(n, returnFlattened) {
			var octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;
			if (n > 23) {
				// noteNum is on octave 1 or more
				octave = Math.floor(n/12) - 1;
				// subtract number of octaves from noteNum
				noteNum = n - octave * 12;
			}

			// get note name (c#, d, f# etc)
			noteName = Util.midi_pitches_letter[noteNum];
			// Use flattened notes if requested (e.g. f# should be output as gb)
			if (returnFlattened && noteName.indexOf('#') > 0) {
				noteName = Util.midi_flattened_notes[noteName];
			}
			return noteName + octave;
		},

		/**
		 * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).
		 *
		 * @param {number} bpm - A number in beats per minute.
		 * @returns {number} The number of microseconds per quarter note.
		 */
		mpqnFromBpm: function(bpm) {
			var mpqn = Math.floor(60000000 / bpm);
			var ret=[];
			do {
				ret.unshift(mpqn & 0xFF);
				mpqn >>= 8;
			} while (mpqn);
			while (ret.length < 3) {
				ret.push(0);
			}
			return ret;
		},

		/**
		 * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).
		 *
		 * @param {number} mpqn - The number of microseconds per quarter note.
		 * @returns {number} A number in beats per minute.
		 */
		bpmFromMpqn: function(mpqn) {
			var m = mpqn;
			if (typeof mpqn[0] != 'undefined') {
				m = 0;
				for (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {
					m |= mpqn[i] << l;
				}
			}
			return Math.floor(60000000 / mpqn);
		},

		/**
		 * Converts an array of bytes to a string of hexadecimal characters. Prepares
		 * it to be converted into a base64 string.
		 *
		 * @param {Array} byteArray - Array of bytes to be converted.
		 * @returns {string} Hexadecimal string, e.g. "097B8A".
		 */
		codes2Str: function(byteArray) {
			return String.fromCharCode.apply(null, byteArray);
		},

		/**
		 * Converts a string of hexadecimal values to an array of bytes. It can also
		 * add remaining "0" nibbles in order to have enough bytes in the array as the
		 * `finalBytes` parameter.
		 *
		 * @param {string} str - string of hexadecimal values e.g. "097B8A"
		 * @param {number} [finalBytes] - Optional. The desired number of bytes
		 * (not nibbles) that the returned array should contain.
		 * @returns {Array} An array of nibbles.
		 */
		str2Bytes: function (str, finalBytes) {
			if (finalBytes) {
				while ((str.length / 2) < finalBytes) { str = "0" + str; }
			}

			var bytes = [];
			for (var i=str.length-1; i>=0; i = i-2) {
				var chars = i === 0 ? str[i] : str[i-1] + str[i];
				bytes.unshift(parseInt(chars, 16));
			}

			return bytes;
		},

		/**
		 * Translates number of ticks to MIDI timestamp format, returning an array
		 * of bytes with the time values. MIDI has a very particular way to express
		 * time; take a good look at the spec before ever touching this function.
		 *
		 * @param {number} ticks - Number of ticks to be translated.
		 * @returns {number} Array of bytes that form the MIDI time value.
		 */
		translateTickTime: function(ticks) {
			var buffer = ticks & 0x7F;

			while (ticks = ticks >> 7) {
				buffer <<= 8;
				buffer |= ((ticks & 0x7F) | 0x80);
			}

			var bList = [];
			while (true) {
				bList.push(buffer & 0xff);

				if (buffer & 0x80) { buffer >>= 8; }
				else { break; }
			}
			return bList;
		},

	};

	/* ******************************************************************
	 * Event class
	 ****************************************************************** */

	/**
	 * Construct a MIDI event.
	 *
	 * Parameters include:
	 *  - time [optional number] - Ticks since previous event.
	 *  - type [required number] - Type of event.
	 *  - channel [required number] - Channel for the event.
	 *  - param1 [required number] - First event parameter.
	 *  - param2 [optional number] - Second event parameter.
	 */
	var MidiEvent = function(params) {
		if (!this) return new MidiEvent(params);
		if (params &&
				(params.type    !== null || params.type    !== undefined) &&
				(params.channel !== null || params.channel !== undefined) &&
				(params.param1  !== null || params.param1  !== undefined)) {
			this.setTime(params.time);
			this.setType(params.type);
			this.setChannel(params.channel);
			this.setParam1(params.param1);
			this.setParam2(params.param2);
		}
	};

	// event codes
	MidiEvent.NOTE_OFF           = 0x80;
	MidiEvent.NOTE_ON            = 0x90;
	MidiEvent.AFTER_TOUCH        = 0xA0;
	MidiEvent.CONTROLLER         = 0xB0;
	MidiEvent.PROGRAM_CHANGE     = 0xC0;
	MidiEvent.CHANNEL_AFTERTOUCH = 0xD0;
	MidiEvent.PITCH_BEND         = 0xE0;


	/**
	 * Set the time for the event in ticks since the previous event.
	 *
	 * @param {number} ticks - The number of ticks since the previous event. May
	 * be zero.
	 */
	MidiEvent.prototype.setTime = function(ticks) {
		this.time = Util.translateTickTime(ticks || 0);
	};

	/**
	 * Set the type of the event. Must be one of the event codes on MidiEvent.
	 *
	 * @param {number} type - Event type.
	 */
	MidiEvent.prototype.setType = function(type) {
		if (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {
			throw new Error("Trying to set an unknown event: " + type);
		}

		this.type = type;
	};

	/**
	 * Set the channel for the event. Must be between 0 and 15, inclusive.
	 *
	 * @param {number} channel - The event channel.
	 */
	MidiEvent.prototype.setChannel = function(channel) {
		if (channel < 0 || channel > 15) {
			throw new Error("Channel is out of bounds.");
		}

		this.channel = channel;
	};

	/**
	 * Set the first parameter for the event. Must be between 0 and 255,
	 * inclusive.
	 *
	 * @param {number} p - The first event parameter value.
	 */
	MidiEvent.prototype.setParam1 = function(p) {
		this.param1 = p;
	};

	/**
	 * Set the second parameter for the event. Must be between 0 and 255,
	 * inclusive.
	 *
	 * @param {number} p - The second event parameter value.
	 */
	MidiEvent.prototype.setParam2 = function(p) {
		this.param2 = p;
	};

	/**
	 * Serialize the event to an array of bytes.
	 *
	 * @returns {Array} The array of serialized bytes.
	 */
	MidiEvent.prototype.toBytes = function() {
		var byteArray = [];

		var typeChannelByte = this.type | (this.channel & 0xF);

		byteArray.push.apply(byteArray, this.time);
		byteArray.push(typeChannelByte);
		byteArray.push(this.param1);

		// Some events don't have a second parameter
		if (this.param2 !== undefined && this.param2 !== null) {
			byteArray.push(this.param2);
		}
		return byteArray;
	};

	/* ******************************************************************
	 * MetaEvent class
	 ****************************************************************** */

	/**
	 * Construct a meta event.
	 *
	 * Parameters include:
	 *  - time [optional number] - Ticks since previous event.
	 *  - type [required number] - Type of event.
	 *  - data [optional array|string] - Event data.
	 */
	var MetaEvent = function(params) {
		if (!this) return new MetaEvent(params);
		var p = params || {};
		this.setTime(params.time);
		this.setType(params.type);
		this.setData(params.data);
	};

	MetaEvent.SEQUENCE   = 0x00;
	MetaEvent.TEXT       = 0x01;
	MetaEvent.COPYRIGHT  = 0x02;
	MetaEvent.TRACK_NAME = 0x03;
	MetaEvent.INSTRUMENT = 0x04;
	MetaEvent.LYRIC      = 0x05;
	MetaEvent.MARKER     = 0x06;
	MetaEvent.CUE_POINT  = 0x07;
	MetaEvent.CHANNEL_PREFIX = 0x20;
	MetaEvent.END_OF_TRACK   = 0x2f;
	MetaEvent.TEMPO      = 0x51;
	MetaEvent.SMPTE      = 0x54;
	MetaEvent.TIME_SIG   = 0x58;
	MetaEvent.KEY_SIG    = 0x59;
	MetaEvent.SEQ_EVENT  = 0x7f;

	/**
	 * Set the time for the event in ticks since the previous event.
	 *
	 * @param {number} ticks - The number of ticks since the previous event. May
	 * be zero.
	 */
	MetaEvent.prototype.setTime = function(ticks) {
		this.time = Util.translateTickTime(ticks || 0);
	};

	/**
	 * Set the type of the event. Must be one of the event codes on MetaEvent.
	 *
	 * @param {number} t - Event type.
	 */
	MetaEvent.prototype.setType = function(t) {
		this.type = t;
	};

	/**
	 * Set the data associated with the event. May be a string or array of byte
	 * values.
	 *
	 * @param {string|Array} d - Event data.
	 */
	MetaEvent.prototype.setData = function(d) {
		this.data = d;
	};

	/**
	 * Serialize the event to an array of bytes.
	 *
	 * @returns {Array} The array of serialized bytes.
	 */
	MetaEvent.prototype.toBytes = function() {
		if (!this.type) {
			throw new Error("Type for meta-event not specified.");
		}

		var byteArray = [];
		byteArray.push.apply(byteArray, this.time);
		byteArray.push(0xFF, this.type);

		// If data is an array, we assume that it contains several bytes. We
		// apend them to byteArray.
		if (Array.isArray(this.data)) {
			byteArray.push(this.data.length);
			byteArray.push.apply(byteArray, this.data);
		} else if (typeof this.data == 'number') {
			byteArray.push(1, this.data);
		} else if (this.data !== null && this.data !== undefined) {
			// assume string; may be a bad assumption
			byteArray.push(this.data.length);
			var dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });
			byteArray.push.apply(byteArray, dataBytes);
		} else {
			byteArray.push(0);
		}

		return byteArray;
	};

	/* ******************************************************************
	 * Track class
	 ****************************************************************** */

	/**
	 * Construct a MIDI track.
	 *
	 * Parameters include:
	 *  - events [optional array] - Array of events for the track.
	 */
	var Track = function(config) {
		if (!this) return new Track(config);
		var c = config || {};
		this.events = c.events || [];
	};

	Track.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];
	Track.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];

	/**
	 * Add an event to the track.
	 *
	 * @param {MidiEvent|MetaEvent} event - The event to add.
	 * @returns {Track} The current track.
	 */
	Track.prototype.addEvent = function(event) {
		this.events.push(event);
		return this;
	};

	/**
	 * Add a note-on event to the track.
	 *
	 * @param {number} channel - The channel to add the event to.
	 * @param {number|string} pitch - The pitch of the note, either numeric or
	 * symbolic.
	 * @param {number} [time=0] - The number of ticks since the previous event,
	 * defaults to 0.
	 * @param {number} [velocity=90] - The volume for the note, defaults to
	 * DEFAULT_VOLUME.
	 * @returns {Track} The current track.
	 */
	Track.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {
		this.events.push(new MidiEvent({
			type: MidiEvent.NOTE_ON,
			channel: channel,
			param1: Util.ensureMidiPitch(pitch),
			param2: velocity || DEFAULT_VOLUME,
			time: time || 0,
		}));
		return this;
	};

	/**
	 * Add a note-off event to the track.
	 *
	 * @param {number} channel - The channel to add the event to.
	 * @param {number|string} pitch - The pitch of the note, either numeric or
	 * symbolic.
	 * @param {number} [time=0] - The number of ticks since the previous event,
	 * defaults to 0.
	 * @param {number} [velocity=90] - The velocity the note was released,
	 * defaults to DEFAULT_VOLUME.
	 * @returns {Track} The current track.
	 */
	Track.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {
		this.events.push(new MidiEvent({
			type: MidiEvent.NOTE_OFF,
			channel: channel,
			param1: Util.ensureMidiPitch(pitch),
			param2: velocity || DEFAULT_VOLUME,
			time: time || 0,
		}));
		return this;
	};

	/**
	 * Add a note-on and -off event to the track.
	 *
	 * @param {number} channel - The channel to add the event to.
	 * @param {number|string} pitch - The pitch of the note, either numeric or
	 * symbolic.
	 * @param {number} dur - The duration of the note, in ticks.
	 * @param {number} [time=0] - The number of ticks since the previous event,
	 * defaults to 0.
	 * @param {number} [velocity=90] - The velocity the note was released,
	 * defaults to DEFAULT_VOLUME.
	 * @returns {Track} The current track.
	 */
	Track.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {
		this.noteOn(channel, pitch, time, velocity);
		if (dur) {
			this.noteOff(channel, pitch, dur, velocity);
		}
		return this;
	};

	/**
	 * Add a note-on and -off event to the track for each pitch in an array of pitches.
	 *
	 * @param {number} channel - The channel to add the event to.
	 * @param {array} chord - An array of pitches, either numeric or
	 * symbolic.
	 * @param {number} dur - The duration of the chord, in ticks.
	 * @param {number} [velocity=90] - The velocity of the chord,
	 * defaults to DEFAULT_VOLUME.
	 * @returns {Track} The current track.
	 */
	Track.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {
		if (!Array.isArray(chord) && !chord.length) {
			throw new Error('Chord must be an array of pitches');
		}
		chord.forEach(function(note) {
			this.noteOn(channel, note, 0, velocity);
		}, this);
		chord.forEach(function(note, index) {
			if (index === 0) {
				this.noteOff(channel, note, dur);
			} else {
				this.noteOff(channel, note);
			}
		}, this);
		return this;
	};

	/**
	 * Set instrument for the track.
	 *
	 * @param {number} channel - The channel to set the instrument on.
	 * @param {number} instrument - The instrument to set it to.
	 * @param {number} [time=0] - The number of ticks since the previous event,
	 * defaults to 0.
	 * @returns {Track} The current track.
	 */
	Track.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {
		this.events.push(new MidiEvent({
			type: MidiEvent.PROGRAM_CHANGE,
			channel: channel,
			param1: instrument,
			time: time || 0,
		}));
		return this;
	};

	/**
	 * Set the tempo for the track.
	 *
	 * @param {number} bpm - The new number of beats per minute.
	 * @param {number} [time=0] - The number of ticks since the previous event,
	 * defaults to 0.
	 * @returns {Track} The current track.
	 */
	Track.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {
		this.events.push(new MetaEvent({
			type: MetaEvent.TEMPO,
			data: Util.mpqnFromBpm(bpm),
			time: time || 0,
		}));
		return this;
	};

	/**
	 * Serialize the track to an array of bytes.
	 *
	 * @returns {Array} The array of serialized bytes.
	 */
	Track.prototype.toBytes = function() {
		var trackLength = 0;
		var eventBytes = [];
		var startBytes = Track.START_BYTES;
		var endBytes   = Track.END_BYTES;

		var addEventBytes = function(event) {
			var bytes = event.toBytes();
			trackLength += bytes.length;
			eventBytes.push.apply(eventBytes, bytes);
		};

		this.events.forEach(addEventBytes);

		// Add the end-of-track bytes to the sum of bytes for the track, since
		// they are counted (unlike the start-of-track ones).
		trackLength += endBytes.length;

		// Makes sure that track length will fill up 4 bytes with 0s in case
		// the length is less than that (the usual case).
		var lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);

		return startBytes.concat(lengthBytes, eventBytes, endBytes);
	};

	/* ******************************************************************
	 * File class
	 ****************************************************************** */

	/**
	 * Construct a file object.
	 *
	 * Parameters include:
	 *  - ticks [optional number] - Number of ticks per beat, defaults to 128.
	 *    Must be 1-32767.
	 *  - tracks [optional array] - Track data.
	 */
	var File = function(config){
		if (!this) return new File(config);

		var c = config || {};
		if (c.ticks) {
			if (typeof c.ticks !== 'number') {
				throw new Error('Ticks per beat must be a number!');
				return;
			}
			if (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {
				throw new Error('Ticks per beat must be an integer between 1 and 32767!');
				return;
			}
		}

		this.ticks = c.ticks || 128;
		this.tracks = c.tracks || [];
	};

	File.HDR_CHUNKID     = "MThd";             // File magic cookie
	File.HDR_CHUNK_SIZE  = "\x00\x00\x00\x06"; // Header length for SMF
	File.HDR_TYPE0       = "\x00\x00";         // Midi Type 0 id
	File.HDR_TYPE1       = "\x00\x01";         // Midi Type 1 id

	/**
	 * Add a track to the file.
	 *
	 * @param {Track} track - The track to add.
	 */
	File.prototype.addTrack = function(track) {
		if (track) {
			this.tracks.push(track);
			return this;
		} else {
			track = new Track();
			this.tracks.push(track);
			return track;
		}
	};

	/**
	 * Serialize the MIDI file to an array of bytes.
	 *
	 * @returns {Array} The array of serialized bytes.
	 */
	File.prototype.toBytes = function() {
		var trackCount = this.tracks.length.toString(16);

		// prepare the file header
		var bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;

		// set Midi type based on number of tracks
		if (parseInt(trackCount, 16) > 1) {
			bytes += File.HDR_TYPE1;
		} else {
			bytes += File.HDR_TYPE0;
		}

		// add the number of tracks (2 bytes)
		bytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));
		// add the number of ticks per beat (currently hardcoded)
		bytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;

		// iterate over the tracks, converting to bytes too
		this.tracks.forEach(function(track) {
			bytes += Util.codes2Str(track.toBytes());
		});

		return bytes;
	};

	/* ******************************************************************
	 * Exports
	 ****************************************************************** */

	exported.Util = Util;
	exported.File = File;
	exported.Track = Track;
	exported.Event = MidiEvent;
	exported.MetaEvent = MetaEvent;

})( Midi );

if (typeof module != 'undefined' && module !== null) {
	module.exports = Midi;
} else if (typeof exports != 'undefined' && exports !== null) {
	exports = Midi;
} else {
	this.Midi = Midi;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "../../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../../node_modules/loglevel/lib/loglevel.js":
/*!*************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/loglevel/lib/loglevel.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
* loglevel - https://github.com/pimterry/loglevel
*
* Copyright (c) 2013 Tim Perry
* Licensed under the MIT license.
*/
(function (root, definition) {
    "use strict";
    if (true) {
        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else {}
}(this, function () {
    "use strict";

    // Slightly dubious tricks to cut down minimized file size
    var noop = function() {};
    var undefinedType = "undefined";

    var logMethods = [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
    ];

    // Cross-browser bind equivalent that works at least back to IE6
    function bindMethod(obj, methodName) {
        var method = obj[methodName];
        if (typeof method.bind === 'function') {
            return method.bind(obj);
        } else {
            try {
                return Function.prototype.bind.call(method, obj);
            } catch (e) {
                // Missing bind shim or IE8 + Modernizr, fallback to wrapping
                return function() {
                    return Function.prototype.apply.apply(method, [obj, arguments]);
                };
            }
        }
    }

    // Build the best logging method possible for this env
    // Wherever possible we want to bind, not wrap, to preserve stack traces
    function realMethod(methodName) {
        if (methodName === 'debug') {
            methodName = 'log';
        }

        if (typeof console === undefinedType) {
            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives
        } else if (console[methodName] !== undefined) {
            return bindMethod(console, methodName);
        } else if (console.log !== undefined) {
            return bindMethod(console, 'log');
        } else {
            return noop;
        }
    }

    // These private functions always need `this` to be set properly

    function replaceLoggingMethods(level, loggerName) {
        /*jshint validthis:true */
        for (var i = 0; i < logMethods.length; i++) {
            var methodName = logMethods[i];
            this[methodName] = (i < level) ?
                noop :
                this.methodFactory(methodName, level, loggerName);
        }

        // Define log.log as an alias for log.debug
        this.log = this.debug;
    }

    // In old IE versions, the console isn't present until you first open it.
    // We build realMethod() replacements here that regenerate logging methods
    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {
        return function () {
            if (typeof console !== undefinedType) {
                replaceLoggingMethods.call(this, level, loggerName);
                this[methodName].apply(this, arguments);
            }
        };
    }

    // By default, we use closely bound real methods wherever possible, and
    // otherwise we wait for a console to appear, and then try again.
    function defaultMethodFactory(methodName, level, loggerName) {
        /*jshint validthis:true */
        return realMethod(methodName) ||
               enableLoggingWhenConsoleArrives.apply(this, arguments);
    }

    function Logger(name, defaultLevel, factory) {
      var self = this;
      var currentLevel;
      var storageKey = "loglevel";
      if (name) {
        storageKey += ":" + name;
      }

      function persistLevelIfPossible(levelNum) {
          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();

          if (typeof window === undefinedType) return;

          // Use localStorage if available
          try {
              window.localStorage[storageKey] = levelName;
              return;
          } catch (ignore) {}

          // Use session cookie as fallback
          try {
              window.document.cookie =
                encodeURIComponent(storageKey) + "=" + levelName + ";";
          } catch (ignore) {}
      }

      function getPersistedLevel() {
          var storedLevel;

          if (typeof window === undefinedType) return;

          try {
              storedLevel = window.localStorage[storageKey];
          } catch (ignore) {}

          // Fallback to cookies if local storage gives us nothing
          if (typeof storedLevel === undefinedType) {
              try {
                  var cookie = window.document.cookie;
                  var location = cookie.indexOf(
                      encodeURIComponent(storageKey) + "=");
                  if (location !== -1) {
                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];
                  }
              } catch (ignore) {}
          }

          // If the stored level is not valid, treat it as if nothing was stored.
          if (self.levels[storedLevel] === undefined) {
              storedLevel = undefined;
          }

          return storedLevel;
      }

      /*
       *
       * Public logger API - see https://github.com/pimterry/loglevel for details
       *
       */

      self.name = name;

      self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,
          "ERROR": 4, "SILENT": 5};

      self.methodFactory = factory || defaultMethodFactory;

      self.getLevel = function () {
          return currentLevel;
      };

      self.setLevel = function (level, persist) {
          if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {
              level = self.levels[level.toUpperCase()];
          }
          if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
              currentLevel = level;
              if (persist !== false) {  // defaults to true
                  persistLevelIfPossible(level);
              }
              replaceLoggingMethods.call(self, level, name);
              if (typeof console === undefinedType && level < self.levels.SILENT) {
                  return "No console available for logging";
              }
          } else {
              throw "log.setLevel() called with invalid level: " + level;
          }
      };

      self.setDefaultLevel = function (level) {
          if (!getPersistedLevel()) {
              self.setLevel(level, false);
          }
      };

      self.enableAll = function(persist) {
          self.setLevel(self.levels.TRACE, persist);
      };

      self.disableAll = function(persist) {
          self.setLevel(self.levels.SILENT, persist);
      };

      // Initialize with the right level
      var initialLevel = getPersistedLevel();
      if (initialLevel == null) {
          initialLevel = defaultLevel == null ? "WARN" : defaultLevel;
      }
      self.setLevel(initialLevel, false);
    }

    /*
     *
     * Top-level API
     *
     */

    var defaultLogger = new Logger();

    var _loggersByName = {};
    defaultLogger.getLogger = function getLogger(name) {
        if (typeof name !== "string" || name === "") {
          throw new TypeError("You must supply a name when creating a logger.");
        }

        var logger = _loggersByName[name];
        if (!logger) {
          logger = _loggersByName[name] = new Logger(
            name, defaultLogger.getLevel(), defaultLogger.methodFactory);
        }
        return logger;
    };

    // Grab the current global log variable in case of overwrite
    var _log = (typeof window !== undefinedType) ? window.log : undefined;
    defaultLogger.noConflict = function() {
        if (typeof window !== undefinedType &&
               window.log === defaultLogger) {
            window.log = _log;
        }

        return defaultLogger;
    };

    defaultLogger.getLoggers = function getLoggers() {
        return _loggersByName;
    };

    return defaultLogger;
}));


/***/ }),

/***/ "../../node_modules/midi-file-parser/index.js":
/*!**************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midi-file-parser/index.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/gasman/jasmid
//
//

module.exports = function(file){
	return MidiFile(file)
};

function MidiFile(data) {
	function readChunk(stream) {
		var id = stream.read(4);
		var length = stream.readInt32();
		return {
			'id': id,
			'length': length,
			'data': stream.read(length)
		};
	}
	
	var lastEventTypeByte;
	
	function readEvent(stream) {
		var event = {};
		event.deltaTime = stream.readVarInt();
		var eventTypeByte = stream.readInt8();
		if ((eventTypeByte & 0xf0) == 0xf0) {
			/* system / meta event */
			if (eventTypeByte == 0xff) {
				/* meta event */
				event.type = 'meta';
				var subtypeByte = stream.readInt8();
				var length = stream.readVarInt();
				switch(subtypeByte) {
					case 0x00:
						event.subtype = 'sequenceNumber';
						if (length != 2) throw "Expected length for sequenceNumber event is 2, got " + length;
						event.number = stream.readInt16();
						return event;
					case 0x01:
						event.subtype = 'text';
						event.text = stream.read(length);
						return event;
					case 0x02:
						event.subtype = 'copyrightNotice';
						event.text = stream.read(length);
						return event;
					case 0x03:
						event.subtype = 'trackName';
						event.text = stream.read(length);
						return event;
					case 0x04:
						event.subtype = 'instrumentName';
						event.text = stream.read(length);
						return event;
					case 0x05:
						event.subtype = 'lyrics';
						event.text = stream.read(length);
						return event;
					case 0x06:
						event.subtype = 'marker';
						event.text = stream.read(length);
						return event;
					case 0x07:
						event.subtype = 'cuePoint';
						event.text = stream.read(length);
						return event;
					case 0x20:
						event.subtype = 'midiChannelPrefix';
						if (length != 1) throw "Expected length for midiChannelPrefix event is 1, got " + length;
						event.channel = stream.readInt8();
						return event;
					case 0x2f:
						event.subtype = 'endOfTrack';
						if (length != 0) throw "Expected length for endOfTrack event is 0, got " + length;
						return event;
					case 0x51:
						event.subtype = 'setTempo';
						if (length != 3) throw "Expected length for setTempo event is 3, got " + length;
						event.microsecondsPerBeat = (
							(stream.readInt8() << 16)
							+ (stream.readInt8() << 8)
							+ stream.readInt8()
						)
						return event;
					case 0x54:
						event.subtype = 'smpteOffset';
						if (length != 5) throw "Expected length for smpteOffset event is 5, got " + length;
						var hourByte = stream.readInt8();
						event.frameRate = {
							0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30
						}[hourByte & 0x60];
						event.hour = hourByte & 0x1f;
						event.min = stream.readInt8();
						event.sec = stream.readInt8();
						event.frame = stream.readInt8();
						event.subframe = stream.readInt8();
						return event;
					case 0x58:
						event.subtype = 'timeSignature';
						if (length != 4) throw "Expected length for timeSignature event is 4, got " + length;
						event.numerator = stream.readInt8();
						event.denominator = Math.pow(2, stream.readInt8());
						event.metronome = stream.readInt8();
						event.thirtyseconds = stream.readInt8();
						return event;
					case 0x59:
						event.subtype = 'keySignature';
						if (length != 2) throw "Expected length for keySignature event is 2, got " + length;
						event.key = stream.readInt8(true);
						event.scale = stream.readInt8();
						return event;
					case 0x7f:
						event.subtype = 'sequencerSpecific';
						event.data = stream.read(length);
						return event;
					default:
						// console.log("Unrecognised meta event subtype: " + subtypeByte);
						event.subtype = 'unknown'
						event.data = stream.read(length);
						return event;
				}
				event.data = stream.read(length);
				return event;
			} else if (eventTypeByte == 0xf0) {
				event.type = 'sysEx';
				var length = stream.readVarInt();
				event.data = stream.read(length);
				return event;
			} else if (eventTypeByte == 0xf7) {
				event.type = 'dividedSysEx';
				var length = stream.readVarInt();
				event.data = stream.read(length);
				return event;
			} else {
				throw "Unrecognised MIDI event type byte: " + eventTypeByte;
			}
		} else {
			/* channel event */
			var param1;
			if ((eventTypeByte & 0x80) == 0) {
				/* running status - reuse lastEventTypeByte as the event type.
					eventTypeByte is actually the first parameter
				*/
				param1 = eventTypeByte;
				eventTypeByte = lastEventTypeByte;
			} else {
				param1 = stream.readInt8();
				lastEventTypeByte = eventTypeByte;
			}
			var eventType = eventTypeByte >> 4;
			event.channel = eventTypeByte & 0x0f;
			event.type = 'channel';
			switch (eventType) {
				case 0x08:
					event.subtype = 'noteOff';
					event.noteNumber = param1;
					event.velocity = stream.readInt8();
					return event;
				case 0x09:
					event.noteNumber = param1;
					event.velocity = stream.readInt8();
					if (event.velocity == 0) {
						event.subtype = 'noteOff';
					} else {
						event.subtype = 'noteOn';
					}
					return event;
				case 0x0a:
					event.subtype = 'noteAftertouch';
					event.noteNumber = param1;
					event.amount = stream.readInt8();
					return event;
				case 0x0b:
					event.subtype = 'controller';
					event.controllerType = param1;
					event.value = stream.readInt8();
					return event;
				case 0x0c:
					event.subtype = 'programChange';
					event.programNumber = param1;
					return event;
				case 0x0d:
					event.subtype = 'channelAftertouch';
					event.amount = param1;
					return event;
				case 0x0e:
					event.subtype = 'pitchBend';
					event.value = param1 + (stream.readInt8() << 7);
					return event;
				default:
					throw "Unrecognised MIDI event type: " + eventType
					/* 
					console.log("Unrecognised MIDI event type: " + eventType);
					stream.readInt8();
					event.subtype = 'unknown';
					return event;
					*/
			}
		}
	}
	
	stream = Stream(data);
	var headerChunk = readChunk(stream);
	if (headerChunk.id != 'MThd' || headerChunk.length != 6) {
		throw "Bad .mid file - header not found";
	}
	var headerStream = Stream(headerChunk.data);
	var formatType = headerStream.readInt16();
	var trackCount = headerStream.readInt16();
	var timeDivision = headerStream.readInt16();
	
	if (timeDivision & 0x8000) {
		throw "Expressing time division in SMTPE frames is not supported yet"
	} else {
		ticksPerBeat = timeDivision;
	}
	
	var header = {
		'formatType': formatType,
		'trackCount': trackCount,
		'ticksPerBeat': ticksPerBeat
	}
	var tracks = [];
	for (var i = 0; i < header.trackCount; i++) {
		tracks[i] = [];
		var trackChunk = readChunk(stream);
		if (trackChunk.id != 'MTrk') {
			throw "Unexpected chunk - expected MTrk, got "+ trackChunk.id;
		}
		var trackStream = Stream(trackChunk.data);
		while (!trackStream.eof()) {
			var event = readEvent(trackStream);
			tracks[i].push(event);
			//console.log(event);
		}
	}
	
	return {
		'header': header,
		'tracks': tracks
	}
};

/* Wrapper for accessing strings through sequential reads */
function Stream(str) {
	var position = 0;
	
	function read(length) {
		var result = str.substr(position, length);
		position += length;
		return result;
	}
	
	/* read a big-endian 32-bit integer */
	function readInt32() {
		var result = (
			(str.charCodeAt(position) << 24)
			+ (str.charCodeAt(position + 1) << 16)
			+ (str.charCodeAt(position + 2) << 8)
			+ str.charCodeAt(position + 3));
		position += 4;
		return result;
	}

	/* read a big-endian 16-bit integer */
	function readInt16() {
		var result = (
			(str.charCodeAt(position) << 8)
			+ str.charCodeAt(position + 1));
		position += 2;
		return result;
	}
	
	/* read an 8-bit integer */
	function readInt8(signed) {
		var result = str.charCodeAt(position);
		if (signed && result > 127) result -= 256;
		position += 1;
		return result;
	}
	
	function eof() {
		return position >= str.length;
	}
	
	/* read a MIDI-style variable-length integer
		(big-endian value in groups of 7 bits,
		with top bit set to signify that another byte follows)
	*/
	function readVarInt() {
		var result = 0;
		while (true) {
			var b = readInt8();
			if (b & 0x80) {
				result += (b & 0x7f);
				result <<= 7;
			} else {
				/* b is the last byte */
				return result + b;
			}
		}
	}
	
	return {
		'eof': eof,
		'read': read,
		'readInt32': readInt32,
		'readInt16': readInt16,
		'readInt8': readInt8,
		'readVarInt': readVarInt
	}
}

/***/ }),

/***/ "../../node_modules/midiconvert/src/BinaryInsert.js":
/*!********************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/BinaryInsert.js ***!
  \********************************************************************************************************************/
/*! exports provided: BinaryInsert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BinaryInsert", function() { return BinaryInsert; });
/**
 * Return the index of the element at or before the given time
 */
function findElement(array, time) {
	let beginning = 0
	const len = array.length
	let end = len
	if (len > 0 && array[len - 1].time <= time){
		return len - 1
	}
	while (beginning < end){
		// calculate the midpoint for roughly equal partition
		let midPoint = Math.floor(beginning + (end - beginning) / 2)
		const event = array[midPoint]
		const nextEvent = array[midPoint + 1]
		if (event.time === time){
			//choose the last one that has the same time
			for (let i = midPoint; i < array.length; i++){
				let testEvent = array[i]
				if (testEvent.time === time){
					midPoint = i
				}
			}
			return midPoint
		} else if (event.time < time && nextEvent.time > time){
			return midPoint
		} else if (event.time > time){
			//search lower
			end = midPoint
		} else if (event.time < time){
			//search upper
			beginning = midPoint + 1
		}
	}
	return -1
}

/**
 * Does a binary search to insert the note
 * in the correct spot in the array
 * @param  {Array} array
 * @param  {Object} event
 * @param  {Number=} offset
 */
function BinaryInsert(array, event){
	if (array.length){
		const index = findElement(array, event.time)
		array.splice(index + 1, 0, event)
	} else {
		array.push(event)
	}
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/Control.js":
/*!***************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Control.js ***!
  \***************************************************************************************************************/
/*! exports provided: Control */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Control", function() { return Control; });
const channelNames = {
	"1"  : "modulationWheel",
	"2"  : "breath",
	"4"  : "footController",
	"5"  : "portamentoTime",
	"7"  : "volume",
	"8"  : "balance",
	"10" : "pan",
	"64" : "sustain",
	"65" : "portamentoTime",
	"66" : "sostenuto",
	"67" : "softPedal",
	"68" : "legatoFootswitch",
	"84" : "portamentoContro"
}

class Control{
	constructor(number, time, value){

		this.number = number

		this.time = time

		this.value = value
	}

	/**
	 * The common name of the control change event
	 * @type {String}
	 * @readOnly
	 */
	get name(){
		if (channelNames.hasOwnProperty(this.number)){
			return channelNames[this.number]
		}
	}
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/Header.js":
/*!**************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Header.js ***!
  \**************************************************************************************************************/
/*! exports provided: parseHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseHeader", function() { return parseHeader; });
/**
 *  Parse tempo and time signature from the midiJson
 *  @param  {Object}  midiJson
 *  @return  {Object}
 */
function parseHeader(midiJson){
	var ret = {
		PPQ : midiJson.header.ticksPerBeat
	}
	for (var i = 0; i < midiJson.tracks.length; i++){
		var track = midiJson.tracks[i]
		for (var j = 0; j < track.length; j++){
			var datum = track[j]
			if (datum.type === "meta"){
				if (datum.subtype === "timeSignature"){
					ret.timeSignature = [datum.numerator, datum.denominator]
				} else if (datum.subtype === "setTempo"){
					if (!ret.bpm){
						ret.bpm = 60000000 / datum.microsecondsPerBeat
					}
				}
			}
		}
	}
	ret.bpm = ret.bpm || 120
	return ret
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/Merge.js":
/*!*************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Merge.js ***!
  \*************************************************************************************************************/
/*! exports provided: Merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Merge", function() { return Merge; });

function hasMoreValues(arrays, positions){
	for (let i = 0; i < arrays.length; i++){
		let arr = arrays[i]
		let pos = positions[i]
		if (arr.length > pos){
			return true
		}
	}
	return false
}

function getLowestAtPosition(arrays, positions, encoders){
	let lowestIndex = 0
	let lowestValue = Infinity
	for (let i = 0; i < arrays.length; i++){
		let arr = arrays[i]
		let pos = positions[i]
		if (arr[pos] && (arr[pos].time < lowestValue)){
			lowestIndex = i
			lowestValue = arr[pos].time
		}
	}
	encoders[lowestIndex](arrays[lowestIndex][positions[lowestIndex]])
	// increment array
	positions[lowestIndex] += 1
}

/**
 * Combine multiple arrays keeping the timing in order
 * The arguments should alternate between the array and the encoder callback
 * @param {...Array|Function} args
 */
function Merge(...args){
	const arrays = args.filter((v, i) => (i % 2) === 0)
	const positions = new Uint32Array(arrays.length)
	const encoders = args.filter((v, i) => (i % 2) === 1)
	const output = []
	while(hasMoreValues(arrays, positions)){
		getLowestAtPosition(arrays, positions, encoders)
	}
}



/***/ }),

/***/ "../../node_modules/midiconvert/src/Midi.js":
/*!************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Midi.js ***!
  \************************************************************************************************************/
/*! exports provided: Midi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Midi", function() { return Midi; });
/* harmony import */ var midi_file_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! midi-file-parser */ "../../node_modules/midi-file-parser/index.js");
/* harmony import */ var midi_file_parser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(midi_file_parser__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var jsmidgen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsmidgen */ "../../node_modules/jsmidgen/lib/jsmidgen.js");
/* harmony import */ var jsmidgen__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsmidgen__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Util */ "../../node_modules/midiconvert/src/Util.js");
/* harmony import */ var _Track__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Track */ "../../node_modules/midiconvert/src/Track.js");
/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Header */ "../../node_modules/midiconvert/src/Header.js");






/**
 * @class The Midi object. Contains tracks and the header info.
 */
class Midi {
	/**
	 * Convert JSON to Midi object
	 * @param {object} json
	 * @static
	 * @returns {Midi}
	 */
	static fromJSON(json){
		var midi = new Midi()

		midi.header = json.header
		json.tracks.forEach((track) => {
			var newTrack = _Track__WEBPACK_IMPORTED_MODULE_3__["Track"].fromJSON(track)
			midi.tracks.push(newTrack)
		})

		return midi
	}
	
	constructor(){

		this.header = {
			//defaults
			bpm : 120,
			timeSignature : [4, 4],
			PPQ : 480
		}

		this.tracks = []
	}

	/**
	 * Load the given url and parse the midi at that url
	 * @param  {String}   url
	 * @param {*} data Anything that should be sent in the XHR
	 * @param {String} method Either GET or POST
	 * @return {Promise}
	 */
	load(url, data=null, method='GET'){
		return new Promise((success, fail) => {
			var request = new XMLHttpRequest()
			request.open(method, url)
			request.responseType = 'arraybuffer'
			// decode asynchronously
			request.addEventListener('load', () => {
				if (request.readyState === 4 && request.status === 200){
					success(this.decode(request.response))
				} else {
					fail(request.status)
				}
			})
			request.addEventListener('error', fail)
			request.send(data)
		}).catch(function(error) {
				console.log(error);
			});
	}

	/**
	 * Decode the bytes
	 * @param  {String|ArrayBuffer} bytes The midi file encoded as a string or ArrayBuffer
	 * @return {Midi}       this
	 */
	decode(bytes){

		if (bytes instanceof ArrayBuffer){
			var byteArray = new Uint8Array(bytes)
			bytes = String.fromCharCode.apply(null, byteArray)
		}

		const midiData = midi_file_parser__WEBPACK_IMPORTED_MODULE_0__(bytes)

		this.header = Object(_Header__WEBPACK_IMPORTED_MODULE_4__["parseHeader"])(midiData)

		//replace the previous tracks
		this.tracks = []

		midiData.tracks.forEach((trackData, i) => {

			const track = new _Track__WEBPACK_IMPORTED_MODULE_3__["Track"]()
			track.id = i
			this.tracks.push(track)

			let absoluteTime = 0
			trackData.forEach((event) => {
				absoluteTime += _Util__WEBPACK_IMPORTED_MODULE_2__["ticksToSeconds"](event.deltaTime, this.header)
				if (event.type === 'meta' && event.subtype === 'trackName'){
					track.name = _Util__WEBPACK_IMPORTED_MODULE_2__["cleanName"](event.text)
				} else if (event.subtype === 'noteOn'){
					track.noteOn(event.noteNumber, absoluteTime, event.velocity / 127)

					if (track.channelNumber === -1) {
						track.channelNumber = event.channel
					}
				} else if (event.subtype === 'noteOff'){
					track.noteOff(event.noteNumber, absoluteTime)
				} else if (event.subtype === 'controller' && event.controllerType){
					track.cc(event.controllerType, absoluteTime, event.value / 127)
				} else if (event.type === 'meta' && event.subtype === 'instrumentName'){
					track.instrument = event.text
				} else if (event.type === 'channel' && event.subtype === 'programChange'){
					track.patch(event.programNumber)
					track.channelNumber = event.channel
				}
			})

			//if the track is empty, then it is the file name
			if (!this.header.name && !track.length && track.name) {
				this.header.name = track.name;
			}
		})

		return this
	}

	/**
	 * Encode the Midi object as a Buffer String
	 * @returns {String}
	 */
	encode(){
		const output = new jsmidgen__WEBPACK_IMPORTED_MODULE_1__["File"]({
			ticks : this.header.PPQ
		})

		const firstEmptyTrack = this.tracks.filter(track => !track.length)[0];

		if (this.header.name && !(firstEmptyTrack && firstEmptyTrack.name === this.header.name)) {
			const track = output.addTrack()
			track.addEvent(
				new jsmidgen__WEBPACK_IMPORTED_MODULE_1__["MetaEvent"]({
					time: 0,
					type: jsmidgen__WEBPACK_IMPORTED_MODULE_1__["MetaEvent"].TRACK_NAME,
					data: this.header.name
				})
			)
		}

		this.tracks.forEach((track) => {
			const trackEncoder = output.addTrack()
			trackEncoder.setTempo(this.bpm)

			if (track.name) {
				trackEncoder.addEvent(
					new jsmidgen__WEBPACK_IMPORTED_MODULE_1__["MetaEvent"]({
						time: 0,
						type: jsmidgen__WEBPACK_IMPORTED_MODULE_1__["MetaEvent"].TRACK_NAME,
						data: track.name
					})
				)
			}

			track.encode(trackEncoder, this.header)
		})
		return output.toBytes()
	}

	/**
	 * Convert the output encoding into an Array
	 * @return {Array}
	 */
	toArray(){
		const encodedStr = this.encode()
		const buffer = new Array(encodedStr.length)
		for (let i = 0; i < encodedStr.length; i++){
			buffer[i] = encodedStr.charCodeAt(i)
		}
		return buffer
	}

	/**
	 *  Convert all of the fields to JSON
	 *  @return  {Object}
	 */
	toJSON(){
		const ret = {
			header: this.header,
			startTime: this.startTime,
			duration: this.duration,
			tracks: (this.tracks || []).map(
				track => track.toJSON()
			)
		}

		if (!ret.header.name)
			ret.header.name = ''

		return ret
	}

	/**
	 * Add a new track.
	 * @param {String=} name Optionally include the name of the track
	 * @returns {Track}
	 */
	track(name){
		const track = new _Track__WEBPACK_IMPORTED_MODULE_3__["Track"](name)
		this.tracks.push(track)
		return track
	}

	/**
	 * Get a track either by it's name or track index
	 * @param  {Number|String} trackName
	 * @return {Track}
	 */
	get(trackName){
		if (_Util__WEBPACK_IMPORTED_MODULE_2__["isNumber"](trackName)){
			return this.tracks[trackName]
		} else {
			return this.tracks.find((t) => t.name === trackName)
		}
	}

	/**
	 * Slice the midi file between the startTime and endTime. Returns a copy of the
	 * midi
	 * @param {Number} startTime
	 * @param {Number} endTime
	 * @returns {Midi} this
	 */
	slice(startTime=0, endTime=this.duration){
		const midi = new Midi()
		midi.header = this.header
		midi.tracks = this.tracks.map((t) => t.slice(startTime, endTime))
		return midi
	}

	/**
	 * the time of the first event
	 * @type {Number}
	 */
	get startTime(){
		const startTimes = this.tracks.map((t) => t.startTime)

		if (!startTimes.length)
			return 0

		return Math.min.apply(Math, startTimes) || 0
	}

	/**
	 * The bpm of the midi file in beats per minute
	 * @type {Number}
	 */
	get bpm(){
		return this.header.bpm
	}
	set bpm(bpm){
		const prevTempo = this.header.bpm
		this.header.bpm = bpm
		//adjust the timing of all the notes
		const ratio = prevTempo / bpm
		this.tracks.forEach((track) => track.scale(ratio))

	}

	/**
	 * The timeSignature of the midi file
	 * @type {Array}
	 */
	get timeSignature(){
		return this.header.timeSignature
	}
	set timeSignature(timeSig){
		this.header.timeSignature = timeSig
	}

	/**
	 * The duration is the end time of the longest track
	 * @type {Number}
	 */
	get duration(){
		const durations = this.tracks.map((t) => t.duration)

		if (!durations.length)
			return 0

		return Math.max.apply(Math, durations) || 0
	}
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/MidiConvert.js":
/*!*******************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/MidiConvert.js ***!
  \*******************************************************************************************************************/
/*! exports provided: instrumentByPatchID, instrumentFamilyByID, drumKitByPatchID, parse, load, create, fromJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return parse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create", function() { return create; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fromJSON", function() { return fromJSON; });
/* harmony import */ var _Midi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Midi */ "../../node_modules/midiconvert/src/Midi.js");
/* harmony import */ var _instrumentMaps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instrumentMaps */ "../../node_modules/midiconvert/src/instrumentMaps.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "instrumentByPatchID", function() { return _instrumentMaps__WEBPACK_IMPORTED_MODULE_1__["instrumentByPatchID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "instrumentFamilyByID", function() { return _instrumentMaps__WEBPACK_IMPORTED_MODULE_1__["instrumentFamilyByID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drumKitByPatchID", function() { return _instrumentMaps__WEBPACK_IMPORTED_MODULE_1__["drumKitByPatchID"]; });




/**
 *  Parse all the data from the Midi file into this format:
 *  {
 *  	// the transport and timing data
 *  	header : {
 *  		bpm : Number,                     // tempo, e.g. 120
 *  		timeSignature : [Number, Number], // time signature, e.g. [4, 4],
 *  		PPQ : Number                  // PPQ of the midi file
 *  	}
 *  	// an array for each of the midi tracks
 *  	tracks : [
 *  		{
 *  			name : String, // the track name if one was given
 *  			notes : [
 *  				{
 *  					time : Number, // time in seconds
 *  					name : String, // note name, e.g. 'C4'
 *  					midi : Number, // midi number, e.g. 60
 *  					velocity : Number,  // normalized velocity
 *  					duration : Number   // duration between noteOn and noteOff
 *  				}
 *  			],
 *  			controlChanges : { //all of the control changes
 *  				64 : [ //array for each cc value
 *  					{
 *  						number : Number, //the cc number
 *  						time : Number, //the time of the event in seconds
 *  						name : String, // if the cc value has a common name (e.g. 'sustain')
 *  						value : Number, //the normalized value
 *  					}
 *  				]
 *  			}
 *  		}
 *  	]
 *  }
 *  @param  {Binary String}  fileBlob  The output from fs.readFile or FileReader
 *  @returns {Object} All of the options parsed from the midi file.
 */
function parse(fileBlob){
	return new _Midi__WEBPACK_IMPORTED_MODULE_0__["Midi"]().decode(fileBlob)
}

/**
 *  Load and parse a midi file. See `parse` for what the results look like.
 *  @param  {String}    url
 *  @param {Function=} callback
 *  @returns {Promise} A promise which is invoked with the returned Midi object
 */
function load(url, callback){
	const promise = new _Midi__WEBPACK_IMPORTED_MODULE_0__["Midi"]().load(url)
	if (callback){
		promise.then(callback)
	}
	return promise
}

/**
 * Create an empty midi file
 * @return {Midi}
 */
function create(){
	return new _Midi__WEBPACK_IMPORTED_MODULE_0__["Midi"]()
}

/**
 * Create midi object from json
 * @param {object} json
 * @returns {Midi} Deserialized midi object
 */
function fromJSON(json){
	return _Midi__WEBPACK_IMPORTED_MODULE_0__["Midi"].fromJSON(json)
}


/***/ }),

/***/ "../../node_modules/midiconvert/src/Note.js":
/*!************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Note.js ***!
  \************************************************************************************************************/
/*! exports provided: Note */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Note", function() { return Note; });
/* harmony import */ var _Util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Util */ "../../node_modules/midiconvert/src/Util.js");


class Note{
	/**
	 * Convert JSON to Note object
	 * @param {object} json
	 * @static
	 * @returns {Note}
	 */
	static fromJSON(json) {
		var note = new Note(json.midi, json.time, json.duration, json.velocity)
		return note
	}
	
	constructor(midi, time, duration=0, velocity=1){

		/**
		 * The MIDI note number
		 * @type {Number}
		 */
		if (_Util__WEBPACK_IMPORTED_MODULE_0__["isNumber"](midi)){
			this.midi = midi
		} else if (_Util__WEBPACK_IMPORTED_MODULE_0__["isPitch"](midi)){
			this.name = midi
		} else {
			throw new Error('the midi value must either be in Pitch Notation (e.g. C#4) or a midi value')
		}

		/**
		 * The note on time in seconds
		 * @type {Number}
		 */
		this.time = time

		/**
		 * The duration in seconds
		 * @type {Number}
		 */
		this.duration = duration

		/**
		 * The velocity 0-1
		 * @type {Number}
		 */
		this.velocity = velocity
	}

	/**
	 * If the note is the same as the given note
	 * @param {String|Number} note
	 * @return {Boolean}
	 */
	match(note){
		if (_Util__WEBPACK_IMPORTED_MODULE_0__["isNumber"](note)){
			return this.midi === note
		} else if (_Util__WEBPACK_IMPORTED_MODULE_0__["isPitch"](note)){
			return this.name.toLowerCase() === note.toLowerCase()
		}
	}

	/**
	 * The note in Scientific Pitch Notation
	 * @type {String}
	 */
	get name(){
		return _Util__WEBPACK_IMPORTED_MODULE_0__["midiToPitch"](this.midi)
	}
	set name(name){
		this.midi = _Util__WEBPACK_IMPORTED_MODULE_0__["pitchToMidi"](name)
	}

	/**
	 * Alias for time
	 * @type {Number}
	 */
	get noteOn(){
		return this.time
	}
	set noteOn(t){
		this.time = t
	}

	/**
	 * The note off time
	 * @type {Number}
	 */
	get noteOff(){
		return this.time + this.duration
	}
	set noteOff(time){
		this.duration = time - this.time
	}

	/**
	 * Convert the note to JSON
	 * @returns {Object}
	 */
	toJSON(){
		return {
			name : this.name,
			midi : this.midi,
			time : this.time,
			velocity : this.velocity,
			duration : this.duration
		}
	}
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/Track.js":
/*!*************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Track.js ***!
  \*************************************************************************************************************/
/*! exports provided: Track */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Track", function() { return Track; });
/* harmony import */ var _BinaryInsert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BinaryInsert */ "../../node_modules/midiconvert/src/BinaryInsert.js");
/* harmony import */ var _Control__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Control */ "../../node_modules/midiconvert/src/Control.js");
/* harmony import */ var _Merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Merge */ "../../node_modules/midiconvert/src/Merge.js");
/* harmony import */ var _Note__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Note */ "../../node_modules/midiconvert/src/Note.js");
/* harmony import */ var _instrumentMaps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instrumentMaps */ "../../node_modules/midiconvert/src/instrumentMaps.js");






class Track {
/**
	 * Convert JSON to Track object
	 * @param {object} json
	 * @static
	 * @returns {Track}
	 */
	static fromJSON(json){
		var track = new Track(json.name, json.instrumentNumber, json.channelNumber )

		track.id = json.id
		
		if (json.notes) {
			json.notes.forEach((note) => {
				var newNote = _Note__WEBPACK_IMPORTED_MODULE_3__["Note"].fromJSON(note)
				track.notes.push(newNote)
			})
		}

		if (json.controlChanges) {
			track.controlChanges = json.controlChanges
		}

		return track
	}
	
	constructor(name, instrumentNumber=-1, channel=-1){

		/**
		 * The name of the track
		 * @type {String}
		 */
		this.name = name

		/**
		 * The MIDI channel of the track
		 * @type {number}
		 */
		this.channelNumber = channel

		/**
		 * The note events
		 * @type {Array}
		 */
		this.notes = []

		/**
		 * The control changes
		 * @type {Object}
		 */
		this.controlChanges = {}

		/**
		 * The MIDI patch ID of the instrument. -1 if none is set.
		 * @type {Number}
		 */
		this.instrumentNumber = instrumentNumber
	}

	note(midi, time, duration=0, velocity=1){
		const note = new _Note__WEBPACK_IMPORTED_MODULE_3__["Note"](midi, time, duration, velocity)
		Object(_BinaryInsert__WEBPACK_IMPORTED_MODULE_0__["BinaryInsert"])(this.notes, note)
		return this
	}

	/**
	 * Add a note on event
	 * @param  {Number|String} midi     The midi note as either a midi number or
	 *                                  Pitch Notation like ('C#4')
	 * @param  {Number} time     The time in seconds
	 * @param  {Number} velocity The velocity value 0-1
	 * @return {Track} this
	 */
	noteOn(midi, time, velocity=1){
		const note = new _Note__WEBPACK_IMPORTED_MODULE_3__["Note"](midi, time, 0, velocity)
		Object(_BinaryInsert__WEBPACK_IMPORTED_MODULE_0__["BinaryInsert"])(this.notes, note)
		return this
	}

	/**
	 * Add a note off event. Go through and find an unresolved
	 * noteOn event with the same pitch.
	 * @param  {String|Number} midi The midi number or note name.
	 * @param  {Number} time The time of the event in seconds
	 * @return {Track} this
	 */
	noteOff(midi, time){
		for (let i = 0; i < this.notes.length; i++){
			let note = this.notes[i]
			if (note.match(midi) && note.duration === 0){
				note.noteOff = time
				break;
			}
		}
		return this
	}

	/**
	 * Add a CC event
	 * @param  {Number} num The CC number
	 * @param  {Number} time The time of the event in seconds
	 * @param  {Number} value The value of the CC
	 * @return {Track} this
	 */
	cc(num, time, value){
		if (!this.controlChanges.hasOwnProperty(num)){
			this.controlChanges[num] = []
		}
		const cc = new _Control__WEBPACK_IMPORTED_MODULE_1__["Control"](num, time, value)
		Object(_BinaryInsert__WEBPACK_IMPORTED_MODULE_0__["BinaryInsert"])(this.controlChanges[num], cc)
		return this
	}

	/**
	 * Sets instrumentNumber.
	 * For a list of possible values, see the [General MIDI Instrument Patch Map](https://www.midi.org/specifications/item/gm-level-1-sound-set)
	 * @param  {Number} id The Patch ID for this instrument, as specified in the General MIDI Instrument Patch Map
	 */
	patch(id){
		this.instrumentNumber = id
		return this
	}

	/**
	 * Sets channelNumber.
	 * @param  {Number} id The MIDI channel number, between 0 and 0xF.  0x9 and 0xA are percussion
	 */
	channel(id){
		this.channelNumber = id
		return this
	}

	/**
	 * An array of all the note on events
	 * @type {Array<Object>}
	 * @readOnly
	 */
	get noteOns(){
		const noteOns = []
		this.notes.forEach((note) => {
			noteOns.push({
				time : note.noteOn,
				midi : note.midi,
				name : note.name,
				velocity : note.velocity
			})
		})
		return noteOns
	}

	/**
	 * An array of all the noteOff events
	 * @type {Array<Object>}
	 * @readOnly
	 */
	get noteOffs(){
		const noteOffs = []
		this.notes.forEach((note) => {
			noteOffs.push({
				time : note.noteOff,
				midi : note.midi,
				name : note.name
			})
		})
		return noteOffs
	}

	/**
	 * The length in seconds of the track
	 * @type {Number}
	 */
	get length() {
		return this.notes.length
	}

	/**
	 * The time of the first event in seconds
	 * @type {Number}
	 */
	get startTime() {
		if (this.notes.length){
			let firstNote = this.notes[0]
			return firstNote.noteOn
		} else {
			return 0
		}
	}

	/**
	 * The time of the last event in seconds
	 * @type {Number}
	 */
	get duration() {
		if (this.notes.length){
			let lastNote = this.notes[this.notes.length - 1]
			return lastNote.noteOff
		} else {
			return 0
		}
	}

	/**
	 * The name of the midi instrument
	 * @type {String}
	 */
	get instrument() {
		if (this.isPercussion){
			return _instrumentMaps__WEBPACK_IMPORTED_MODULE_4__["drumKitByPatchID"][this.instrumentNumber]
		} else {
			return _instrumentMaps__WEBPACK_IMPORTED_MODULE_4__["instrumentByPatchID"][this.instrumentNumber]
		}
	}
	set instrument(inst) {
		const index = _instrumentMaps__WEBPACK_IMPORTED_MODULE_4__["instrumentByPatchID"].indexOf(inst)
		if (index !== -1){
			this.instrumentNumber = index
		}
	}


	/**
	 * Whether or not this is a percussion track
	 * @type {Boolean}
	 */
	get isPercussion() {
		return [0x9, 0xA].includes(this.channelNumber)
	}

	/**
	 * The family that the instrument belongs to
	 * @type {String}
	 * @readOnly
	 */
	get instrumentFamily() {
		if (this.isPercussion){
			return 'drums'
		} else {
			return _instrumentMaps__WEBPACK_IMPORTED_MODULE_4__["instrumentFamilyByID"][Math.floor(this.instrumentNumber / 8)]
		}
	}

	/**
	 * Scale the timing of all the events in the track
	 * @param {Number} amount The amount to scale all the values
	 */
	scale(amount){
		this.notes.forEach((note) => {
			note.time *= amount
			note.duration *= amount
		})
		return this
	}

	/**
	 * Slice returns a new track with only events that occured between startTime and endTime.
	 * Modifies this track.
	 * @param {Number} startTime
	 * @param {Number} endTime
	 * @returns {Track}
	 */
	slice(startTime=0, endTime=this.duration){
		// get the index before the startTime
		const noteStartIndex = Math.max(this.notes.findIndex((note) => note.time >= startTime), 0)
		const noteEndIndex = this.notes.findIndex((note) => note.noteOff >= endTime) + 1
		const track = new Track(this.name)
		track.notes = this.notes.slice(noteStartIndex, noteEndIndex)
		//shift the start time
		track.notes.forEach((note) => note.time = note.time - startTime)
		return track
	}

	/**
	 * Write the output to the stream
	 */
	encode(trackEncoder, header){

		const ticksPerSecond = header.PPQ / (60 / header.bpm)
		let lastEventTime = 0

		// unset, `channelNumber` defaults to -1, but that's not a valid MIDI channel
		const channelNumber = Math.max(0, this.channelNumber)

		function getDeltaTime(time){
			const ticks = Math.floor(ticksPerSecond * time)
			const delta = Math.max(ticks - lastEventTime, 0)
			lastEventTime = ticks
			return delta
		}

		if (this.instrumentNumber !== -1) {
			trackEncoder.instrument(channelNumber, this.instrumentNumber)
		}

		Object(_Merge__WEBPACK_IMPORTED_MODULE_2__["Merge"])(this.noteOns.sort((a, b) => a.time - b.time), (noteOn) => {
			trackEncoder.addNoteOn(channelNumber, noteOn.name, getDeltaTime(noteOn.time), Math.floor(noteOn.velocity * 127))
		}, this.noteOffs.sort((a, b) => a.time - b.time), (noteOff) => {
			trackEncoder.addNoteOff(channelNumber, noteOff.name, getDeltaTime(noteOff.time))
		})
	}

	/**
	 *  Convert all of the fields to JSON
	 *  @return  {Object}
	 */
	toJSON(){

		const ret = {
			startTime: this.startTime,
			duration: this.duration,
			length: this.length,
			notes: [],
			controlChanges: {},
		}

		if (typeof this.id !== 'undefined')
			ret.id = this.id

		ret.name = this.name

		if (this.instrumentNumber !== -1){
			ret.instrumentNumber = this.instrumentNumber
			ret.instrument = this.instrument
			ret.instrumentFamily = this.instrumentFamily
		}

		if (this.channelNumber !== -1){
			ret.channelNumber = this.channelNumber
			ret.isPercussion = this.isPercussion
		}

		if (this.notes.length)
			ret.notes = this.notes.map((n) => n.toJSON())

		if (Object.keys(this.controlChanges).length)
			ret.controlChanges = this.controlChanges

		return ret
	}
}




/***/ }),

/***/ "../../node_modules/midiconvert/src/Util.js":
/*!************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/Util.js ***!
  \************************************************************************************************************/
/*! exports provided: cleanName, ticksToSeconds, isNumber, isString, isPitch, midiToPitch, pitchToMidi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cleanName", function() { return cleanName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ticksToSeconds", function() { return ticksToSeconds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPitch", function() { return isPitch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "midiToPitch", function() { return midiToPitch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pitchToMidi", function() { return pitchToMidi; });
function cleanName(str){
	//ableton adds some weird stuff to the track
	return str.replace(/\u0000/g, '')
}

function ticksToSeconds(ticks, header){
	return (60 / header.bpm) * (ticks / header.PPQ);
}

function isNumber(val){
	return typeof val === 'number'
}

function isString(val){
	return typeof val === 'string'
}

const isPitch = (function(){
	const regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i
	return (val) => {
		return isString(val) && regexp.test(val)
	}
}())


function midiToPitch(midi){
	const scaleIndexToNote = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];
	const octave = Math.floor(midi / 12) - 1;
	const note = midi % 12;
	return scaleIndexToNote[note] + octave;
}

const pitchToMidi = (function(){
	const regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i
	const noteToScaleIndex = {
		"cbb" : -2, "cb" : -1, "c" : 0,  "c#" : 1,  "cx" : 2,
		"dbb" : 0,  "db" : 1,  "d" : 2,  "d#" : 3,  "dx" : 4,
		"ebb" : 2,  "eb" : 3,  "e" : 4,  "e#" : 5,  "ex" : 6,
		"fbb" : 3,  "fb" : 4,  "f" : 5,  "f#" : 6,  "fx" : 7,
		"gbb" : 5,  "gb" : 6,  "g" : 7,  "g#" : 8,  "gx" : 9,
		"abb" : 7,  "ab" : 8,  "a" : 9,  "a#" : 10, "ax" : 11,
		"bbb" : 9,  "bb" : 10, "b" : 11, "b#" : 12, "bx" : 13,
	}
	return (note) => {
		const split = regexp.exec(note)
		const pitch = split[1]
		const octave = split[2]
		const index = noteToScaleIndex[pitch.toLowerCase()]
		return index + (parseInt(octave) + 1) * 12
	}
}())


/***/ }),

/***/ "../../node_modules/midiconvert/src/instrumentMaps.js":
/*!**********************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/midiconvert/src/instrumentMaps.js ***!
  \**********************************************************************************************************************/
/*! exports provided: instrumentByPatchID, instrumentFamilyByID, drumKitByPatchID */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instrumentByPatchID", function() { return instrumentByPatchID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instrumentFamilyByID", function() { return instrumentFamilyByID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drumKitByPatchID", function() { return drumKitByPatchID; });
const instrumentByPatchID = [
	"acoustic grand piano",
	"bright acoustic piano",
	"electric grand piano",
	"honky-tonk piano",
	"electric piano 1",
	"electric piano 2",
	"harpsichord",
	"clavi",
	"celesta",
	"glockenspiel",
	"music box",
	"vibraphone",
	"marimba",
	"xylophone",
	"tubular bells",
	"dulcimer",
	"drawbar organ",
	"percussive organ",
	"rock organ",
	"church organ",
	"reed organ",
	"accordion",
	"harmonica",
	"tango accordion",
	"acoustic guitar (nylon)",
	"acoustic guitar (steel)",
	"electric guitar (jazz)",
	"electric guitar (clean)",
	"electric guitar (muted)",
	"overdriven guitar",
	"distortion guitar",
	"guitar harmonics",
	"acoustic bass",
	"electric bass (finger)",
	"electric bass (pick)",
	"fretless bass",
	"slap bass 1",
	"slap bass 2",
	"synth bass 1",
	"synth bass 2",
	"violin",
	"viola",
	"cello",
	"contrabass",
	"tremolo strings",
	"pizzicato strings",
	"orchestral harp",
	"timpani",
	"string ensemble 1",
	"string ensemble 2",
	"synthstrings 1",
	"synthstrings 2",
	"choir aahs",
	"voice oohs",
	"synth voice",
	"orchestra hit",
	"trumpet",
	"trombone",
	"tuba",
	"muted trumpet",
	"french horn",
	"brass section",
	"synthbrass 1",
	"synthbrass 2",
	"soprano sax",
	"alto sax",
	"tenor sax",
	"baritone sax",
	"oboe",
	"english horn",
	"bassoon",
	"clarinet",
	"piccolo",
	"flute",
	"recorder",
	"pan flute",
	"blown bottle",
	"shakuhachi",
	"whistle",
	"ocarina",
	"lead 1 (square)",
	"lead 2 (sawtooth)",
	"lead 3 (calliope)",
	"lead 4 (chiff)",
	"lead 5 (charang)",
	"lead 6 (voice)",
	"lead 7 (fifths)",
	"lead 8 (bass + lead)",
	"pad 1 (new age)",
	"pad 2 (warm)",
	"pad 3 (polysynth)",
	"pad 4 (choir)",
	"pad 5 (bowed)",
	"pad 6 (metallic)",
	"pad 7 (halo)",
	"pad 8 (sweep)",
	"fx 1 (rain)",
	"fx 2 (soundtrack)",
	"fx 3 (crystal)",
	"fx 4 (atmosphere)",
	"fx 5 (brightness)",
	"fx 6 (goblins)",
	"fx 7 (echoes)",
	"fx 8 (sci-fi)",
	"sitar",
	"banjo",
	"shamisen",
	"koto",
	"kalimba",
	"bag pipe",
	"fiddle",
	"shanai",
	"tinkle bell",
	"agogo",
	"steel drums",
	"woodblock",
	"taiko drum",
	"melodic tom",
	"synth drum",
	"reverse cymbal",
	"guitar fret noise",
	"breath noise",
	"seashore",
	"bird tweet",
	"telephone ring",
	"helicopter",
	"applause",
	"gunshot",
]

const instrumentFamilyByID = [
	"piano",
	"chromatic percussion",
	"organ",
	"guitar",
	"bass",
	"strings",
	"ensemble",
	"brass",
	"reed",
	"pipe",
	"synth lead",
	"synth pad",
	"synth effects",
	"ethnic",
	"percussive",
	"sound effects",
]

const drumKitByPatchID = {
	 0: "standard kit",
	 8: "room kit",
	16: "power kit",
	24: "electronic kit",
	25: "tr-808 kit",
	32: "jazz kit",
	40: "brush kit",
	48: "orchestra kit",
	56: "sound fx kit",
}


/***/ }),

/***/ "../../node_modules/nexusui/dist/NexusUI.js":
/*!************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/nexusui/dist/NexusUI.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var NexusUI = _interopRequire(__webpack_require__(1));
	
	module.exports = NexusUI;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	exports.colors = colors;
	exports.context = context;
	exports.clock = clock;
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	"use strict";
	
	var Interfaces = _interopRequire(__webpack_require__(2));
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Rack = _interopRequire(__webpack_require__(38));
	
	var Tune = _interopRequire(__webpack_require__(40));
	
	var Transform = _interopRequireWildcard(__webpack_require__(39));
	
	var Counter = __webpack_require__(28);
	var Radio = __webpack_require__(41);
	var Drunk = __webpack_require__(27);
	var Sequence = __webpack_require__(26);
	var Matrix = __webpack_require__(25);
	
	var WAAClock = _interopRequire(__webpack_require__(42));
	
	var Interval = _interopRequire(__webpack_require__(45));
	
	/**
	NexusUI => created as Nexus
	*/
	
	var NexusUI = (function () {
	  function NexusUI(context) {
	    _classCallCheck(this, NexusUI);
	
	    for (var key in Interfaces) {
	      this[key] = Interfaces[key];
	    }
	
	    for (var key in math) {
	      this[key] = math[key];
	    }
	
	    var Core = {
	      Rack: Rack
	    };
	
	    var Models = {
	      Counter: Counter,
	      Radio: Radio,
	      Drunk: Drunk,
	      Sequence: Sequence,
	      Matrix: Matrix
	    };
	
	    for (var key in Models) {
	      this[key] = Models[key];
	    }
	
	    for (var key in Core) {
	      this[key] = Core[key];
	    }
	
	    var DefaultContext = window.AudioContext || window.webkitAudioContext;
	    this._context = context || new DefaultContext();
	
	    this.tune = new Tune();
	    this.note = this.tune.note.bind(this.tune);
	
	    this.clock = new WAAClock(this._context);
	    this.clock.start();
	    this.Interval = Interval;
	
	    this.colors = {
	      accent: "#2bb",
	      fill: "#eee",
	      light: "#fff",
	      dark: "#333",
	      mediumLight: "#ccc",
	      mediumDark: "#666"
	    };
	
	    this.transform = Transform;
	    this.add = Transform.add;
	
	    this.Add = {};
	    for (var key in Interfaces) {
	      this.Add[key] = Transform.add.bind(this, key);
	    }
	
	    /* create default component size */
	    /* jshint ignore:start */
	    var existingStylesheets = document.getElementsByTagName("style");
	    var defaultSizeDeclaration = "[nexus-ui]{height:5000px;width:5000px}";
	    var defaultStyleNode = document.createElement("style");
	    defaultStyleNode.type = "text/css";
	    defaultStyleNode.innerHTML = defaultSizeDeclaration;
	    if (existingStylesheets.length > 0) {
	      var parent = existingStylesheets[0].parentNode;
	      parent.insertBefore(defaultStyleNode, existingStylesheets[0]);
	    } else {
	      document.write("<style>" + defaultSizeDeclaration + "</style>");
	    }
	    /* jshint ignore:end */
	  }
	
	  _createClass(NexusUI, {
	    context: {
	      get: function () {
	        return this._context;
	      },
	      set: function (ctx) {
	        this.clock.stop();
	        this._context = ctx;
	        this.clock = new WAAClock(this.context);
	        this.clock.start();
	      }
	    }
	  });
	
	  return NexusUI;
	})();
	
	var Nexus = new NexusUI();
	
	function colors() {
	  return Nexus.colors;
	}
	
	function context() {
	  return Nexus.context;
	}
	
	function clock() {
	  return Nexus.clock;
	}
	
	exports["default"] = Nexus;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	module.exports = {
	  Position: __webpack_require__(3),
	  Slider: __webpack_require__(14),
	  Toggle: __webpack_require__(15),
	  /*  Range: require('./rangeslider'),
	    Waveform: require('./waveform'), */
	  Button: __webpack_require__(16),
	  TextButton: __webpack_require__(18),
	  RadioButton: __webpack_require__(19),
	  Number: __webpack_require__(20),
	  Select: __webpack_require__(21),
	  Dial: __webpack_require__(22),
	  Piano: __webpack_require__(23),
	  Sequencer: __webpack_require__(24),
	  Pan2D: __webpack_require__(29),
	  Tilt: __webpack_require__(30),
	  Multislider: __webpack_require__(31),
	  Pan: __webpack_require__(33),
	  Envelope: __webpack_require__(34),
	  Spectrogram: __webpack_require__(35),
	  Meter: __webpack_require__(36),
	  Oscilloscope: __webpack_require__(37)
	};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	
	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	/**
	* Position
	*
	* @description Two-dimensional touch slider.
	*
	* @demo <span nexus-ui="position"></span>
	*
	* @example
	* var position = new Nexus.Position('#target')
	*
	* @example
	* var position = new Nexus.Position('#target',{
	*   'size': [200,200],
	*   'mode': 'absolute',  // "absolute" or "relative"
	*   'x': 0.5,  // initial x value
	*   'minX': 0,
	*   'maxX': 1,
	*   'stepX': 0,
	*   'y': 0.5,  // initial y value
	*   'minY': 0,
	*   'maxY': 1,
	*   'stepY': 0
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is an object with x and y properties containing the x and y values of the interface.
	*
	* @outputexample
	* position.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Position = (function (_Interface) {
	  function Position() {
	    _classCallCheck(this, Position);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [200, 200],
	      mode: "absolute",
	      minX: 0,
	      maxX: 1,
	      stepX: 0,
	      x: 0.5,
	      minY: 0,
	      maxY: 1,
	      stepY: 0,
	      y: 0.5
	    };
	
	    _get(Object.getPrototypeOf(Position.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._x = new Step(this.settings.minX, this.settings.maxX, this.settings.stepX, this.settings.x);
	    this._y = new Step(this.settings.minY, this.settings.maxY, this.settings.stepY, this.settings.y);
	
	    this.position = {
	      x: new Interaction.Handle(this.settings.mode, "horizontal", [0, this.width], [this.height, 0]),
	      y: new Interaction.Handle(this.settings.mode, "vertical", [0, this.width], [this.height, 0])
	    };
	    this.position.x.value = this._x.normalized;
	    this.position.y.value = this._y.normalized;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(Position, _Interface);
	
	  _createClass(Position, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.knob = svg.create("circle");
	        this.element.appendChild(this.knob);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this.position.x.resize([0, this.width], [this.height, 0]);
	        this.position.y.resize([0, this.width], [this.height, 0]);
	
	        this._minDimension = Math.min(this.width, this.height);
	
	        this.knobRadius = {
	          off: ~ ~(this._minDimension / 100) * 5 + 5 };
	        this.knobRadius.on = this.knobRadius.off * 2;
	
	        this.knob.setAttribute("cx", this.width / 2);
	        this.knob.setAttribute("cy", this.height / 2);
	        this.knob.setAttribute("r", this.knobRadius.off);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.element.style.backgroundColor = this.colors.fill;
	        this.knob.setAttribute("fill", this.colors.accent);
	      }
	    },
	    render: {
	      value: function render() {
	        if (this.clicked) {
	          //  this.knobRadius = 30;
	          this.knob.setAttribute("r", this.knobRadius.on);
	        } else {
	          //  this.knobRadius = 15;
	          this.knob.setAttribute("r", this.knobRadius.off);
	        }
	
	        this.knobCoordinates = {
	          x: this._x.normalized * this.width,
	          y: this.height - this._y.normalized * this.height
	        };
	
	        this.knob.setAttribute("cx", this.knobCoordinates.x);
	        this.knob.setAttribute("cy", this.knobCoordinates.y);
	      }
	    },
	    click: {
	      value: function click() {
	        this.position.x.anchor = this.mouse;
	        this.position.y.anchor = this.mouse;
	        this.move();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	          this.position.x.update(this.mouse);
	          this.position.y.update(this.mouse);
	          this._x.updateNormal(this.position.x.value);
	          this._y.updateNormal(this.position.y.value);
	          this.emit("change", {
	            x: this._x.value,
	            y: this._y.value
	          });
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        this.render();
	      }
	    },
	    x: {
	
	      /**
	      * The interface's x value. When set, it will automatically adjust to fit min/max/step settings of the interface.
	      * @type {object}
	      * @example position.x = 0.5;
	      */
	
	      get: function () {
	        return this._x.value;
	      },
	      set: function (value) {
	        this._x.update(value);
	        this.emit("change", {
	          x: this._x.value,
	          y: this._y.value
	        });
	        this.render();
	      }
	    },
	    y: {
	
	      /**
	      * The interface's y values. When set, it will automatically adjust to fit min/max/step settings of the interface.
	      * @type {object}
	      * @example position.x = 0.5;
	      */
	
	      get: function () {
	        return this._y.value;
	      },
	      set: function (value) {
	        this._y.update(value);
	        this.emit("change", {
	          x: this._x.value,
	          y: this._y.value
	        });
	        this.render();
	      }
	    },
	    normalized: {
	      get: function () {
	        return {
	          x: this._x.normalized,
	          y: this._y.normalized
	        };
	      }
	    },
	    minX: {
	
	      /**
	      * The lower limit of value on the x axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._x.min;
	      },
	      set: function (v) {
	        this._x.min = v;
	        this.render();
	      }
	    },
	    minY: {
	
	      /**
	      * The lower limit of value on the y axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._y.min;
	      },
	      set: function (v) {
	        this._y.min = v;
	        this.render();
	      }
	    },
	    maxX: {
	
	      /**
	      * The upper limit of value on the x axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._x.max;
	      },
	      set: function (v) {
	        this._x.max = v;
	        this.render();
	      }
	    },
	    maxY: {
	
	      /**
	      * The upper limit of value on the y axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._y.max;
	      },
	      set: function (v) {
	        this._y.max = v;
	        this.render();
	      }
	    },
	    stepX: {
	
	      /**
	      * The incremental step of values on the x axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._x.step;
	      },
	      set: function (v) {
	        this._x.step = v;
	        this.render();
	      }
	    },
	    stepY: {
	
	      /**
	      * The incremental step of values on the y axis
	      * @type {object}
	      */
	
	      get: function () {
	        return this._y.step;
	      },
	      set: function (v) {
	        this._y.step = v;
	        this.render();
	      }
	    },
	    mode: {
	
	      /**
	      Absolute mode (position's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: "absolute".
	      @type {string}
	      @example position.mode = "relative";
	      */
	
	      get: function () {
	        return this.position.x.mode;
	      },
	      set: function (v) {
	        this.position.x.mode = v;
	        this.position.y.mode = v;
	      }
	    }
	  });
	
	  return Position;
	})(Interface);
	
	module.exports = Position;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var math = __webpack_require__(5);
	
	module.exports = {
	
	  create: function (type) {
	    return document.createElementNS("http://www.w3.org/2000/svg", type);
	  },
	
	  arc: function (x, y, radius, startAngle, endAngle) {
	
	    var start = math.toCartesian(radius, endAngle);
	    var end = math.toCartesian(radius, startAngle);
	
	    var largeArcFlag = endAngle - startAngle <= 180 ? "0" : "1";
	
	    var d = ["M", start.x + x, start.y + y, "A", radius, radius, 0, largeArcFlag, 0, end.x + x, end.y + y].join(" ");
	
	    return d;
	  },
	
	  radialGradient: function (defs, numberOfStops) {
	
	    var id = "gradient" + math.ri(100000000000);
	    var stops = [];
	
	    var gradient = document.createElementNS("http://www.w3.org/2000/svg", "radialGradient");
	    gradient.setAttribute("id", id);
	    gradient.setAttribute("cx", "50%");
	    gradient.setAttribute("cy", "50%");
	    gradient.setAttribute("r", "50%");
	
	    defs.appendChild(gradient);
	
	    for (var i = 0; i < numberOfStops; i++) {
	      var _stop = document.createElementNS("http://www.w3.org/2000/svg", "stop");
	      _stop.setAttribute("id", "stop" + i);
	      //stop.setAttribute('offset', '70%');
	      //stop.setAttribute('stop-color', 'White');
	      gradient.appendChild(_stop);
	      stops.push(_stop);
	    }
	
	    return {
	      id: id,
	      stops: stops,
	      element: gradient
	    };
	  }
	
	};

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	"use strict";
	
	/**
	 * Limit a number to within a minimum and maximum
	 * @param  {number} value Input value
	 * @param  {number} min   Lower limit
	 * @param  {number} max   Upper limit
	 * @return {number}       The input value constrained within the lower and upper limits
	 * @example
	 * Nexus.clip(11,0,10)   // returns 10
	 * Nexus.clip(-1,0,10)   // returns 0
	 * Nexus.clip(5,0,10)    // returns 5
	 */
	
	exports.clip = function (value, min, max) {
	  return Math.min(Math.max(value, min), max);
	};
	
	exports.normalize = function (value, min, max) {
	  return (value - min) / (max - min);
	};
	
	/**
	 * Scale a value from one range to another range.
	 * @param  {number} inNum  Input value
	 * @param  {number} inMin  Input range minimum
	 * @param  {number} inMax  Input range maximum
	 * @param  {number} outMin Output range minimum
	 * @param  {number} outMax Output range maximum
	 * @return {number}        The input value scaled to its new range
	 * @example
	 * Nexus.scale(0.5,0,1,0,10)   // returns 5
	 * Nexus.scale(0.9,0,1,1,0)    // returns 0.1
	 */
	exports.scale = function (inNum, inMin, inMax, outMin, outMax) {
	  if (inMin === inMax) {
	    return outMin;
	  }
	  return (inNum - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;
	};
	
	exports.toPolar = function (x, y) {
	  var r = Math.sqrt(x * x + y * y);
	
	  var theta = Math.atan2(y, x);
	  if (theta < 0) {
	    theta = theta + 2 * Math.PI;
	  }
	  return { radius: r, angle: theta };
	};
	
	exports.toCartesian = function (radius, angle) {
	  var cos = Math.cos(angle);
	  var sin = Math.sin(angle);
	  return { x: radius * cos, y: radius * sin * -1 };
	};
	/*
	exports.polarToCartesian(centerX, centerY, radius, angleInDegrees) {
	  var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;
	
	  return {
	    x: centerX + (radius * Math.cos(angleInRadians)),
	    y: centerY + (radius * Math.sin(angleInRadians))
	  };
	}  */
	
	exports.prune = function (data, scale) {
	  return parseFloat(data.toFixed(scale));
	};
	
	exports.invert = function (inNum) {
	  return exports.scale(inNum, 1, 0, 0, 1);
	};
	
	/**
	 * Convert a MIDi note number to a frequency value in equal temperament.
	 * @param  {number} midi MIDI note value
	 * @return {number}      Frequence value
	 * @example
	 * Nexus.mtof(60)  // returns the frequency number of Middle C
	 */
	exports.mtof = function (midi) {
	  return Math.pow(2, (midi - 69) / 12) * 440;
	};
	
	/**
	 * Interpolate between two numbers
	 * @param  {number} loc Interpolation index (0-1)
	 * @param  {number} min Lower value
	 * @param  {number} max Upper value
	 * @return {number}     Interpolated value
	 * @example
	 * Nexus.interp(0.5,2,4)   // returns 3
	 * Nexus.interp(0.1,0,10)     // returns 1
	 */
	exports.interp = function (loc, min, max) {
	  return loc * (max - min) + min;
	};
	
	/**
	 * Return a random choice from a list of arguments
	 * @return {various} One random argument
	 * @example
	 * Nexus.pick(1,2,3,4)   // returns 1, 2, 3, or 4
	 * Nexus.pick(function1,function2)   // returns either function1 or function2
	 */
	exports.pick = function () {
	  return arguments[~ ~(Math.random() * arguments.length)];
	};
	
	/**
	 * Returns an octave multiplier for frequency values
	 * @param  {number} num Relative octave number (e.g. -1 for one octave down, 1 for one octave up)
	 * @return {number}     Octave multiplier
	 * @example
	 * Nexus.octave(-1)  // returns 0.5
	 * Nexus.octave(0)   // returns 1
	 * Nexus.octave(1)   // returns 2
	 * Nexus.octave(2)   // returns 4
	 */
	exports.octave = function (num) {
	  return Math.pow(2, num);
	};
	
	/**
	 * Random integer generator. If no second argument is given, will return random integer from 0 to bound1.
	 * @param  {number} bound1 Minimum random value
	 * @param  {number} bound2 Maximum random value
	 * @return {number}        Random integer between lower and upper boundary
	 * @example
	 * Nexus.ri(10)    // returns random int from 0 to 10
	 * Nexus.ri(20,2000) // returns random int from 20 to 2000
	 */
	exports.ri = function (bound1, bound2) {
	  if (!bound2) {
	    bound2 = bound1;
	    bound1 = 0;
	  }
	  var low = Math.min(bound1, bound2);
	  var high = Math.max(bound1, bound2);
	  return Math.floor(Math.random() * (high - low) + low);
	};
	
	/**
	 * Random float number generator. If no second argument is given, will return random float from 0 to bound1.
	 * @param  {number} bound1 Minimum random value
	 * @param  {number} bound2 Maximum random value
	 * @return {number}        Random float between lower and upper boundary
	 * @example
	 * Nexus.rf(1)    // returns random float from 0 to 1
	 * Nexus.rf(1,2) // returns random float from 1 to 2
	 */
	exports.rf = function (bound1, bound2) {
	  if (!bound2) {
	    bound2 = bound1;
	    bound1 = 0;
	  }
	  var low = Math.min(bound1, bound2);
	  var high = Math.max(bound1, bound2);
	  return Math.random() * (high - low) + low;
	};
	
	exports.cycle = function (input, min, max) {
	  input++;
	  if (input >= max) {
	    input = min;
	  }
	  return input;
	};
	
	/**
	 * Average an array of numbers
	 * @param  {Array} data Array of numbers to average
	 * @return {number}      Average of the input data
	 * @example
	 * Nexus.average([0,2,4,6,8,10])   // returns 5
	 */
	exports.average = function (data) {
	  var total = 0;
	  for (var i = 0; i < data.length; i++) {
	    total += data[i];
	  }
	  return total / data.length;
	};
	
	/**
	 * Get the distance from one (x,y) point to another (x,y) point
	 * @param  {number} x1 x of first point
	 * @param  {number} y1 y of first point
	 * @param  {number} x2 x of second point
	 * @param  {number} y2 y of second poiny
	 * @return {number}    Distance
	 * @example
	 * Nexus.distance(0,0,3,4)   // returns 5
	 */
	exports.distance = function (x1, y1, x2, y2) {
	  var a = x1 - x2;
	  var b = y1 - y2;
	  return Math.sqrt(a * a + b * b);
	};
	
	exports.gainToDB = function (gain) {
	  return 20 * Math.log10(gain);
	};
	
	/**
	 * Flip a coin, returning either 0 or 1 according to a probability
	 * @param  {number} [odds=0.5] Likelihood of returning 1
	 * @return {number}            1 or 0
	 * @example
	 * Nexus.coin(0.1)   // returns 1 (10% of the time) or 0 (90% of the time)
	 */
	exports.coin = function () {
	  var odds = arguments[0] === undefined ? 0.5 : arguments[0];
	
	  if (exports.rf(0, 1) < odds) {
	    return 1;
	  } else {
	    return 0;
	  }
	};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var dom = __webpack_require__(7);
	var util = __webpack_require__(8);
	var touch = __webpack_require__(9);
	var EventEmitter = __webpack_require__(10);
	
	var colors = __webpack_require__(1).colors;
	
	/**
	Interface
	*/
	
	var Interface = (function (_EventEmitter) {
	  function Interface(args, options, defaults) {
	    _classCallCheck(this, Interface);
	
	    _get(Object.getPrototypeOf(Interface.prototype), "constructor", this).call(this);
	    this.type = this.constructor.name;
	    this.settings = this.parseSettings(args, options, defaults);
	    this.mouse = {};
	    this.wait = false;
	    this.colors = {};
	    var defaultColors = colors(); // jshint ignore:line
	    this.colors.accent = defaultColors.accent;
	    this.colors.fill = defaultColors.fill;
	    this.colors.light = defaultColors.light;
	    this.colors.dark = defaultColors.dark;
	    this.colors.mediumLight = defaultColors.mediumLight;
	    this.colors.mediumDark = defaultColors.mediumDark;
	  }
	
	  _inherits(Interface, _EventEmitter);
	
	  _createClass(Interface, {
	    parseSettings: {
	      value: function parseSettings(args, options, defaults) {
	
	        options.unshift("target");
	        defaults.defaultSize = defaults.size.splice(0, 2);
	        defaults.size = false;
	
	        var settings = {
	          target: document.body,
	          colors: {}, // should inherit from a colors module,
	          snapWithParent: true,
	          event: function event() {},
	          component: false
	        };
	
	        for (var key in defaults) {
	          settings[key] = defaults[key];
	        }
	
	        for (var i = 0; i < args.length; i++) {
	          // grabs the next argument
	          var setting = args[i];
	          // if it's an object, it must be the settings object
	          if (util.isObject(setting)) {
	            for (var key in setting) {
	              settings[key] = setting[key];
	            }
	            // if it's a function, it must be the event setting
	          } else if (typeof setting === "function") {
	            settings.event = setting;
	            // otherwise, consider it one of the widget's custom options
	          } else if (options.length >= 1) {
	            // grab the first option -- i.e. 'target'
	            var key = options.splice(0, 1)[0];
	            settings[key] = setting;
	          }
	        }
	
	        /*  handle common settings  */
	
	        // target
	        this.parent = dom.parseElement(settings.target);
	
	        // nexus-ui attribute
	        if (this.parent && this.parent instanceof HTMLElement && !settings.component) {
	          if (!this.parent.hasAttribute("nexus-ui")) {
	            this.parent.setAttribute("nexus-ui", "");
	          }
	        }
	
	        // size
	
	        if (settings.size && Array.isArray(settings.size) && settings.snapWithParent) {
	          this.width = settings.size[0];
	          this.height = settings.size[1];
	          this.parent.style.width = this.width + "px";
	          this.parent.style.height = this.height + "px";
	        } else if (settings.snapWithParent && !settings.component) {
	
	          this.width = parseFloat(window.getComputedStyle(this.parent, null).getPropertyValue("width").replace("px", ""));
	          this.height = parseFloat(window.getComputedStyle(this.parent, null).getPropertyValue("height").replace("px", ""));
	
	          if (this.width == 5000) {
	            this.width = settings.defaultSize[0];
	            this.parent.style.width = this.parent.width = this.width + "px";
	          }
	          if (this.height == 5000) {
	            this.height = settings.defaultSize[1];
	            this.parent.style.height = this.parent.height = this.height + "px";
	          }
	        } else {
	          settings.size = settings.defaultSize;
	          this.width = settings.size[0];
	          this.height = settings.size[1];
	        }
	
	        // event
	        if (settings.event) {
	          this.event = this.on("change", settings.event);
	        } else {
	          this.event = false;
	        }
	
	        return settings;
	      }
	    },
	    init: {
	      value: function init() {
	        this.buildFrame();
	        this.buildInterface();
	        this.sizeInterface();
	        this.attachListeners();
	        this.colorInterface();
	        this.finalTouches();
	      }
	    },
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = svg.create("svg");
	        this.element.setAttribute("width", this.width);
	        this.element.setAttribute("height", this.height);
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {}
	    },
	    sizeInterface: {
	      value: function sizeInterface() {}
	    },
	    colorInterface: {
	      value: function colorInterface() {}
	    },
	    attachListeners: {
	      value: function attachListeners() {
	        var _this = this;
	
	        this.interactionTarget = this.interactionTarget || this.element;
	
	        // Setup interaction
	        if (touch.exists) {
	          this.interactionTarget.addEventListener("touchstart", function (evt) {
	            return _this.preTouch(evt);
	          });
	          this.interactionTarget.addEventListener("touchmove", function (evt) {
	            return _this.preTouchMove(evt);
	          });
	          this.interactionTarget.addEventListener("touchend", function (evt) {
	            return _this.preTouchRelease(evt);
	          });
	        }
	        this.boundPreMove = function (evt) {
	          return _this.preMove(evt);
	        };
	        this.boundPreRelease = function (evt) {
	          return _this.preRelease(evt);
	        };
	        this.interactionTarget.addEventListener("mousedown", function (evt) {
	          return _this.preClick(evt);
	        });
	      }
	    },
	    finalTouches: {
	      value: function finalTouches() {
	        this.element.style.cursor = "pointer";
	      }
	    },
	    preClick: {
	      value: function preClick(e) {
	        // 10000 getComputedStyle calls takes 100 ms.
	        // .:. one takes about .01ms
	        if (this.element instanceof HTMLElement) {
	          this.width = window.getComputedStyle(this.element, null).getPropertyValue("width").replace("px", "");
	        }
	        // 10000 getComputedStyle calls takes 40 ms.
	        // .:. one takes about .004ms
	        this.offset = dom.findPosition(this.element);
	        this.mouse = dom.locateMouse(e, this.offset);
	        this.clicked = true;
	        this.click();
	        this.moveEvent = document.addEventListener("mousemove", this.boundPreMove);
	        this.releaseEvent = document.addEventListener("mouseup", this.boundPreRelease);
	        this.emit("click");
	        e.preventDefault();
	        e.stopPropagation();
	      }
	    },
	    preMove: {
	      value: function preMove(e) {
	        var _this = this;
	
	        if (!this.wait) {
	          this.mouse = dom.locateMouse(e, this.offset);
	          this.move();
	          this.wait = true;
	          setTimeout(function () {
	            _this.wait = false;
	          }, 25);
	        }
	        e.preventDefault();
	        e.stopPropagation();
	      }
	    },
	    preRelease: {
	      value: function preRelease(e) {
	        this.mouse = dom.locateMouse(e, this.offset);
	        this.clicked = false;
	        this.release();
	        this.emit("release");
	        document.removeEventListener("mousemove", this.boundPreMove);
	        document.removeEventListener("mouseup", this.boundPreRelease);
	        e.preventDefault();
	        e.stopPropagation();
	      }
	    },
	    click: {
	      value: function click() {}
	    },
	    move: {
	      value: function move() {}
	    },
	    release: {
	      value: function release() {}
	    },
	    preTouch: {
	
	      /* touch */
	
	      value: function preTouch(e) {
	        if (this.element instanceof HTMLElement) {
	          this.width = window.getComputedStyle(this.element, null).getPropertyValue("width").replace("px", "");
	        }
	        this.offset = dom.findPosition(this.element);
	        this.mouse = dom.locateTouch(e, this.offset);
	        this.clicked = true;
	        this.touch(e);
	        this.emit("click");
	        e.preventDefault();
	        e.stopPropagation();
	      }
	    },
	    preTouchMove: {
	      value: function preTouchMove(e) {
	        if (this.clicked) {
	          this.mouse = dom.locateTouch(e, this.offset);
	          this.touchMove();
	          e.preventDefault();
	          e.stopPropagation();
	        }
	      }
	    },
	    preTouchRelease: {
	      value: function preTouchRelease(e) {
	        this.mouse = dom.locateTouch(e, this.offset);
	        this.clicked = false;
	        this.touchRelease();
	        this.emit("release");
	        e.preventDefault();
	        e.stopPropagation();
	      }
	    },
	    touch: {
	      value: function touch() {
	        this.click();
	      }
	    },
	    touchMove: {
	      value: function touchMove() {
	        this.move();
	      }
	    },
	    touchRelease: {
	      value: function touchRelease() {
	        this.release();
	      }
	    },
	    resize: {
	
	      /**
	      * Resize the interface
	      * @param width {number} New width in pixels
	      * @param height {number} New height in pixels
	      *
	      * @example
	      * button.resize(100,100);
	      */
	
	      value: function resize(width, height) {
	        this.width = width;
	        this.height = height;
	        this.parent.style.width = this.width + "px";
	        this.parent.style.height = this.height + "px";
	        this.element.setAttribute("width", this.width);
	        this.element.setAttribute("height", this.height);
	        this.sizeInterface();
	      }
	    },
	    empty: {
	      value: function empty() {
	        while (this.element.lastChild) {
	          this.element.removeChild(this.element.lastChild);
	        }
	      }
	    },
	    destroy: {
	
	      /**
	      * Remove the interface from the page and cancel its event listener(s).
	      *
	      * @example
	      * button.destroy();
	      */
	
	      value: function destroy() {
	        this.empty();
	        this.parent.removeChild(this.element);
	        this.removeAllListeners();
	        if (this.instrument) {
	          delete this.instrument[this.id];
	        }
	        this.customDestroy();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {}
	    },
	    colorize: {
	      value: function colorize(type, color) {
	        this.colors[type] = color;
	        this.colorInterface();
	      }
	    }
	  });
	
	  return Interface;
	})(EventEmitter);
	
	module.exports = Interface;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.findPosition = function (el) {
	  var viewportOffset = el.getBoundingClientRect();
	  var top = viewportOffset.top + window.scrollY;
	  var left = viewportOffset.left + window.scrollX;
	  return { top: top, left: left };
	};
	
	exports.parseElement = function (parent) {
	  if (typeof parent === "string") {
	    parent = document.getElementById(parent.replace("#", ""));
	  }
	
	  if (parent instanceof HTMLElement || parent instanceof SVGElement) {
	    return parent;
	  } else {
	    return "No valid parent argument";
	  }
	};
	
	exports.locateMouse = function (e, offset) {
	  return {
	    x: e.pageX - offset.left,
	    y: e.pageY - offset.top
	  };
	};
	
	exports.locateTouch = function (e, offset) {
	  return {
	    x: e.targetTouches.length ? e.targetTouches[0].pageX - offset.left : false,
	    y: e.targetTouches.length ? e.targetTouches[0].pageY - offset.top : false
	  };
	};
	
	exports.SmartCanvas = function (parent) {
	  var _this = this;
	
	  this.element = document.createElement("canvas");
	  this.context = this.element.getContext("2d");
	  parent.appendChild(this.element);
	
	  this.resize = function (w, h) {
	    _this.element.width = w * 2;
	    _this.element.height = h * 2;
	    _this.element.style.width = w + "px";
	    _this.element.style.height = h + "px";
	  };
	};

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.isObject = function (obj) {
	  if (typeof obj === "object" && !Array.isArray(obj) && obj !== null && obj instanceof SVGElement === false && obj instanceof HTMLElement === false) {
	    return true;
	  } else {
	    return false;
	  }
	};

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	"use strict";
	
	exports.exists = "ontouchstart" in document.documentElement;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.
	
	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;
	
	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;
	
	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;
	
	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;
	
	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};
	
	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;
	
	  if (!this._events)
	    this._events = {};
	
	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }
	
	  handler = this._events[type];
	
	  if (isUndefined(handler))
	    return false;
	
	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }
	
	  return true;
	};
	
	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events)
	    this._events = {};
	
	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);
	
	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];
	
	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }
	
	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.on = EventEmitter.prototype.addListener;
	
	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  var fired = false;
	
	  function g() {
	    this.removeListener(type, g);
	
	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }
	
	  g.listener = listener;
	  this.on(type, g);
	
	  return this;
	};
	
	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;
	
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');
	
	  if (!this._events || !this._events[type])
	    return this;
	
	  list = this._events[type];
	  length = list.length;
	  position = -1;
	
	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	
	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }
	
	    if (position < 0)
	      return this;
	
	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }
	
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }
	
	  return this;
	};
	
	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;
	
	  if (!this._events)
	    return this;
	
	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }
	
	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }
	
	  listeners = this._events[type];
	
	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];
	
	  return this;
	};
	
	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};
	
	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];
	
	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};
	
	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};
	
	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	
	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	
	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	
	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = __webpack_require__(5);
	
	/**
	  Creates a steppable value with minimum, maximum, and step size. This is used in many interfaces to constrict their values to certain ranges.
	  @param {number} [min=0] minimum
	  @param {number} [max=1] maximum
	  @param {number} [step=0]
	  @param {number} [value=0] initial value
	  @returns {Object} Step
	*/
	
	var Step = (function () {
	  function Step() {
	    var min = arguments[0] === undefined ? 0 : arguments[0];
	    var max = arguments[1] === undefined ? 1 : arguments[1];
	    var step = arguments[2] === undefined ? 0 : arguments[2];
	    var value = arguments[3] === undefined ? 0 : arguments[3];
	
	    _classCallCheck(this, Step);
	
	    //Object.assign(this,{min,max,step});
	    //Cannot use Object.assign because not supported in Safari.
	    //I would expect for Babel to take care of this but it is not.
	    this.min = min;
	    this.max = max;
	    this.step = step;
	    this.value = value;
	    this.changed = false;
	    this.oldValue = false;
	    this.update(this.value);
	  }
	
	  _createClass(Step, {
	    update: {
	
	      /**
	        Update with a new value. The value will be auto-adjusted to fit the min/max/step.
	        @param {number} value
	      */
	
	      value: function update(value) {
	        if (this.step) {
	          // this.value = math.clip(Math.round(value / (this.step)) * this.step, this.min,this.max);
	          this.value = math.clip(Math.round((value - this.min) / this.step) * this.step + this.min, this.min, this.max);
	        } else {
	          this.value = math.clip(value, this.min, this.max);
	        }
	        if (this.oldValue !== this.value) {
	          this.oldValue = this.value;
	          this.changed = true;
	        } else {
	          this.changed = false;
	        }
	        return this.value;
	      }
	    },
	    updateNormal: {
	
	      /**
	        Update with a normalized value 0-1.
	        @param {number} value
	      */
	
	      value: function updateNormal(value) {
	        this.value = math.scale(value, 0, 1, this.min, this.max);
	        return this.update(this.value);
	      }
	    },
	    normalized: {
	
	      /**
	        Get a normalized version of this.value . Not settable.
	      */
	
	      get: function () {
	        return math.normalize(this.value, this.min, this.max);
	      }
	    }
	  });
	
	  return Step;
	})();
	
	module.exports = Step;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	"use strict";
	
	var math = _interopRequire(__webpack_require__(5));
	
	var ToggleModel = _interopRequire(__webpack_require__(13));
	
	/*
	how to use :
	
	dial.interaction = new Handle('radial','relative',this.width,this.height);
	// dial.interaction.mode = 'relative'
	// dial.interaction.direction = 'radial'
	
	on click:
	dial.interaction.anchor = this.mouse;
	
	on move:
	dial.interaction.update(this.mouse);
	
	console.log( dial.interaction.value ); should be a normalized value.
	
	*/
	
	/*
	  absolute/relative are property: mode
	  radial/vertical/horizontal/2d are property: direction
	
	  plan :
	
	  if relative --
	  NO on click, get value offset between current value and click value.
	  NO on move, use click value - offset
	  INSTEAD
	  use delta -- bc vertical motion on dial is impossible otherwise
	  also allow to set sensitivity
	
	*/
	
	var Handle = exports.Handle = (function () {
	  function Handle() {
	    var mode = arguments[0] === undefined ? "absolute" : arguments[0];
	    var direction = arguments[1] === undefined ? "vertical" : arguments[1];
	    var xbound = arguments[2] === undefined ? [0, 100] : arguments[2];
	    var ybound = arguments[3] === undefined ? [0, 100] : arguments[3];
	
	    _classCallCheck(this, Handle);
	
	    this.mode = mode;
	    this.direction = direction;
	    this.previous = 0;
	    this.value = 0;
	    this.sensitivity = 1;
	    this.resize(xbound, ybound);
	  }
	
	  _createClass(Handle, {
	    resize: {
	      value: function resize(xbound, ybound) {
	        this.boundary = {
	          min: {
	            x: xbound[0],
	            y: ybound[0]
	          },
	          max: {
	            x: xbound[1],
	            y: ybound[1]
	          },
	          center: {
	            x: (xbound[1] - xbound[0]) / 2 + xbound[0],
	            y: (ybound[1] - ybound[0]) / 2 + ybound[0]
	          }
	        };
	      }
	    },
	    anchor: {
	      set: function (mouse) {
	        this._anchor = this.convertPositionToValue(mouse);
	      },
	      get: function () {
	        return this._anchor;
	      }
	    },
	    update: {
	      value: function update(mouse) {
	        if (this.mode === "relative") {
	          var increment = this.convertPositionToValue(mouse) - this.anchor;
	          if (Math.abs(increment) > 0.5) {
	            increment = 0;
	          }
	          this.anchor = mouse;
	          this.value = this.value + increment * this.sensitivity;
	        } else {
	          this.value = this.convertPositionToValue(mouse);
	        }
	        this.value = math.clip(this.value, 0, 1);
	      }
	    },
	    convertPositionToValue: {
	      value: function convertPositionToValue(current) {
	        switch (this.direction) {
	          case "radial":
	            var position = math.toPolar(current.x - this.boundary.center.x, current.y - this.boundary.center.y);
	            position = position.angle / (Math.PI * 2);
	            position = (position - 0.25 + 1) % 1;
	            return position;
	          case "vertical":
	            return math.scale(current.y, this.boundary.min.y, this.boundary.max.y, 0, 1);
	          case "horizontal":
	            return math.scale(current.x, this.boundary.min.x, this.boundary.max.x, 0, 1);
	        }
	      }
	    }
	  });
	
	  return Handle;
	})();
	
	var Button = exports.Button = (function () {
	  function Button() {
	    var mode = arguments[0] === undefined ? "button" : arguments[0];
	
	    _classCallCheck(this, Button);
	
	    this.mode = mode;
	    this.state = new ToggleModel();
	    this.paintbrush = false;
	  }
	
	  _createClass(Button, {
	    click: {
	      value: function click() {
	        switch (this.mode) {
	          case "impulse":
	            this.state.on();
	            if (this.timeout) {
	              clearTimeout(this.timeout);
	            }
	            this.timeout = setTimeout(this.state.off.bind(this), 30);
	            this.emit("change", this.state);
	            break;
	          case "button":
	            this.turnOn();
	            this.emit("change", this.state);
	            break;
	          case "aftertouch":
	            this.position = {
	              x: math.clip(this.mouse.x / this.width, 0, 1),
	              y: math.clip(1 - this.mouse.y / this.height, 0, 1)
	            };
	            this.turnOn();
	            this.emit("change", {
	              state: this.state,
	              x: this.position.x,
	              y: this.position.y });
	            break;
	          case "toggle":
	            this.flip();
	            this.emit("change", this.state);
	            break;
	        }
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.mode === "aftertouch") {
	          this.position = {
	            x: math.clip(this.mouse.x / this.width, 0, 1),
	            y: math.clip(1 - this.mouse.y / this.height, 0, 1)
	          };
	          this.emit("change", {
	            state: this.state,
	            x: this.position.x,
	            y: this.position.y });
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        switch (this.mode) {
	          case "button":
	            this.turnOff();
	            this.emit("change", this.state);
	            break;
	          case "aftertouch":
	            this.turnOff();
	            this.position = {
	              x: this.mouse.x / this.width,
	              y: 1 - this.mouse.y / this.height
	            };
	            this.emit("change", {
	              state: this.state,
	              x: this.position.x,
	              y: this.position.y });
	            break;
	        }
	      }
	    }
	  });
	
	  return Button;
	})();

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var Toggle = (function () {
	  function Toggle(state) {
	    _classCallCheck(this, Toggle);
	
	    this.state = state || false;
	  }
	
	  _createClass(Toggle, {
	    flip: {
	      value: function flip(state) {
	        if (state || state === false) {
	          this.state = state;
	        } else {
	          this.state = !this.state;
	        }
	      }
	    },
	    on: {
	      value: function on() {
	        this.state = true;
	      }
	    },
	    off: {
	      value: function off() {
	        this.state = false;
	      }
	    }
	  });
	
	  return Toggle;
	})();
	
	module.exports = Toggle;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	/**
	* Slider
	*
	* @description Horizontal or vertical slider with settable interaction modes.
	*
	* @demo <span nexus-ui="slider" step=0.2></span>
	*
	* @example
	* var slider = new Nexus.Slider('#target')
	*
	* @example
	* var slider = new Nexus.Slider('#target',{
	*     'size': [120,20],
	*     'mode': 'relative',  // 'relative' or 'absolute'
	*     'min': 0,
	*     'max': 1,
	*     'step': 0,
	*     'value': 0
	* })
	*
	* @output
	* change
	* Fires when the interface's value changes. <br>
	* Event data: <i>number</i> The number value of the interface.
	*
	* @outputexample
	* slider.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Slider = (function (_Interface) {
	  function Slider() {
	    _classCallCheck(this, Slider);
	
	    var options = ["min", "max", "value"];
	
	    var defaults = {
	      size: [120, 20],
	      mode: "relative", // 'relative' or 'absolute'
	      min: 0,
	      max: 1,
	      step: 0,
	      value: 0
	    };
	
	    _get(Object.getPrototypeOf(Slider.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.orientation = "vertical"; // This will change automatically to 'horizontal'if the interface is wider than it is tall.
	
	    this._value = new Step(this.settings.min, this.settings.max, this.settings.step, this.settings.value);
	
	    this.position = new Interaction.Handle(this.settings.mode, this.orientation, [0, this.width], [this.height, 0]);
	    this.position.value = this._value.normalized;
	
	    this.init();
	
	    this.position.direction = this.orientation;
	
	    this.emit("change", this.value);
	  }
	
	  _inherits(Slider, _Interface);
	
	  _createClass(Slider, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.bar = svg.create("rect");
	        this.fillbar = svg.create("rect");
	        this.knob = svg.create("circle");
	
	        this.element.appendChild(this.bar);
	        this.element.appendChild(this.fillbar);
	        this.element.appendChild(this.knob);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        if (this.width < this.height) {
	          this.orientation = "vertical";
	        } else {
	          this.orientation = "horizontal";
	        }
	
	        if (this.position) {
	          this.position.resize([0, this.width], [this.height, 0]);
	        }
	
	        var x = undefined,
	            y = undefined,
	            w = undefined,
	            h = undefined,
	            barOffset = undefined,
	            cornerRadius = undefined;
	        this.knobData = {
	          level: 0,
	          r: 0
	        };
	
	        if (this.orientation === "vertical") {
	          this.thickness = this.width / 2;
	          x = this.width / 2;
	          y = 0;
	          w = this.thickness;
	          h = this.height;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = h - this.knobData.r - this.normalized * (h - this.knobData.r * 2);
	          barOffset = "translate(" + this.thickness * -1 / 2 + ",0)";
	          cornerRadius = w / 2;
	        } else {
	          this.thickness = this.height / 2;
	          x = 0;
	          y = this.height / 2;
	          w = this.width;
	          h = this.thickness;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = this.normalized * (w - this.knobData.r * 2) + this.knobData.r;
	          barOffset = "translate(0," + this.thickness * -1 / 2 + ")";
	          cornerRadius = h / 2;
	        }
	
	        this.bar.setAttribute("x", x);
	        this.bar.setAttribute("y", y);
	        this.bar.setAttribute("transform", barOffset);
	        this.bar.setAttribute("rx", cornerRadius); // corner radius
	        this.bar.setAttribute("ry", cornerRadius);
	        this.bar.setAttribute("width", w);
	        this.bar.setAttribute("height", h);
	
	        if (this.orientation === "vertical") {
	          this.fillbar.setAttribute("x", x);
	          this.fillbar.setAttribute("y", this.knobData.level);
	          this.fillbar.setAttribute("width", w);
	          this.fillbar.setAttribute("height", h - this.knobData.level);
	        } else {
	          this.fillbar.setAttribute("x", 0);
	          this.fillbar.setAttribute("y", y);
	          this.fillbar.setAttribute("width", this.knobData.level);
	          this.fillbar.setAttribute("height", h);
	        }
	        this.fillbar.setAttribute("transform", barOffset);
	        this.fillbar.setAttribute("rx", cornerRadius);
	        this.fillbar.setAttribute("ry", cornerRadius);
	
	        if (this.orientation === "vertical") {
	          this.knob.setAttribute("cx", x);
	          this.knob.setAttribute("cy", this.knobData.level);
	        } else {
	          this.knob.setAttribute("cx", this.knobData.level);
	          this.knob.setAttribute("cy", y);
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.bar.setAttribute("fill", this.colors.fill);
	        this.fillbar.setAttribute("fill", this.colors.accent);
	        this.knob.setAttribute("fill", this.colors.accent);
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.clicked) {
	          this.knobData.r = this.thickness * 0.75;
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	
	        if (this.orientation === "vertical") {
	          this.knobData.level = this.knobData.r + this._value.normalized * (this.height - this.knobData.r * 2);
	          this.knob.setAttribute("cy", this.height - this.knobData.level);
	          this.fillbar.setAttribute("y", this.height - this.knobData.level);
	          this.fillbar.setAttribute("height", this.knobData.level);
	        } else {
	          this.knobData.level = this._value.normalized * (this.width - this.knobData.r * 2) + this.knobData.r;
	          this.knob.setAttribute("cx", this.knobData.level);
	          this.fillbar.setAttribute("x", 0);
	          this.fillbar.setAttribute("width", this.knobData.level);
	        }
	      }
	    },
	    click: {
	      value: function click() {
	        this.knobData.r = this.thickness * 0.9;
	        this.position.anchor = this.mouse;
	        this.move();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	          this.position.update(this.mouse);
	          this._value.updateNormal(this.position.value);
	          this.emit("change", this._value.value);
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        this.render();
	      }
	    },
	    normalized: {
	      get: function () {
	        return this._value.normalized;
	      }
	    },
	    value: {
	
	      /**
	      The slider's current value. If set manually, will update the interface and trigger the output event.
	      @type {number}
	      @example slider.value = 10;
	      */
	
	      get: function () {
	        return this._value.value;
	      },
	      set: function (v) {
	        this._value.update(v);
	        this.position.value = this._value.normalized;
	        this.emit("change", this._value.value);
	        this.render();
	      }
	    },
	    min: {
	
	      /**
	      Lower limit of the sliders's output range
	      @type {number}
	      @example slider.min = 1000;
	      */
	
	      get: function () {
	        return this._value.min;
	      },
	      set: function (v) {
	        this._value.min = v;
	      }
	    },
	    max: {
	
	      /**
	      Upper limit of the slider's output range
	      @type {number}
	      @example slider.max = 1000;
	      */
	
	      get: function () {
	        return this._value.max;
	      },
	      set: function (v) {
	        this._value.max = v;
	      }
	    },
	    step: {
	
	      /**
	      The increment that the slider's value changes by.
	      @type {number}
	      @example slider.step = 5;
	      */
	
	      get: function () {
	        return this._value.step;
	      },
	      set: function (v) {
	        this._value.step = v;
	      }
	    },
	    mode: {
	
	      /**
	      Absolute mode (slider's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: "relative".
	      @type {string}
	      @example slider.mode = "relative";
	      */
	
	      get: function () {
	        return this.position.mode;
	      },
	      set: function (v) {
	        this.position.mode = v;
	      }
	    }
	  });
	
	  return Slider;
	})(Interface);
	
	module.exports = Slider;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var ToggleModel = __webpack_require__(13);
	var Interface = __webpack_require__(6);
	
	/**
	* Toggle
	*
	* @description Binary switch
	*
	* @demo <span nexus-ui="toggle"></span>
	*
	* @example
	* var toggle = new Nexus.Toggle('#target')
	*
	* @example
	* var toggle = new Nexus.Toggle('#target',{
	*     'size': [40,20],
	*     'state': false
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* Parameter: The boolean state of the interface.
	*
	* @outputexample
	* toggle.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Toggle = (function (_Interface) {
	  function Toggle() {
	    _classCallCheck(this, Toggle);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [40, 20],
	      target: false,
	      state: false
	    };
	
	    _get(Object.getPrototypeOf(Toggle.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._state = new ToggleModel(this.settings.state);
	
	    this.init();
	  }
	
	  _inherits(Toggle, _Interface);
	
	  _createClass(Toggle, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.bar = svg.create("rect");
	        this.knob = svg.create("circle");
	        this.element.appendChild(this.bar);
	        this.element.appendChild(this.knob);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        if (this.height < this.width / 2) {
	          this.knobSize = this.height / 2;
	        } else {
	          this.knobSize = this.width / 4;
	        }
	
	        this.bar.setAttribute("x", this.width / 2 - this.knobSize * 1.5);
	        this.bar.setAttribute("y", this.height / 2 - this.knobSize / 2);
	        this.bar.setAttribute("rx", this.knobSize / 2);
	        this.bar.setAttribute("ry", this.knobSize / 2);
	        this.bar.setAttribute("width", this.knobSize * 3);
	        this.bar.setAttribute("height", this.knobSize);
	
	        this.knob.setAttribute("cx", this.width / 2 - this.knobSize);
	        this.knob.setAttribute("cy", this.height / 2);
	        this.knob.setAttribute("r", this.knobSize);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.knob.setAttribute("fill", this.colors.accent);
	        this.render();
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.state) {
	          this.knob.setAttribute("cx", this.width / 2 - this.knobSize);
	          this.bar.setAttribute("fill", this.colors.fill);
	        } else {
	          this.knob.setAttribute("cx", this.width / 2 + this.knobSize);
	          this.bar.setAttribute("fill", this.colors.accent);
	        }
	      }
	    },
	    click: {
	      value: function click() {
	        this.flip();
	        this.render();
	        this.emit("change", this.state);
	      }
	    },
	    state: {
	
	      /**
	      Whether the toggle is currently on or off. Setting this property will update the toggle interface and trigger the output event.
	      @type {boolean}
	      @example toggle.state = false;
	      */
	
	      get: function () {
	        return this._state.state;
	      },
	      set: function (value) {
	        this._state.flip(value);
	        this.emit("change", this.state);
	        this.render();
	      }
	    },
	    flip: {
	
	      /**
	      * Switch the toggle state to its opposite state
	      * @example
	      * toggle.flip();
	      */
	
	      value: function flip() {
	        this._state.flip();
	        this.render();
	      }
	    }
	  });
	
	  return Toggle;
	})(Interface);
	
	module.exports = Toggle;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var ButtonTemplate = __webpack_require__(17);
	
	/**
	* Button
	*
	* @description Circular button with optional aftertouch.
	*
	* @demo <span nexus-ui="button"></span>
	*
	* @example
	* var button = new Nexus.Button('#target')
	*
	* @example
	* var button = new Nexus.Button('#target',{
	*   'size': [80,80],
	*   'mode': 'aftertouch',
	*   'state': false
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* In <b>button mode</b>, <b>toggle mode</b>, and <b>impulse mode</b>, the output data is a boolean describing the state of the button.<br>
	* In <b>aftertouch mode</b>, the output data is an object containing x (0-1) and y (0-1) positions of aftertouch.
	*
	* @outputexample
	* button.on('change',function(v) {
	*   // v is the value of the button
	*   console.log(v);
	* })
	*
	*/
	
	var Button = (function (_ButtonTemplate) {
	  function Button() {
	    _classCallCheck(this, Button);
	
	    var options = ["mode"];
	
	    var defaults = {
	      size: [80, 80],
	      mode: "aftertouch", // button, aftertouch, impulse, toggle
	      state: false
	    };
	
	    _get(Object.getPrototypeOf(Button.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    /**
	    * Interaction mode: supports "button", "aftertouch", "impulse", or "toggle"
	    * @type {string}
	    * @example button.mode = 'toggle';
	    */
	    this.mode = this.settings.mode;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(Button, _ButtonTemplate);
	
	  _createClass(Button, {
	    buildInterface: {
	      value: function buildInterface() {
	        this.pad = svg.create("circle");
	        this.element.appendChild(this.pad);
	
	        this.interactionTarget = this.pad;
	
	        // only used if in 'aftertouch' mode
	        this.defs = svg.create("defs");
	        this.element.appendChild(this.defs);
	
	        this.gradient = svg.radialGradient(this.defs, 2);
	
	        this.gradient.stops[0].setAttribute("offset", "30%");
	
	        this.gradient.stops[1].setAttribute("offset", "100%");
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this.pad.setAttribute("cx", this.width / 2);
	        this.pad.setAttribute("cy", this.height / 2);
	        this.pad.setAttribute("r", Math.min(this.width, this.height) / 2 - this.width / 40);
	        this.pad.setAttribute("stroke-width", this.width / 20);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        this.gradient.stops[0].setAttribute("stop-color", this.colors.accent);
	        this.gradient.stops[1].setAttribute("stop-color", this.colors.fill);
	        this.render();
	      }
	    },
	    render: {
	
	      /*
	      * Update the visual interface using its current state
	      *
	      * @example
	      * button.render();
	      */
	
	      value: function render() {
	        if (!this.state) {
	          this.pad.setAttribute("fill", this.colors.fill);
	          this.pad.setAttribute("stroke", this.colors.mediumLight);
	        } else {
	          if (this.mode === "aftertouch") {
	            this.pad.setAttribute("stroke", "url(#" + this.gradient.id + ")");
	            this.gradient.element.setAttribute("cx", this.position.x * 100 + "%");
	            this.gradient.element.setAttribute("cy", (1 - this.position.y) * 100 + "%");
	          } else {
	            this.pad.setAttribute("stroke", this.colors.accent);
	          }
	          this.pad.setAttribute("fill", this.colors.accent);
	        }
	      }
	    }
	  });
	
	  return Button;
	})(ButtonTemplate);
	
	module.exports = Button;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var math = __webpack_require__(5);
	var ToggleModel = __webpack_require__(13);
	var Interface = __webpack_require__(6);
	
	/**
	Button Template
	*/
	
	var ButtonTemplate = (function (_Interface) {
	  function ButtonTemplate(args, options, defaults) {
	    _classCallCheck(this, ButtonTemplate);
	
	    _get(Object.getPrototypeOf(ButtonTemplate.prototype), "constructor", this).call(this, args, options, defaults);
	
	    this.mode = this.settings.mode || "button";
	
	    this.position = {
	      x: 0,
	      y: 0
	    };
	
	    this._state = new ToggleModel(this.settings.state);
	  }
	
	  _inherits(ButtonTemplate, _Interface);
	
	  _createClass(ButtonTemplate, {
	    buildInterface: {
	      value: function buildInterface() {
	        this.pad = svg.create("circle");
	        this.pad.setAttribute("fill", "#d18");
	        this.pad.setAttribute("stroke", "#d18");
	        this.pad.setAttribute("stroke-width", 4);
	
	        this.element.appendChild(this.pad);
	
	        this.interactionTarget = this.pad;
	
	        this.sizeInterface();
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	        this.pad.setAttribute("cx", this.width / 2);
	        this.pad.setAttribute("cy", this.height / 2);
	        this.pad.setAttribute("r", Math.min(this.width, this.height) / 2 - 2);
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.state) {
	          this.pad.setAttribute("fill", this.colors.fill);
	          this.pad.setAttribute("stroke", this.colors.mediumLight);
	        } else {
	          this.pad.setAttribute("fill", this.colors.accent);
	          this.pad.setAttribute("stroke", this.colors.accent);
	        }
	      }
	    },
	    down: {
	      value: function down(paintbrush) {
	        switch (this.mode) {
	          case "impulse":
	            this.turnOn();
	            if (this.timeout) {
	              clearTimeout(this.timeout);
	            }
	            this.timeout = setTimeout(this.turnOff.bind(this), 30);
	            //    this.emit('change',this.state);
	            break;
	          case "button":
	            this.turnOn();
	            //    this.emit('change',this.state);
	            break;
	          case "aftertouch":
	            this.position = {
	              x: math.clip(this.mouse.x / this.width, 0, 1),
	              y: math.clip(1 - this.mouse.y / this.height, 0, 1)
	            };
	            this.turnOn();
	            //    this.emit('change',{
	            //      state: this.state,
	            //      x: this.position.x,
	            //      y: this.position.y,
	            //    });
	            break;
	          case "toggle":
	            this.flip(paintbrush);
	            //    this.emit('change',this.state);
	            break;
	        }
	      }
	    },
	    bend: {
	      value: function bend(mouse) {
	        if (this.mode === "aftertouch") {
	          this.mouse = mouse || this.mouse;
	          this.position = {
	            x: math.clip(this.mouse.x / this.width, 0, 1),
	            y: math.clip(1 - this.mouse.y / this.height, 0, 1)
	          };
	          this.emit("change", {
	            state: this.state,
	            x: this.position.x,
	            y: this.position.y });
	          this.render();
	        }
	      }
	    },
	    up: {
	      value: function up() {
	        switch (this.mode) {
	          case "button":
	            this.turnOff();
	            //  this.emit('change',this.state);
	            break;
	          case "aftertouch":
	            this.turnOff();
	            this.position = {
	              x: math.clip(this.mouse.x / this.width, 0, 1),
	              y: math.clip(1 - this.mouse.y / this.height, 0, 1)
	            };
	            //  this.emit('change',{
	            //    state: this.state,
	            //    x: this.position.x,
	            //    y: this.position.y,
	            //  });
	            break;
	        }
	      }
	    },
	    click: {
	
	      /* overwritable interaction handlers */
	
	      value: function click() {
	        this.down();
	      }
	    },
	    move: {
	      value: function move() {
	        this.bend();
	      }
	    },
	    release: {
	      value: function release() {
	        this.up();
	      }
	    },
	    state: {
	
	      /**
	      Whether the button is on (pressed) or off (not pressed)
	      @type {boolean}
	      @example button.state = true;
	      */
	
	      get: function () {
	        return this._state.state;
	      },
	      set: function (value) {
	        this._state.flip(value);
	        if (this.mode === "aftertouch") {
	          this.emit("change", {
	            state: this.state,
	            x: this.position.x,
	            y: this.position.y });
	        } else {
	          this.emit("change", this.state);
	        }
	        this.render();
	      }
	    },
	    flip: {
	
	      /**
	      Change the button to its alternate state (off=>on, on=>off), or flip it to a specified state.
	      @param value {boolean} (Optional) State to flip to.
	      @example button.flip();
	      */
	
	      value: function flip(value) {
	        this._state.flip(value);
	        if (this.mode === "aftertouch") {
	          this.emit("change", {
	            state: this.state,
	            x: this.position.x,
	            y: this.position.y });
	        } else {
	          this.emit("change", this.state);
	        }
	        this.render();
	      }
	    },
	    turnOn: {
	
	      /**
	      Turn the button's state to true.
	      @example button.turnOn();
	      */
	
	      value: function turnOn(emitting) {
	        this._state.on();
	        if (emitting !== false) {
	          if (this.mode === "aftertouch") {
	            this.emit("change", {
	              state: this.state,
	              x: this.position.x,
	              y: this.position.y });
	          } else {
	            this.emit("change", this.state);
	          }
	        }
	        this.render();
	      }
	    },
	    turnOff: {
	
	      /**
	      Turn the button's state to false.
	      @example button.turnOff();
	      */
	
	      value: function turnOff(emitting) {
	        this._state.off();
	        if (emitting !== false) {
	          if (this.mode === "aftertouch") {
	            this.emit("change", {
	              state: this.state,
	              x: this.position.x,
	              y: this.position.y });
	          } else {
	            this.emit("change", this.state);
	          }
	        }
	        this.render();
	      }
	    }
	  });
	
	  return ButtonTemplate;
	})(Interface);
	
	module.exports = ButtonTemplate;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var ButtonTemplate = __webpack_require__(17);
	
	/**
	* TextButton
	*
	* @description Text button
	*
	* @demo <span nexus-ui="textButton"></span>
	*
	* @example
	* var textbutton = new Nexus.TextButton('#target')
	*
	* @example
	* var textbutton = new Nexus.TextButton('#target',{
	*     'size': [150,50],
	*     'state': false,
	*     'text': 'Play',
	*     'alternateText': 'Stop'
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is a <i>string</i> of the text on the button at the moment it was clicked.
	*
	* @outputexample
	* textbutton.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	var TextButton = (function (_ButtonTemplate) {
	  function TextButton() {
	    _classCallCheck(this, TextButton);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [150, 50],
	      state: false,
	      text: "Play"
	    };
	
	    _get(Object.getPrototypeOf(TextButton.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._text = this.settings.text;
	
	    if (this.settings.alternate) {
	      //TODO: Remove this conditional in a breaking-changes release
	      this.settings.alternateText = this.settings.alternate;
	      console.warn("'alternate' initiator is deprecated. Use 'alternateText' instead.");
	    }
	    this._alternateText = this.settings.alternateText;
	    this.mode = this.settings.alternateText ? "toggle" : "button";
	    this.init();
	    this.render();
	
	    this.state = this.settings.state;
	  }
	
	  _inherits(TextButton, _ButtonTemplate);
	
	  _createClass(TextButton, {
	    buildFrame: {
	      value: function buildFrame() {
	
	        this.element = document.createElement("div");
	        this.parent.appendChild(this.element);
	
	        this.textElement = document.createElement("div");
	        this.textElement.innerHTML = this._text;
	        this.element.appendChild(this.textElement);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {}
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.element.style.color = this.colors.dark;
	        this.render();
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	        var textsize = this.height / 3;
	        var textsize2 = this.width / (this._text.length + 2);
	        textsize = Math.min(textsize, textsize2);
	        if (this.alternateText) {
	          var textsize3 = this.width / (this.alternateText.length + 2);
	          textsize = Math.min(textsize, textsize3);
	        }
	        var styles = "width: " + this.width + "px;";
	        styles += "height: " + this.height + "px;";
	        styles += "padding: " + (this.height - textsize) / 2 + "px 0px;";
	        styles += "box-sizing: border-box;";
	        styles += "text-align: center;";
	        styles += "font-family: inherit;";
	        styles += "font-weight: 700;";
	        styles += "opacity: 1;";
	        styles += "font-size:" + textsize + "px;";
	        this.textElement.style.cssText = styles;
	        this.render();
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.state) {
	          this.element.style.backgroundColor = this.colors.fill;
	          this.textElement.style.color = this.colors.dark;
	          this.textElement.innerHTML = this._text;
	        } else {
	          this.element.style.backgroundColor = this.colors.accent;
	          this.textElement.style.color = this.colors.fill;
	          if (this.alternateText) {
	            this.textElement.innerHTML = this._alternateText;
	          } else {
	            this.textElement.innerHTML = this._text;
	          }
	        }
	      }
	    },
	    alternateText: {
	
	      /**
	      The text to display when the button is in its "on" state. If set, this puts the button in "toggle" mode.
	      @type {String}
	      */
	
	      get: function () {
	        return this._alternateText;
	      },
	      set: function (text) {
	        if (text) {
	          this.mode = "toggle";
	        } else {
	          this.mode = "button";
	        }
	        this._alternateText = text;
	        this.render();
	      }
	    },
	    text: {
	
	      /**
	      The text to display. (If .alternateText exists, then this .text will only be displayed when the button is in its "off" state.)
	      @type {String}
	      */
	
	      get: function () {
	        return this._text;
	      },
	      set: function (text) {
	        this._text = text;
	        this.sizeInterface();
	        this.render();
	      }
	    }
	  });
	
	  return TextButton;
	})(ButtonTemplate);
	
	module.exports = TextButton;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	//let svg = require('../util/svg');
	var Interface = __webpack_require__(6);
	var Button = __webpack_require__(16);
	
	/**
	* RadioButton
	*
	* @description An array of buttons. By default, selecting one button will deselect all other buttons, but this can be customized using the API below.
	*
	* @demo <div nexus-ui="RadioButton"></div>
	*
	* @example
	* var radiobutton = new Nexus.RadioButton('#target')
	*
	* @example
	* var radiobutton = new Nexus.RadioButton('#target',{
	*   'size': [120,25],
	*   'numberOfButtons': 4,
	*   'active': -1
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data an <i>integer</i>, the index of the button that is currently on. If no button is selected, the value will be -1.
	*
	* @outputexample
	* radiobutton.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	var RadioButton = (function (_Interface) {
	  function RadioButton() {
	    _classCallCheck(this, RadioButton);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [120, 25],
	      numberOfButtons: 4,
	      active: -1
	    };
	
	    _get(Object.getPrototypeOf(RadioButton.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.buttons = [];
	    this._numberOfButtons = this.settings.numberOfButtons;
	    this.active = this.settings.active;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(RadioButton, _Interface);
	
	  _createClass(RadioButton, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("div");
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	
	        for (var i = 0; i < this._numberOfButtons; i++) {
	          var container = document.createElement("span");
	
	          var button = new Button(container, {
	            mode: "toggle",
	            component: true }, this.update.bind(this, i));
	
	          this.buttons.push(button);
	          this.element.appendChild(container);
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        var buttonWidth = this.width / this._numberOfButtons;
	        var buttonHeight = this.height;
	
	        for (var i = 0; i < this._numberOfButtons; i++) {
	          this.buttons[i].resize(buttonWidth, buttonHeight);
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        for (var i = 0; i < this._numberOfButtons; i++) {
	          this.buttons[i].colors = this.colors;
	          this.buttons[i].render();
	        }
	      }
	    },
	    update: {
	      value: function update(index) {
	        if (this.buttons[index].state) {
	          this.select(index);
	        } else {
	          this.deselect();
	        }
	        //  this.render();
	      }
	    },
	    render: {
	      value: function render() {
	        for (var i = 0; i < this.buttons.length; i++) {
	          if (i === this.active) {
	            this.buttons[i].turnOn(false);
	          } else {
	            this.buttons[i].turnOff(false);
	          }
	        }
	      }
	    },
	    select: {
	
	      /**
	      Select one button and deselect all other buttons.
	      @param index {number} The index of the button to select
	      */
	
	      value: function select(index) {
	        if (index >= 0 && index < this.buttons.length) {
	          this.active = index;
	          this.emit("change", this.active);
	          this.render();
	        }
	      }
	    },
	    deselect: {
	
	      /**
	      Deselect all buttons.
	      */
	
	      value: function deselect() {
	        this.active = -1;
	        this.emit("change", this.active);
	        this.render();
	      }
	    },
	    numberOfButtons: {
	      get: function () {
	        return this._numberOfButtons;
	      },
	
	      /**
	       * Update how many buttons are in the interface
	       * @param  {number} buttons How many buttons are in the interface
	       */
	      set: function (buttons) {
	        this._numberOfButtons = buttons;
	        for (var i = 0; i < this.buttons.length; i++) {
	          this.buttons[i].destroy();
	        }
	        this.buttons = [];
	        //  for (let i=0;i<this.buttons.length;i++) {
	        //    this.buttons[i].destroy();
	        //  }
	        this.empty();
	        this.buildInterface();
	      }
	    }
	  });
	
	  return RadioButton;
	})(Interface);
	
	module.exports = RadioButton;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	var math = __webpack_require__(5);
	
	/**
	* Number
	*
	* @description Number interface which is controllable by dragging or typing.
	*
	* @demo <span nexus-ui="number"></span>
	*
	* @example
	* var number = new Nexus.Number('#target')
	*
	* @example
	* var number = new Nexus.Number('#target',{
	*   'size': [60,30],
	*   'value': 0,
	*   'min': 0,
	*   'max': 20000,
	*   'step': 1
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is the number value of the interface.
	*
	* @outputexample
	* number.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Number = (function (_Interface) {
	  function Number() {
	    _classCallCheck(this, Number);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [60, 30],
	      value: 0,
	      min: 0,
	      max: 20000,
	      step: 1
	    };
	
	    _get(Object.getPrototypeOf(Number.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._value = new Step(this.settings.min, this.settings.max, this.settings.step, this.settings.value);
	
	    /*
	    Default: 2. How many decimal places to clip the number's visual rendering to. This does not affect number's actual value output -- for that, set the step property to .01, .1, or 1.
	    @type {number}
	    @example number.decimalPlaces = 2;
	    */
	    this.decimalPlaces = 2;
	    this.actual = 0;
	
	    this.max = this._value.max;
	
	    this.min = this._value.min;
	
	    this.step = this._value.step;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(Number, _Interface);
	
	  _createClass(Number, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("input");
	        this.element.type = "text";
	
	        this.element.addEventListener("blur", (function () {
	          this.element.style.backgroundColor = this.colors.fill;
	          this.element.style.color = this.colors.dark;
	          if (this.element.value !== this.value) {
	            this.value = parseFloat(this.element.value);
	            this.render();
	          }
	        }).bind(this));
	
	        this.element.addEventListener("keydown", (function (e) {
	          if (e.which < 48 || e.which > 57) {
	            if (e.which !== 189 && e.which !== 190 && e.which !== 8) {
	              e.preventDefault();
	            }
	          }
	          if (e.which === 13) {
	            this.element.blur();
	            this.value = this.element.value;
	            this.emit("change", this.value);
	            this.render();
	          }
	        }).bind(this));
	
	        this.parent.appendChild(this.element);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this._minDimension = Math.min(this.width, this.height);
	
	        var styles = "width: " + this.width + "px;";
	        styles += "height: " + this.height + "px;";
	        styles += "background-color: #e7e7e7;";
	        styles += "color: #333;";
	        styles += "font-family: arial;";
	        styles += "font-weight: 500;";
	        styles += "font-size:" + this._minDimension / 2 + "px;";
	        //  styles += 'highlight: #d18;';
	        styles += "border: none;";
	        styles += "outline: none;";
	        styles += "padding: " + this._minDimension / 4 + "px " + this._minDimension / 4 + "px;";
	        styles += "box-sizing: border-box;";
	        styles += "userSelect: text;";
	        styles += "mozUserSelect: text;";
	        styles += "webkitUserSelect: text;";
	        this.element.style.cssText += styles;
	
	        // to add eventually
	        // var css = '#'+this.elementID+'::selection{ background-color: transparent }';
	
	        this.element.value = this.value;
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.element.style.backgroundColor = this.colors.fill;
	        this.element.style.color = this.colors.dark;
	      }
	    },
	    render: {
	      value: function render() {
	
	        this.element.value = math.prune(this.value, this.decimalPlaces);
	      }
	    },
	    click: {
	      value: function click() {
	        this.hasMoved = false;
	        this.element.readOnly = true;
	        this.actual = this.value;
	        this.initial = { y: this.mouse.y };
	        this.changeFactor = math.invert(this.mouse.x / this.width);
	        console.log(this.changeFactor);
	      }
	    },
	    move: {
	      value: function move() {
	        this.hasMoved = true;
	        if (this.clicked) {
	
	          var newvalue = this.actual - (this.mouse.y - this.initial.y) * (math.clip(this.max - this.min, 0, 1000) / 200) * Math.pow(this.changeFactor, 2);
	          this.value = newvalue;
	
	          this.render();
	          if (this._value.changed) {
	            this.emit("change", this.value);
	          }
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        if (!this.hasMoved) {
	          this.element.readOnly = false;
	          this.element.focus();
	          this.element.setSelectionRange(0, this.element.value.length);
	          this.element.style.backgroundColor = this.colors.accent;
	          this.element.style.color = this.colors.light;
	        } else {
	          document.body.focus();
	        }
	      }
	    },
	    link: {
	
	      /**
	      Connect this number interface to a dial or slider
	      @param {Interface} element Element to connect to.
	      @example number.link(slider)
	      */
	
	      value: function link(destination) {
	        var _this = this;
	
	        this.min = destination.min;
	        this.max = destination.max;
	        this.step = destination.step;
	        destination.on("change", function (v) {
	          _this.passiveUpdate(v);
	        });
	        this.on("change", function (v) {
	          destination.value = v;
	        });
	        this.value = destination.value;
	        /*  return {
	            listener1: listener1,
	            listener2: listener2,
	            destroy: () => {
	              listener1.remove() (or similar)
	              listener2.remove() (or similar)
	            }
	          } */
	      }
	    },
	    passiveUpdate: {
	      value: function passiveUpdate(v) {
	        this._value.update(v);
	        this.render();
	      }
	    },
	    value: {
	
	      /**
	      The interface's current value. If set manually, will update the interface and trigger the output event.
	      @type {number}
	      @example number.value = 10;
	      */
	
	      get: function () {
	        return this._value.value;
	      },
	      set: function (v) {
	        this._value.update(v);
	        this.emit("change", this.value);
	        this.render();
	      }
	    },
	    min: {
	
	      /**
	      Lower limit of the number's output range
	      @type {number}
	      @example number.min = 1000;
	      */
	
	      get: function () {
	        return this._value.min;
	      },
	      set: function (v) {
	        this._value.min = v;
	      }
	    },
	    max: {
	
	      /**
	      Upper limit of the number's output range
	      @type {number}
	      @example number.max = 1000;
	      */
	
	      get: function () {
	        return this._value.max;
	      },
	      set: function (v) {
	        this._value.max = v;
	      }
	    },
	    step: {
	
	      /**
	      The increment that the number's value changes by.
	      @type {number}
	      @example number.step = 5;
	      */
	
	      get: function () {
	        return this._value.step;
	      },
	      set: function (v) {
	        this._value.step = v;
	      }
	    }
	  });
	
	  return Number;
	})(Interface);
	
	module.exports = Number;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var Interface = __webpack_require__(6);
	
	/**
	* Select
	*
	* @description Dropdown menu
	*
	* @demo <span nexus-ui="select"></span>
	*
	* @example
	* var select = new Nexus.Select('#target')
	*
	* @example
	* var select = new Nexus.Select('#target',{
	*   'size': [100,30],
	*   'options': ['default','options']
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is an object containing the text value of the selected option, as well as the numeric index of the selection.
	*
	* @outputexample
	* select.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Select = (function (_Interface) {
	  function Select() {
	    _classCallCheck(this, Select);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [100, 30],
	      options: ["default", "options"]
	    };
	
	    _get(Object.getPrototypeOf(Select.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._selectedIndex = -1;
	    this._value = false;
	
	    this._options = this.settings.options;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(Select, _Interface);
	
	  _createClass(Select, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("select");
	        this.element.style.fontSize = this.height / 2 + "px";
	        this.element.style.outline = "none";
	        this.element.style.highlight = "none";
	        this.element.style.width = this.width + "px";
	        this.element.style.height = this.height + "px";
	
	        this.boundRender = this.render.bind(this);
	
	        this.element.addEventListener("change", this.boundRender);
	
	        this.parent.appendChild(this.element);
	      }
	    },
	    attachListeners: {
	      value: function attachListeners() {}
	    },
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.defineOptions();
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.element.style.backgroundColor = this.colors.fill;
	        this.element.style.color = this.colors.dark;
	        this.element.style.border = "solid 0px " + this.colors.mediumLight;
	      }
	    },
	    render: {
	      value: function render() {
	
	        this._value = this.element.options[this.element.selectedIndex].text;
	        this._selectedIndex = this.element.selectedIndex;
	        this.emit("change", {
	          value: this._value,
	          index: this._selectedIndex
	        });
	      }
	    },
	    click: {
	      value: function click() {}
	    },
	    move: {
	      value: function move() {}
	    },
	    release: {
	      value: function release() {}
	    },
	    defineOptions: {
	
	      /**
	       * Update the list of options. This removes all existing options and creates a new list of options.
	       * @param  {array} options New array of options
	       */
	
	      value: function defineOptions(options) {
	
	        /*  function removeOptions(selectbox)
	          {
	              var i;
	              for(i = selectbox.options.length - 1 ; i >= 0 ; i--)
	              {
	                  selectbox.remove(i);
	              }
	          }
	          //using the function:
	          removeOptions(document.getElementById("mySelectObject")); */
	
	        if (options) {
	          this._options = options;
	        }
	
	        for (var i = this.element.options.length - 1; i >= 0; i--) {
	          this.element.remove(i);
	        }
	
	        for (var i = 0; i < this._options.length; i++) {
	          this.element.options.add(new Option(this._options[i], i));
	        }
	      }
	    },
	    value: {
	
	      /**
	      The text of the option that is currently selected. If set, will update the interface and trigger the output event.
	      @type {String}
	      @example select.value = "sawtooth";
	      */
	
	      get: function () {
	        return this._value;
	      },
	      set: function (v) {
	        this._value = v;
	        for (var i = 0; i < this.element.options.length; i++) {
	          if (v === this.element.options[i].text) {
	            this.selectedIndex = i;
	            break;
	          }
	        }
	      }
	    },
	    selectedIndex: {
	
	      /**
	      The numeric index of the option that is currently selected. If set, will update the interface and trigger the output event.
	      @type {number}
	      @example select.selectedIndex = 2;
	      */
	
	      get: function () {
	        return this._selectedIndex;
	      },
	      set: function (v) {
	        this._selectedIndex = v;
	        this.element.selectedIndex = v;
	        this.render();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {
	        this.element.removeEventListener("change", this.boundRender);
	      }
	    }
	  });
	
	  return Select;
	})(Interface);
	
	module.exports = Select;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var math = __webpack_require__(5);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	/**
	* Dial
	*
	*
	* @description Dial with radial or linear interaction.
	*
	* @demo <span nexus-ui="dial"></span>
	*
	* @example
	* var dial = new Nexus.Dial('#target')
	*
	* @example
	* var dial = new Nexus.Dial('#target',{
	*   'size': [75,75],
	*   'interaction': 'radial', // "radial", "vertical", or "horizontal"
	*   'mode': 'relative', // "absolute" or "relative"
	*   'min': 0,
	*   'max': 1,
	*   'step': 0,
	*   'value': 0
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is the number value of the interface.
	*
	* @outputexample
	* dial.on('change',function(v) {
	*   console.log(v);
	* })
	*
	* @tutorial
	* Dial
	* ygGMxq
	*
	*/
	
	var Dial = (function (_Interface) {
	  function Dial() {
	    _classCallCheck(this, Dial);
	
	    var options = ["min", "max", "value"];
	
	    var defaults = {
	      size: [75, 75],
	      interaction: "radial", // radial, vertical, horizontal
	      mode: "relative", // absolute, relative
	      min: 0,
	      max: 1,
	      step: 0,
	      value: 0
	    };
	
	    _get(Object.getPrototypeOf(Dial.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.interaction = this.settings.interaction;
	
	    this._value = new Step(this.settings.min, this.settings.max, this.settings.step, this.settings.value);
	
	    this.position = new Interaction.Handle(this.settings.mode, this.interaction, [0, this.width], [this.height, 0]);
	
	    this.init();
	
	    this.value = this._value.value;
	
	    this.position.value = this._value.normalized;
	
	    this.previousAngle = false;
	
	    this.emit("change", this.value);
	  }
	
	  _inherits(Dial, _Interface);
	
	  _createClass(Dial, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.background = svg.create("circle");
	        this.screw = svg.create("circle");
	        this.handle = svg.create("path");
	        this.handle2 = svg.create("path");
	        this.handleFill = svg.create("path");
	        this.handle2Fill = svg.create("path");
	        this.handleLine = svg.create("path");
	
	        this.element.appendChild(this.background);
	        this.element.appendChild(this.handle);
	        this.element.appendChild(this.handle2);
	        this.element.appendChild(this.handleFill);
	        this.element.appendChild(this.handle2Fill);
	        this.element.appendChild(this.handleLine);
	        this.element.appendChild(this.screw);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this.position.resize([0, this.width], [this.height, 0]);
	
	        var center = {
	          x: this.width / 2,
	          y: this.height / 2
	        };
	
	        var diameter = Math.min(this.width, this.height);
	
	        this.background.setAttribute("cx", center.x);
	        this.background.setAttribute("cy", center.y);
	        this.background.setAttribute("r", diameter / 2 - diameter / 40);
	
	        this.screw.setAttribute("cx", center.x);
	        this.screw.setAttribute("cy", center.y);
	        this.screw.setAttribute("r", diameter / 12);
	
	        var value = this.value;
	
	        var handlePoints = {
	          start: Math.PI * 1.5,
	          end: math.clip(math.scale(value, 0, 0.5, Math.PI * 1.5, Math.PI * 0.5), Math.PI * 0.5, Math.PI * 1.5)
	        };
	        var handle2Points = {
	          start: Math.PI * 2.5,
	          end: math.clip(math.scale(value, 0.5, 1, Math.PI * 2.5, Math.PI * 1.5), Math.PI * 1.5, Math.PI * 2.5)
	        };
	
	        var handlePath = svg.arc(center.x, center.y, diameter / 2 - diameter / 40, handlePoints.start, handlePoints.end);
	        var handle2Path = svg.arc(center.x, center.y, diameter / 2 - diameter / 40, handle2Points.start, handle2Points.end);
	
	        this.handle.setAttribute("d", handlePath);
	        this.handle.setAttribute("stroke-width", diameter / 20);
	        this.handle.setAttribute("fill", "none");
	
	        this.handle2.setAttribute("d", handle2Path);
	        this.handle2.setAttribute("stroke-width", diameter / 20);
	        this.handle2.setAttribute("fill", "none");
	
	        handlePath += " L " + center.x + " " + center.y;
	
	        this.handleFill.setAttribute("d", handlePath);
	        this.handleFill.setAttribute("fill-opacity", "0.3");
	
	        handle2Path += " L " + center.x + " " + center.y;
	
	        this.handle2Fill.setAttribute("d", handle2Path);
	        this.handle2Fill.setAttribute("fill-opacity", "0.3");
	
	        var arcEndingA = undefined;
	        if (value < 0.5) {
	          arcEndingA = handlePoints.end;
	        } else {
	          arcEndingA = handle2Points.end;
	        }
	
	        var arcEndingX = center.x + Math.cos(arcEndingA) * (diameter / 2);
	        var arcEndingY = center.y + Math.sin(arcEndingA) * (diameter / 2) * -1;
	
	        this.handleLine.setAttribute("d", "M " + center.x + " " + center.y + " L " + arcEndingX + " " + arcEndingY);
	        this.handleLine.setAttribute("stroke-width", diameter / 20);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.background.setAttribute("fill", this.colors.fill);
	        this.screw.setAttribute("fill", this.colors.accent);
	        this.handle.setAttribute("stroke", this.colors.accent);
	        this.handle2.setAttribute("stroke", this.colors.accent);
	        this.handleFill.setAttribute("fill", this.colors.accent);
	        this.handle2Fill.setAttribute("fill", this.colors.accent);
	        this.handleLine.setAttribute("stroke", this.colors.accent);
	      }
	    },
	    render: {
	      value: function render() {
	        var value = this._value.normalized;
	
	        var center = {
	          x: this.width / 2,
	          y: this.height / 2
	        };
	
	        var diameter = Math.min(this.width, this.height);
	
	        var handlePoints = {
	          start: Math.PI * 1.5,
	          end: math.clip(math.scale(value, 0, 0.5, Math.PI * 1.5, Math.PI * 0.5), Math.PI * 0.5, Math.PI * 1.5)
	        };
	        var handle2Points = {
	          start: Math.PI * 2.5,
	          end: math.clip(math.scale(value, 0.5, 1, Math.PI * 2.5, Math.PI * 1.5), Math.PI * 1.5, Math.PI * 2.5)
	        };
	
	        var handlePath = svg.arc(center.x, center.y, diameter / 2 - diameter / 40, handlePoints.start, handlePoints.end);
	        var handle2Path = svg.arc(center.x, center.y, diameter / 2 - diameter / 40, handle2Points.start, handle2Points.end);
	
	        this.handle.setAttribute("d", handlePath);
	        this.handle2.setAttribute("d", handle2Path);
	
	        handlePath += " L " + center.x + " " + center.y;
	
	        this.handleFill.setAttribute("d", handlePath);
	
	        handle2Path += " L " + center.x + " " + center.y;
	
	        this.handle2Fill.setAttribute("d", handle2Path);
	
	        var arcEndingA = undefined;
	        if (value <= 0.5) {
	          arcEndingA = handlePoints.end;
	        } else {
	          arcEndingA = handle2Points.end;
	        }
	
	        var arcEndingX = center.x + Math.cos(arcEndingA) * (diameter / 2);
	        var arcEndingY = center.y + Math.sin(arcEndingA) * (diameter / 2) * -1;
	
	        this.handleLine.setAttribute("d", "M " + center.x + " " + center.y + " L " + arcEndingX + " " + arcEndingY);
	      }
	    },
	    click: {
	      value: function click() {
	        if (this.mode === "relative") {
	          this.previousAngle = false;
	        }
	        this.position.anchor = this.mouse;
	        this.position.value = this._value.normalized;
	        this.move();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	
	          this.position.update(this.mouse);
	
	          var angle = this.position.value * Math.PI * 2;
	
	          if (angle < 0) {
	            angle += Math.PI * 2;
	          }
	
	          if (this.mode === "relative") {
	            if (this.previousAngle !== false && Math.abs(this.previousAngle - angle) > 2) {
	              if (this.previousAngle > 3) {
	                angle = Math.PI * 2;
	              } else {
	                angle = 0;
	              }
	            }
	          } /* else {
	            if (this.previousAngle !== false && Math.abs(this.previousAngle - angle) > 2) {
	              if (this.previousAngle > 3) {
	                angle = Math.PI*2;
	              } else {
	                angle = 0;
	              }
	            }
	            } */
	          this.previousAngle = angle;
	
	          var realValue = angle / (Math.PI * 2);
	
	          this.value = this._value.updateNormal(realValue);
	
	          if (this.mode === "relative") {
	            this.position.value = realValue;
	          }
	
	          this.emit("change", this._value.value);
	
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {}
	    },
	    value: {
	
	      /*
	      Dial's value. When set, it will automatically be adjust to fit min/max/step settings of the interface.
	      @type {number}
	      @example dial.value = 10;
	       get value() {
	        return this._value.value;
	      }
	       set value(value) {
	        this._value.update(value);
	        this.emit('change',this.value);
	        this.render();
	      }
	      */
	
	      /**
	      Dial's value. When set, it will automatically be adjust to fit min/max/step settings of the interface.
	      @type {number}
	      @example dial.value = 10;
	      */
	
	      get: function () {
	        return this._value.value;
	      },
	      set: function (v) {
	        this._value.update(v);
	        this.position.value = this._value.normalized;
	        this.emit("change", this._value.value);
	        this.render();
	      }
	    },
	    min: {
	
	      /**
	      Lower limit of the dial's output range
	      @type {number}
	      @example dial.min = 1000;
	      */
	
	      get: function () {
	        return this._value.min;
	      },
	      set: function (v) {
	        this._value.min = v;
	      }
	    },
	    max: {
	
	      /**
	      Upper limit of the dial's output range
	      @type {number}
	      @example dial.max = 1000;
	      */
	
	      get: function () {
	        return this._value.max;
	      },
	      set: function (v) {
	        this._value.max = v;
	      }
	    },
	    step: {
	
	      /**
	      The increment that the dial's value changes by.
	      @type {number}
	      @example dial.step = 5;
	      */
	
	      get: function () {
	        return this._value.step;
	      },
	      set: function (v) {
	        this._value.step = v;
	      }
	    },
	    mode: {
	
	      /**
	      Absolute mode (dial's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: "relative".
	      @type {string}
	      @example dial.mode = "relative";
	      */
	
	      get: function () {
	        return this.position.mode;
	      },
	      set: function (v) {
	        this.position.mode = v;
	      }
	    },
	    normalized: {
	
	      /**
	      Normalized value of the dial.
	      @type {number}
	      @example dial.normalized = 0.5;
	      */
	
	      get: function () {
	        return this._value.normalized;
	      },
	      set: function (v) {
	        this._value.updateNormal(v);
	        this.emit("change", this.value);
	      }
	    }
	  });
	
	  return Dial;
	})(Interface);
	
	module.exports = Dial;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	var ButtonTemplate = __webpack_require__(17);
	var touch = __webpack_require__(9);
	
	var PianoKey = (function (_ButtonTemplate) {
	  function PianoKey() {
	    _classCallCheck(this, PianoKey);
	
	    var options = ["value", "note", "color"];
	
	    var defaults = {
	      size: [80, 80],
	      target: false,
	      mode: "button",
	      value: 0
	    };
	
	    _get(Object.getPrototypeOf(PianoKey.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.note = this.settings.note;
	    this.color = this.settings.color;
	
	    this.colors = {
	      w: "#fff",
	      b: "#666" };
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(PianoKey, _ButtonTemplate);
	
	  _createClass(PianoKey, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = svg.create("svg");
	        this.element.setAttribute("width", this.width);
	        this.element.setAttribute("height", this.height);
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	        var _this = this;
	
	        this.pad = svg.create("rect");
	
	        this.element.appendChild(this.pad);
	
	        this.interactionTarget = this.pad;
	
	        /* events */
	
	        if (!touch.exists) {
	
	          this.click = function () {
	            //  console.log('click');
	            _this.piano.interacting = true;
	            _this.piano.paintbrush = !_this.state;
	            _this.down(_this.piano.paintbrush);
	          };
	
	          this.pad.addEventListener("mouseover", function () {
	            if (_this.piano.interacting) {
	              //    console.log('mouseover');
	              _this.down(_this.piano.paintbrush);
	            }
	          });
	
	          this.move = function () {
	            if (_this.piano.interacting) {
	              //  console.log('move');
	              _this.bend();
	            }
	          };
	
	          this.release = function () {
	            _this.piano.interacting = false;
	            //  console.log('release');
	            //  this.up();
	          };
	          this.pad.addEventListener("mouseup", function () {
	            if (_this.piano.interacting) {
	              //  console.log('mouseup');
	              _this.up();
	            }
	          });
	          this.pad.addEventListener("mouseout", function () {
	            if (_this.piano.interacting) {
	              //  console.log('mouseout');
	              _this.up();
	            }
	          });
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        //let radius = Math.min(this.width,this.height) / 5;
	        var radius = 0;
	
	        this.pad.setAttribute("x", 0.5);
	        this.pad.setAttribute("y", 0.5);
	        if (this.width > 2) {
	          this.pad.setAttribute("width", this.width - 1);
	        } else {
	          this.pad.setAttribute("width", this.width);
	        }
	        if (this.height > 2) {
	          this.pad.setAttribute("height", this.height);
	        } else {
	          this.pad.setAttribute("height", this.height);
	        }
	        this.pad.setAttribute("rx", radius);
	        this.pad.setAttribute("ry", radius);
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.state) {
	          this.pad.setAttribute("fill", this.colors[this.color]);
	        } else {
	          this.pad.setAttribute("fill", this.colors.accent);
	        }
	      }
	    }
	  });
	
	  return PianoKey;
	})(ButtonTemplate);
	
	/**
	* Piano
	*
	* @description Piano keyboard interface
	*
	* @demo <div nexus-ui="piano"></div>
	*
	* @example
	* var piano = new Nexus.Piano('#target')
	*
	* @example
	* var piano = new Nexus.Piano('#target',{
	*     'size': [500,125],
	*     'mode': 'button',  // 'button', 'toggle', or 'impulse'
	*     'lowNote': 24,
	*     'highNote': 60
	* })
	*
	* @output
	* change
	* Fires any time a new key is pressed or released <br>
	* The event data is an object containing <i>note</i> and <i>state</i> properties.
	*
	* @outputexample
	* piano.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	var Piano = (function (_Interface) {
	  function Piano() {
	    _classCallCheck(this, Piano);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [500, 125],
	      lowNote: 24,
	      highNote: 60,
	      mode: "button"
	    };
	
	    _get(Object.getPrototypeOf(Piano.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.keyPattern = ["w", "b", "w", "b", "w", "w", "b", "w", "b", "w", "b", "w"];
	
	    this.paintbrush = false;
	
	    this.mode = this.settings.mode;
	
	    this.range = {
	      low: this.settings.lowNote,
	      high: this.settings.highNote
	    };
	
	    this.range.size = this.range.high - this.range.low;
	
	    this.keys = [];
	
	    this.toggleTo = false;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(Piano, _Interface);
	
	  _createClass(Piano, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("div");
	        this.element.style.position = "relative";
	        this.element.style.borderRadius = "0px";
	        this.element.style.display = "block";
	        this.element.style.width = "100%";
	        this.element.style.height = "100%";
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.keys = [];
	
	        for (var i = 0; i < this.range.high - this.range.low; i++) {
	
	          var container = document.createElement("span");
	          var scaleIndex = (i + this.range.low) % this.keyPattern.length;
	
	          var key = new PianoKey(container, {
	            component: true,
	            note: i + this.range.low,
	            color: this.keyPattern[scaleIndex],
	            mode: this.mode
	          }, this.keyChange.bind(this, i + this.range.low));
	
	          key.piano = this;
	
	          if (touch.exists) {
	            key.pad.index = i;
	            key.preClick = key.preMove = key.preRelease = function () {};
	            key.click = key.move = key.release = function () {};
	            key.preTouch = key.preTouchMove = key.preTouchRelease = function () {};
	            key.touch = key.touchMove = key.touchRelease = function () {};
	          }
	
	          this.keys.push(key);
	          this.element.appendChild(container);
	        }
	        if (touch.exists) {
	          this.addTouchListeners();
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        var keyX = 0;
	
	        var keyPositions = [];
	
	        for (var i = 0; i < this.range.high - this.range.low; i++) {
	
	          keyPositions.push(keyX);
	
	          var scaleIndex = (i + this.range.low) % this.keyPattern.length;
	          var nextScaleIndex = (i + 1 + this.range.low) % this.keyPattern.length;
	          if (i + 1 + this.range.low >= this.range.high) {
	            keyX += 1;
	          } else if (this.keyPattern[scaleIndex] === "w" && this.keyPattern[nextScaleIndex] === "w") {
	            keyX += 1;
	          } else {
	            keyX += 0.5;
	          }
	        }
	        var keysWide = keyX;
	
	        //  let padding = this.width / 120;
	        var padding = 1;
	        var buttonWidth = (this.width - padding * 2) / keysWide;
	        var buttonHeight = (this.height - padding * 2) / 2;
	
	        for (var i = 0; i < this.keys.length; i++) {
	
	          var container = this.keys[i].parent;
	          container.style.position = "absolute";
	          container.style.left = keyPositions[i] * buttonWidth + padding + "px";
	          if (this.keys[i].color === "w") {
	            container.style.top = padding + "px";
	            this.keys[i].resize(buttonWidth, buttonHeight * 2);
	          } else {
	            container.style.zIndex = 1;
	            container.style.top = padding + "px";
	            this.keys[i].resize(buttonWidth, buttonHeight * 1.1);
	          }
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        // Piano keys don't actually have a stroke border
	        // They have space between them, which shows the Piano bg color
	        this.element.style.backgroundColor = this.colors.mediumLight;
	
	        for (var i = 0; i < this.keys.length; i++) {
	          this.keys[i].colors = {
	            w: this.colors.light,
	            b: this.colors.dark,
	            accent: this.colors.accent,
	            border: this.colors.mediumLight
	          };
	          this.keys[i].colorInterface();
	          this.keys[i].render();
	        }
	      }
	    },
	    keyChange: {
	      value: function keyChange(note, on) {
	        // emit data for any key turning on/off
	        // "note" is the note value
	        // "on" is a boolean whether it is on or off
	        // in aftertouch mode, "on: is an object with state/x/y properties
	        var data = {
	          note: note
	        };
	        if (typeof on === "object") {
	          data.state = on.state;
	          //  data.x = on.x
	          //  data.y = on.y
	        } else {
	          data.state = on;
	        }
	        this.emit("change", data);
	      }
	    },
	    render: {
	
	      /* drag(note,on) {
	        this.emit('change',{
	          note: note,
	          state: on
	        });
	      } */
	
	      value: function render() {}
	    },
	    addTouchListeners: {
	      value: function addTouchListeners() {
	        var _this = this;
	
	        this.preClick = this.preMove = this.preRelease = function () {};
	        this.click = this.move = this.release = function () {};
	        this.preTouch = this.preTouchMove = this.preTouchRelease = function () {};
	        this.touch = this.touchMove = this.touchRelease = function () {};
	
	        this.currentElement = false;
	
	        this.element.addEventListener("touchstart", function (e) {
	          console.log("touchstart");
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var key = _this.keys[element.index];
	          _this.paintbrush = !key.state;
	          key.down(_this.paintbrush);
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchmove", function (e) {
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var key = _this.keys[element.index];
	          if (element.index !== _this.currentElement) {
	            if (_this.currentElement) {
	              var pastKey = _this.keys[_this.currentElement];
	              pastKey.up();
	            }
	            key.down(_this.paintbrush);
	          } else {
	            key.bend();
	          }
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchend", function (e) {
	          // no touches to calculate because none remaining
	          var key = _this.keys[_this.currentElement];
	          key.up();
	          _this.interacting = false;
	          _this.currentElement = false;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	      }
	    },
	    setRange: {
	
	      /**
	      Define the pitch range (lowest and highest note) of the piano keyboard.
	      @param low {number} MIDI note value of the lowest note on the keyboard
	      @param high {number} MIDI note value of the highest note on the keyboard
	      */
	
	      value: function setRange(low, high) {
	        this.range.low = low;
	        this.range.high = high;
	        this.empty();
	        this.buildInterface();
	      }
	    },
	    toggleKey: {
	
	      /**
	      Turn a key on or off using its MIDI note value;
	      @param note {number} MIDI note value of the key to change
	      @param on {boolean} Whether the note should turn on or off
	      */
	
	      value: function toggleKey(note, on) {
	        this.keys[note - this.range.low].flip(on);
	      }
	    },
	    toggleIndex: {
	
	      /**
	      Turn a key on or off using its key index on the piano interface.
	      @param index {number} Index of the key to change
	      @param on {boolean} Whether the note should turn on or off
	      */
	
	      value: function toggleIndex(index, on) {
	        this.keys[index].flip(on);
	      }
	    }
	  });
	
	  return Piano;
	})(Interface);
	
	module.exports = Piano;
	
	// loop through and render the keys?

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var dom = __webpack_require__(7);
	var Interface = __webpack_require__(6);
	var ButtonTemplate = __webpack_require__(17);
	var MatrixModel = __webpack_require__(25);
	var CounterModel = __webpack_require__(28);
	var touch = __webpack_require__(9);
	
	var MatrixCell = (function (_ButtonTemplate) {
	  function MatrixCell() {
	    _classCallCheck(this, MatrixCell);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [80, 80],
	      target: false,
	      mode: "toggle",
	      value: 0
	    };
	
	    _get(Object.getPrototypeOf(MatrixCell.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.index = this.settings.index;
	    this.row = this.settings.row;
	    this.column = this.settings.column;
	
	    this.matrix = this.settings.matrix;
	
	    this.interacting = false;
	    this.paintbrush = false;
	
	    this.init();
	    this.render();
	  }
	
	  _inherits(MatrixCell, _ButtonTemplate);
	
	  _createClass(MatrixCell, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = svg.create("svg");
	        this.element.setAttribute("width", this.width);
	        this.element.setAttribute("height", this.height);
	        this.element.style.top = "0px";
	        this.element.style.left = "0px";
	        this.element.style.position = "absolute";
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	        var _this = this;
	
	        this.pad = svg.create("rect");
	        this.element.appendChild(this.pad);
	
	        this.interactionTarget = this.pad;
	
	        /* events */
	
	        if (!touch.exists) {
	
	          this.click = function () {
	            _this.matrix.interacting = true;
	            _this.matrix.paintbrush = !_this.state;
	            _this.down(_this.matrix.paintbrush);
	          };
	          this.pad.addEventListener("mouseover", function () {
	            if (_this.matrix.interacting) {
	              _this.down(_this.matrix.paintbrush);
	            }
	          });
	
	          this.move = function () {};
	          this.pad.addEventListener("mousemove", function (e) {
	            if (_this.matrix.interacting) {
	              if (!_this.offset) {
	                _this.offset = dom.findPosition(_this.element);
	              }
	              _this.mouse = dom.locateMouse(e, _this.offset);
	              _this.bend();
	            }
	          });
	
	          this.release = function () {
	            _this.matrix.interacting = false;
	          };
	          this.pad.addEventListener("mouseup", function () {
	            if (_this.matrix.interacting) {
	              _this.up();
	            }
	          });
	          this.pad.addEventListener("mouseout", function () {
	            if (_this.matrix.interacting) {
	              _this.up();
	            }
	          });
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this.pad.setAttribute("x", 1);
	        this.pad.setAttribute("y", 1);
	        if (this.width > 2) {
	          this.pad.setAttribute("width", this.width - 2);
	        } else {
	          this.pad.setAttribute("width", this.width);
	        }
	        if (this.height > 2) {
	          this.pad.setAttribute("height", this.height - 2);
	        } else {
	          this.pad.setAttribute("height", this.height);
	        }
	        //this.pad.setAttribute('height', this.height - 2);
	        this.pad.setAttribute("fill", this.matrix.colors.fill);
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.state) {
	          this.pad.setAttribute("fill", this.matrix.colors.fill);
	        } else {
	          this.pad.setAttribute("fill", this.matrix.colors.accent);
	        }
	      }
	    }
	  });
	
	  return MatrixCell;
	})(ButtonTemplate);
	
	/**
	* Sequencer
	*
	* @description Grid of buttons with built-in step sequencer.
	*
	* @demo <div nexus-ui="sequencer" style="width:400px;height:200px;"></div>
	*
	* @example
	* var sequencer = new Nexus.Sequencer('#target')
	*
	* @example
	* var sequencer = new Nexus.Sequencer('#target',{
	*  'size': [400,200],
	*  'mode': 'toggle',
	*  'rows': 5,
	*  'columns': 10
	*})
	*
	* @output
	* change
	* Fires any time the interface's matrix changes. <br>
	* The event data is an object containing <i>row</i> (number), <i>column</i> (number), and <i>state</i> (boolean) properties.
	*
	* @outputexample
	* sequencer.on('change',function(v) {
	*   console.log(v);
	* })
	*
	* @output
	* step
	* Fires any time the sequencer steps to the next column, in sequece mode. <br>
	* The event data is an <i>array</i> containing all values in the column, <i>bottom row first</i>.
	*
	* @outputexample
	* sequencer.on('step',function(v) {
	*   console.log(v);
	* })
	*/
	
	var Sequencer = (function (_Interface) {
	  function Sequencer() {
	    _classCallCheck(this, Sequencer);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [400, 200],
	      mode: "toggle",
	      rows: 5,
	      columns: 10
	    };
	
	    _get(Object.getPrototypeOf(Sequencer.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.active = -1;
	
	    /**
	    * Button interaction mode: see Button
	    * @type {string}
	    * @example button.mode = 'toggle';
	    */
	    this.mode = this.settings.mode;
	
	    /**
	    * The interval object which controls timing and sequence scheduling.
	    * @type {interval}
	    */
	    this.interval = new Nexus.Interval(200, function () {}, false); // jshint ignore:line
	
	    /**
	    * A Matrix model containing methods for manipulating the sequencer's array of values. To learn how to manipulate the matrix, read about the matrix model.
	    * @type {matrix}
	    */
	    this.matrix = new MatrixModel(this.settings.rows, this.settings.columns);
	    this.matrix.ui = this;
	
	    /**
	    * A Counter model which the sequencer steps through. For example, you could use this model to step through the sequencer in reverse, randomly, or in a drunk walk.
	    * @type {counter}
	    */
	    this.stepper = new CounterModel(0, this.columns);
	
	    this.init();
	  }
	
	  _inherits(Sequencer, _Interface);
	
	  _createClass(Sequencer, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("div");
	        this.element.style.position = "relative";
	        this.element.style.display = "block";
	        this.element.style.width = "100%";
	        this.element.style.height = "100%";
	        this.parent.appendChild(this.element);
	        if (touch.exists) {
	          this.addTouchListeners();
	        }
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.cells = [];
	        for (var i = 0; i < this.matrix.length; i++) {
	
	          var _location = this.matrix.locate(i);
	          // returns {row,col}
	
	          var container = document.createElement("span");
	          container.style.position = "absolute";
	
	          var cell = new MatrixCell(container, {
	            component: true,
	            index: i,
	            row: _location.row,
	            column: _location.column,
	            mode: this.mode,
	            matrix: this
	          }, this.keyChange.bind(this, i));
	
	          //  cell.matrix = this;
	          if (touch.exists) {
	            cell.pad.index = i;
	            cell.preClick = cell.preMove = cell.preRelease = function () {};
	            cell.click = cell.move = cell.release = function () {};
	            cell.preTouch = cell.preTouchMove = cell.preTouchRelease = function () {};
	            cell.touch = cell.touchMove = cell.touchRelease = function () {};
	          }
	
	          this.cells.push(cell);
	          this.element.appendChild(container);
	        }
	        this.sizeInterface();
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        var cellWidth = this.width / this.columns;
	        var cellHeight = this.height / this.rows;
	
	        for (var i = 0; i < this.cells.length; i++) {
	          var container = this.cells[i].parent;
	          container.style.left = this.cells[i].column * cellWidth + "px";
	          container.style.top = this.cells[i].row * cellHeight + "px";
	          this.cells[i].resize(cellWidth, cellHeight);
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        for (var i = 0; i < this.cells.length; i++) {
	          this.cells[i].render();
	        }
	      }
	    },
	    update: {
	      value: function update() {
	        var _this = this;
	
	        //  console.log("updating...")
	        //on = on || false;
	        this.matrix.iterate(function (r, c, i) {
	          //  console.log(this.matrix.pattern[r][c], this.cells[i].state);
	          if (_this.matrix.pattern[r][c] !== _this.cells[i].state) {
	            if (_this.matrix.pattern[r][c] > 0) {
	              _this.cells[i].turnOn();
	            } else {
	              _this.cells[i].turnOff();
	            }
	          }
	        });
	      }
	    },
	    keyChange: {
	
	      // update => cell.turnOn => cell.emit => keyChange (seq.emit) => matrix.set.cell => update
	      //
	      // interaction => keyChange => matrix.set.cell => update => cell.turnOn
	      //                                             => emit
	      //
	      // set.cell => update => needs to emit.
	
	      value: function keyChange(note, on) {
	        // emit data for any key turning on/off
	        // i is the note index
	        // v is whether it is on or off
	        var cell = this.matrix.locate(note);
	        //  this.matrix.set.cell(cell.column,cell.row,on);
	        this.matrix.pattern[cell.row][cell.column] = on;
	        var data = {
	          row: cell.row,
	          column: cell.column,
	          state: on
	        };
	        this.emit("change", data);
	      }
	    },
	    render: {
	      value: function render() {
	        var _this = this;
	
	        if (this.stepper.value >= 0) {
	          this.matrix.iterate(function (r, c, i) {
	            if (c === _this.stepper.value) {
	              _this.cells[i].pad.setAttribute("stroke", _this.colors.mediumLight);
	              _this.cells[i].pad.setAttribute("stroke-width", "1");
	              _this.cells[i].pad.setAttribute("stroke-opacity", "1");
	            } else {
	              _this.cells[i].pad.setAttribute("stroke", "none");
	            }
	          });
	        }
	      }
	    },
	    start: {
	
	      /**
	       * Start sequencing
	       * @param  {number} ms Beat tempo in milliseconds
	       */
	
	      value: function start(ms) {
	        this.interval.event = this.next.bind(this);
	        if (ms) {
	          this.interval.ms(ms);
	        }
	        this.interval.start();
	      }
	    },
	    stop: {
	
	      /**
	      Stop sequencing
	      */
	
	      value: function stop() {
	        this.interval.stop();
	      }
	    },
	    next: {
	
	      /**
	      Manually jump to the next column and trigger the 'change' event. The "next" column is determined by your mode of sequencing.
	      */
	
	      value: function next() {
	        this.stepper.next();
	        this.emit("step", this.matrix.column(this.stepper.value).reverse());
	        this.render();
	      }
	    },
	    addTouchListeners: {
	      value: function addTouchListeners() {
	        var _this = this;
	
	        this.preClick = this.preMove = this.preRelease = function () {};
	        this.click = this.move = this.release = function () {};
	        this.preTouch = this.preTouchMove = this.preTouchRelease = function () {};
	        this.touch = this.touchMove = this.touchRelease = function () {};
	
	        this.currentElement = false;
	
	        this.element.addEventListener("touchstart", function (e) {
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var cell = _this.cells[element.index];
	          _this.paintbrush = !cell.state;
	          cell.down(_this.paintbrush);
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchmove", function (e) {
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var cell = _this.cells[element.index];
	          if (element.index !== _this.currentElement) {
	            if (_this.currentElement >= 0) {
	              var pastCell = _this.cells[_this.currentElement];
	              pastCell.up();
	            }
	            cell.down(_this.paintbrush);
	          } else {
	            cell.bend();
	          }
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchend", function (e) {
	          // no touches to calculate because none remaining
	          var cell = _this.cells[_this.currentElement];
	          cell.up();
	          _this.interacting = false;
	          _this.currentElement = false;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	      }
	    },
	    rows: {
	
	      /**
	      Number of rows in the sequencer
	      @type {number}
	      */
	
	      get: function () {
	        return this.matrix.rows;
	      },
	      set: function (v) {
	        this.matrix.rows = v;
	        this.empty();
	        this.buildInterface();
	        this.update();
	      }
	    },
	    columns: {
	
	      /**
	      Number of columns in the sequencer
	      @type {number}
	      */
	
	      get: function () {
	        return this.matrix.columns;
	      },
	      set: function (v) {
	        this.matrix.columns = v;
	        this.stepper.max = v;
	        this.empty();
	        this.buildInterface();
	        this.update();
	      }
	    }
	  });
	
	  return Sequencer;
	})(Interface);
	
	module.exports = Sequencer;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Sequence = _interopRequire(__webpack_require__(26));
	
	// For the tutorial, looking at
	
	//Pattern section:
	// .create(), .rows, .columns,
	// .pattern, .length, .formatAsText(), .log(),
	// .locate(i), .indexOf(c,r)
	// row(), column() (returns contents of row or colum)
	
	//Control section:
	// toggle x3
	// set x4
	// rotate x3
	// populate x3
	// erase x3
	
	// should some version of this have a float value for each cell?
	// could be like a mirror .pattern that has values. by default, everything is 1, but could be set...
	// not a good way to do that on interface, but as a model it would be nice...
	// for .formatAsText(), could multiply by 100 and floor, so each cell is an int from 0 to 9
	
	var Matrix = (function () {
	  function Matrix(rows, columns) {
	    var _this = this;
	
	    _classCallCheck(this, Matrix);
	
	    // should also have ability to create using an existing matrix (2d array)
	    this.pattern = [];
	    this.create(rows, columns);
	
	    this.toggle = {
	      cell: function (column, row) {
	        _this.pattern[row][column] = !_this.pattern[row][column]; // math.invert(this.pattern[row][column]);
	        if (_this.ui) {
	          _this.ui.update();
	        }
	        return _this.pattern[row][column];
	      },
	      all: function () {
	        _this.iterate(function (r, c) {
	          _this.toggle.cell(c, r);
	        });
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      row: function (row) {
	        for (var i = 0; i < _this.columns; i++) {
	          _this.toggle.cell(i, row);
	        }
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      column: function (column) {
	        for (var i = 0; i < _this.rows; i++) {
	          _this.toggle.cell(column, i);
	        }
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      }
	    };
	
	    this.set = {
	      cell: function (column, row, value) {
	        _this.pattern[row][column] = value;
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      all: function (values) {
	        // set the whole matrix using a 2d array as input
	        // this should also resize the array?
	        _this.pattern = values;
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      row: function (row, values) {
	        // set a row using an array as input
	        _this.pattern[row] = values;
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      column: function (column, values) {
	        // set a column using an array as input
	        _this.pattern.forEach(function (row, i) {
	          _this.pattern[i][column] = values[i];
	        });
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      }
	    };
	
	    this.rotate = {
	      //should eventually do (amountX, amountY) here
	      // could just use a loop and this.rotate.row(i,amountX);
	      all: function (amount) {
	        if (!amount && amount !== 0) {
	          amount = 1;
	        }
	        amount %= _this.pattern[0].length;
	        if (amount < 0) {
	          amount = _this.pattern[0].length + amount;
	        }
	        for (var i = 0; i < _this.rows; i++) {
	          var cut = _this.pattern[i].splice(_this.pattern[i].length - amount, amount);
	          _this.pattern[i] = cut.concat(_this.pattern[i]);
	        }
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      row: function (row, amount) {
	        if (!amount && amount !== 0) {
	          amount = 1;
	        }
	        amount %= _this.pattern[0].length;
	        if (amount < 0) {
	          amount = _this.pattern[0].length + amount;
	        }
	        var cut = _this.pattern[row].splice(_this.pattern[row].length - amount, amount);
	        _this.pattern[row] = cut.concat(_this.pattern[row]);
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      column: function (column, amount) {
	        if (!amount && amount !== 0) {
	          amount = 1;
	        }
	        amount %= _this.pattern.length;
	        if (amount < 0) {
	          amount = _this.pattern.length + amount;
	        }
	        var proxy = [];
	        _this.pattern.forEach(function (row) {
	          proxy.push(row[column]);
	        });
	        var cut = proxy.splice(proxy.length - amount, amount);
	        proxy = cut.concat(proxy);
	        _this.pattern.forEach(function (row, i) {
	          row[column] = proxy[i];
	        });
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      }
	    };
	
	    // the idea behind populate is to be able to set a whole row or column to 0 or 1
	    // IF the value is a float, such as 0.7, then it would become a probability
	    // so populate(0.7) would give each cell a 70% chance of being 1
	    this.populate = {
	      all: function (odds) {
	        var oddsSequence = new Sequence(odds);
	        _this.iterate(function (r, c) {
	          _this.pattern[r][c] = math.coin(oddsSequence.next());
	        });
	        // This could be used so that each row has same odds pattern, even if row length is not divisibly by sequence length.
	        //,() => {
	        //  odds.pos = -1;
	        // }
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      row: function () {
	        var row = arguments[0] === undefined ? 0 : arguments[0];
	        var odds = arguments[1] === undefined ? 1 : arguments[1];
	
	        var oddsSequence = new Sequence(odds);
	        _this.pattern[row].forEach(function (cell, i) {
	          _this.pattern[row][i] = math.coin(oddsSequence.next());
	        });
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      },
	      column: function () {
	        var column = arguments[0] === undefined ? 0 : arguments[0];
	        var odds = arguments[1] === undefined ? 1 : arguments[1];
	
	        var oddsSequence = new Sequence(odds);
	        _this.pattern.forEach(function (row, i) {
	          _this.pattern[i][column] = math.coin(oddsSequence.next());
	        });
	        if (_this.ui) {
	          _this.ui.update();
	        }
	      }
	    };
	
	    // essentiall populate(0) so i'm not sure if this is necessary but is nice
	    this.erase = {
	      all: function () {
	        _this.set.all(0);
	      },
	      row: function (row) {
	        _this.set.row(row, 0);
	      },
	      column: function (column) {
	        _this.set.column(column, 0);
	      }
	    };
	
	    // end constructor
	  }
	
	  _createClass(Matrix, {
	    create: {
	      value: function create(rows, columns) {
	        var _this = this;
	
	        this.pattern = [];
	        for (var row = 0; row < rows; row++) {
	          var arr = new Array(columns);
	          this.pattern.push(arr);
	        }
	        this.iterate(function (r, c) {
	          _this.pattern[r][c] = false;
	        });
	      }
	    },
	    iterate: {
	      value: function iterate(f, f2) {
	        var i = 0;
	        for (var row = 0; row < this.rows; row++) {
	          if (f2) {
	            f2(row);
	          }
	          for (var column = 0; column < this.columns; column++) {
	            f(row, column, i);
	            i++;
	          }
	        }
	      }
	    },
	    formatAsText: {
	      value: function formatAsText() {
	        var _this = this;
	
	        var patternString = "";
	        this.iterate(function (r, c) {
	          patternString += (_this.pattern[r][c] ? 1 : 0) + " ";
	        }, function () {
	          patternString += "\n";
	        });
	        return patternString;
	      }
	    },
	    log: {
	      value: function log() {
	        console.log(this.formatAsText());
	      }
	    },
	    update: {
	      value: function update(pattern) {
	        this.pattern = pattern || this.pattern;
	      }
	    },
	    length: {
	      get: function () {
	        return this.rows * this.columns;
	      }
	    },
	    locate: {
	      value: function locate(index) {
	        // returns row and column of cell by index
	        return {
	          row: ~ ~(index / this.columns),
	          column: index % this.columns
	        };
	      }
	    },
	    indexOf: {
	      value: function indexOf(row, column) {
	        return column + row * this.columns;
	        // returns index of cell by row and column
	      }
	    },
	    row: {
	      value: (function (_row) {
	        var _rowWrapper = function row(_x) {
	          return _row.apply(this, arguments);
	        };
	
	        _rowWrapper.toString = function () {
	          return _row.toString();
	        };
	
	        return _rowWrapper;
	      })(function (row) {
	        var data = [];
	        for (var i = 0; i < this.columns; i++) {
	          data.push(this.pattern[row] ? 1 : 0);
	        }
	        return data;
	      })
	    },
	    column: {
	      value: (function (_column) {
	        var _columnWrapper = function column(_x2) {
	          return _column.apply(this, arguments);
	        };
	
	        _columnWrapper.toString = function () {
	          return _column.toString();
	        };
	
	        return _columnWrapper;
	      })(function (column) {
	        var data = [];
	        for (var i = 0; i < this.rows; i++) {
	          data.push(this.pattern[i][column] ? 1 : 0);
	        }
	        return data;
	      })
	    },
	    rows: {
	      get: function () {
	        return this.pattern.length;
	      },
	      set: function (v) {
	        var _this = this;
	
	        var previous = this.pattern.slice(0);
	        this.create(v, this.columns);
	        this.iterate(function (r, c) {
	          if (previous[r] && previous[r][c]) {
	            _this.pattern[r][c] = previous[r][c];
	          }
	        });
	      }
	    },
	    columns: {
	      get: function () {
	        return this.pattern[0].length;
	      },
	      set: function (v) {
	        var _this = this;
	
	        var previous = this.pattern.slice(0);
	        this.create(this.rows, v);
	        this.iterate(function (r, c) {
	          if (previous[r] && previous[r][c]) {
	            _this.pattern[r][c] = previous[r][c];
	          }
	        });
	      }
	    }
	  });
	
	  return Matrix;
	})();
	
	module.exports = Matrix;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Drunk = _interopRequire(__webpack_require__(27));
	
	var Sequence = (function () {
	  function Sequence() {
	    var sequence = arguments[0] === undefined ? [0, 10, 20, 30] : arguments[0];
	    var mode = arguments[1] === undefined ? "up" : arguments[1];
	    var position = arguments[2] === undefined ? false : arguments[2];
	
	    _classCallCheck(this, Sequence);
	
	    this.values = sequence;
	    if (!Array.isArray(this.values)) {
	      this.values = [this.values];
	    }
	    this._mode = mode;
	    this.position = position;
	
	    this.drunkWalk = new Drunk(0, this.values.length - 1);
	
	    this.startValues = {
	      up: 0,
	      down: this.values.length - 1,
	      drunk: ~ ~(this.values.length / 2),
	      random: math.ri(this.values.length)
	    };
	
	    if (this.position !== false) {
	      this.next = this[this._mode];
	    } else {
	      this.next = this.first;
	    }
	  }
	
	  _createClass(Sequence, {
	    mode: {
	      get: function () {
	        return this._mode;
	      },
	      set: function (mode) {
	        if (!(mode === "up" || mode === "down" || mode === "random" || mode === "drunk")) {
	          console.error("The only modes currently allowed are: up, down, random, drunk");
	          return;
	        }
	        this._mode = mode;
	        if (this.position) {
	          this.next = this[this._mode];
	        }
	      }
	    },
	    value: {
	      get: function () {
	        return this.values[this.position];
	      },
	      set: function (v) {
	        this.position = this.values.indexOf(v);
	      }
	    },
	    first: {
	      value: function first() {
	        if (this.position !== false) {
	          this.next = this[this._mode];
	          return this.next();
	        }
	        this.position = this.startValues[this._mode];
	        this.next = this[this._mode];
	        return this.value;
	      }
	    },
	    up: {
	      value: function up() {
	        this.position++;
	        this.position %= this.values.length;
	        return this.value;
	      }
	    },
	    down: {
	      value: function down() {
	        this.position--;
	        if (this.position < 0) {
	          this.position = (this.position + this.values.length) % this.values.length;
	        }
	        return this.value;
	      }
	    },
	    random: {
	      value: function random() {
	        this.position = math.ri(0, this.values.length);
	        return this.value;
	      }
	    },
	    drunk: {
	      value: function drunk() {
	        this.drunkWalk.max = this.values.length;
	        this.drunkWalk.value = this.position;
	        this.position = this.drunkWalk.next();
	        return this.value;
	      }
	
	      /* future methods
	      .group(start,stop) -- outputs a group of n items from the list, with wrapping
	      .loop(start,stop) -- confines sequencing to a subset of the values
	          (could even have a distinction between .originalValues and the array of values being used)
	      */
	
	    }
	  });
	
	  return Sequence;
	})();
	
	module.exports = Sequence;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Drunk = (function () {
	    function Drunk() {
	        var min = arguments[0] === undefined ? 0 : arguments[0];
	        var max = arguments[1] === undefined ? 9 : arguments[1];
	        var value = arguments[2] === undefined ? 0 : arguments[2];
	        var increment = arguments[3] === undefined ? 1 : arguments[3];
	        var loop = arguments[4] === undefined ? false : arguments[4];
	
	        _classCallCheck(this, Drunk);
	
	        this.min = min;
	        this.max = max;
	        this.value = value;
	        this.increment = increment;
	        this.loop = loop;
	    }
	
	    _createClass(Drunk, {
	        next: {
	            value: function next() {
	                this.value += math.pick(-1 * this.increment, this.increment);
	                if (this.value > this.max) {
	                    if (this.loop) {
	                        this.value = this.min;
	                    } else {
	                        this.value = this.max - this.increment;
	                    }
	                }
	
	                if (this.value < this.min) {
	                    if (this.loop) {
	                        this.value = this.max;
	                    } else {
	                        this.value = this.min + this.increment;
	                    }
	                }
	                return this.value;
	            }
	        }
	    });
	
	    return Drunk;
	})();
	
	module.exports = Drunk;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Drunk = _interopRequire(__webpack_require__(27));
	
	var Counter = (function () {
	    function Counter() {
	        var min = arguments[0] === undefined ? 0 : arguments[0];
	        var max = arguments[1] === undefined ? 10 : arguments[1];
	        var mode = arguments[2] === undefined ? "up" : arguments[2];
	        var value = arguments[3] === undefined ? false : arguments[3];
	
	        _classCallCheck(this, Counter);
	
	        this.min = min;
	        this.max = max;
	        this.value = value;
	        this.mode = mode;
	        this.drunkWalk = new Drunk(this.min, this.max);
	        if (this.value !== false) {
	            this.next = this[this._mode];
	        } else {
	            this.next = this.first;
	        }
	    }
	
	    _createClass(Counter, {
	        mode: {
	            set: function (mode) {
	                if (!(mode === "up" || mode === "down" || mode === "random" || mode === "drunk")) {
	                    console.error("The only modes currently allowed are: up, down, random, drunk");
	                    return;
	                }
	                this._mode = mode;
	                if (this.value) {
	                    this.next = this[this._mode];
	                }
	            },
	            get: function () {
	                return this._mode;
	            }
	        },
	        first: {
	            value: function first() {
	                if (this.value !== false) {
	                    this.next = this[this._mode];
	                    return this.next();
	                }
	                this.startValues = {
	                    up: this.min,
	                    down: this.max,
	                    drunk: ~ ~math.average(this.min, this.max),
	                    random: math.ri(this.min, this.max)
	                };
	                this.value = this.startValues[this._mode];
	                this.next = this[this._mode];
	                return this.value;
	            }
	        },
	        up: {
	            value: function up() {
	                this.value++;
	                if (this.value >= this.max) {
	                    this.value = this.min;
	                }
	                return this.value;
	            }
	        },
	        down: {
	            value: function down() {
	                this.value--;
	                if (this.value < this.min) {
	                    this.value = this.max;
	                }
	                return this.value;
	            }
	        },
	        random: {
	            value: function random() {
	                this.value = math.ri(this.min, this.max);
	                return this.value;
	            }
	        },
	        drunk: {
	            value: function drunk() {
	                this.drunkWalk.min = this.min;
	                this.drunkWalk.max = this.max;
	                this.drunkWalk.value = this.value;
	                this.value = this.drunkWalk.next();
	                return this.value;
	            }
	        }
	    });
	
	    return Counter;
	})();
	
	module.exports = Counter;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var math = __webpack_require__(5);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	/**
	* Pan2D
	*
	* @description Interface for moving a sound around an array of speakers. Speaker locations can be customized. The interface calculates the closeness of the sound source to each speaker and returns that distance as a numeric value.
	*
	* @demo <span nexus-ui="pan2D"></span>
	*
	* @example
	* var pan2d = new Nexus.Pan2d('#target')
	*
	* @example
	* var pan2d = new Nexus.Pan2D('#target',{
	*   'size': [200,200],
	*   'range': 0.5,  // detection radius of each speaker
	*   'mode': 'absolute',   // 'absolute' or 'relative' sound movement
	*   'speakers': [  // the speaker [x,y] positions
	*       [0.5,0.2],
	*       [0.75,0.25],
	*       [0.8,0.5],
	*       [0.75,0.75],
	*       [0.5,0.8],
	*       [0.25,0.75]
	*       [0.2,0.5],
	*       [0.25,0.25]
	*   ]
	* })
	*
	* @output
	* change
	* Fires any time the "source" node's position changes. <br>
	* The event data is an array of the amplitudes (0-1), representing the level of each speaker (as calculated by its distance to the audio source).
	*
	* @outputexample
	* pan2d.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	var Pan2D = (function (_Interface) {
	  function Pan2D() {
	    _classCallCheck(this, Pan2D);
	
	    var options = ["range"];
	
	    var defaults = {
	      size: [200, 200],
	      range: 0.5,
	      mode: "absolute",
	      speakers: [[0.5, 0.2], [0.75, 0.25], [0.8, 0.5], [0.75, 0.75], [0.5, 0.8], [0.25, 0.75], [0.2, 0.5], [0.25, 0.25]]
	    };
	
	    _get(Object.getPrototypeOf(Pan2D.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.value = {
	      x: new Step(0, 1, 0, 0.5),
	      y: new Step(0, 1, 0, 0.5)
	    };
	
	    /**
	    Absolute or relative mouse interaction. In "absolute" mode, the source node will jump to your mouse position on mouse click. In "relative" mode, it does not.
	    */
	    this.mode = this.settings.mode;
	
	    this.position = {
	      x: new Interaction.Handle(this.mode, "horizontal", [0, this.width], [this.height, 0]),
	      y: new Interaction.Handle(this.mode, "vertical", [0, this.width], [this.height, 0])
	    };
	    this.position.x.value = this.value.x.normalized;
	    this.position.y.value = this.value.y.normalized;
	
	    /**
	    An array of speaker locations. Update this with .moveSpeaker() or .moveAllSpeakers()
	    */
	    this.speakers = this.settings.speakers;
	
	    /**
	    Rewrite: The maximum distance from a speaker that the source node can be for it to be heard from that speaker. A low range (0.1) will result in speakers only playing when the sound is very close it. Default is 0.5 (half of the interface).
	    */
	    this.range = this.settings.range;
	
	    /**
	    The current levels for each speaker. This is calculated when a source node or speaker node is moved through interaction or programatically.
	    */
	    this.levels = [];
	
	    this.init();
	
	    this.calculateLevels();
	    this.render();
	  }
	
	  _inherits(Pan2D, _Interface);
	
	  _createClass(Pan2D, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.knob = svg.create("circle");
	
	        this.element.appendChild(this.knob);
	
	        // add speakers
	        this.speakerElements = [];
	
	        for (var i = 0; i < this.speakers.length; i++) {
	          var speakerElement = svg.create("circle");
	
	          this.element.appendChild(speakerElement);
	
	          this.speakerElements.push(speakerElement);
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        this._minDimension = Math.min(this.width, this.height);
	
	        this.knobRadius = {
	          off: ~ ~(this._minDimension / 100) * 3 + 5 };
	        this.knobRadius.on = this.knobRadius.off * 2;
	
	        this.knob.setAttribute("cx", this.width / 2);
	        this.knob.setAttribute("cy", this.height / 2);
	        this.knob.setAttribute("r", this.knobRadius.off);
	
	        for (var i = 0; i < this.speakers.length; i++) {
	          var speakerElement = this.speakerElements[i];
	          var speaker = this.speakers[i];
	          speakerElement.setAttribute("cx", speaker[0] * this.width);
	          speakerElement.setAttribute("cy", speaker[1] * this.height);
	          speakerElement.setAttribute("r", this._minDimension / 20 + 5);
	          speakerElement.setAttribute("fill-opacity", "0");
	        }
	
	        this.position.x.resize([0, this.width], [this.height, 0]);
	        this.position.y.resize([0, this.width], [this.height, 0]);
	
	        // next, need to
	        // resize positions
	        // calculate speaker distances
	        this.calculateLevels();
	        this.render();
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        this.element.style.backgroundColor = this.colors.fill;
	        this.knob.setAttribute("fill", this.colors.mediumLight);
	
	        for (var i = 0; i < this.speakers.length; i++) {
	          var speakerElement = this.speakerElements[i];
	          speakerElement.setAttribute("fill", this.colors.accent);
	          speakerElement.setAttribute("stroke", this.colors.accent);
	        }
	      }
	    },
	    render: {
	      value: function render() {
	        this.knobCoordinates = {
	          x: this.value.x.normalized * this.width,
	          y: this.height - this.value.y.normalized * this.height
	        };
	
	        this.knob.setAttribute("cx", this.knobCoordinates.x);
	        this.knob.setAttribute("cy", this.knobCoordinates.y);
	      }
	    },
	    click: {
	      value: function click() {
	        this.position.x.anchor = this.mouse;
	        this.position.y.anchor = this.mouse;
	        this.move();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	          this.position.x.update(this.mouse);
	          this.position.y.update(this.mouse);
	          // position.x and position.y are normalized
	          // so are the levels
	          // likely don't need this.value at all -- only used for drawing
	          // not going to be a 'step' or 'min' and 'max' in this one.
	          this.calculateLevels();
	          this.emit("change", this.levels);
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        this.render();
	      }
	    },
	    normalized: {
	      get: function () {
	        return {
	          x: this.value.x.normalized,
	          y: this.value.y.normalized
	        };
	      }
	    },
	    calculateLevels: {
	      value: function calculateLevels() {
	        var _this = this;
	
	        this.value.x.updateNormal(this.position.x.value);
	        this.value.y.updateNormal(this.position.y.value);
	        this.levels = [];
	        this.speakers.forEach(function (s, i) {
	          var distance = math.distance(s[0] * _this.width, s[1] * _this.height, _this.position.x.value * _this.width, (1 - _this.position.y.value) * _this.height);
	          var level = math.clip(1 - distance / (_this.range * _this.width), 0, 1);
	          _this.levels.push(level);
	          _this.speakerElements[i].setAttribute("fill-opacity", level);
	        });
	      }
	    },
	    moveSource: {
	
	      /**
	      Move the audio source node and trigger the output event.
	      @param x {number} New x location, normalized 0-1
	      @param y {number} New y location, normalized 0-1
	      */
	
	      value: function moveSource(x, y) {
	        var location = {
	          x: x * this.width,
	          y: y * this.height
	        };
	        this.position.x.update(location);
	        this.position.y.update(location);
	        this.calculateLevels();
	        this.emit("change", this.levels);
	        this.render();
	      }
	    },
	    moveSpeaker: {
	
	      /**
	      Move a speaker node and trigger the output event.
	      @param index {number} Index of the speaker to move
	      @param x {number} New x location, normalized 0-1
	      @param y {number} New y location, normalized 0-1
	      */
	
	      value: function moveSpeaker(index, x, y) {
	
	        this.speakers[index] = [x, y];
	        this.speakerElements[index].setAttribute("cx", x * this.width);
	        this.speakerElements[index].setAttribute("cy", y * this.height);
	        this.calculateLevels();
	        this.emit("change", this.levels);
	        this.render();
	      }
	
	      /**
	      Set all speaker locations
	      @param locations {Array} Array of speaker locations. Each item in the array should be an array of normalized x and y coordinates.
	       setSpeakers(locations) {
	       }
	      */
	
	    }
	  });
	
	  return Pan2D;
	})(Interface);
	
	module.exports = Pan2D;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = __webpack_require__(5);
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	
	/**
	* Tilt
	*
	* @description Device tilt sensor with 2 or 3 axes (depending on your device and browser).
	*
	* @demo <span nexus-ui='tilt'></span>
	*
	* @example
	* var tilt = new Nexus.Tilt('#target')
	*
	* @output
	* change
	* Fires at a regular interval, as long as this interface is active (see the interface's <i>.active</i> property)<br>
	* The event data is an <i>object</i> containing x (number) and y (number) properties which represent the current tilt state of the device.
	*
	* @outputexample
	* tilt.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Tilt = (function (_Interface) {
	  function Tilt() {
	    _classCallCheck(this, Tilt);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [80, 80]
	    };
	
	    _get(Object.getPrototypeOf(Tilt.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._active = true;
	
	    this.init();
	
	    // add event listener for device orientation
	
	    this.boundUpdate = this.update.bind(this);
	    //	this.boundMozTilt = this.mozTilt.bind(this)
	
	    if (window.DeviceOrientationEvent) {
	      this.orientationListener = window.addEventListener("deviceorientation", this.boundUpdate, false);
	    } else {
	      this._active = false;
	      this.colorInterface();
	    }
	
	    /*else if (window.OrientationEvent) {
	    //	  	window.addEventListener('MozOrientation', this.boundMozTilt, false);
	    } else {
	    console.log('Not supported on your device or browser.');
	    } */
	  }
	
	  _inherits(Tilt, _Interface);
	
	  _createClass(Tilt, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.title = svg.create("text");
	        this.circleX = svg.create("circle");
	        this.circleY = svg.create("circle");
	        this.circleZ = svg.create("circle");
	
	        this.barX = svg.create("path");
	        this.barY = svg.create("path");
	        this.barZ = svg.create("path");
	
	        this.barX2 = svg.create("path");
	        this.barY2 = svg.create("path");
	        this.barZ2 = svg.create("path");
	
	        this.barX.setAttribute("opacity", "0.8");
	        this.barY.setAttribute("opacity", "0.8");
	        this.barZ.setAttribute("opacity", "0.8");
	        this.barX2.setAttribute("opacity", "0.8");
	        this.barY2.setAttribute("opacity", "0.8");
	        this.barZ2.setAttribute("opacity", "0.8");
	
	        this.circleX.setAttribute("cx", this.width * 3 / 12);
	        this.circleX.setAttribute("cy", this.height * 3 / 4);
	        this.circleX.setAttribute("r", this.height / 10);
	        this.circleX.setAttribute("opacity", "0.4");
	
	        this.circleY.setAttribute("cx", this.width * 6 / 12);
	        this.circleY.setAttribute("cy", this.height * 3 / 4);
	        this.circleY.setAttribute("r", this.height / 10);
	        this.circleY.setAttribute("opacity", "0.4");
	
	        this.circleZ.setAttribute("cx", this.width * 9 / 12);
	        this.circleZ.setAttribute("cy", this.height * 3 / 4);
	        this.circleZ.setAttribute("r", this.height / 10);
	        this.circleZ.setAttribute("opacity", "0.4");
	
	        this.barX.setAttribute("stroke-width", Math.round(this.height / 30));
	        this.barY.setAttribute("stroke-width", Math.round(this.height / 30));
	        this.barZ.setAttribute("stroke-width", Math.round(this.height / 30));
	
	        this.barX.setAttribute("fill", "none");
	        this.barY.setAttribute("fill", "none");
	        this.barZ.setAttribute("fill", "none");
	
	        this.barX2.setAttribute("stroke-width", Math.round(this.height / 30));
	        this.barY2.setAttribute("stroke-width", Math.round(this.height / 30));
	        this.barZ2.setAttribute("stroke-width", Math.round(this.height / 30));
	
	        this.barX2.setAttribute("fill", "none");
	        this.barY2.setAttribute("fill", "none");
	        this.barZ2.setAttribute("fill", "none");
	
	        this.title.setAttribute("x", this.width / 2);
	        this.title.setAttribute("y", this.height / 3 + 7);
	        this.title.setAttribute("font-size", "15px");
	        this.title.setAttribute("font-weight", "bold");
	        this.title.setAttribute("letter-spacing", "2px");
	        this.title.setAttribute("opacity", "0.7");
	        this.title.setAttribute("text-anchor", "middle");
	        this.title.textContent = "TILT";
	
	        this.element.appendChild(this.circleX);
	        this.element.appendChild(this.circleY);
	        this.element.appendChild(this.circleZ);
	
	        this.element.appendChild(this.barX);
	        this.element.appendChild(this.barY);
	        this.element.appendChild(this.barZ);
	
	        this.element.appendChild(this.barX2);
	        this.element.appendChild(this.barY2);
	        this.element.appendChild(this.barZ2);
	
	        this.element.appendChild(this.title);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        if (this._active) {
	          this.element.style.backgroundColor = this.colors.accent;
	          this.circleX.setAttribute("fill", this.colors.light);
	          this.circleY.setAttribute("fill", this.colors.light);
	          this.circleZ.setAttribute("fill", this.colors.light);
	          this.circleX.setAttribute("stroke", this.colors.light);
	          this.circleY.setAttribute("stroke", this.colors.light);
	          this.circleZ.setAttribute("stroke", this.colors.light);
	          this.barX.setAttribute("stroke", this.colors.light);
	          this.barY.setAttribute("stroke", this.colors.light);
	          this.barZ.setAttribute("stroke", this.colors.light);
	          this.barX2.setAttribute("stroke", this.colors.light);
	          this.barY2.setAttribute("stroke", this.colors.light);
	          this.barZ2.setAttribute("stroke", this.colors.light);
	          this.title.setAttribute("fill", this.colors.light);
	        } else {
	          this.element.style.backgroundColor = this.colors.fill;
	          this.circleX.setAttribute("fill", this.colors.mediumLight);
	          this.circleY.setAttribute("fill", this.colors.mediumLight);
	          this.circleZ.setAttribute("fill", this.colors.mediumLight);
	          this.circleX.setAttribute("stroke", this.colors.mediumLight);
	          this.circleY.setAttribute("stroke", this.colors.mediumLight);
	          this.circleZ.setAttribute("stroke", this.colors.mediumLight);
	          this.barX.setAttribute("stroke", this.colors.mediumLight);
	          this.barY.setAttribute("stroke", this.colors.mediumLight);
	          this.barZ.setAttribute("stroke", this.colors.mediumLight);
	          this.barX2.setAttribute("stroke", this.colors.mediumLight);
	          this.barY2.setAttribute("stroke", this.colors.mediumLight);
	          this.barZ2.setAttribute("stroke", this.colors.mediumLight);
	          this.title.setAttribute("fill", this.colors.mediumLight);
	        }
	      }
	    },
	    update: {
	      value: function update(v) {
	        if (this._active) {
	
	          var y = v.beta;
	          var x = v.gamma;
	          var z = v.alpha;
	
	          // take the original -90 to 90 scale and normalize it 0-1
	          x = math.scale(x, -90, 90, 0, 1);
	          y = math.scale(y, -90, 90, 0, 1);
	          z = math.scale(z, 0, 360, 0, 1);
	
	          var handlePoints = {
	            start: Math.PI * 1.5,
	            end: math.clip(math.scale(x, 0, 0.5, Math.PI * 1.5, Math.PI * 0.5), Math.PI * 0.5, Math.PI * 1.5)
	          };
	          var handle2Points = {
	            start: Math.PI * 2.5,
	            end: math.clip(math.scale(x, 0.5, 1, Math.PI * 2.5, Math.PI * 1.5), Math.PI * 1.5, Math.PI * 2.5)
	          };
	
	          var handlePath = svg.arc(this.circleX.cx.baseVal.value, this.circleX.cy.baseVal.value, this.circleX.r.baseVal.value, handlePoints.start, handlePoints.end);
	          var handle2Path = svg.arc(this.circleX.cx.baseVal.value, this.circleX.cy.baseVal.value, this.circleX.r.baseVal.value, handle2Points.start, handle2Points.end);
	
	          this.barX.setAttribute("d", handlePath);
	          this.barX2.setAttribute("d", handle2Path);
	
	          handlePoints = {
	            start: Math.PI * 1.5,
	            end: math.clip(math.scale(y, 0, 0.5, Math.PI * 1.5, Math.PI * 0.5), Math.PI * 0.5, Math.PI * 1.5)
	          };
	          handle2Points = {
	            start: Math.PI * 2.5,
	            end: math.clip(math.scale(y, 0.5, 1, Math.PI * 2.5, Math.PI * 1.5), Math.PI * 1.5, Math.PI * 2.5)
	          };
	
	          handlePath = svg.arc(this.circleY.cx.baseVal.value, this.circleY.cy.baseVal.value, this.circleY.r.baseVal.value, handlePoints.start, handlePoints.end);
	          handle2Path = svg.arc(this.circleY.cx.baseVal.value, this.circleY.cy.baseVal.value, this.circleY.r.baseVal.value, handle2Points.start, handle2Points.end);
	
	          this.barY.setAttribute("d", handlePath);
	          this.barY2.setAttribute("d", handle2Path);
	
	          handlePoints = {
	            start: Math.PI * 1.5,
	            end: math.clip(math.scale(z, 0, 0.5, Math.PI * 1.5, Math.PI * 0.5), Math.PI * 0.5, Math.PI * 1.5)
	          };
	          handle2Points = {
	            start: Math.PI * 2.5,
	            end: math.clip(math.scale(z, 0.5, 1, Math.PI * 2.5, Math.PI * 1.5), Math.PI * 1.5, Math.PI * 2.5)
	          };
	
	          handlePath = svg.arc(this.circleZ.cx.baseVal.value, this.circleZ.cy.baseVal.value, this.circleZ.r.baseVal.value, handlePoints.start, handlePoints.end);
	          handle2Path = svg.arc(this.circleZ.cx.baseVal.value, this.circleZ.cy.baseVal.value, this.circleZ.r.baseVal.value, handle2Points.start, handle2Points.end);
	
	          this.barZ.setAttribute("d", handlePath);
	          this.barZ2.setAttribute("d", handle2Path);
	
	          /*
	           let pointsX = {
	            start: 0,
	            end: math.scale( x, 0, 1, 0, Math.PI*2 )
	          };
	          //  console.log(this.circleX.cx.baseVal.value);
	           let pathX = svg.arc(this.circleX.cx.baseVal.value, this.circleX.cy.baseVal.value, this.circleX.r.baseVal.value*2, pointsX.start, pointsX.end);
	           this.barX.setAttribute('d',pathX); */
	
	          //this.textH.textContent = math.prune(x,2);
	          //this.textV.textContent = math.prune(y,2);
	          //
	          //  this.circleX.setAttribute('opacity',x);
	          //  this.circleY.setAttribute('opacity',y);
	          //  this.circleZ.setAttribute('opacity',z);
	
	          this.emit("change", {
	            x: x,
	            y: y,
	            z: z
	          });
	        }
	      }
	    },
	    click: {
	      value: function click() {
	        if (window.DeviceOrientationEvent) {
	          this.active = !this.active;
	        }
	      }
	    },
	    active: {
	
	      /**
	      Whether the interface is on (emitting values) or off (paused & not emitting values). Setting this property will update it.
	      @type {boolean}
	      */
	
	      get: function () {
	        return this._active;
	      },
	      set: function (on) {
	        this._active = on;
	        this.colorInterface();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {
	        window.removeEventListener("deviceorientation", this.boundUpdate, false);
	      }
	    }
	  });
	
	  return Tilt;
	})(Interface);
	
	module.exports = Tilt;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var dom = __webpack_require__(7);
	var math = __webpack_require__(5);
	var Interface = __webpack_require__(6);
	var SliderTemplate = __webpack_require__(32);
	var touch = __webpack_require__(9);
	
	var SingleSlider = (function (_SliderTemplate) {
	  function SingleSlider() {
	    var _this = this;
	
	    _classCallCheck(this, SingleSlider);
	
	    var options = ["scale", "value"];
	
	    var defaults = {
	      size: [120, 20],
	      orientation: "vertical",
	      mode: "absolute",
	      scale: [0, 1],
	      step: 0,
	      value: 0,
	      hasKnob: true
	    };
	
	    _get(Object.getPrototypeOf(SingleSlider.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    /* events */
	
	    if (!touch.exists) {
	
	      this.click = function () {
	        _this.multislider.interacting = true;
	        _this.multislider.interpolation = {
	          index: _this.index,
	          value: _this.value
	        };
	        _this.down();
	        _this.multislider.values[_this.index] = _this.value;
	      };
	      this.element.addEventListener("mouseover", function (e) {
	        if (_this.multislider.interacting) {
	          if (!_this.offset) {
	            _this.offset = dom.findPosition(_this.element);
	          }
	          _this.mouse = dom.locateMouse(e, _this.offset);
	          _this.down();
	          _this.multislider.values[_this.index] = _this.value;
	          if (_this.multislider.interpolation) {
	            var distance = Math.abs(_this.multislider.interpolation.index - _this.index);
	            if (distance > 1) {
	              var low = Math.min(_this.multislider.interpolation.index, _this.index);
	              var high = Math.max(_this.multislider.interpolation.index, _this.index);
	              var lowValue = _this.multislider.sliders[low].value;
	              var highValue = _this.multislider.sliders[high].value;
	              for (var i = low; i < high; i++) {
	                _this.multislider.sliders[i].value = math.interp((i - low) / distance, lowValue, highValue);
	                var smoothedValue = _this.multislider.sliders[i].value;
	                _this.multislider.values[i] = smoothedValue;
	                _this.multislider.update(i, smoothedValue);
	              }
	            }
	          }
	
	          _this.multislider.interpolation = {
	            index: _this.index,
	            value: _this.value
	          };
	        }
	      });
	
	      this.move = function () {};
	      this.element.addEventListener("mousemove", function (e) {
	        if (_this.multislider.interacting) {
	          if (!_this.offset) {
	            _this.offset = dom.findPosition(_this.element);
	          }
	          _this.mouse = dom.locateMouse(e, _this.offset);
	          _this.slide();
	          _this.multislider.values[_this.index] = _this.value;
	        }
	      });
	
	      this.release = function () {
	        _this.multislider.interacting = false;
	        _this.multislider.interpolation = false;
	      };
	      this.element.addEventListener("mouseup", function () {
	        if (_this.multislider.interacting) {
	          _this.up();
	          _this.multislider.interpolation = false;
	          _this.multislider.values[_this.index] = _this.value;
	        }
	      });
	      this.element.addEventListener("mouseout", function () {
	        if (_this.multislider.interacting) {
	          _this.up();
	          _this.multislider.values[_this.index] = _this.value;
	        }
	      });
	    }
	
	    this.customStyle();
	  }
	
	  _inherits(SingleSlider, _SliderTemplate);
	
	  _createClass(SingleSlider, {
	    customStyle: {
	      value: function customStyle() {
	
	        /* style changes */
	
	        this.bar.setAttribute("x", 0);
	        this.bar.setAttribute("transform", "translate(0,0)");
	        this.bar.setAttribute("rx", 0); // corner radius
	        this.bar.setAttribute("ry", 0);
	        this.bar.setAttribute("width", this.width);
	        this.bar.setAttribute("height", this.height);
	
	        this.fillbar.setAttribute("x", 0);
	        this.fillbar.setAttribute("transform", "translate(0,0)");
	        this.fillbar.setAttribute("rx", 0); // corner radius
	        this.fillbar.setAttribute("ry", 0);
	        this.fillbar.setAttribute("width", this.width);
	        this.fillbar.setAttribute("height", this.height);
	      }
	    }
	  });
	
	  return SingleSlider;
	})(SliderTemplate);
	
	/**
	* Multislider
	*
	* @description Multislider
	*
	* @demo <span nexus-ui="multislider"></span>
	*
	* @example
	* var multislider = new Nexus.Multislider('#target')
	*
	* @example
	* var multislider = new Nexus.Multislider('#target',{
	*  'size': [200,100],
	*  'numberOfSliders': 5,
	*  'min': 0,
	*  'max': 1,
	*  'step': 0,
	*  'values': [0.7,0.7,0.7,0.7,0.7]
	* })
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data an object containing <i>index</i> and <i>value</i> properties
	*
	* @outputexample
	* multislider.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	/*
	Properties
	.values
	
	*/
	
	var Multislider = (function (_Interface) {
	  function Multislider() {
	    _classCallCheck(this, Multislider);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [200, 100],
	      numberOfSliders: 5,
	      min: 0,
	      max: 1,
	      step: 0,
	      values: [0.7, 0.7, 0.7, 0.7, 0.7]
	    };
	
	    _get(Object.getPrototypeOf(Multislider.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this._numberOfSliders = this.settings.numberOfSliders;
	    this.values = this.settings.values;
	
	    this.sliders = [];
	
	    this.interacting = false;
	
	    this.init();
	  }
	
	  _inherits(Multislider, _Interface);
	
	  _createClass(Multislider, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.element = document.createElement("div");
	        this.parent.appendChild(this.element);
	      }
	    },
	    buildInterface: {
	      value: function buildInterface() {
	
	        var min = this.settings.min;
	        var max = this.settings.max;
	        var step = this.settings.step;
	
	        if (this.sliders.length) {
	          min = this.sliders[0].min;
	          max = this.sliders[0].max;
	          step = this.sliders[0].step;
	        }
	
	        this.sliders = [];
	
	        for (var i = 0; i < this._numberOfSliders; i++) {
	          var container = document.createElement("span");
	
	          var slider = new SingleSlider(container, {
	            scale: [min, max],
	            step: step,
	            mode: "absolute",
	            orientation: "vertical",
	            value: this.values[i],
	            hasKnob: false,
	            component: true }, this.update.bind(this, i));
	          slider.multislider = this;
	
	          slider.index = i;
	          if (touch.exists) {
	            slider.bar.index = i;
	            slider.fillbar.index = i;
	            slider.preClick = slider.preMove = slider.preRelease = function () {};
	            slider.click = slider.move = slider.release = function () {};
	            slider.preTouch = slider.preTouchMove = slider.preTouchRelease = function () {};
	            slider.touch = slider.touchMove = slider.touchRelease = function () {};
	          }
	
	          this.sliders.push(slider);
	          this.element.appendChild(container);
	        }
	        if (touch.exists) {
	          this.addTouchListeners();
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        for (var i = 0; i < this.sliders.length; i++) {
	          this.sliders[i].colors = this.colors;
	          this.sliders[i].colorInterface();
	        }
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        var sliderWidth = this.width / this.sliders.length;
	        var sliderHeight = this.height;
	
	        for (var i = 0; i < this.sliders.length; i++) {
	          this.sliders[i].resize(sliderWidth, sliderHeight);
	          this.sliders[i].customStyle();
	        }
	      }
	    },
	    update: {
	      value: function update(index, value) {
	        this.emit("change", {
	          index: index,
	          value: value
	        });
	      }
	    },
	    addTouchListeners: {
	      value: function addTouchListeners() {
	        var _this = this;
	
	        this.preClick = this.preMove = this.preRelease = function () {};
	        this.click = this.move = this.release = function () {};
	        this.preTouch = this.preTouchMove = this.preTouchRelease = function () {};
	        this.touch = this.touchMove = this.touchRelease = function () {};
	
	        this.currentElement = false;
	
	        this.element.addEventListener("touchstart", function (e) {
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var slider = _this.sliders[element.index];
	          if (!slider.offset) {
	            slider.offset = dom.findPosition(slider.element);
	          }
	          slider.mouse = dom.locateMouse(e, slider.offset);
	          slider.down();
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchmove", function (e) {
	          var element = document.elementFromPoint(e.targetTouches[0].clientX, e.targetTouches[0].clientY);
	          var slider = _this.sliders[element.index];
	          if (!slider.offset) {
	            slider.offset = dom.findPosition(slider.element);
	          }
	          slider.mouse = dom.locateMouse(e, slider.offset);
	          if (element.index !== _this.currentElement) {
	            if (_this.currentElement >= 0) {
	              var pastslider = _this.sliders[_this.currentElement];
	              pastslider.up();
	            }
	            slider.down();
	          } else {
	            slider.slide();
	          }
	          _this.currentElement = element.index;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	
	        this.element.addEventListener("touchend", function (e) {
	          // no touches to calculate because none remaining
	          var slider = _this.sliders[_this.currentElement];
	          slider.up();
	          _this.interacting = false;
	          _this.currentElement = false;
	          e.preventDefault();
	          e.stopPropagation();
	        });
	      }
	    },
	    numberOfSliders: {
	
	      /**
	      Get or set the number of sliders
	      @type {Number}
	      */
	
	      get: function () {
	        return this.sliders.length;
	      },
	      set: function (v) {
	        if (v === this.sliders.length) {
	          return;
	        }
	        this.sliders.forEach(function (slider) {
	          slider.destroy();
	        });
	        this.empty();
	        this._numberOfSliders = v;
	        this.buildInterface();
	      }
	    },
	    min: {
	
	      /**
	      Lower limit of the multislider's output range
	      @type {number}
	      @example multislider.min = 1000;
	      */
	
	      get: function () {
	        return this.sliders[0].min;
	      },
	      set: function (v) {
	        this.sliders.forEach(function (slider) {
	          slider.min = v;
	        });
	      }
	    },
	    max: {
	
	      /**
	      Upper limit of the multislider's output range
	      @type {number}
	      @example multislider.max = 1000;
	      */
	
	      get: function () {
	        return this.sliders[0].max;
	      },
	      set: function (v) {
	        this.sliders.forEach(function (slider) {
	          slider.max = v;
	        });
	      }
	    },
	    step: {
	
	      /**
	      The increment that the multislider's value changes by.
	      @type {number}
	      @example multislider.step = 5;
	      */
	
	      get: function () {
	        return this.sliders[0].step;
	      },
	      set: function (v) {
	        this.sliders.forEach(function (slider) {
	          slider.step = v;
	        });
	      }
	    },
	    setSlider: {
	
	      /**
	      Set the value of an individual slider
	      @param index {number} Slider index
	      @param value {number} New slider value
	      @example
	      // Set the first slider to value 0.5
	      multislider.setSlider(0,0.5)
	      */
	
	      value: function setSlider(index, value) {
	        this.sliders[index].value = value;
	        this.emit("change", {
	          index: index,
	          value: value
	        });
	      }
	    },
	    setAllSliders: {
	
	      /**
	      Set the value of all sliders at once. If the size of the input array does not match the current number of sliders, the value array will repeat until all sliders have been set. I.e. an input array of length 1 will set all sliders to that value.
	      @param values {Array} All slider values
	      @example
	      multislider.setAllSliders([0.2,0.3,0.4,0.5,0.6])
	      */
	
	      value: function setAllSliders(values) {
	        var _this = this;
	
	        this.values = values;
	        this.sliders.forEach(function (slider, i) {
	          slider.value = values[i % values.length];
	          _this.emit("change", {
	            index: i,
	            value: slider.value
	          });
	        });
	      }
	    }
	  });
	
	  return Multislider;
	})(Interface);
	
	module.exports = Multislider;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	var SliderTemplate = (function (_Interface) {
	  function SliderTemplate(args, options, defaults) {
	    _classCallCheck(this, SliderTemplate);
	
	    _get(Object.getPrototypeOf(SliderTemplate.prototype), "constructor", this).call(this, args, options, defaults);
	
	    this.orientation = this.settings.orientation;
	
	    //  this.mode = this.settings.mode;
	
	    this.hasKnob = this.settings.hasKnob;
	
	    // this.step should eventually be get/set
	    // updating it will update the _value step model
	    //  this.step = this.settings.step; // float
	
	    this._value = new Step(this.settings.scale[0], this.settings.scale[1], this.settings.step, this.settings.value);
	
	    this.init();
	
	    this.position = new Interaction.Handle(this.settings.mode, this.orientation, [0, this.width], [this.height, 0]);
	    this.position.value = this._value.normalized;
	
	    this.value = this._value.value;
	
	    this.emit("change", this.value);
	  }
	
	  _inherits(SliderTemplate, _Interface);
	
	  _createClass(SliderTemplate, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.bar = svg.create("rect");
	        this.fillbar = svg.create("rect");
	        this.knob = svg.create("circle");
	
	        this.element.appendChild(this.bar);
	        this.element.appendChild(this.fillbar);
	        this.element.appendChild(this.knob);
	
	        this.sizeInterface();
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        if (!this.settings.orientation) {
	          if (this.width < this.height) {
	            this.orientation = "vertical";
	          } else {
	            this.orientation = "horizontal";
	          }
	        }
	
	        var x = undefined,
	            y = undefined,
	            w = undefined,
	            h = undefined,
	            barOffset = undefined,
	            cornerRadius = undefined;
	        this.knobData = {
	          level: 0,
	          r: 0
	        };
	
	        if (this.orientation === "vertical") {
	          this.thickness = this.width / 2;
	          x = this.width / 2;
	          y = 0;
	          w = this.thickness;
	          h = this.height;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = h - this.normalized * h;
	          barOffset = "translate(" + this.thickness * -1 / 2 + ",0)";
	          cornerRadius = w / 2;
	        } else {
	          this.thickness = this.height / 2;
	          x = 0;
	          y = this.height / 2;
	          w = this.width;
	          h = this.thickness;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = this.normalized * w;
	          barOffset = "translate(0," + this.thickness * -1 / 2 + ")";
	          cornerRadius = h / 2;
	        }
	
	        this.bar.setAttribute("x", x);
	        this.bar.setAttribute("y", y);
	        this.bar.setAttribute("transform", barOffset);
	        this.bar.setAttribute("rx", cornerRadius); // corner radius
	        this.bar.setAttribute("ry", cornerRadius);
	        this.bar.setAttribute("width", w);
	        this.bar.setAttribute("height", h);
	
	        if (this.orientation === "vertical") {
	          this.fillbar.setAttribute("x", x);
	          this.fillbar.setAttribute("y", this.knobData.level);
	          this.fillbar.setAttribute("width", w);
	          this.fillbar.setAttribute("height", h - this.knobData.level);
	        } else {
	          this.fillbar.setAttribute("x", 0);
	          this.fillbar.setAttribute("y", y);
	          this.fillbar.setAttribute("width", this.knobData.level);
	          this.fillbar.setAttribute("height", h);
	        }
	        this.fillbar.setAttribute("transform", barOffset);
	        this.fillbar.setAttribute("rx", cornerRadius);
	        this.fillbar.setAttribute("ry", cornerRadius);
	
	        if (this.orientation === "vertical") {
	          this.knob.setAttribute("cx", x);
	          this.knob.setAttribute("cy", this.knobData.level);
	        } else {
	          this.knob.setAttribute("cx", this.knobData.level);
	          this.knob.setAttribute("cy", y);
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	
	        if (this.position) {
	          this.position.resize([0, this.width], [this.height, 0]);
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        this.bar.setAttribute("fill", this.colors.fill);
	        this.fillbar.setAttribute("fill", this.colors.accent);
	        this.knob.setAttribute("fill", this.colors.accent);
	        if (!this.hasKnob) {
	          this.knob.setAttribute("fill", "none");
	        }
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.clicked) {
	          this.knobData.r = this.thickness * 0.75;
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	
	        if (this.orientation === "vertical") {
	          this.knobData.level = this._value.normalized * this.height;
	          this.knob.setAttribute("cy", this.height - this.knobData.level);
	          this.fillbar.setAttribute("y", this.height - this.knobData.level);
	          this.fillbar.setAttribute("height", this.knobData.level);
	        } else {
	          this.knobData.level = this._value.normalized * this.width;
	          this.knob.setAttribute("cx", this.knobData.level);
	          this.fillbar.setAttribute("x", 0);
	          this.fillbar.setAttribute("width", this.knobData.level);
	        }
	      }
	    },
	    down: {
	      value: function down() {
	        this.clicked = true;
	        this.knobData.r = this.thickness * 0.9;
	        this.position.anchor = this.mouse;
	        this.slide();
	      }
	    },
	    slide: {
	      value: function slide() {
	        if (this.clicked) {
	          this.position.update(this.mouse);
	          this.value = this._value.updateNormal(this.position.value);
	          this.emit("change", this.value);
	        }
	      }
	    },
	    up: {
	      value: function up() {
	        this.clicked = false;
	        this.render();
	      }
	    },
	    normalized: {
	      get: function () {
	        return this._value.normalized;
	      }
	    },
	    value: {
	
	      /**
	      The slider's current value. If set manually, will update the interface and trigger the output event.
	      @type {number}
	      @example slider.value = 10;
	      */
	
	      get: function () {
	        return this._value.value;
	      },
	      set: function (v) {
	        this._value.update(v);
	        this.position.value = this._value.normalized;
	        this.render();
	      }
	    },
	    min: {
	
	      /**
	      Lower limit of the sliders's output range
	      @type {number}
	      @example slider.min = 1000;
	      */
	
	      get: function () {
	        return this._value.min;
	      },
	      set: function (v) {
	        this._value.min = v;
	      }
	    },
	    max: {
	
	      /**
	      Upper limit of the slider's output range
	      @type {number}
	      @example slider.max = 1000;
	      */
	
	      get: function () {
	        return this._value.max;
	      },
	      set: function (v) {
	        this._value.max = v;
	      }
	    },
	    step: {
	
	      /**
	      The increment that the slider's value changes by.
	      @type {number}
	      @example slider.step = 5;
	      */
	
	      get: function () {
	        return this._value.step;
	      },
	      set: function (v) {
	        this._value.step = v;
	      }
	    },
	    mode: {
	
	      /**
	      Absolute mode (slider's value jumps to mouse click position) or relative mode (mouse drag changes value relative to its current position). Default: "relative".
	      @type {string}
	      @example slider.mode = "relative";
	      */
	
	      get: function () {
	        return this.position.mode;
	      },
	      set: function (v) {
	        this.position.mode = v;
	      }
	    }
	  });
	
	  return SliderTemplate;
	})(Interface);
	
	module.exports = SliderTemplate;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var svg = __webpack_require__(4);
	var math = __webpack_require__(5);
	var Interface = __webpack_require__(6);
	var Step = __webpack_require__(11);
	
	var Interaction = _interopRequireWildcard(__webpack_require__(12));
	
	/**
	* Pan
	*
	* @description Stereo crossfader.
	*
	* @demo <span nexus-ui="pan"></span>
	*
	* @example
	* var pan = new Nexus.Pan('#target')
	*
	* @output
	* change
	* Fires any time the interface's value changes. <br>
	* The event data is an object containing the interface's <i>value</i> (-1 to 1), as well as <i>L</i> and <i>R</i> amplitude values (0-1) for left and right speakers, calculated by a square-root crossfade algorithm.
	*
	* @outputexample
	* pan.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*
	*/
	
	var Pan = (function (_Interface) {
	  function Pan() {
	    _classCallCheck(this, Pan);
	
	    var options = ["scale", "value"];
	
	    var defaults = {
	      size: [120, 20],
	      orientation: "horizontal",
	      mode: "relative",
	      scale: [-1, 1],
	      step: 0,
	      value: 0,
	      hasKnob: true
	    };
	
	    _get(Object.getPrototypeOf(Pan.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.orientation = this.settings.orientation;
	
	    this.mode = this.settings.mode;
	
	    this.hasKnob = this.settings.hasKnob;
	
	    // this.step should eventually be get/set
	    // updating it will update the _value step model
	    this.step = this.settings.step; // float
	
	    this._value = new Step(this.settings.scale[0], this.settings.scale[1], this.settings.step, this.settings.value);
	
	    this.init();
	
	    this.position = new Interaction.Handle(this.mode, this.orientation, [0, this.width], [this.height, 0]);
	    this.position.value = this._value.normalized;
	
	    this.value = this._value.value;
	
	    this.emit("change", this.value);
	  }
	
	  _inherits(Pan, _Interface);
	
	  _createClass(Pan, {
	    buildInterface: {
	      value: function buildInterface() {
	
	        this.bar = svg.create("rect");
	        this.knob = svg.create("circle");
	
	        this.element.appendChild(this.bar);
	        this.element.appendChild(this.knob);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        if (this.position) {
	          this.position.resize([0, this.width], [this.height, 0]);
	        }
	
	        if (this.width < this.height) {
	          this.orientation = "vertical";
	        } else {
	          this.orientation = "horizontal";
	        }
	
	        var x = undefined,
	            y = undefined,
	            w = undefined,
	            h = undefined,
	            barOffset = undefined,
	            cornerRadius = undefined;
	        this.knobData = {
	          level: 0,
	          r: 0
	        };
	
	        if (this.orientation === "vertical") {
	          this.thickness = this.width / 2;
	          x = this.width / 2;
	          y = 0;
	          w = this.thickness;
	          h = this.height;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = h - this.knobData.r - this.normalized * (h - this.knobData.r * 2);
	          barOffset = "translate(" + this.thickness * -1 / 2 + ",0)";
	          cornerRadius = w / 2;
	        } else {
	          this.thickness = this.height / 2;
	          x = 0;
	          y = this.height / 2;
	          w = this.width;
	          h = this.thickness;
	          this.knobData.r = this.thickness * 0.8;
	          this.knobData.level = this.normalized * (w - this.knobData.r * 2) + this.knobData.r;
	          barOffset = "translate(0," + this.thickness * -1 / 2 + ")";
	          cornerRadius = h / 2;
	        }
	
	        this.bar.setAttribute("x", x);
	        this.bar.setAttribute("y", y);
	        this.bar.setAttribute("transform", barOffset);
	        this.bar.setAttribute("rx", cornerRadius); // corner radius
	        this.bar.setAttribute("ry", cornerRadius);
	        this.bar.setAttribute("width", w);
	        this.bar.setAttribute("height", h);
	
	        if (this.orientation === "vertical") {
	          this.knob.setAttribute("cx", x);
	          this.knob.setAttribute("cy", this.knobData.level);
	        } else {
	          this.knob.setAttribute("cx", this.knobData.level);
	          this.knob.setAttribute("cy", y);
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	
	        this.bar.setAttribute("fill", this.colors.fill);
	        this.knob.setAttribute("fill", this.colors.accent);
	
	        if (!this.hasKnob) {
	          this.knob.setAttribute("fill", "transparent");
	        }
	      }
	    },
	    render: {
	      value: function render() {
	        if (!this.clicked) {
	          this.knobData.r = this.thickness * 0.75;
	        }
	        this.knob.setAttribute("r", this.knobData.r);
	
	        if (this.orientation === "vertical") {
	          this.knobData.level = this.knobData.r + this._value.normalized * (this.height - this.knobData.r * 2);
	          this.knob.setAttribute("cy", this.height - this.knobData.level);
	        } else {
	          this.knobData.level = this._value.normalized * (this.width - this.knobData.r * 2) + this.knobData.r;
	          this.knob.setAttribute("cx", this.knobData.level);
	        }
	      }
	    },
	    click: {
	      value: function click() {
	        this.knobData.r = this.thickness * 0.9;
	        this.position.anchor = this.mouse;
	        this.move();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	          this.position.update(this.mouse);
	
	          this.value = this._value.updateNormal(this.position.value);
	
	          this.emit("change", {
	            value: this.value,
	            L: Math.pow(math.scale(this.value, -1, 1, 1, 0), 2),
	            R: Math.pow(math.scale(this.value, -1, 1, 0, 1), 2)
	          });
	        }
	      }
	    },
	    release: {
	      value: function release() {
	        this.render();
	      }
	    },
	    value: {
	
	      /**
	      The position of crossfader, from -1 (left) to 1 (right). Setting this value updates the interface and triggers the output event.
	      @type {number}
	      */
	
	      get: function () {
	        return this._value.value;
	      },
	      set: function (value) {
	        this._value.update(value);
	        this.position.value = this._value.normalized;
	        this.emit("change", {
	          value: this.value,
	          L: Math.pow(math.scale(this.value, -1, 1, 1, 0), 2),
	          R: Math.pow(math.scale(this.value, -1, 1, 0, 1), 2)
	        });
	        this.render();
	      }
	    },
	    normalized: {
	      get: function () {
	        return this._value.normalized;
	      }
	    }
	  });
	
	  return Pan;
	})(Interface);
	
	module.exports = Pan;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = __webpack_require__(5);
	var svg = __webpack_require__(4);
	var Interface = __webpack_require__(6);
	
	var Point = function Point(point, envelope) {
	
	  this.x = point.x;
	  this.y = point.y;
	  this.envelope = envelope;
	
	  this.element = svg.create("circle");
	  this.element.setAttribute("fill", this.envelope.colors.accent);
	
	  this.envelope.element.appendChild(this.element);
	
	  this.resize = function () {
	    var r = ~ ~(Math.min(this.envelope.width, this.envelope.height) / 50) + 2;
	    this.element.setAttribute("r", r);
	  };
	
	  this.move = function (x, y) {
	
	    this.x = x || x === 0 ? x : this.x;
	    this.y = y || y === 0 ? y : this.y;
	
	    if (this.envelope.nodes.indexOf(this) >= 0) {
	
	      var prevIndex = this.envelope.nodes.indexOf(this) - 1;
	      var nextIndex = this.envelope.nodes.indexOf(this) + 1;
	
	      var prevNode = this.envelope.nodes[prevIndex];
	      var nextNode = this.envelope.nodes[nextIndex];
	
	      var lowX = prevIndex >= 0 ? prevNode.x : 0;
	      var highX = nextIndex < this.envelope.nodes.length ? nextNode.x : 1;
	
	      if (this.x < lowX) {
	        this.x = lowX;
	      }
	      if (this.x > highX) {
	        this.x = highX;
	      }
	    }
	
	    this.location = this.getCoordinates();
	    this.element.setAttribute("cx", this.location.x);
	    this.element.setAttribute("cy", this.location.y);
	  };
	
	  this.getCoordinates = function () {
	    return {
	      x: this.x * this.envelope.width,
	      y: (1 - this.y) * this.envelope.height
	    };
	  };
	
	  this.move(this.x, this.y, true);
	  this.resize();
	
	  this.destroy = function () {
	    this.envelope.element.removeChild(this.element);
	    this.envelope.nodes.splice(this.envelope.nodes.indexOf(this), 1);
	  };
	};
	
	/**
	* Envelope
	*
	* @description Interactive linear ramp visualization.
	*
	* @demo <span nexus-ui="envelope"></span>
	*
	* @example
	* var envelope = new Nexus.Envelope('#target')
	*
	* @example
	* var envelope = new Nexus.Envelope('#target',{
	*   'size': [300,150],
	*   'points': [
	*     {
	*       x: 0.1,
	*       y: 0.4
	*     },
	*     {
	*       x: 0.35,
	*       y: 0.6
	*     },
	*     {
	*       x: 0.65,
	*       y: 0.2
	*     },
	*     {
	*       x: 0.9,
	*       y: 0.4
	*     },
	*   ]
	* })
	*
	* @output
	* change
	* Fires any time a node is moved. <br>
	* The event data is an array of point locations. Each item in the array is an object containing <i>x</i> and <i>y</i> properties describing the location of a point on the envelope.
	*
	* @outputexample
	* envelope.on('change',function(v) {
	*   console.log(v);
	* })
	*
	*/
	
	var Envelope = (function (_Interface) {
	  function Envelope() {
	    _classCallCheck(this, Envelope);
	
	    var options = ["value"];
	
	    var defaults = {
	      size: [300, 150],
	      points: [{
	        x: 0.1,
	        y: 0.4
	      }, {
	        x: 0.35,
	        y: 0.6
	      }, {
	        x: 0.65,
	        y: 0.2
	      }, {
	        x: 0.9,
	        y: 0.4
	      }]
	    };
	
	    _get(Object.getPrototypeOf(Envelope.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.points = this.settings.points;
	
	    this.nodes = [];
	
	    this.selected = false;
	
	    this.init();
	  }
	
	  _inherits(Envelope, _Interface);
	
	  _createClass(Envelope, {
	    buildInterface: {
	      value: function buildInterface() {
	        var _this = this;
	
	        this.points.forEach(function (point) {
	          var node = new Point(point, _this);
	          _this.nodes.push(node);
	        });
	
	        this.sortPoints();
	
	        this.line = svg.create("polyline");
	        this.line.setAttribute("stroke-width", 2);
	        this.line.setAttribute("fill", "none");
	
	        this.element.appendChild(this.line);
	
	        this.fill = svg.create("polyline");
	        this.fill.setAttribute("fill-opacity", "0.2");
	
	        this.element.appendChild(this.fill);
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	
	        for (var i = 0; i < this.nodes.length; i++) {
	          this.nodes[i].resize();
	          this.nodes[i].move();
	        }
	
	        this.render();
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        var _this = this;
	
	        this.element.style.backgroundColor = this.colors.fill;
	        this.line.setAttribute("stroke", this.colors.accent);
	        this.fill.setAttribute("fill", this.colors.accent);
	        this.nodes.forEach(function (node) {
	          node.element.setAttribute("fill", _this.colors.accent);
	        });
	      }
	    },
	    render: {
	      value: function render() {
	        //  this.nodes[this.selected].move( this.points )
	        this.calculatePath();
	      }
	    },
	    calculatePoints: {
	      value: function calculatePoints() {
	        var _this = this;
	
	        this.points = [];
	        this.nodes.forEach(function (node) {
	          _this.points.push({ x: node.x, y: node.y });
	        });
	      }
	    },
	    calculatePath: {
	      value: function calculatePath() {
	
	        //stroke data
	        var data = "0 " + this.nodes[0].location.y + ", ";
	
	        // data should be re-ordered based on x location.
	        // whatever function adds a node should add it at the right index
	
	        this.nodes.forEach(function (node) {
	          //  let location = node.getCoordinates();
	          data += node.location.x + " " + node.location.y + ", ";
	        });
	
	        //  data += point.x*this.width+' '+ point.y*this.height+', ';
	        data += this.width + " " + this.nodes[this.nodes.length - 1].location.y;
	
	        this.line.setAttribute("points", data);
	
	        // fill data
	        // add bottom corners
	
	        data += ", " + this.width + " " + this.height + ", ";
	        data += "0 " + this.height;
	
	        this.fill.setAttribute("points", data);
	      }
	    },
	    click: {
	      value: function click() {
	        // find nearest node and set this.selected (index)
	        this.hasMoved = false;
	        this.selected = this.findNearestNode();
	
	        this.nodes[this.selected].move(this.mouse.x / this.width, 1 - this.mouse.y / this.height);
	        this.scaleNode(this.selected);
	
	        // must do this b/c new node may have been created
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	      }
	    },
	    move: {
	      value: function move() {
	        if (this.clicked) {
	          this.mouse.x = math.clip(this.mouse.x, 0, this.width);
	          this.hasMoved = true;
	
	          this.nodes[this.selected].move(this.mouse.x / this.width, 1 - this.mouse.y / this.height);
	          this.scaleNode(this.selected);
	
	          this.calculatePoints();
	          this.emit("change", this.points);
	          this.render();
	        }
	      }
	    },
	    release: {
	      value: function release() {
	
	        if (!this.hasMoved) {
	          this.nodes[this.selected].destroy();
	        }
	
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	
	        // reset this.selected
	        this.selected = null;
	      }
	    },
	    findNearestNode: {
	      value: function findNearestNode() {
	        var nearestIndex = null;
	        // set this unreasonably high so that every distance will be lower than it.
	        var nearestDist = 10000;
	        var before = false;
	        var x = this.mouse.x / this.width;
	        var y = 1 - this.mouse.y / this.height;
	        var nodes = this.nodes;
	        for (var i = 0; i < nodes.length; i++) {
	
	          // calculate the distance from mouse to this node using pythagorean theorem
	          var distance = Math.sqrt(Math.pow(nodes[i].x - x, 2) + Math.pow(nodes[i].y - y, 2));
	
	          // if this distance is less than the previous shortest distance, use this index
	          if (distance < nearestDist) {
	            nearestDist = distance;
	            nearestIndex = i;
	            before = x > nodes[i].x;
	          }
	        }
	
	        // if not very close to any node, create a node
	        if (nearestDist > 0.07) {
	
	          nearestIndex = this.getIndexFromX(this.mouse.x / this.width);
	
	          this.nodes.splice(nearestIndex, 0, new Point({
	            x: this.mouse.x / this.width,
	            y: 1 - this.mouse.y / this.height
	          }, this));
	          this.hasMoved = true;
	        }
	
	        return nearestIndex;
	      }
	    },
	    getIndexFromX: {
	      value: function getIndexFromX(x) {
	        var _this = this;
	
	        var index = 0;
	        this.nodes.forEach(function (node, i) {
	          if (_this.nodes[i].x <= x) {
	            index = i + 1;
	          }
	        });
	        return index;
	      }
	    },
	    scaleNode: {
	      value: function scaleNode(i) {
	
	        var clippedX = math.clip(this.nodes[i].x, 0, 1);
	        var clippedY = math.clip(this.nodes[i].y, 0, 1);
	
	        this.nodes[i].move(clippedX, clippedY);
	      }
	    },
	    sortPoints: {
	
	      /**
	      Sort the this.points array from left-most point to right-most point. You should not regularly need to use this, however it may be useful if the points get unordered.
	      */
	
	      value: function sortPoints() {
	        this.nodes.sort(function (a, b) {
	          return a.x > b.x;
	        });
	      }
	    },
	    addPoint: {
	
	      /**
	      Add a breakpoint on the envelope.
	      @param x {number} x location of the point, normalized (0-1)
	      @param y {number} y location of the point, normalized (0-1)
	      */
	
	      value: function addPoint(x, y) {
	        var index = this.nodes.length;
	
	        this.sortPoints();
	
	        for (var i = 0; i < this.nodes.length; i++) {
	          if (x < this.nodes[i].x) {
	            index = i;
	            break;
	          }
	        }
	
	        this.nodes.splice(index, 0, new Point({
	          x: x,
	          y: y
	        }, this));
	
	        this.scaleNode(index);
	
	        this.calculatePoints();
	        this.emit("change", this.points);
	
	        this.render();
	      }
	    },
	    scan: {
	
	      /**
	      Find the level at a certain x location on the envelope.
	      @param x {number} The x location to find the level of, normalized 0-1
	      */
	
	      value: function scan(x) {
	        // find surrounding points
	        var nextIndex = this.getIndexFromX(x);
	        var priorIndex = nextIndex - 1;
	        if (priorIndex < 0) {
	          priorIndex = 0;
	        }
	        if (nextIndex >= this.nodes.length) {
	          nextIndex = this.nodes.length - 1;
	        }
	        var priorPoint = this.nodes[priorIndex];
	        var nextPoint = this.nodes[nextIndex];
	        var loc = math.scale(x, priorPoint.x, nextPoint.x, 0, 1);
	        var value = math.interp(loc, priorPoint.y, nextPoint.y);
	        this.emit("scan", value);
	        return value;
	      }
	    },
	    movePoint: {
	
	      /**
	      Move a breakpoint on the envelope.
	      @param index {number} The index of the breakpoint to move
	      @param x {number} New x location, normalized 0-1
	      @param y {number} New y location, normalized 0-1
	      */
	
	      value: function movePoint(index, x, y) {
	        this.nodes[index].move(x, y);
	        this.scaleNode(index);
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	      }
	    },
	    adjustPoint: {
	
	      /**
	      Move a breakpoint on the envelope by a certain amount.
	      @param index {number} The index of the breakpoint to move
	      @param xOffset {number} X displacement, normalized 0-1
	      @param yOffset {number} Y displacement, normalized 0-1
	      */
	
	      value: function adjustPoint(index, xOffset, yOffset) {
	        this.nodes[index].move(this.nodes[index].x + xOffset, this.nodes[index].y + yOffset);
	        this.scaleNode(index);
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	      }
	    },
	    destroyPoint: {
	
	      /**
	      Remove a breakpoint from the envelope.
	      @param index {number} Index of the breakpoint to remove
	      */
	
	      value: function destroyPoint(index) {
	        this.nodes[index].destroy();
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	      }
	    },
	    setPoints: {
	
	      /**
	      Remove all existing breakpoints and add an entirely new set of breakpoints.
	      @param allPoints {array} An array of objects with x/y properties (normalized 0-1). Each object in the array specifices the x/y location of a new breakpoint to be added.
	      */
	
	      value: function setPoints(allPoints) {
	        var _this = this;
	
	        while (this.nodes.length) {
	          this.nodes[0].destroy();
	        }
	        allPoints.forEach(function (point) {
	          _this.addPoint(point.x, point.y);
	        });
	        this.calculatePoints();
	        this.emit("change", this.points);
	        this.render();
	      }
	    }
	  });
	
	  return Envelope;
	})(Interface);
	
	module.exports = Envelope;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var dom = __webpack_require__(7);
	//let math = require('../util/math');
	var Interface = __webpack_require__(6);
	
	/**
	* Spectrogram
	*
	* @description Audio spectrum visualization
	*
	* @demo <span nexus-ui="spectrogram"></span>
	*
	* @example
	* var spectrogram = new Nexus.Spectrogram('#target')
	*
	* @example
	* var spectrogram = new Nexus.Spectrogram('#target',{
	*   'size': [300,150]
	* })
	*
	* @output
	* &nbsp;
	* No events
	*
	*/
	
	var context = __webpack_require__(1).context;
	
	var Spectrogram = (function (_Interface) {
	  function Spectrogram() {
	    _classCallCheck(this, Spectrogram);
	
	    var options = ["scale", "value"];
	
	    var defaults = {
	      size: [300, 150]
	    };
	
	    _get(Object.getPrototypeOf(Spectrogram.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.context = context(); // jshint ignore:line
	
	    this.analyser = this.context.createAnalyser();
	    this.analyser.fftSize = 2048;
	    this.bufferLength = this.analyser.frequencyBinCount;
	    this.dataArray = new Uint8Array(this.bufferLength);
	
	    this.active = true;
	
	    this.source = false;
	
	    this.init();
	  }
	
	  _inherits(Spectrogram, _Interface);
	
	  _createClass(Spectrogram, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.canvas = new dom.SmartCanvas(this.parent);
	        this.element = this.canvas.element;
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	        this.canvas.resize(this.width, this.height);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.canvas.element.style.backgroundColor = this.colors.fill;
	      }
	    },
	    render: {
	      value: function render() {
	
	        if (this.active) {
	          requestAnimationFrame(this.render.bind(this));
	        }
	
	        this.analyser.getByteFrequencyData(this.dataArray);
	
	        this.canvas.context.fillStyle = this.colors.fill;
	        this.canvas.context.fillRect(0, 0, this.canvas.element.width, this.canvas.element.height);
	
	        if (this.source && this.dataArray) {
	
	          //console.log(this.dataArray);
	
	          var barWidth = this.canvas.element.width / this.bufferLength;
	          var barHeight = undefined;
	          var x = 0;
	
	          var definition = this.canvas.element.width / 50;
	
	          for (var i = 0; i < this.bufferLength; i = i + definition) {
	            barHeight = Math.max.apply(null, this.dataArray.subarray(i, i + definition));
	            barHeight /= 255;
	            barHeight *= this.canvas.element.height;
	
	            this.canvas.context.fillStyle = this.colors.accent;
	            this.canvas.context.fillRect(x, this.canvas.element.height - barHeight, barWidth * definition, barHeight);
	
	            x += barWidth * definition;
	          }
	        }
	      }
	    },
	    connect: {
	
	      /**
	      Equivalent to "patching in" an audio node to visualize. NOTE: You cannot connect audio nodes across two different audio contexts. NexusUI runs its audio analysis on its own audio context, Nexus.context. If the audio node you are visualizing is created on a different audio context, you will need to tell NexusUI to use that context instead: i.e. Nexus.context = YourAudioContextName. For example, in ToneJS projects, the line would be: Nexus.context = Tone.context . We recommend that you write that line of code only once at the beginning of your project.
	      @param node {AudioNode} The audio node to visualize
	      @example Nexus.context = Tone.context // or another audio context you have created
	      spectrogram.connect( Tone.Master );
	      */
	
	      value: function connect(node) {
	        if (this.source) {
	          this.disconnect();
	        }
	        this.source = node;
	        this.source.connect(this.analyser);
	        this.render();
	      }
	    },
	    disconnect: {
	
	      /**
	      Stop visualizing the source node and disconnect it.
	      */
	
	      value: function disconnect() {
	        this.source.disconnect(this.analyser);
	        this.source = null;
	      }
	    },
	    click: {
	      value: function click() {
	        this.active = !this.active;
	        this.render();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {
	        this.active = false;
	      }
	    }
	  });
	
	  return Spectrogram;
	})(Interface);
	
	module.exports = Spectrogram;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var dom = __webpack_require__(7);
	var math = __webpack_require__(5);
	var Interface = __webpack_require__(6);
	
	/**
	* Meter
	*
	* @description Stereo decibel meter
	*
	* @demo <span nexus-ui="meter"></span>
	*
	* @example
	* var meter = new Nexus.Meter('#target')
	*
	* @example
	* var meter = new Nexus.Meter('#target',{
	*   size: [75,75]
	* })
	*
	* @output
	* &nbsp;
	* No events
	*
	*/
	
	var context = __webpack_require__(1).context;
	
	var Meter = (function (_Interface) {
	  function Meter() {
	    _classCallCheck(this, Meter);
	
	    var options = ["scale", "value"];
	
	    var defaults = {
	      size: [30, 100]
	    };
	
	    _get(Object.getPrototypeOf(Meter.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.context = context(); // jshint ignore:line
	
	    this.channels = 2;
	
	    this.splitter = this.context.createChannelSplitter(this.channels);
	
	    this.analysers = [];
	
	    for (var i = 0; i < this.channels; i++) {
	      var analyser = this.context.createAnalyser();
	      this.splitter.connect(analyser, i);
	      analyser.fftSize = 1024;
	      analyser.smoothingTimeConstant = 1;
	      this.analysers.push(analyser);
	    }
	    this.bufferLength = this.analysers[0].frequencyBinCount;
	    this.dataArray = new Float32Array(this.bufferLength);
	
	    /*
	        // add linear gradient
	        var grd = canvasCtx.createLinearGradient(0, 0, 0, canvas.height);
	        // light blue
	        grd.addColorStop(0, '#000');
	        grd.addColorStop(0.2, '#bbb');
	        grd.addColorStop(0.4, '#d18');
	        // dark blue
	        grd.addColorStop(1, '#d18');
	        canvasCtx.fillStyle = grd; */
	
	    this.active = true;
	
	    this.db = -Infinity;
	
	    this.init();
	
	    this.meterWidth = this.canvas.element.width / this.channels;
	
	    this.render();
	  }
	
	  _inherits(Meter, _Interface);
	
	  _createClass(Meter, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.canvas = new dom.SmartCanvas(this.parent);
	        this.element = this.canvas.element;
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	        this.canvas.resize(this.width, this.height);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.canvas.element.style.backgroundColor = this.colors.fill;
	      }
	    },
	    render: {
	      value: function render() {
	
	        if (this.active) {
	          requestAnimationFrame(this.render.bind(this));
	        }
	
	        this.canvas.context.fillStyle = this.colors.fill;
	        this.canvas.context.fillRect(0, 0, this.canvas.element.width, this.canvas.element.height);
	
	        for (var i = 0; i < this.analysers.length; i++) {
	
	          if (this.source) {
	
	            this.analysers[i].getFloatTimeDomainData(this.dataArray);
	
	            var rms = 0;
	
	            for (var _i = 0; _i < this.dataArray.length; _i++) {
	              rms += this.dataArray[_i] * this.dataArray[_i];
	            }
	
	            rms = Math.sqrt(rms / this.dataArray.length);
	
	            this.db = 20 * Math.log10(rms);
	          } else if (this.db > -200 && this.db !== -Infinity) {
	            this.db -= 1;
	          } else {
	            this.db = -Infinity;
	          }
	
	          //console.log(db)
	
	          if (this.db > -70) {
	
	            var linear = math.normalize(this.db, -70, 5);
	            var exp = linear * linear;
	            var y = math.scale(exp, 0, 1, this.element.height, 0);
	
	            this.canvas.context.fillStyle = this.colors.accent;
	            this.canvas.context.fillRect(this.meterWidth * i, y, this.meterWidth, this.canvas.element.height - y);
	
	            //console.log("rendering...")
	          }
	        }
	      }
	    },
	    connect: {
	
	      /**
	      Equivalent to "patching in" an audio node to visualize. NOTE: You cannot connect audio nodes across two different audio contexts. NexusUI runs its audio analysis on its own audio context, Nexus.context. If the audio node you are visualizing is created on a different audio context, you will need to tell NexusUI to use that context instead: i.e. Nexus.context = YourAudioContextName. For example, in ToneJS projects, the line would be: Nexus.context = Tone.context . We recommend that you write that line of code only once at the beginning of your project.
	      @param node {AudioNode} The audio node to visualize
	      @param channels {number} (optional) The number of channels in the source node to watch. If not specified, the interface will look for a .channelCount property on the input node. If it does not exist, the interface will default to 1 channel.
	      @example Nexus.context = Tone.context // or another audio context you have created
	      meter.connect( Tone.Master, 2 );
	      */
	
	      value: function connect(node, channels) {
	        if (this.source) {
	          this.disconnect();
	        }
	        //this.dummy.disconnect(this.splitter);
	
	        if (channels) {
	          this.channels = channels;
	        } else if (node.channelCount) {
	          this.channels = node.channelCount;
	        } else {
	          this.channels = 2;
	        }
	        this.meterWidth = this.canvas.element.width / this.channels;
	
	        this.source = node;
	        this.source.connect(this.splitter);
	
	        //  this.render();
	      }
	    },
	    disconnect: {
	
	      /**
	      Stop visualizing the source node and disconnect it.
	      */
	
	      value: function disconnect() {
	
	        this.source.disconnect(this.splitter);
	        this.source = false;
	        //  this.dummy.connect(this.splitter);
	        this.meterWidth = this.canvas.element.width / this.channels;
	      }
	    },
	    click: {
	      value: function click() {
	        this.active = !this.active;
	        this.render();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {
	        this.active = false;
	      }
	    }
	  });
	
	  return Meter;
	})(Interface);
	
	module.exports = Meter;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var dom = __webpack_require__(7);
	var Interface = __webpack_require__(6);
	
	/**
	* Oscilloscope
	*
	* @description Visualizes a waveform's stream of values.
	*
	* @demo <span nexus-ui="oscilloscope"></span>
	*
	* @example
	* var oscilloscope = new Nexus.Oscilloscope('#target')
	*
	* @example
	* var oscilloscope = new Nexus.Oscilloscope('#target',{
	*   'size': [300,150]
	* })
	*
	* @output
	* &nbsp;
	* No events
	*
	*/
	
	var context = __webpack_require__(1).context;
	
	var Oscilloscope = (function (_Interface) {
	  function Oscilloscope() {
	    _classCallCheck(this, Oscilloscope);
	
	    var options = ["scale", "value"];
	
	    var defaults = {
	      size: [300, 150]
	    };
	
	    _get(Object.getPrototypeOf(Oscilloscope.prototype), "constructor", this).call(this, arguments, options, defaults);
	
	    this.context = context(); // jshint ignore:line
	
	    this.analyser = this.context.createAnalyser();
	    this.analyser.fftSize = 2048;
	    this.bufferLength = this.analyser.frequencyBinCount;
	    this.dataArray = new Uint8Array(this.bufferLength);
	    this.analyser.getByteTimeDomainData(this.dataArray);
	
	    this.active = true;
	
	    this.source = false;
	
	    this.init();
	
	    this.render();
	  }
	
	  _inherits(Oscilloscope, _Interface);
	
	  _createClass(Oscilloscope, {
	    buildFrame: {
	      value: function buildFrame() {
	        this.canvas = new dom.SmartCanvas(this.parent);
	        this.element = this.canvas.element;
	      }
	    },
	    sizeInterface: {
	      value: function sizeInterface() {
	        this.canvas.resize(this.width, this.height);
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        this.canvas.element.style.backgroundColor = this.colors.fill;
	      }
	    },
	    render: {
	      value: function render() {
	
	        if (this.active) {
	          requestAnimationFrame(this.render.bind(this));
	        }
	
	        this.analyser.getByteTimeDomainData(this.dataArray);
	
	        this.canvas.context.fillStyle = this.colors.fill;
	        this.canvas.context.fillRect(0, 0, this.canvas.element.width, this.canvas.element.height);
	
	        this.canvas.context.lineWidth = ~ ~(this.height / 100 + 2);
	        this.canvas.context.strokeStyle = this.colors.accent;
	
	        this.canvas.context.beginPath();
	
	        if (this.source) {
	
	          var sliceWidth = this.canvas.element.width * 1 / this.bufferLength;
	          var x = 0;
	
	          for (var i = 0; i < this.bufferLength; i++) {
	
	            var v = this.dataArray[i] / 128;
	            var y = v * this.canvas.element.height / 2;
	
	            if (i === 0) {
	              this.canvas.context.moveTo(x, y);
	            } else {
	              this.canvas.context.lineTo(x, y);
	            }
	
	            x += sliceWidth;
	          }
	        } else {
	          this.canvas.context.moveTo(0, this.canvas.element.height / 2);
	          this.canvas.context.lineTo(this.canvas.element.width, this.canvas.element.height / 2);
	        }
	
	        this.canvas.context.stroke();
	      }
	    },
	    connect: {
	
	      /**
	      Equivalent to "patching in" an audio node to visualize. NOTE: You cannot connect audio nodes across two different audio contexts. NexusUI runs its audio analysis on its own audio context, Nexus.context. If the audio node you are visualizing is created on a different audio context, you will need to tell NexusUI to use that context instead: i.e. Nexus.context = YourAudioContextName. For example, in ToneJS projects, the line would be: Nexus.context = Tone.context . We recommend that you write that line of code only once at the beginning of your project.
	      @param node {AudioNode} The audio node to visualize
	      @example Nexus.context = Tone.context // or another audio context you have created
	      oscilloscope.connect( Tone.Master );
	      */
	
	      value: function connect(node) {
	
	        if (this.source) {
	          this.disconnect();
	        }
	
	        this.source = node;
	        this.source.connect(this.analyser);
	
	        this.render();
	      }
	    },
	    disconnect: {
	
	      /**
	      Stop visualizing the source node and disconnect it.
	      */
	
	      value: function disconnect() {
	        if (this.source) {
	          this.source.disconnect(this.analyser);
	          this.source = null;
	        }
	      }
	    },
	    click: {
	      value: function click() {
	        this.active = !this.active;
	        this.render();
	      }
	    },
	    customDestroy: {
	      value: function customDestroy() {
	        this.active = false;
	      }
	    }
	  });
	
	  return Oscilloscope;
	})(Interface);
	
	module.exports = Oscilloscope;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { "default": obj }; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	/*
	Main concept:
	synth = new Nexus.Rack('elementID');
	
	Transform all elements inside the div
	synth.elementID will hold the first slider interface
	
	2) In future, potentially writing a rack that is re-usable?
	Could also take JSON
	
	new Nexus.Rack('#target',{
	  pre: () => {
	    create some divs here, or some audio code
	  },
	  interface: {
	    slider1: Nexus.add.slider({
	      top:10,
	      left:10,
	      width:50,
	      height:100,
	      min: 0,
	      max: 100,
	      step: 1
	    }),
	    wave1: Nexus.add.waveform({
	      file: './path/to/file.mp3',
	      width:500,
	      height:100,
	      mode: 'range'
	    })
	  },
	  init: () => {
	    // some audio init code goes here...
	  }
	});
	
	*/
	
	var transform = _interopRequireWildcard(__webpack_require__(39));
	
	var dom = _interopRequire(__webpack_require__(7));
	
	var colors = __webpack_require__(1).colors;
	
	var Rack = (function () {
	  function Rack(target, settings) {
	    _classCallCheck(this, Rack);
	
	    this.meta = {};
	    this.meta.target = target;
	    this.meta.parent = dom.parseElement(target); // should be a generic function for parsing a 'target' argument that checks for string/DOM/jQUERY
	    this.meta.colors = {};
	
	    if (settings) {
	      this.meta.attribute = settings.attribute || "nexus-ui";
	      this.meta.title = settings.name || false;
	      this.meta.open = settings.open || false;
	    } else {
	      this.meta.attribute = "nexus-ui";
	      this.meta.title = false;
	      this.meta.open = false;
	    }
	
	    var defaultColors = colors(); // jshint ignore:line
	    this.meta.colors.accent = defaultColors.accent;
	    this.meta.colors.fill = defaultColors.fill;
	    this.meta.colors.light = defaultColors.light;
	    this.meta.colors.dark = defaultColors.dark;
	    this.meta.colors.mediumLight = defaultColors.mediumLight;
	    this.meta.colors.mediumDark = defaultColors.mediumDark;
	    this.buildInterface();
	    this.colorInterface();
	  }
	
	  _createClass(Rack, {
	    buildInterface: {
	      value: function buildInterface() {
	        var _this = this;
	
	        this.meta.parent.style.boxSizing = "border-box";
	        this.meta.parent.style.userSelect = "none";
	        this.meta.parent.style.mozUserSelect = "none";
	        this.meta.parent.style.webkitUserSelect = "none";
	
	        this.meta.contents = document.createElement("div");
	
	        while (this.meta.parent.childNodes.length > 0) {
	          this.meta.contents.appendChild(this.meta.parent.childNodes[0]);
	        }
	
	        this.meta.contents.style.padding = "0px";
	        this.meta.contents.style.boxSizing = "border-box";
	
	        if (this.meta.title) {
	          this.meta.titleBar = document.createElement("div");
	          this.meta.titleBar.innerHTML = this.meta.title;
	          this.meta.titleBar.style.fontFamily = "arial";
	          this.meta.titleBar.style.position = "relative";
	          this.meta.titleBar.style.color = "#888";
	          this.meta.titleBar.style.padding = "7px";
	          this.meta.titleBar.style.fontSize = "12px";
	
	          this.meta.button = document.createElement("div");
	          this.meta.button.style.position = "absolute";
	          this.meta.button.style.top = "5px";
	          this.meta.button.style.right = "5px";
	          this.meta.button.innerHTML = "-";
	          this.meta.button.style.padding = "0px 5px 2px";
	          this.meta.button.style.lineHeight = "12px";
	          this.meta.button.style.fontSize = "15px";
	
	          this.meta.button.style.cursor = "pointer";
	
	          this.meta.button.addEventListener("mouseover", function () {
	            _this.meta.button.style.backgroundColor = _this.meta.colors.mediumDark;
	          });
	          this.meta.button.addEventListener("mouseleave", function () {
	            _this.meta.button.style.backgroundColor = _this.meta.colors.mediumLight;
	          });
	          this.meta.button.addEventListener("click", function () {
	            if (_this.meta.open) {
	              _this.hide();
	            } else {
	              _this.show();
	            }
	          });
	
	          this.meta.titleBar.appendChild(this.meta.button);
	
	          this.meta.parent.appendChild(this.meta.titleBar);
	        }
	        this.meta.parent.appendChild(this.meta.contents);
	
	        //  var width = this.meta.parent.style.width = getComputedStyle(this.meta.parent).getPropertyValue('width');
	        //    this.meta.parent.style.width = width;
	
	        var ui = transform.section(this.meta.target, this.meta.attribute);
	        for (var key in ui) {
	          this[key] = ui[key];
	        }
	      }
	    },
	    colorInterface: {
	      value: function colorInterface() {
	        if (this.meta.title) {
	          this.meta.button.style.backgroundColor = this.meta.colors.mediumLight;
	          this.meta.button.style.border = "solid 0px " + this.meta.colors.fill;
	          this.meta.parent.style.border = "solid 1px " + this.meta.colors.mediumLight;
	          this.meta.parent.style.backgroundColor = this.meta.colors.light;
	          this.meta.titleBar.style.backgroundColor = this.meta.colors.fill;
	        }
	      }
	    },
	    show: {
	      value: function show() {
	        this.meta.contents.style.display = "block";
	        this.meta.open = true;
	      }
	    },
	    hide: {
	      value: function hide() {
	        this.meta.contents.style.display = "none";
	        this.meta.open = false;
	      }
	    },
	    colorize: {
	      value: function colorize(type, color) {
	        for (var key in this) {
	          if (this[key].colorize) {
	            this[key].colorize(type, color);
	          }
	        }
	        this.meta.colors[type] = color;
	        this.colorInterface();
	      }
	    },
	    empty: {
	      value: function empty() {
	        for (var key in this) {
	          if (this[key].destroy) {
	            this[key].destroy();
	          }
	        }
	      }
	    }
	  });
	
	  return Rack;
	})();
	
	module.exports = Rack;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	"use strict";
	
	var dom = _interopRequire(__webpack_require__(7));
	
	var Interfaces = _interopRequire(__webpack_require__(2));
	
	var createInterfaceID = function (widget, interfaceIDs) {
	  var type = widget.type;
	  if (interfaceIDs[type]) {
	    interfaceIDs[type]++;
	  } else {
	    interfaceIDs[type] = 1;
	  }
	  return type + interfaceIDs[type];
	};
	
	var element = function (element, type, options) {
	  options = options || {};
	  for (var i = 0; i < element.attributes.length; i++) {
	    var att = element.attributes[i];
	    //  try {
	    //    options[att.nodeName] = eval(att.nodeValue);
	    //  } catch(e) {
	    options[att.nodeName] = att.nodeValue;
	    //  }
	  }
	  type = type[0].toUpperCase() + type.slice(1);
	  var widget = new Interfaces[type](element, options);
	  widget.id = element.id;
	  return widget;
	};
	
	var section = function (parent, keyword) {
	
	  keyword = keyword || "nexus-ui";
	
	  var interfaceIDs = {};
	
	  var container = dom.parseElement(parent);
	
	  var ui = {};
	
	  var htmlElements = container.getElementsByTagName("*");
	  var elements = [];
	  for (var i = 0; i < htmlElements.length; i++) {
	    elements.push(htmlElements[i]);
	  }
	  for (var i = 0; i < elements.length; i++) {
	    var type = elements[i].getAttribute(keyword);
	    if (type) {
	      var formattedType = false;
	      for (var key in Interfaces) {
	        if (type.toLowerCase() === key.toLowerCase()) {
	          formattedType = key;
	        }
	      }
	      console.log(formattedType);
	      var widget = element(elements[i], formattedType);
	      if (widget.id) {
	        ui[widget.id] = widget;
	      } else {
	        var id = createInterfaceID(widget, interfaceIDs);
	        ui[id] = widget;
	      }
	    }
	  }
	
	  return ui;
	};
	
	var add = function (type, parent, options) {
	  var target = document.createElement("div");
	  options = options || {};
	  if (parent) {
	    parent = dom.parseElement(parent);
	  } else {
	    parent = document.body;
	  }
	  parent.appendChild(target);
	  options.target = target;
	  if (options.size) {
	    target.style.width = options.size[0] + "px";
	    target.style.height = options.size[1] + "px";
	  }
	  return element(target, type, options);
	};
	
	exports.element = element;
	exports.section = section;
	exports.add = add;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var math = _interopRequire(__webpack_require__(5));
	
	var Tune = (function () {
	  function Tune() {
	    _classCallCheck(this, Tune);
	
	    // the scale as ratios
	    this.scale = [];
	
	    // i/o modes
	    this.mode = {
	      output: "frequency",
	      input: "step"
	    };
	
	    // ET major
	    this.etmajor = [261.62558, 293.664764, 329.627563, 349.228241, 391.995422, 440, 493.883301, 523.25116];
	
	    // Root frequency.
	    this.root = math.mtof(60); // * Math.pow(2,(60-69)/12);
	
	    // default is a major scale
	    this.createScale(0, 2, 4, 5, 7, 9, 11);
	  }
	
	  _createClass(Tune, {
	    note: {
	
	      /* Return data in the mode you are in (freq, ratio, or midi) */
	
	      value: function note(input, octave) {
	
	        var newvalue = undefined;
	
	        if (this.mode.output === "frequency") {
	          newvalue = this.frequency(input, octave);
	        } else if (this.mode.output === "ratio") {
	          newvalue = this.ratio(input, octave);
	        } else if (this.mode.output === "MIDI") {
	          newvalue = this.MIDI(input, octave);
	        } else {
	          newvalue = this.frequency(input, octave);
	        }
	
	        return newvalue;
	      }
	    },
	    frequency: {
	
	      /* Return freq data */
	
	      value: function frequency(stepIn, octaveIn) {
	
	        if (this.mode.input === "midi" || this.mode.input === "MIDI") {
	          this.stepIn += 60;
	        }
	
	        // what octave is our input
	        var octave = Math.floor(stepIn / this.scale.length);
	
	        if (octaveIn) {
	          octave += octaveIn;
	        }
	
	        // which scale degree (0 - scale length) is our input
	        var scaleDegree = stepIn % this.scale.length;
	
	        while (scaleDegree < 0) {
	          scaleDegree += this.scale.length;
	        }
	
	        var ratio = this.scale[scaleDegree];
	
	        var freq = this.root * ratio;
	
	        freq = freq * Math.pow(2, octave);
	
	        // truncate irrational numbers
	        freq = Math.floor(freq * 100000000000) / 100000000000;
	
	        return freq;
	      }
	    },
	    ratio: {
	
	      /* Force return ratio data */
	
	      value: function ratio(stepIn, octaveIn) {
	
	        if (this.mode.input === "midi" || this.mode.input === "MIDI") {
	          this.stepIn += 60;
	        }
	
	        // what octave is our input
	        var octave = Math.floor(stepIn / this.scale.length);
	
	        if (octaveIn) {
	          octave += octaveIn;
	        }
	
	        // which scale degree (0 - scale length) is our input
	        var scaleDegree = stepIn % this.scale.length;
	
	        // what ratio is our input to our key
	        var ratio = Math.pow(2, octave) * this.scale[scaleDegree];
	
	        ratio = Math.floor(ratio * 100000000000) / 100000000000;
	
	        return ratio;
	      }
	    },
	    MIDI: {
	
	      /* Force return adjusted MIDI data */
	
	      value: function MIDI(stepIn, octaveIn) {
	
	        var newvalue = this.frequency(stepIn, octaveIn);
	
	        var n = 69 + 12 * Math.log(newvalue / 440) / Math.log(2);
	
	        n = Math.floor(n * 1000000000) / 1000000000;
	
	        return n;
	      }
	    },
	    createScale: {
	      value: function createScale() {
	        var newScale = [];
	        for (var i = 0; i < arguments.length; i++) {
	          newScale.push(math.mtof(60 + arguments[i]));
	        }
	        this.loadScaleFromFrequencies(newScale);
	      }
	    },
	    createJIScale: {
	      value: function createJIScale() {
	        this.scale = [];
	        for (var i = 0; i < arguments.length; i++) {
	          this.scale.push(arguments[i]);
	        }
	      }
	    },
	    loadScaleFromFrequencies: {
	      value: function loadScaleFromFrequencies(freqs) {
	        this.scale = [];
	        for (var i = 0; i < freqs.length - 1; i++) {
	          this.scale.push(freqs[i] / freqs[0]);
	        }
	      }
	    },
	    loadScale: {
	
	      /* Load a new scale */
	
	      value: function loadScale(name) {
	
	        /* load the scale */
	        var freqs = this.scales[name].frequencies;
	        this.loadScaleFromFrequencies(freqs);
	      }
	    },
	    search: {
	
	      /* Search the names of tunings
	      	 Returns an array of names of tunings */
	
	      value: function search(letters) {
	        var possible = [];
	        for (var key in this.scales) {
	          if (key.toLowerCase().indexOf(letters.toLowerCase()) !== -1) {
	            possible.push(key);
	          }
	        }
	        return possible;
	      }
	    },
	    chord: {
	
	      /* Return a collection of notes as an array */
	
	      value: function chord(midis) {
	        var output = [];
	        for (var i = 0; i < midis.length; i++) {
	          output.push(this.note(midis[i]));
	        }
	        return output;
	      }
	    }
	  });
	
	  return Tune;
	})();
	
	module.exports = Tune;

/***/ }),
/* 41 */
/***/ (function(module, exports) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	//Disable jshint warning concerning trailing regular params
	/*jshint -W138 */
	
	var Radio = (function () {
	    //if non-existent buttons are switched, they are ignored
	
	    function Radio() {
	        for (var _len = arguments.length, onVals = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	            onVals[_key - 1] = arguments[_key];
	        }
	
	        var length = arguments[0] === undefined ? 3 : arguments[0];
	
	        _classCallCheck(this, Radio);
	
	        //each optional 'onVals' argument switches on that value in the Radio if it exists
	        //In the example below, a 3-button radio is created, index 0 is switched on, index 1 is switched on then then attempted again producing an warning, and the final argument produces a warning because the index value does not exist.
	        //Example:
	        //`  radio = new Radio(3, 0, 1, 1, 3);
	        //…  [1,1,0]
	
	        if (length < 0) {
	            length = 1;
	        }
	
	        this.length = length;
	        this.onVals = onVals;
	        this.array = new Array(length).fill(0);
	
	        if (onVals.length > 0) {
	            this.on.apply(this, onVals);
	        }
	    }
	
	    _createClass(Radio, {
	        select: {
	            value: function select(value) {
	                this.array.fill(0);
	                this.array[value] = 1;
	                return this.array;
	            }
	        },
	        flip: {
	            value: function flip() {
	                for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
	                    values[_key] = arguments[_key];
	                }
	
	                //flips the specified values. if no value is specified, flips all buttons
	                var a = this.array;
	                if (values.length > 0) {
	                    values.forEach(function (v) {
	                        if (v > a.length - 1) {
	                            console.warn("Warning: AnonRadio[" + v + "] does not exist");
	                        } else {
	                            a[v] = a[v] ? 0 : 1;
	                        }
	                    });
	                } else {
	                    a.forEach(function (v, i, arr) {
	                        arr[i] = v ? 0 : 1;
	                    });
	                }
	                return a;
	            }
	        },
	        on: {
	            value: function on() {
	                for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
	                    values[_key] = arguments[_key];
	                }
	
	                //switch on the specified values. if no value specified, flips on all buttons
	                var a = this.array;
	                if (values.length > 0) {
	                    values.forEach(function (v) {
	                        if (v > a.length - 1) {
	                            console.warn("Warning: AnonRadio[" + v + "] exceeds size of object");
	                        } else {
	                            if (a[v] === 1) {
	                                console.warn("Warning: AnonRadio[" + v + "] was already on.");
	                            }
	                            a[v] = 1;
	                        }
	                    });
	                } else {
	                    a.fill(1);
	                }
	                return a;
	            }
	        },
	        off: {
	            value: function off() {
	                for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
	                    values[_key] = arguments[_key];
	                }
	
	                //switch off the specified values. if no value specified, flips off all buttons
	                var a = this.array;
	                if (values.length > 0) {
	                    values.forEach(function (v) {
	                        a[v] = 0;
	                    });
	                } else {
	                    a.fill(0);
	                }
	                return a;
	            }
	        }
	    });
	
	    return Radio;
	})();
	
	module.exports = Radio;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	var WAAClock = __webpack_require__(43)
	
	module.exports = WAAClock
	if (typeof window !== 'undefined') window.WAAClock = WAAClock


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {var isBrowser = (typeof window !== 'undefined')
	
	var CLOCK_DEFAULTS = {
	  toleranceLate: 0.10,
	  toleranceEarly: 0.001
	}
	
	// ==================== Event ==================== //
	var Event = function(clock, deadline, func) {
	  this.clock = clock
	  this.func = func
	  this._cleared = false // Flag used to clear an event inside callback
	
	  this.toleranceLate = clock.toleranceLate
	  this.toleranceEarly = clock.toleranceEarly
	  this._latestTime = null
	  this._earliestTime = null
	  this.deadline = null
	  this.repeatTime = null
	
	  this.schedule(deadline)
	}
	
	// Unschedules the event
	Event.prototype.clear = function() {
	  this.clock._removeEvent(this)
	  this._cleared = true
	  return this
	}
	
	// Sets the event to repeat every `time` seconds.
	Event.prototype.repeat = function(time) {
	  if (time === 0)
	    throw new Error('delay cannot be 0')
	  this.repeatTime = time
	  if (!this.clock._hasEvent(this))
	    this.schedule(this.deadline + this.repeatTime)
	  return this
	}
	
	// Sets the time tolerance of the event.
	// The event will be executed in the interval `[deadline - early, deadline + late]`
	// If the clock fails to execute the event in time, the event will be dropped.
	Event.prototype.tolerance = function(values) {
	  if (typeof values.late === 'number')
	    this.toleranceLate = values.late
	  if (typeof values.early === 'number')
	    this.toleranceEarly = values.early
	  this._refreshEarlyLateDates()
	  if (this.clock._hasEvent(this)) {
	    this.clock._removeEvent(this)
	    this.clock._insertEvent(this)
	  }
	  return this
	}
	
	// Returns true if the event is repeated, false otherwise
	Event.prototype.isRepeated = function() { return this.repeatTime !== null }
	
	// Schedules the event to be ran before `deadline`.
	// If the time is within the event tolerance, we handle the event immediately.
	// If the event was already scheduled at a different time, it is rescheduled.
	Event.prototype.schedule = function(deadline) {
	  this._cleared = false
	  this.deadline = deadline
	  this._refreshEarlyLateDates()
	
	  if (this.clock.context.currentTime >= this._earliestTime) {
	    this._execute()
	  
	  } else if (this.clock._hasEvent(this)) {
	    this.clock._removeEvent(this)
	    this.clock._insertEvent(this)
	  
	  } else this.clock._insertEvent(this)
	}
	
	Event.prototype.timeStretch = function(tRef, ratio) {
	  if (this.isRepeated())
	    this.repeatTime = this.repeatTime * ratio
	
	  var deadline = tRef + ratio * (this.deadline - tRef)
	  // If the deadline is too close or past, and the event has a repeat,
	  // we calculate the next repeat possible in the stretched space.
	  if (this.isRepeated()) {
	    while (this.clock.context.currentTime >= deadline - this.toleranceEarly)
	      deadline += this.repeatTime
	  }
	  this.schedule(deadline)
	}
	
	// Executes the event
	Event.prototype._execute = function() {
	  if (this.clock._started === false) return
	  this.clock._removeEvent(this)
	
	  if (this.clock.context.currentTime < this._latestTime)
	    this.func(this)
	  else {
	    if (this.onexpired) this.onexpired(this)
	    console.warn('event expired')
	  }
	  // In the case `schedule` is called inside `func`, we need to avoid
	  // overrwriting with yet another `schedule`.
	  if (!this.clock._hasEvent(this) && this.isRepeated() && !this._cleared)
	    this.schedule(this.deadline + this.repeatTime) 
	}
	
	// Updates cached times
	Event.prototype._refreshEarlyLateDates = function() {
	  this._latestTime = this.deadline + this.toleranceLate
	  this._earliestTime = this.deadline - this.toleranceEarly
	}
	
	// ==================== WAAClock ==================== //
	var WAAClock = module.exports = function(context, opts) {
	  var self = this
	  opts = opts || {}
	  this.tickMethod = opts.tickMethod || 'ScriptProcessorNode'
	  this.toleranceEarly = opts.toleranceEarly || CLOCK_DEFAULTS.toleranceEarly
	  this.toleranceLate = opts.toleranceLate || CLOCK_DEFAULTS.toleranceLate
	  this.context = context
	  this._events = []
	  this._started = false
	}
	
	// ---------- Public API ---------- //
	// Schedules `func` to run after `delay` seconds.
	WAAClock.prototype.setTimeout = function(func, delay) {
	  return this._createEvent(func, this._absTime(delay))
	}
	
	// Schedules `func` to run before `deadline`.
	WAAClock.prototype.callbackAtTime = function(func, deadline) {
	  return this._createEvent(func, deadline)
	}
	
	// Stretches `deadline` and `repeat` of all scheduled `events` by `ratio`, keeping
	// their relative distance to `tRef`. In fact this is equivalent to changing the tempo.
	WAAClock.prototype.timeStretch = function(tRef, events, ratio) {
	  events.forEach(function(event) { event.timeStretch(tRef, ratio) })
	  return events
	}
	
	// Removes all scheduled events and starts the clock 
	WAAClock.prototype.start = function() {
	  if (this._started === false) {
	    var self = this
	    this._started = true
	    this._events = []
	
	    if (this.tickMethod === 'ScriptProcessorNode') {
	      var bufferSize = 256
	      // We have to keep a reference to the node to avoid garbage collection
	      this._clockNode = this.context.createScriptProcessor(bufferSize, 1, 1)
	      this._clockNode.connect(this.context.destination)
	      this._clockNode.onaudioprocess = function () {
	        process.nextTick(function() { self._tick() })
	      }
	    } else if (this.tickMethod === 'manual') null // _tick is called manually
	
	    else throw new Error('invalid tickMethod ' + this.tickMethod)
	  }
	}
	
	// Stops the clock
	WAAClock.prototype.stop = function() {
	  if (this._started === true) {
	    this._started = false
	    this._clockNode.disconnect()
	  }  
	}
	
	// ---------- Private ---------- //
	
	// This function is ran periodically, and at each tick it executes
	// events for which `currentTime` is included in their tolerance interval.
	WAAClock.prototype._tick = function() {
	  var event = this._events.shift()
	
	  while(event && event._earliestTime <= this.context.currentTime) {
	    event._execute()
	    event = this._events.shift()
	  }
	
	  // Put back the last event
	  if(event) this._events.unshift(event)
	}
	
	// Creates an event and insert it to the list
	WAAClock.prototype._createEvent = function(func, deadline) {
	  return new Event(this, deadline, func)
	}
	
	// Inserts an event to the list
	WAAClock.prototype._insertEvent = function(event) {
	  this._events.splice(this._indexByTime(event._earliestTime), 0, event)
	}
	
	// Removes an event from the list
	WAAClock.prototype._removeEvent = function(event) {
	  var ind = this._events.indexOf(event)
	  if (ind !== -1) this._events.splice(ind, 1)
	}
	
	// Returns true if `event` is in queue, false otherwise
	WAAClock.prototype._hasEvent = function(event) {
	 return this._events.indexOf(event) !== -1
	}
	
	// Returns the index of the first event whose deadline is >= to `deadline`
	WAAClock.prototype._indexByTime = function(deadline) {
	  // performs a binary search
	  var low = 0
	    , high = this._events.length
	    , mid
	  while (low < high) {
	    mid = Math.floor((low + high) / 2)
	    if (this._events[mid]._earliestTime < deadline)
	      low = mid + 1
	    else high = mid
	  }
	  return low
	}
	
	// Converts from relative time to absolute time
	WAAClock.prototype._absTime = function(relTime) {
	  return relTime + this.context.currentTime
	}
	
	// Converts from absolute time to relative time 
	WAAClock.prototype._relTime = function(absTime) {
	  return absTime - this.context.currentTime
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(44)))

/***/ }),
/* 44 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;
	
	process.listeners = function (name) { return [] }
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };
	
	var clock = __webpack_require__(1).clock;
	
	var Interval = (function () {
	  function Interval(rate, func, on) {
	    _classCallCheck(this, Interval);
	
	    this.rate = rate;
	    this.on = on;
	    this.clock = clock(); // jshint ignore:line
	
	    this.pattern = [1];
	    this.index = 0;
	
	    this.event = func ? func : function () {};
	
	    if (this.on) {
	      this.start();
	    }
	  }
	
	  _createClass(Interval, {
	    _event: {
	      value: function _event(e) {
	        //  if (this.pattern[this.index%this.pattern.length]) {
	        this.event(e);
	        //  }
	        this.index++;
	      }
	    },
	    stop: {
	      value: function stop() {
	        this.on = false;
	        this.interval.clear();
	      }
	    },
	    start: {
	      value: function start() {
	        this.on = true;
	        this.interval = this.clock.callbackAtTime(this._event.bind(this), this.clock.context.currentTime).repeat(this.rate / 1000).tolerance({ early: 0.1, late: 1 });
	      }
	    },
	    ms: {
	      value: function ms(newrate) {
	        if (this.on) {
	          var ratio = newrate / this.rate;
	          this.rate = newrate;
	          this.clock.timeStretch(this.clock.context.currentTime, [this.interval], ratio);
	        } else {
	          this.rate = newrate;
	        }
	      }
	    }
	  });
	
	  return Interval;
	})();
	
	module.exports = Interval;

/***/ })
/******/ ])
});
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,

/***/ }),

/***/ "../../node_modules/nipplejs/dist/nipplejs.js":
/*!**************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/nipplejs/dist/nipplejs.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;
'use strict';

// Constants
var isTouch = !!('ontouchstart' in window);
var isPointer = window.PointerEvent ? true : false;
var isMSPointer = window.MSPointerEvent ? true : false;
var events = {
    touch: {
        start: 'touchstart',
        move: 'touchmove',
        end: 'touchend, touchcancel'
    },
    mouse: {
        start: 'mousedown',
        move: 'mousemove',
        end: 'mouseup'
    },
    pointer: {
        start: 'pointerdown',
        move: 'pointermove',
        end: 'pointerup'
    },
    MSPointer: {
        start: 'MSPointerDown',
        move: 'MSPointerMove',
        end: 'MSPointerUp'
    }
};
var toBind;
var secondBind = {};
if (isPointer) {
    toBind = events.pointer;
} else if (isMSPointer) {
    toBind = events.MSPointer;
} else if (isTouch) {
    toBind = events.touch;
    secondBind = events.mouse;
} else {
    toBind = events.mouse;
}

///////////////////////
///      UTILS      ///
///////////////////////

var u = {};
u.distance = function (p1, p2) {
    var dx = p2.x - p1.x;
    var dy = p2.y - p1.y;

    return Math.sqrt((dx * dx) + (dy * dy));
};

u.angle = function(p1, p2) {
    var dx = p2.x - p1.x;
    var dy = p2.y - p1.y;

    return u.degrees(Math.atan2(dy, dx));
};

u.findCoord = function(p, d, a) {
    var b = {x: 0, y: 0};
    a = u.radians(a);
    b.x = p.x - d * Math.cos(a);
    b.y = p.y - d * Math.sin(a);
    return b;
};

u.radians = function(a) {
    return a * (Math.PI / 180);
};

u.degrees = function(a) {
    return a * (180 / Math.PI);
};

u.bindEvt = function (el, arg, handler) {
    var types = arg.split(/[ ,]+/g);
    var type;
    for (var i = 0; i < types.length; i += 1) {
        type = types[i];
        if (el.addEventListener) {
            el.addEventListener(type, handler, false);
        } else if (el.attachEvent) {
            el.attachEvent(type, handler);
        }
    }
};

u.unbindEvt = function (el, arg, handler) {
    var types = arg.split(/[ ,]+/g);
    var type;
    for (var i = 0; i < types.length; i += 1) {
        type = types[i];
        if (el.removeEventListener) {
            el.removeEventListener(type, handler);
        } else if (el.detachEvent) {
            el.detachEvent(type, handler);
        }
    }
};

u.trigger = function (el, type, data) {
    var evt = new CustomEvent(type, data);
    el.dispatchEvent(evt);
};

u.prepareEvent = function (evt) {
    evt.preventDefault();
    return evt.type.match(/^touch/) ? evt.changedTouches : evt;
};

u.getScroll = function () {
    var x = (window.pageXOffset !== undefined) ?
        window.pageXOffset :
        (document.documentElement || document.body.parentNode || document.body)
            .scrollLeft;

    var y = (window.pageYOffset !== undefined) ?
        window.pageYOffset :
        (document.documentElement || document.body.parentNode || document.body)
            .scrollTop;
    return {
        x: x,
        y: y
    };
};

u.applyPosition = function (el, pos) {
    if (pos.x && pos.y) {
        el.style.left = pos.x + 'px';
        el.style.top = pos.y + 'px';
    } else if (pos.top || pos.right || pos.bottom || pos.left) {
        el.style.top = pos.top;
        el.style.right = pos.right;
        el.style.bottom = pos.bottom;
        el.style.left = pos.left;
    }
};

u.getTransitionStyle = function (property, values, time) {
    var obj = u.configStylePropertyObject(property);
    for (var i in obj) {
        if (obj.hasOwnProperty(i)) {
            if (typeof values === 'string') {
                obj[i] = values + ' ' + time;
            } else {
                var st = '';
                for (var j = 0, max = values.length; j < max; j += 1) {
                    st += values[j] + ' ' + time + ', ';
                }
                obj[i] = st.slice(0, -2);
            }
        }
    }
    return obj;
};

u.getVendorStyle = function (property, value) {
    var obj = u.configStylePropertyObject(property);
    for (var i in obj) {
        if (obj.hasOwnProperty(i)) {
            obj[i] = value;
        }
    }
    return obj;
};

u.configStylePropertyObject = function (prop) {
    var obj = {};
    obj[prop] = '';
    var vendors = ['webkit', 'Moz', 'o'];
    vendors.forEach(function (vendor) {
        obj[vendor + prop.charAt(0).toUpperCase() + prop.slice(1)] = '';
    });
    return obj;
};

u.extend = function (objA, objB) {
    for (var i in objB) {
        if (objB.hasOwnProperty(i)) {
            objA[i] = objB[i];
        }
    }
    return objA;
};

// Overwrite only what's already present
u.safeExtend = function (objA, objB) {
    var obj = {};
    for (var i in objA) {
        if (objA.hasOwnProperty(i) && objB.hasOwnProperty(i)) {
            obj[i] = objB[i];
        } else if (objA.hasOwnProperty(i)) {
            obj[i] = objA[i];
        }
    }
    return obj;
};

// Map for array or unique item.
u.map = function (ar, fn) {
    if (ar.length) {
        for (var i = 0, max = ar.length; i < max; i += 1) {
            fn(ar[i]);
        }
    } else {
        fn(ar);
    }
};

///////////////////////
///   SUPER CLASS   ///
///////////////////////

function Super () {};

// Basic event system.
Super.prototype.on = function (arg, cb) {
    var self = this;
    var types = arg.split(/[ ,]+/g);
    var type;
    self._handlers_ = self._handlers_ || {};

    for (var i = 0; i < types.length; i += 1) {
        type = types[i];
        self._handlers_[type] = self._handlers_[type] || [];
        self._handlers_[type].push(cb);
    }
    return self;
};

Super.prototype.off = function (type, cb) {
    var self = this;
    self._handlers_ = self._handlers_ || {};

    if (type === undefined) {
        self._handlers_ = {};
    } else if (cb === undefined) {
        self._handlers_[type] = null;
    } else if (self._handlers_[type] &&
            self._handlers_[type].indexOf(cb) >= 0) {
        self._handlers_[type].splice(self._handlers_[type].indexOf(cb), 1);
    }

    return self;
};

Super.prototype.trigger = function (arg, data) {
    var self = this;
    var types = arg.split(/[ ,]+/g);
    var type;
    self._handlers_ = self._handlers_ || {};

    for (var i = 0; i < types.length; i += 1) {
        type = types[i];
        if (self._handlers_[type] && self._handlers_[type].length) {
            self._handlers_[type].forEach(function (handler) {
                handler.call(self, {
                    type: type,
                    target: self
                }, data);
            });
        }
    }
};

// Configuration
Super.prototype.config = function (options) {
    var self = this;
    self.options = self.defaults || {};
    if (options) {
        self.options = u.safeExtend(self.options, options);
    }
};

// Bind internal events.
Super.prototype.bindEvt = function (el, type) {
    var self = this;
    self._domHandlers_ = self._domHandlers_ || {};

    self._domHandlers_[type] = function () {
        if (typeof self['on' + type] === 'function') {
            self['on' + type].apply(self, arguments);
        } else {
            console.warn('[WARNING] : Missing "on' + type + '" handler.');
        }
    };

    u.bindEvt(el, toBind[type], self._domHandlers_[type]);

    if (secondBind[type]) {
        // Support for both touch and mouse at the same time.
        u.bindEvt(el, secondBind[type], self._domHandlers_[type]);
    }

    return self;
};

// Unbind dom events.
Super.prototype.unbindEvt = function (el, type) {
    var self = this;
    self._domHandlers_ = self._domHandlers_ || {};

    u.unbindEvt(el, toBind[type], self._domHandlers_[type]);

    if (secondBind[type]) {
        // Support for both touch and mouse at the same time.
        u.unbindEvt(el, secondBind[type], self._domHandlers_[type]);
    }

    delete self._domHandlers_[type];

    return this;
};

///////////////////////
///   THE NIPPLE    ///
///////////////////////

function Nipple (collection, options) {
    this.identifier = options.identifier;
    this.position = options.position;
    this.frontPosition = options.frontPosition;
    this.collection = collection;

    // Defaults
    this.defaults = {
        size: 100,
        threshold: 0.1,
        color: 'white',
        fadeTime: 250,
        dataOnly: false,
        restJoystick: true,
        restOpacity: 0.5,
        mode: 'dynamic',
        zone: document.body
    };

    this.config(options);

    // Overwrites
    if (this.options.mode === 'dynamic') {
        this.options.restOpacity = 0;
    }

    this.id = Nipple.id;
    Nipple.id += 1;
    this.buildEl()
        .stylize();

    // Nipple's API.
    this.instance = {
        el: this.ui.el,
        on: this.on.bind(this),
        off: this.off.bind(this),
        show: this.show.bind(this),
        hide: this.hide.bind(this),
        add: this.addToDom.bind(this),
        remove: this.removeFromDom.bind(this),
        destroy: this.destroy.bind(this),
        resetDirection: this.resetDirection.bind(this),
        computeDirection: this.computeDirection.bind(this),
        trigger: this.trigger.bind(this),
        position: this.position,
        frontPosition: this.frontPosition,
        ui: this.ui,
        identifier: this.identifier,
        id: this.id,
        options: this.options
    };

    return this.instance;
};

Nipple.prototype = new Super();
Nipple.constructor = Nipple;
Nipple.id = 0;

// Build the dom element of the Nipple instance.
Nipple.prototype.buildEl = function (options) {
    this.ui = {};

    if (this.options.dataOnly) {
        return this;
    }

    this.ui.el = document.createElement('div');
    this.ui.back = document.createElement('div');
    this.ui.front = document.createElement('div');

    this.ui.el.className = 'nipple collection_' + this.collection.id;
    this.ui.back.className = 'back';
    this.ui.front.className = 'front';

    this.ui.el.setAttribute('id', 'nipple_' + this.collection.id +
        '_' + this.id);

    this.ui.el.appendChild(this.ui.back);
    this.ui.el.appendChild(this.ui.front);

    return this;
};

// Apply CSS to the Nipple instance.
Nipple.prototype.stylize = function () {
    if (this.options.dataOnly) {
        return this;
    }
    var animTime = this.options.fadeTime + 'ms';
    var borderStyle = u.getVendorStyle('borderRadius', '50%');
    var transitStyle = u.getTransitionStyle('transition', 'opacity', animTime);
    var styles = {};
    styles.el = {
        position: 'absolute',
        opacity: this.options.restOpacity,
        display: 'block',
        'zIndex': 999
    };

    styles.back = {
        position: 'absolute',
        display: 'block',
        width: this.options.size + 'px',
        height: this.options.size + 'px',
        marginLeft: -this.options.size / 2 + 'px',
        marginTop: -this.options.size / 2 + 'px',
        background: this.options.color,
        'opacity': '.5'
    };

    styles.front = {
        width: this.options.size / 2 + 'px',
        height: this.options.size / 2 + 'px',
        position: 'absolute',
        display: 'block',
        marginLeft: -this.options.size / 4 + 'px',
        marginTop: -this.options.size / 4 + 'px',
        background: this.options.color,
        'opacity': '.5'
    };

    u.extend(styles.el, transitStyle);
    u.extend(styles.back, borderStyle);
    u.extend(styles.front, borderStyle);

    this.applyStyles(styles);

    return this;
};

Nipple.prototype.applyStyles = function (styles) {
    // Apply styles
    for (var i in this.ui) {
        if (this.ui.hasOwnProperty(i)) {
            for (var j in styles[i]) {
                this.ui[i].style[j] = styles[i][j];
            }
        }
    }

    return this;
};

// Inject the Nipple instance into DOM.
Nipple.prototype.addToDom = function () {
    // We're not adding it if we're dataOnly or already in dom.
    if (this.options.dataOnly || document.body.contains(this.ui.el)) {
        return this;
    }
    this.options.zone.appendChild(this.ui.el);
    return this;
};

// Remove the Nipple instance from DOM.
Nipple.prototype.removeFromDom = function () {
    if (this.options.dataOnly || !document.body.contains(this.ui.el)) {
        return this;
    }
    this.options.zone.removeChild(this.ui.el);
    return this;
};

// Entirely destroy this nipple
Nipple.prototype.destroy = function () {
    clearTimeout(this.removeTimeout);
    clearTimeout(this.showTimeout);
    clearTimeout(this.restTimeout);
    this.trigger('destroyed', this.instance);
    this.removeFromDom();
    this.off();
};

// Fade in the Nipple instance.
Nipple.prototype.show = function (cb) {
    var self = this;

    if (self.options.dataOnly) {
        return self;
    }

    clearTimeout(self.removeTimeout);
    clearTimeout(self.showTimeout);
    clearTimeout(self.restTimeout);

    self.addToDom();

    self.restCallback();

    setTimeout(function () {
        self.ui.el.style.opacity = 1;
    }, 0);

    self.showTimeout = setTimeout(function () {
        self.trigger('shown', self.instance);
        if (typeof cb === 'function') {
            cb.call(this);
        }
    }, self.options.fadeTime);

    return self;
};

// Fade out the Nipple instance.
Nipple.prototype.hide = function (cb) {
    var self = this;

    if (self.options.dataOnly) {
        return self;
    }

    self.ui.el.style.opacity = self.options.restOpacity;

    clearTimeout(self.removeTimeout);
    clearTimeout(self.showTimeout);
    clearTimeout(self.restTimeout);

    self.removeTimeout = setTimeout(
        function () {
            var display = self.options.mode === 'dynamic' ? 'none' : 'block';
            self.ui.el.style.display = display;
            if (typeof cb === 'function') {
                cb.call(self);
            }

            self.trigger('hidden', self.instance);
        },
        self.options.fadeTime
    );
    if (self.options.restJoystick) {
        self.restPosition();
    }

    return self;
};

Nipple.prototype.restPosition = function (cb) {
    var self = this;
    self.frontPosition = {
        x: 0,
        y: 0
    };
    var animTime = self.options.fadeTime + 'ms';

    var transitStyle = {};
    transitStyle.front = u.getTransitionStyle('transition',
        ['top', 'left'], animTime);

    var styles = {front: {}};
    styles.front = {
        left: self.frontPosition.x + 'px',
        top: self.frontPosition.y + 'px'
    };

    self.applyStyles(transitStyle);
    self.applyStyles(styles);

    self.restTimeout = setTimeout(
        function () {
            if (typeof cb === 'function') {
                cb.call(self);
            }
            self.restCallback();
        },
        self.options.fadeTime
    );
};

Nipple.prototype.restCallback = function () {
    var self = this;
    var transitStyle = {};
    transitStyle.front = u.getTransitionStyle('transition', 'none', '');
    self.applyStyles(transitStyle);
    self.trigger('rested', self.instance);
};

Nipple.prototype.resetDirection = function () {
    // Fully rebuild the object to let the iteration possible.
    this.direction = {
        x: false,
        y: false,
        angle: false
    };
};

Nipple.prototype.computeDirection = function (obj) {
    var rAngle = obj.angle.radian;
    var angle45 = Math.PI / 4;
    var angle90 = Math.PI / 2;
    var direction, directionX, directionY;

    // Angular direction
    //     \  UP /
    //      \   /
    // LEFT       RIGHT
    //      /   \
    //     /DOWN \
    //
    if (rAngle > angle45 && rAngle < (angle45 * 3)) {
        direction = 'up';
    } else if (rAngle > -angle45 && rAngle <= angle45) {
        direction = 'left';
    } else if (rAngle > (-angle45 * 3) && rAngle <= -angle45) {
        direction = 'down';
    } else {
        direction = 'right';
    }

    // Plain direction
    //    UP                 |
    // _______               | RIGHT
    //                  LEFT |
    //   DOWN                |
    if (rAngle > -angle90 && rAngle < angle90) {
        directionX = 'left';
    } else {
        directionX = 'right';
    }

    if (rAngle > 0) {
        directionY = 'up';
    } else {
        directionY = 'down';
    }

    if (obj.force > this.options.threshold) {
        var oldDirection = {};
        for (var i in this.direction) {
            if (this.direction.hasOwnProperty(i)) {
                oldDirection[i] = this.direction[i];
            }
        }

        var same = {};

        this.direction = {
            x: directionX,
            y: directionY,
            angle: direction
        };

        obj.direction = this.direction;

        for (var i in oldDirection) {
            if (oldDirection[i] === this.direction[i]) {
                same[i] = true;
            }
        }

        // If all 3 directions are the same, we don't trigger anything.
        if (same.x && same.y && same.angle) {
            return obj;
        }

        if (!same.x || !same.y) {
            this.trigger('plain', obj);
        }

        if (!same.x) {
            this.trigger('plain:' + directionX, obj);
        }

        if (!same.y) {
            this.trigger('plain:' + directionY, obj);
        }

        if (!same.angle) {
            this.trigger('dir dir:' + direction, obj);
        }
    }
    return obj;
};

/* global Nipple, Super */

///////////////////////////
///   THE COLLECTION    ///
///////////////////////////

function Collection (manager, options) {
    var self = this;
    self.nipples = [];
    self.idles = [];
    self.actives = [];
    self.ids = [];
    self.pressureIntervals = {};
    self.manager = manager;
    self.id = Collection.id;
    Collection.id += 1;

    // Defaults
    self.defaults = {
        zone: document.body,
        multitouch: false,
        maxNumberOfNipples: 10,
        mode: 'dynamic',
        position: {top: 0, left: 0},
        catchDistance: 200,
        size: 100,
        threshold: 0.1,
        color: 'white',
        fadeTime: 250,
        dataOnly: false,
        restJoystick: true,
        restOpacity: 0.5
    };

    self.config(options);

    // Overwrites
    if (self.options.mode === 'static' || self.options.mode === 'semi') {
        self.options.multitouch = false;
    }

    if (!self.options.multitouch) {
        self.options.maxNumberOfNipples = 1;
    }

    self.updateBox();
    self.prepareNipples();
    self.bindings();
    self.begin();

    return self.nipples;
}

Collection.prototype = new Super();
Collection.constructor = Collection;
Collection.id = 0;

Collection.prototype.prepareNipples = function () {
    var self = this;
    var nips = self.nipples;

    // Public API Preparation.
    nips.on = self.on.bind(self);
    nips.off = self.off.bind(self);
    nips.options = self.options;
    nips.destroy = self.destroy.bind(self);
    nips.ids = self.ids;
    nips.id = self.id;
    nips.processOnMove = self.processOnMove.bind(self);
    nips.processOnEnd = self.processOnEnd.bind(self);
    nips.get = function (id) {
        if (id === undefined) {
            return nips[0];
        }
        for (var i = 0, max = nips.length; i < max; i += 1) {
            if (nips[i].identifier === id) {
                return nips[i];
            }
        }
        return false;
    };
};

Collection.prototype.bindings = function () {
    var self = this;
    // Touch start event.
    self.bindEvt(self.options.zone, 'start');
    // Avoid native touch actions (scroll, zoom etc...) on the zone.
    self.options.zone.style.touchAction = 'none';
    self.options.zone.style.msTouchAction = 'none';
};

Collection.prototype.begin = function () {
    var self = this;
    var opts = self.options;

    // We place our static nipple
    // if needed.
    if (opts.mode === 'static') {
        var nipple = self.createNipple(
            opts.position,
            self.manager.getIdentifier()
        );
        // Add it to the dom.
        nipple.add();
        // Store it in idles.
        self.idles.push(nipple);
    }
};

// Nipple Factory
Collection.prototype.createNipple = function (position, identifier) {
    var self = this;
    var scroll = u.getScroll();
    var toPutOn = {};
    var opts = self.options;

    if (position.x && position.y) {
        toPutOn = {
            x: position.x -
                (scroll.x + self.box.left),
            y: position.y -
                (scroll.y + self.box.top)
        };
    } else if (
            position.top ||
            position.right ||
            position.bottom ||
            position.left
        ) {

        // We need to compute the position X / Y of the joystick.
        var dumb = document.createElement('DIV');
        dumb.style.display = 'hidden';
        dumb.style.top = position.top;
        dumb.style.right = position.right;
        dumb.style.bottom = position.bottom;
        dumb.style.left = position.left;
        dumb.style.position = 'absolute';

        opts.zone.appendChild(dumb);
        var dumbBox = dumb.getBoundingClientRect();
        opts.zone.removeChild(dumb);

        toPutOn = position;
        position = {
            x: dumbBox.left + scroll.x,
            y: dumbBox.top + scroll.y
        };
    }

    var nipple = new Nipple(self, {
        color: opts.color,
        size: opts.size,
        threshold: opts.threshold,
        fadeTime: opts.fadeTime,
        dataOnly: opts.dataOnly,
        restJoystick: opts.restJoystick,
        restOpacity: opts.restOpacity,
        mode: opts.mode,
        identifier: identifier,
        position: position,
        zone: opts.zone,
        frontPosition: {
            x: 0,
            y: 0
        }
    });

    if (!opts.dataOnly) {
        u.applyPosition(nipple.ui.el, toPutOn);
        u.applyPosition(nipple.ui.front, nipple.frontPosition);
    }
    self.nipples.push(nipple);
    self.trigger('added ' + nipple.identifier + ':added', nipple);
    self.manager.trigger('added ' + nipple.identifier + ':added', nipple);

    self.bindNipple(nipple);

    return nipple;
};

Collection.prototype.updateBox = function () {
    var self = this;
    self.box = self.options.zone.getBoundingClientRect();
};

Collection.prototype.bindNipple = function (nipple) {
    var self = this;
    var type;
    // Bubble up identified events.
    var handler = function (evt, data) {
        // Identify the event type with the nipple's id.
        type = evt.type + ' ' + data.id + ':' + evt.type;
        self.trigger(type, data);
    };

    // When it gets destroyed.
    nipple.on('destroyed', self.onDestroyed.bind(self));

    // Other events that will get bubbled up.
    nipple.on('shown hidden rested dir plain', handler);
    nipple.on('dir:up dir:right dir:down dir:left', handler);
    nipple.on('plain:up plain:right plain:down plain:left', handler);
};

Collection.prototype.pressureFn = function (touch, nipple, identifier) {
    var self = this;
    var previousPressure = 0;
    clearInterval(self.pressureIntervals[identifier]);
    // Create an interval that will read the pressure every 100ms
    self.pressureIntervals[identifier] = setInterval(function () {
        var pressure = touch.force || touch.pressure ||
            touch.webkitForce || 0;
        if (pressure !== previousPressure) {
            nipple.trigger('pressure', pressure);
            self.trigger('pressure ' +
                nipple.identifier + ':pressure', pressure);
            previousPressure = pressure;
        }
    }.bind(self), 100);
};

Collection.prototype.onstart = function (evt) {
    var self = this;
    var opts = self.options;
    evt = u.prepareEvent(evt);

    // Update the box position
    self.updateBox();

    var process = function (touch) {
        // If we can create new nipples
        // meaning we don't have more active nipples than we should.
        if (self.actives.length < opts.maxNumberOfNipples) {
            self.processOnStart(touch);
        }
    };

    u.map(evt, process);

    // We ask upstream to bind the document
    // on 'move' and 'end'
    self.manager.bindDocument();
    return false;
};

Collection.prototype.processOnStart = function (evt) {
    var self = this;
    var opts = self.options;
    var indexInIdles;
    var identifier = self.manager.getIdentifier(evt);
    var pressure = evt.force || evt.pressure || evt.webkitForce || 0;
    var position = {
        x: evt.pageX,
        y: evt.pageY
    };

    var nipple = self.getOrCreate(identifier, position);

    // Update its touch identifier
    if (nipple.identifier !== identifier) {
        self.manager.removeIdentifier(nipple.identifier);
    }
    nipple.identifier = identifier;

    var process = function (nip) {
        // Trigger the start.
        nip.trigger('start', nip);
        self.trigger('start ' + nip.id + ':start', nip);

        nip.show();
        if (pressure > 0) {
            self.pressureFn(evt, nip, nip.identifier);
        }
        // Trigger the first move event.
        self.processOnMove(evt);
    };

    // Transfer it from idles to actives.
    if ((indexInIdles = self.idles.indexOf(nipple)) >= 0) {
        self.idles.splice(indexInIdles, 1);
    }

    // Store the nipple in the actives array
    self.actives.push(nipple);
    self.ids.push(nipple.identifier);

    if (opts.mode !== 'semi') {
        process(nipple);
    } else {
        // In semi we check the distance of the touch
        // to decide if we have to reset the nipple
        var distance = u.distance(position, nipple.position);
        if (distance <= opts.catchDistance) {
            process(nipple);
        } else {
            nipple.destroy();
            self.processOnStart(evt);
            return;
        }
    }

    return nipple;
};

Collection.prototype.getOrCreate = function (identifier, position) {
    var self = this;
    var opts = self.options;
    var nipple;

    // If we're in static or semi, we might already have an active.
    if (/(semi|static)/.test(opts.mode)) {
        // Get the active one.
        // TODO: Multi-touche for semi and static will start here.
        // Return the nearest one.
        nipple = self.idles[0];
        if (nipple) {
            self.idles.splice(0, 1);
            return nipple;
        }

        if (opts.mode === 'semi') {
            // If we're in semi mode, we need to create one.
            return self.createNipple(position, identifier);
        }

        console.warn('Coudln\'t find the needed nipple.');
        return false;
    }
    // In dynamic, we create a new one.
    nipple = self.createNipple(position, identifier);
    return nipple;
};

Collection.prototype.processOnMove = function (evt) {
    var self = this;
    var opts = self.options;
    var identifier = self.manager.getIdentifier(evt);
    var nipple = self.nipples.get(identifier);

    if (!nipple) {
        // This is here just for safety.
        // It shouldn't happen.
        console.error('Found zombie joystick with ID ' + identifier);
        self.manager.removeIdentifier(identifier);
        return;
    }

    nipple.identifier = identifier;

    var size = nipple.options.size / 2;
    var pos = {
        x: evt.pageX,
        y: evt.pageY
    };

    var dist = u.distance(pos, nipple.position);
    var angle = u.angle(pos, nipple.position);
    var rAngle = u.radians(angle);
    var force = dist / size;

    // If distance is bigger than nipple's size
    // we clamp the position.
    if (dist > size) {
        dist = size;
        pos = u.findCoord(nipple.position, dist, angle);
    }

    nipple.frontPosition = {
        x: pos.x - nipple.position.x,
        y: pos.y - nipple.position.y
    };

    if (!opts.dataOnly) {
        u.applyPosition(nipple.ui.front, nipple.frontPosition);
    }

    // Prepare event's datas.
    var toSend = {
        identifier: nipple.identifier,
        position: pos,
        force: force,
        pressure: evt.force || evt.pressure || evt.webkitForce || 0,
        distance: dist,
        angle: {
            radian: rAngle,
            degree: angle
        },
        instance: nipple
    };

    // Compute the direction's datas.
    toSend = nipple.computeDirection(toSend);

    // Offset angles to follow units circle.
    toSend.angle = {
        radian: u.radians(180 - angle),
        degree: 180 - angle
    };

    // Send everything to everyone.
    nipple.trigger('move', toSend);
    self.trigger('move ' + nipple.id + ':move', toSend);
};

Collection.prototype.processOnEnd = function (evt) {
    var self = this;
    var opts = self.options;
    var identifier = self.manager.getIdentifier(evt);
    var nipple = self.nipples.get(identifier);
    var removedIdentifier = self.manager.removeIdentifier(nipple.identifier);

    if (!nipple) {
        return;
    }

    if (!opts.dataOnly) {
        nipple.hide(function () {
            if (opts.mode === 'dynamic') {
                nipple.trigger('removed', nipple);
                self.trigger('removed ' + nipple.id + ':removed', nipple);
                self.manager
                    .trigger('removed ' + nipple.id + ':removed', nipple);
                nipple.destroy();
            }
        });
    }

    // Clear the pressure interval reader
    clearInterval(self.pressureIntervals[nipple.identifier]);

    // Reset the direciton of the nipple, to be able to trigger a new direction
    // on start.
    nipple.resetDirection();

    nipple.trigger('end', nipple);
    self.trigger('end ' + nipple.id + ':end', nipple);

    // Remove identifier from our bank.
    if (self.ids.indexOf(nipple.identifier) >= 0) {
        self.ids.splice(self.ids.indexOf(nipple.identifier), 1);
    }

    // Clean our actives array.
    if (self.actives.indexOf(nipple) >= 0) {
        self.actives.splice(self.actives.indexOf(nipple), 1);
    }

    if (/(semi|static)/.test(opts.mode)) {
        // Transfer nipple from actives to idles
        // if we're in semi or static mode.
        self.idles.push(nipple);
    } else if (self.nipples.indexOf(nipple) >= 0) {
        // Only if we're not in semi or static mode
        // we can remove the instance.
        self.nipples.splice(self.nipples.indexOf(nipple), 1);
    }

    // We unbind move and end.
    self.manager.unbindDocument();

    // We add back the identifier of the idle nipple;
    if (/(semi|static)/.test(opts.mode)) {
        self.manager.ids[removedIdentifier.id] = removedIdentifier.identifier;
    }
};

// Remove destroyed nipple from the lists
Collection.prototype.onDestroyed = function(evt, nipple) {
    var self = this;
    if (self.nipples.indexOf(nipple) >= 0) {
        self.nipples.splice(self.nipples.indexOf(nipple), 1);
    }
    if (self.actives.indexOf(nipple) >= 0) {
        self.actives.splice(self.actives.indexOf(nipple), 1);
    }
    if (self.idles.indexOf(nipple) >= 0) {
        self.idles.splice(self.idles.indexOf(nipple), 1);
    }
    if (self.ids.indexOf(nipple.identifier) >= 0) {
        self.ids.splice(self.ids.indexOf(nipple.identifier), 1);
    }

    // Remove the identifier from our bank
    self.manager.removeIdentifier(nipple.identifier);

    // We unbind move and end.
    self.manager.unbindDocument();
};

// Cleanly destroy the manager
Collection.prototype.destroy = function () {
    var self = this;
    self.unbindEvt(self.options.zone, 'start');

    // Destroy nipples.
    self.nipples.forEach(function(nipple) {
        nipple.destroy();
    });

    // Clean 3DTouch intervals.
    for (var i in self.pressureIntervals) {
        if (self.pressureIntervals.hasOwnProperty(i)) {
            clearInterval(self.pressureIntervals[i]);
        }
    }

    // Notify the manager passing the instance
    self.trigger('destroyed', self.nipples);
    // We unbind move and end.
    self.manager.unbindDocument();
    // Unbind everything.
    self.off();
};

/* global u, Super, Collection */

///////////////////////
///     MANAGER     ///
///////////////////////

function Manager (options) {
    var self = this;
    self.ids = {};
    self.index = 0;
    self.collections = [];

    self.config(options);
    self.prepareCollections();

    // Listen for resize, to reposition every joysticks
    var resizeTimer;
    u.bindEvt(window, 'resize', function (evt) {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function () {
            var pos;
            var scroll = u.getScroll();
            self.collections.forEach(function (collection) {
                collection.forEach(function (nipple) {
                    pos = nipple.el.getBoundingClientRect();
                    nipple.position = {
                        x: scroll.x + pos.left,
                        y: scroll.y + pos.top
                    };
                });
            });
        }, 100);
    });

    return self.collections;
};

Manager.prototype = new Super();
Manager.constructor = Manager;

Manager.prototype.prepareCollections = function () {
    var self = this;
    // Public API Preparation.
    self.collections.create = self.create.bind(self);
    // Listen to anything
    self.collections.on = self.on.bind(self);
    // Unbind general events
    self.collections.off = self.off.bind(self);
    // Destroy everything
    self.collections.destroy = self.destroy.bind(self);
    // Get any nipple
    self.collections.get = function (id) {
        var nipple;
        self.collections.every(function (collection) {
            if (nipple = collection.get(id)) {
                return false;
            }
            return true;
        });
        return nipple;
    };
};

Manager.prototype.create = function (options) {
    return this.createCollection(options);
};

// Collection Factory
Manager.prototype.createCollection = function (options) {
    var self = this;
    var collection = new Collection(self, options);

    self.bindCollection(collection);
    self.collections.push(collection);

    return collection;
};

Manager.prototype.bindCollection = function (collection) {
    var self = this;
    var type;
    // Bubble up identified events.
    var handler = function (evt, data) {
        // Identify the event type with the nipple's identifier.
        type = evt.type + ' ' + data.id + ':' + evt.type;
        self.trigger(type, data);
    };

    // When it gets destroyed we clean.
    collection.on('destroyed', self.onDestroyed.bind(self));

    // Other events that will get bubbled up.
    collection.on('shown hidden rested dir plain', handler);
    collection.on('dir:up dir:right dir:down dir:left', handler);
    collection.on('plain:up plain:right plain:down plain:left', handler);
};

Manager.prototype.bindDocument = function () {
    var self = this;
    // Bind only if not already binded
    if (!self.binded) {
        self.bindEvt(document, 'move')
            .bindEvt(document, 'end');
        self.binded = true;
    }
};

Manager.prototype.unbindDocument = function (force) {
    var self = this;
    // If there are no touch left
    // unbind the document.
    if (!Object.keys(self.ids).length || force === true) {
        self.unbindEvt(document, 'move')
            .unbindEvt(document, 'end');
        self.binded = false;
    }
};

Manager.prototype.getIdentifier = function (evt) {
    var id;
    // If no event, simple increment
    if (!evt) {
        id = this.index;
    } else {
        // Extract identifier from event object.
        // Unavailable in mouse events so replaced by latest increment.
        id = evt.identifier === undefined ? evt.pointerId : evt.identifier;
        if (id === undefined) {
            id = this.latest || 0;
        }
    }

    if (this.ids[id] === undefined) {
        this.ids[id] = this.index;
        this.index += 1;
    }

    // Keep the latest id used in case we're using an unidentified mouseEvent
    this.latest = id;
    return this.ids[id];
};

Manager.prototype.removeIdentifier = function (identifier) {
    var removed = {};
    for (var id in this.ids) {
        if (this.ids[id] === identifier) {
            removed.id = id;
            removed.identifier = this.ids[id];
            delete this.ids[id];
            break;
        }
    }
    return removed;
};

Manager.prototype.onmove = function (evt) {
    var self = this;
    self.onAny('move', evt);
    return false;
};

Manager.prototype.onend = function (evt) {
    var self = this;
    self.onAny('end', evt);
    return false;
};

Manager.prototype.onAny = function (which, evt) {
    var self = this;
    var id;
    var processFn = 'processOn' + which.charAt(0).toUpperCase() +
        which.slice(1);
    evt = u.prepareEvent(evt);
    var processColl = function (e, id, coll) {
        if (coll.ids.indexOf(id) >= 0) {
            coll[processFn](e);
            // Mark the event to avoid cleaning it later.
            e._found_ = true;
        }
    };
    var processEvt = function (e) {
        id = self.getIdentifier(e);
        u.map(self.collections, processColl.bind(null, e, id));
        // If the event isn't handled by any collection,
        // we need to clean its identifier.
        if (!e._found_) {
            self.removeIdentifier(id);
        }
    };

    u.map(evt, processEvt);

    return false;
};

// Cleanly destroy the manager
Manager.prototype.destroy = function () {
    var self = this;
    self.unbindDocument(true);
    self.ids = {};
    self.index = 0;
    self.collections.forEach(function(collection) {
        collection.destroy();
    });
    self.off();
};

// When a collection gets destroyed
// we clean behind.
Manager.prototype.onDestroyed = function (evt, coll) {
    var self = this;
    if (self.collections.indexOf(coll) < 0) {
        return false;
    }
    self.collections.splice(self.collections.indexOf(coll), 1);
};

var factory = new Manager();
return {
    create: function (options) {
        return factory.create(options);
    },
    factory: factory
};

});


/***/ }),

/***/ "../../node_modules/style-loader/lib/addStyles.js":
/*!******************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/style-loader/lib/addStyles.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target) {
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "../../node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "../../node_modules/style-loader/lib/urls.js":
/*!*************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/style-loader/lib/urls.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "../../node_modules/tone-piano/build/Piano.js":
/*!**************************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/tone-piano/build/Piano.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t(__webpack_require__(/*! tone */ "../../node_modules/tone/build/Tone.js")):undefined}(this,function(e){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=8)}([function(t,n){t.exports=e},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2);t.default={getReleasesUrl:function(e){return"rel"+(e-20)+".[mp3|ogg]"},getHarmonicsUrl:function(e){return"harmL"+(0,r.midiToNote)(e).replace("#","s")+".[mp3|ogg]"},getNotesUrl:function(e,t){return(0,r.midiToNote)(e).replace("#","s")+"v"+t+".[mp3|ogg]"}}},function(e,t,n){"use strict";function r(e){return(0,s.Frequency)(e).toMidi()}function o(e){return(0,s.Frequency)(e,"midi").toNote()}function i(e){var t=e%3;return 1===t?[e-1,c.default.intervalToFrequencyRatio(1)]:2===t?[e+1,c.default.intervalToFrequencyRatio(-1)]:[e,1]}function u(e){return new s.BufferSource(e)}function a(e,t){return Math.random()*(t-e)+e}Object.defineProperty(t,"__esModule",{value:!0}),t.randomBetween=t.midiToFrequencyRatio=t.createSource=t.noteToMidi=t.midiToNote=void 0;var s=n(0),c=function(e){return e&&e.__esModule?e:{default:e}}(s);t.midiToNote=o,t.noteToMidi=r,t.createSource=u,t.midiToFrequencyRatio=i,t.randomBetween=a},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),s=function(e){return e&&e.__esModule?e:{default:e}}(a),c=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;r(this,t);var n=o(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.createInsOuts(0,1),n.volume=e,n}return i(t,e),u(t,[{key:"volume",get:function(){return s.default.gainToDb(this.output.gain.value)},set:function(e){this.output.gain.value=s.default.dbToGain(e)}}]),t}(a.AudioNode);t.default=c},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(1),c=r(s),l=n(3),f=r(l),p=n(2),h=n(0),d=[21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87],_=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[21,108];o(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),r=d.findIndex(function(t){return t>=e[0]}),u=d.findIndex(function(t){return t>=e[1]});u=-1===u?u=d.length:u;var a=d.slice(r,u);n._samples={};var s=!0,l=!1,f=void 0;try{for(var p,h=a[Symbol.iterator]();!(s=(p=h.next()).done);s=!0){var _=p.value;n._samples[_]=c.default.getHarmonicsUrl(_)}}catch(e){l=!0,f=e}finally{try{!s&&h.return&&h.return()}finally{if(l)throw f}}return n}return u(t,e),a(t,[{key:"start",value:function(e,t,n){e>=d[0]&&e<=d[d.length-1]&&this._sampler.triggerAttack((0,p.midiToNote)(e),t,n*(0,p.randomBetween)(.5,1))}},{key:"load",value:function(e){var t=this;return new Promise(function(n,r){t._sampler=new h.Sampler(t._samples,n,e).connect(t.output),t._sampler.release=1})}}]),t}(f.default);t.default=_},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.Notes=void 0;var a=function(){function e(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(0),l=(r(c),n(1)),f=r(l),p=n(3),h=r(p),d=n(2),_={1:[8],2:[6,12],3:[1,8,15],4:[1,5,10,15],5:[1,4,8,12,16],6:[1,3,7,10,13,16],7:[1,3,6,9,11,13,16],8:[1,3,5,7,9,11,13,15],9:[1,3,5,7,9,11,13,15,16],10:[1,2,3,5,7,9,11,13,15,16],11:[1,2,3,5,7,9,11,13,14,15,16],12:[1,2,3,4,5,7,9,11,13,14,15,16],13:[1,2,3,4,5,7,9,11,12,13,14,15,16],14:[1,2,3,4,5,6,7,9,11,12,13,14,15,16],15:[1,2,3,4,5,6,7,9,10,11,12,13,14,15,16],16:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},y=[21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108];t.Notes=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[21,108],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;o(this,t);var r=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this)),u=y.findIndex(function(t){return t>=e[0]}),a=y.findIndex(function(t){return t>=e[1]});a=-1===a?a=y.length:a+1;var s=y.slice(u,a);return r._samplers=_[n].slice(),r._activeNotes=new Map,r._samplers.forEach(function(e,t){r._samplers[t]={},s.forEach(function(n){r._samplers[t][n]=f.default.getNotesUrl(n,e)})}),r}return u(t,e),s(t,[{key:"_hasNote",value:function(e,t){return this._samplers.hasOwnProperty(t)&&this._samplers[t].has(e)}},{key:"_getNote",value:function(e,t){return this._samplers[t].get(e)}},{key:"stop",value:function(e,t,n){this._activeNotes.has(e)&&(this._activeNotes.get(e).forEach(function(e){e.stop(t+1,1)}),this._activeNotes.delete(e))}},{key:"start",value:function(e,t,n){var r=n*(this._samplers.length-1),o=Math.round(r),i=o-r,u=1-.5*i;1===this._samplers.length&&(u=Math.max(n,.05));var s=(0,d.midiToFrequencyRatio)(e),c=a(s,2),l=c[0],f=c[1];if(this._hasNote(l,o)){var p=(0,d.createSource)(this._getNote(l,o));p.playbackRate.value=f,p.connect(this.output),p.curve="exponential",p.start(t,0,void 0,u,0),this._activeNotes.has(e)||this._activeNotes.set(e,[]),this._activeNotes.get(e).push(p)}}},{key:"load",value:function(e){var t=this,n=[];return this._samplers.forEach(function(r,o){var i=new Promise(function(n){t._samplers[o]=new c.Buffers(r,n,e)});n.push(i)}),Promise.all(n)}}]),t}(h.default)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(3),c=r(s),l=n(1),f=(r(l),n(2)),p=n(0),h=(r(p),function(e){function t(){o(this,t);var e=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e._downTime=1/0,e._currentSound=null,e._buffers=null,e}return u(t,e),a(t,[{key:"load",value:function(e){var t=this;return new Promise(function(n){t._buffers=new p.Buffers({up:"pedalU1.mp3",down:"pedalD1.mp3"},n,e)})}},{key:"_squash",value:function(e){this._currentSound&&this._currentSound.stop(e+.1,.1),this._currentSound=null}},{key:"_playSample",value:function(e,t){this._currentSound=(0,f.createSource)(this._buffers.get(t)),this._currentSound.curve="exponential",this._currentSound.connect(this.output).start(e,(0,f.randomBetween)(0,.01),void 0,.5*(0,f.randomBetween)(.5,1),.05)}},{key:"down",value:function(e){this._squash(e),this._downTime=e,this._playSample(e,"down")}},{key:"up",value:function(e){this._squash(e),this._downTime=1/0,this._playSample(e,"up")}},{key:"isDown",value:function(e){return e>this._downTime}}]),t}(c.default));t.default=h},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(1),c=r(s),l=n(3),f=r(l),p=n(2),h=n(0),d=function(e){function t(e){o(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));n._buffers={};for(var r=e[0];r<=e[1];r++)n._buffers[r]=c.default.getReleasesUrl(r);return n}return u(t,e),a(t,[{key:"load",value:function(e){var t=this;return new Promise(function(n){t._buffers=new h.Buffers(t._buffers,n,e)})}},{key:"start",value:function(e,t,n){if(this._buffers.has(e)){var r=(0,p.createSource)(this._buffers.get(e)).connect(this.output);n*=(0,p.randomBetween)(.5,1),r.start(t,0,void 0,.015*n,0)}}}]),t}(f.default);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.Piano=void 0;var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=n(0),c=r(s),l=n(6),f=r(l),p=n(5),h=n(4),d=r(h),_=n(7),y=r(_),v=n(1);r(v),t.Piano=function(e){function t(){o(this,t);var e=c.default.defaults(arguments,["range","velocities"],{velocities:1,range:[21,108],release:!0}),n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.createInsOuts(0,1),n._loaded=!1,n._heldNotes=new Map,n._sustainedNotes=new Map,n._notes=new p.Notes(e.range,e.velocities).connect(n.output),n._pedal=(new f.default).connect(n.output),e.release&&(n._harmonics=new d.default(e.range).connect(n.output),n._release=new y.default(e.range).connect(n.output)),n}return u(t,e),a(t,[{key:"load",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"https://tambien.github.io/Piano/Salamander/",n=[this._notes.load(t),this._pedal.load(t)];return this._harmonics&&n.push(this._harmonics.load(t)),this._release&&n.push(this._release.load(t)),Promise.all(n).then(function(){e._loaded=!0})}},{key:"pedalDown",value:function(e){return this.loaded&&(e=this.toSeconds(e),this._pedal.isDown(e)||this._pedal.down(e)),this}},{key:"pedalUp",value:function(e){var t=this;return this.loaded&&(e=this.toSeconds(e),this._pedal.isDown(e)&&(this._pedal.up(e),this._sustainedNotes.forEach(function(n,r){t._heldNotes.has(r)||t._notes.stop(r,e)}),this._sustainedNotes.clear())),this}},{key:"keyDown",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.default.now(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.8;return this.loaded&&(t=this.toSeconds(t),c.default.isString(e)&&(e=Math.round((0,s.Frequency)(e).toMidi())),this._heldNotes.has(e)||(this._heldNotes.set(e,{time:t,velocity:n}),this._notes.start(e,t,n))),this}},{key:"keyUp",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c.default.now(),n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.8;if(this.loaded&&(t=this.toSeconds(t),c.default.isString(e)&&(e=Math.round((0,s.Frequency)(e).toMidi())),this._heldNotes.has(e))){var r=this._heldNotes.get(e);this._heldNotes.delete(e),this._release&&this._release.start(e,t,n);var o=t-r.time,i=r.velocity,u=.5/Math.max(o,.1)+i+n;u=Math.pow(Math.log(Math.max(u,1)),2)/2,this._pedal.isDown(t)?this._sustainedNotes.has(e)||this._sustainedNotes.set(e,t):(this._notes.stop(e,t,n),this._harmonics&&this._harmonics.start(e,t,u))}return this}},{key:"setVolume",value:function(e,t){switch(e){case"note":this._notes.volume=t;break;case"pedal":this._pedal.volume=t;break;case"release":this._release&&(this._release.volume=t);break;case"harmonics":this._harmonics&&(this._harmonics.volume=t)}return this}},{key:"stopAll",value:function(){var e=this;return this.pedalUp(),this._heldNotes.forEach(function(t,n){e.keyUp(n)}),this}},{key:"progress",value:function(e){return s.Buffer.on("progress",e),this}},{key:"loaded",get:function(){return this._loaded}}]),t}(s.AudioNode)}])});
//# sourceMappingURL=Piano.js.map

/***/ }),

/***/ "../../node_modules/tone/build/Tone.js":
/*!*******************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/tone/build/Tone.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory){

	//UMD
	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return factory();
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}

}(this, function(){

	"use strict";
	
	var Tone;
	//constructs the main Tone object
	function Main(func){
		Tone = func();
	}
	//invokes each of the modules with the main Tone object as the argument
	function Module(func){
		func(Tone);
	}	/**
	 *  Tone.js
	 *  @author Yotam Mann
	 *  @license http://opensource.org/licenses/MIT MIT License
	 *  @copyright 2014-2018 Yotam Mann
	 */
	Main(function () {
	    
	    ///////////////////////////////////////////////////////////////////////////
	    //	TONE
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  @class  Tone is the base class of all other classes.
		 *  @constructor
		 */
	    var Tone = function () {
	        if (!(this instanceof Tone)) {
	            throw new Error('constructor needs to be called with the \'new\' keyword');
	        }
	    };
	    /**
		 *  @memberOf Tone#
		 *  @returns {String} returns the name of the class as a string
		 */
	    Tone.prototype.toString = function () {
	        for (var className in Tone) {
	            var isLetter = className[0].match(/^[A-Z]$/);
	            var sameConstructor = Tone[className] === this.constructor;
	            if (Tone.isFunction(Tone[className]) && isLetter && sameConstructor) {
	                return className;
	            }
	        }
	        return 'Tone';
	    };
	    /**
		 *  @memberOf Tone#
		 *  disconnect and dispose
		 *  @returns {Tone} this
		 */
	    Tone.prototype.dispose = function () {
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	GET/SET
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Set the parameters at once. Either pass in an
		 *  object mapping parameters to values, or to set a
		 *  single parameter, by passing in a string and value.
		 *  The last argument is an optional ramp time which
		 *  will ramp any signal values to their destination value
		 *  over the duration of the rampTime.
		 *  @param {Object|String} params
		 *  @param {Number=} value
		 *  @param {Time=} rampTime
		 *  @returns {Tone} this
		 *  @memberOf Tone#
		 *  @example
		 * //set values using an object
		 * filter.set({
		 * 	"frequency" : 300,
		 * 	"type" : highpass
		 * });
		 *  @example
		 * filter.set("type", "highpass");
		 *  @example
		 * //ramp to the value 220 over 3 seconds.
		 * oscillator.set({
		 * 	"frequency" : 220
		 * }, 3);
		 */
	    Tone.prototype.set = function (params, value, rampTime) {
	        if (Tone.isObject(params)) {
	            rampTime = value;
	        } else if (Tone.isString(params)) {
	            var tmpObj = {};
	            tmpObj[params] = value;
	            params = tmpObj;
	        }
	        paramLoop:
	            for (var attr in params) {
	                value = params[attr];
	                var parent = this;
	                if (attr.indexOf('.') !== -1) {
	                    var attrSplit = attr.split('.');
	                    for (var i = 0; i < attrSplit.length - 1; i++) {
	                        parent = parent[attrSplit[i]];
	                        if (parent instanceof Tone) {
	                            attrSplit.splice(0, i + 1);
	                            var innerParam = attrSplit.join('.');
	                            parent.set(innerParam, value);
	                            continue paramLoop;
	                        }
	                    }
	                    attr = attrSplit[attrSplit.length - 1];
	                }
	                var param = parent[attr];
	                if (Tone.isUndef(param)) {
	                    continue;
	                }
	                if (Tone.Signal && param instanceof Tone.Signal || Tone.Param && param instanceof Tone.Param) {
	                    if (param.value !== value) {
	                        if (Tone.isUndef(rampTime)) {
	                            param.value = value;
	                        } else {
	                            param.rampTo(value, rampTime);
	                        }
	                    }
	                } else if (param instanceof AudioParam) {
	                    if (param.value !== value) {
	                        param.value = value;
	                    }
	                } else if (Tone.TimeBase && param instanceof Tone.TimeBase) {
	                    parent[attr] = value;
	                } else if (param instanceof Tone) {
	                    param.set(value);
	                } else if (param !== value) {
	                    parent[attr] = value;
	                }
	            }
	        return this;
	    };
	    /**
		 *  Get the object's attributes. Given no arguments get
		 *  will return all available object properties and their corresponding
		 *  values. Pass in a single attribute to retrieve or an array
		 *  of attributes. The attribute strings can also include a "."
		 *  to access deeper properties.
		 *  @memberOf Tone#
		 *  @example
		 * osc.get();
		 * //returns {"type" : "sine", "frequency" : 440, ...etc}
		 *  @example
		 * osc.get("type");
		 * //returns { "type" : "sine"}
		 * @example
		 * //use dot notation to access deep properties
		 * synth.get(["envelope.attack", "envelope.release"]);
		 * //returns {"envelope" : {"attack" : 0.2, "release" : 0.4}}
		 *  @param {Array=|string|undefined} params the parameters to get, otherwise will return
		 *  					                  all available.
		 *  @returns {Object}
		 */
	    Tone.prototype.get = function (params) {
	        if (Tone.isUndef(params)) {
	            params = this._collectDefaults(this.constructor);
	        } else if (Tone.isString(params)) {
	            params = [params];
	        }
	        var ret = {};
	        for (var i = 0; i < params.length; i++) {
	            var attr = params[i];
	            var parent = this;
	            var subRet = ret;
	            if (attr.indexOf('.') !== -1) {
	                var attrSplit = attr.split('.');
	                for (var j = 0; j < attrSplit.length - 1; j++) {
	                    var subAttr = attrSplit[j];
	                    subRet[subAttr] = subRet[subAttr] || {};
	                    subRet = subRet[subAttr];
	                    parent = parent[subAttr];
	                }
	                attr = attrSplit[attrSplit.length - 1];
	            }
	            var param = parent[attr];
	            if (Tone.isObject(params[attr])) {
	                subRet[attr] = param.get();
	            } else if (Tone.Signal && param instanceof Tone.Signal) {
	                subRet[attr] = param.value;
	            } else if (Tone.Param && param instanceof Tone.Param) {
	                subRet[attr] = param.value;
	            } else if (param instanceof AudioParam) {
	                subRet[attr] = param.value;
	            } else if (param instanceof Tone) {
	                subRet[attr] = param.get();
	            } else if (!Tone.isFunction(param) && Tone.isDefined(param)) {
	                subRet[attr] = param;
	            }
	        }
	        return ret;
	    };
	    /**
		 *  collect all of the default attributes in one
		 *  @private
		 *  @param {Function} constr the constructor to find the defaults from
		 *  @return {Array} all of the attributes which belong to the class
		 */
	    Tone.prototype._collectDefaults = function (constr) {
	        var ret = [];
	        if (Tone.isDefined(constr.defaults)) {
	            ret = Object.keys(constr.defaults);
	        }
	        if (Tone.isDefined(constr._super)) {
	            var superDefs = this._collectDefaults(constr._super);
	            //filter out repeats
	            for (var i = 0; i < superDefs.length; i++) {
	                if (ret.indexOf(superDefs[i]) === -1) {
	                    ret.push(superDefs[i]);
	                }
	            }
	        }
	        return ret;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	DEFAULTS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  @memberOf Tone
		 *  @param  {Array}  values  The arguments array
		 *  @param  {Array}  keys    The names of the arguments
		 *  @param {Function|Object} constr The class constructor
		 *  @return  {Object}  An object composed of the  defaults between the class' defaults
		 *                        and the passed in arguments.
		 */
	    Tone.defaults = function (values, keys, constr) {
	        var options = {};
	        if (values.length === 1 && Tone.isObject(values[0])) {
	            options = values[0];
	        } else {
	            for (var i = 0; i < keys.length; i++) {
	                options[keys[i]] = values[i];
	            }
	        }
	        if (Tone.isDefined(constr.defaults)) {
	            return Tone.defaultArg(options, constr.defaults);
	        } else if (Tone.isObject(constr)) {
	            return Tone.defaultArg(options, constr);
	        } else {
	            return options;
	        }
	    };
	    /**
		 *  If the `given` parameter is undefined, use the `fallback`.
		 *  If both `given` and `fallback` are object literals, it will
		 *  return a deep copy which includes all of the parameters from both
		 *  objects. If a parameter is undefined in given, it will return
		 *  the fallback property.
		 *  <br><br>
		 *  WARNING: if object is self referential, it will go into an an
		 *  infinite recursive loop.
		 *  @memberOf Tone
		 *  @param  {*} given
		 *  @param  {*} fallback
		 *  @return {*}
		 */
	    Tone.defaultArg = function (given, fallback) {
	        if (Tone.isObject(given) && Tone.isObject(fallback)) {
	            var ret = {};
	            //make a deep copy of the given object
	            for (var givenProp in given) {
	                ret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);
	            }
	            for (var fallbackProp in fallback) {
	                ret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);
	            }
	            return ret;
	        } else {
	            return Tone.isUndef(given) ? fallback : given;
	        }
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	CONNECTIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  connect together all of the arguments in series
		 *  @param {...AudioParam|Tone|AudioNode} nodes
		 *  @returns {Tone}
		 *  @memberOf Tone
		 *  @static
		 */
	    Tone.connectSeries = function () {
	        var currentUnit = arguments[0];
	        for (var i = 1; i < arguments.length; i++) {
	            var toUnit = arguments[i];
	            currentUnit.connect(toUnit);
	            currentUnit = toUnit;
	        }
	        return Tone;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    // TYPE CHECKING
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Test if the arg is undefined
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is undefined
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isUndef = function (val) {
	        return typeof val === 'undefined';
	    };
	    /**
		 *  Test if the arg is not undefined
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is undefined
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isDefined = function (val) {
	        return !Tone.isUndef(val);
	    };
	    /**
		 *  Test if the arg is a function
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is a function
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isFunction = function (val) {
	        return typeof val === 'function';
	    };
	    /**
		 *  Test if the argument is a number.
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is a number
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isNumber = function (arg) {
	        return typeof arg === 'number';
	    };
	    /**
		 *  Test if the given argument is an object literal (i.e. `{}`);
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is an object literal.
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isObject = function (arg) {
	        return Object.prototype.toString.call(arg) === '[object Object]' && arg.constructor === Object;
	    };
	    /**
		 *  Test if the argument is a boolean.
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is a boolean
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isBoolean = function (arg) {
	        return typeof arg === 'boolean';
	    };
	    /**
		 *  Test if the argument is an Array
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is an array
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isArray = function (arg) {
	        return Array.isArray(arg);
	    };
	    /**
		 *  Test if the argument is a string.
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is a string
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isString = function (arg) {
	        return typeof arg === 'string';
	    };
	    /**
		 *  Test if the argument is in the form of a note in scientific pitch notation.
		 *  e.g. "C4"
		 *  @param {*} arg the argument to test
		 *  @returns {Boolean} true if the arg is a string
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.isNote = function (arg) {
	        return Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
	    };
	    /**
		 *  An empty function.
		 *  @static
		 */
	    Tone.noOp = function () {
	    };
	    /**
		 *  Make the property not writable. Internal use only.
		 *  @private
		 *  @param  {String}  property  the property to make not writable
		 */
	    Tone.prototype._readOnly = function (property) {
	        if (Array.isArray(property)) {
	            for (var i = 0; i < property.length; i++) {
	                this._readOnly(property[i]);
	            }
	        } else {
	            Object.defineProperty(this, property, {
	                writable: false,
	                enumerable: true
	            });
	        }
	    };
	    /**
		 *  Make an attribute writeable. Interal use only.
		 *  @private
		 *  @param  {String}  property  the property to make writable
		 */
	    Tone.prototype._writable = function (property) {
	        if (Array.isArray(property)) {
	            for (var i = 0; i < property.length; i++) {
	                this._writable(property[i]);
	            }
	        } else {
	            Object.defineProperty(this, property, { writable: true });
	        }
	    };
	    /**
		 * Possible play states.
		 * @enum {String}
		 */
	    Tone.State = {
	        Started: 'started',
	        Stopped: 'stopped',
	        Paused: 'paused'
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    // CONVERSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Equal power gain scale. Good for cross-fading.
		 *  @param  {NormalRange} percent (0-1)
		 *  @return {Number}         output gain (0-1)
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.equalPowerScale = function (percent) {
	        var piFactor = 0.5 * Math.PI;
	        return Math.sin(percent * piFactor);
	    };
	    /**
		 *  Convert decibels into gain.
		 *  @param  {Decibels} db
		 *  @return {Number}
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.dbToGain = function (db) {
	        return Math.pow(10, db / 20);
	    };
	    /**
		 *  Convert gain to decibels.
		 *  @param  {Number} gain (0-1)
		 *  @return {Decibels}
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.gainToDb = function (gain) {
	        return 20 * (Math.log(gain) / Math.LN10);
	    };
	    /**
		 *  Convert an interval (in semitones) to a frequency ratio.
		 *  @param  {Interval} interval the number of semitones above the base note
		 *  @return {Number}          the frequency ratio
		 *  @static
		 *  @memberOf Tone
		 *  @example
		 * tone.intervalToFrequencyRatio(0); // 1
		 * tone.intervalToFrequencyRatio(12); // 2
		 * tone.intervalToFrequencyRatio(-12); // 0.5
		 */
	    Tone.intervalToFrequencyRatio = function (interval) {
	        return Math.pow(2, interval / 12);
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	TIMING
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Return the current time of the AudioContext clock.
		 *  @return {Number} the currentTime from the AudioContext
		 *  @memberOf Tone#
		 */
	    Tone.prototype.now = function () {
	        return Tone.context.now();
	    };
	    /**
		 *  Return the current time of the AudioContext clock.
		 *  @return {Number} the currentTime from the AudioContext
		 *  @static
		 *  @memberOf Tone
		 */
	    Tone.now = function () {
	        return Tone.context.now();
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	INHERITANCE
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  have a child inherit all of Tone's (or a parent's) prototype
		 *  to inherit the parent's properties, make sure to call
		 *  Parent.call(this) in the child's constructor
		 *
		 *  based on closure library's inherit function
		 *
		 *  @memberOf Tone
		 *  @static
		 *  @param  {Function} 	child
		 *  @param  {Function=} parent (optional) parent to inherit from
		 *                             if no parent is supplied, the child
		 *                             will inherit from Tone
		 */
	    Tone.extend = function (child, parent) {
	        if (Tone.isUndef(parent)) {
	            parent = Tone;
	        }
	        function TempConstructor() {
	        }
	        TempConstructor.prototype = parent.prototype;
	        child.prototype = new TempConstructor();
	        /** @override */
	        child.prototype.constructor = child;
	        child._super = parent;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	CONTEXT
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Private reference to the global AudioContext
		 *  @type {AudioContext}
		 *  @private
		 */
	    var audioContext = null;
	    /**
		 *  A static pointer to the audio context accessible as Tone.context.
		 *  @type {Tone.Context}
		 *  @name context
		 *  @memberOf Tone
		 */
	    Object.defineProperty(Tone, 'context', {
	        get: function () {
	            return audioContext;
	        },
	        set: function (context) {
	            if (Tone.Context && context instanceof Tone.Context) {
	                audioContext = context;
	            } else {
	                audioContext = new Tone.Context(context);
	            }
	            //initialize the new audio context
	            Tone.Context.emit('init', audioContext);
	        }
	    });
	    /**
		 *  The AudioContext
		 *  @type {Tone.Context}
		 *  @name context
		 *  @memberOf Tone#
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.prototype, 'context', {
	        get: function () {
	            return Tone.context;
	        }
	    });
	    /**
		 *  Tone automatically creates a context on init, but if you are working
		 *  with other libraries which also create an AudioContext, it can be
		 *  useful to set your own. If you are going to set your own context,
		 *  be sure to do it at the start of your code, before creating any objects.
		 *  @static
		 *  @param {AudioContext} ctx The new audio context to set
		 */
	    Tone.setContext = function (ctx) {
	        Tone.context = ctx;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	ATTRIBUTES
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  The number of seconds of 1 processing block (128 samples)
		 *  @type {Number}
		 *  @name blockTime
		 *  @memberOf Tone
		 *  @static
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.prototype, 'blockTime', {
	        get: function () {
	            return 128 / this.context.sampleRate;
	        }
	    });
	    /**
		 *  The duration in seconds of one sample.
		 *  @type {Number}
		 *  @name sampleTime
		 *  @memberOf Tone
		 *  @static
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.prototype, 'sampleTime', {
	        get: function () {
	            return 1 / this.context.sampleRate;
	        }
	    });
	    /**
		 *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.
		 *  @type {Boolean}
		 *  @name supported
		 *  @memberOf Tone
		 *  @readOnly
		 *  @static
		 */
	    Object.defineProperty(Tone, 'supported', {
	        get: function () {
	            var hasAudioContext = window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext');
	            var hasPromises = window.hasOwnProperty('Promise');
	            var hasWorkers = window.hasOwnProperty('Worker');
	            return hasAudioContext && hasPromises && hasWorkers;
	        }
	    });
	    /**
		 *  Boolean value if the audio context has been initialized.
		 *  @type {Boolean}
		 *  @memberOf Tone
		 *  @static
		 *  @name initialized
		 */
	    Object.defineProperty(Tone, 'initialized', {
	        get: function () {
	            return audioContext !== null;
	        }
	    });
	    /**
		 *  Get the context when it becomes available
		 *  @param  {Function}  resolve  Callback when the context is initialized
		 *  @return  {Tone}
		 */
	    Tone.getContext = function (resolve) {
	        if (Tone.initialized) {
	            resolve(Tone.context);
	        } else {
	            var resCallback = function () {
	                resolve(Tone.context);
	                Tone.Context.off('init', resCallback);
	            };
	            Tone.Context.on('init', resCallback);
	        }
	        return Tone;
	    };
	    /**
		 * The version number
		 * @type {String}
		 * @static
		 */
	    Tone.version = 'r12';
	    return Tone;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Emitter gives classes which extend it
		 *         the ability to listen for and emit events.
		 *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).
		 *         MIT (c) 2011 Jerome Etienne.
		 *
		 *  @extends {Tone}
		 */
	    Tone.Emitter = function () {
	        Tone.call(this);
	        /**
			 *  Contains all of the events.
			 *  @private
			 *  @type  {Object}
			 */
	        this._events = {};
	    };
	    Tone.extend(Tone.Emitter);
	    /**
		 *  Bind a callback to a specific event.
		 *  @param  {String}    event     The name of the event to listen for.
		 *  @param  {Function}  callback  The callback to invoke when the
		 *                                event is emitted
		 *  @return  {Tone.Emitter}    this
		 */
	    Tone.Emitter.prototype.on = function (event, callback) {
	        //split the event
	        var events = event.split(/\W+/);
	        for (var i = 0; i < events.length; i++) {
	            var eventName = events[i];
	            if (!this._events.hasOwnProperty(eventName)) {
	                this._events[eventName] = [];
	            }
	            this._events[eventName].push(callback);
	        }
	        return this;
	    };
	    /**
		 *  Bind a callback which is only invoked once
		 *  @param  {String}    event     The name of the event to listen for.
		 *  @param  {Function}  callback  The callback to invoke when the
		 *                                event is emitted
		 *  @return  {Tone.Emitter}    this
		 */
	    Tone.Emitter.prototype.once = function (event, callback) {
	        var boundCallback = function () {
	            //invoke the callback
	            callback.apply(this, arguments);
	            this.off(event, boundCallback);
	        }.bind(this);
	        this.on(event, boundCallback);
	        return this;
	    };
	    /**
		 *  Remove the event listener.
		 *  @param  {String}    event     The event to stop listening to.
		 *  @param  {Function=}  callback  The callback which was bound to
		 *                                the event with Tone.Emitter.on.
		 *                                If no callback is given, all callbacks
		 *                                events are removed.
		 *  @return  {Tone.Emitter}    this
		 */
	    Tone.Emitter.prototype.off = function (event, callback) {
	        var events = event.split(/\W+/);
	        for (var ev = 0; ev < events.length; ev++) {
	            event = events[ev];
	            if (this._events.hasOwnProperty(event)) {
	                if (Tone.isUndef(callback)) {
	                    this._events[event] = [];
	                } else {
	                    var eventList = this._events[event];
	                    for (var i = 0; i < eventList.length; i++) {
	                        if (eventList[i] === callback) {
	                            eventList.splice(i, 1);
	                        }
	                    }
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Invoke all of the callbacks bound to the event
		 *  with any arguments passed in.
		 *  @param  {String}  event  The name of the event.
		 *  @param {*} args... The arguments to pass to the functions listening.
		 *  @return  {Tone.Emitter}  this
		 */
	    Tone.Emitter.prototype.emit = function (event) {
	        if (this._events) {
	            var args = Array.apply(null, arguments).slice(1);
	            if (this._events.hasOwnProperty(event)) {
	                var eventList = this._events[event].slice(0);
	                for (var i = 0, len = eventList.length; i < len; i++) {
	                    eventList[i].apply(this, args);
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Add Emitter functions (on/off/emit) to the object
		 *  @param  {Object|Function}  object  The object or class to extend.
		 *  @returns {Tone.Emitter}
		 */
	    Tone.Emitter.mixin = function (object) {
	        var functions = [
	            'on',
	            'once',
	            'off',
	            'emit'
	        ];
	        object._events = {};
	        for (var i = 0; i < functions.length; i++) {
	            var func = functions[i];
	            var emitterFunc = Tone.Emitter.prototype[func];
	            object[func] = emitterFunc;
	        }
	        return Tone.Emitter;
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.Emitter}  this
		 */
	    Tone.Emitter.prototype.dispose = function () {
	        Tone.prototype.dispose.call(this);
	        this._events = null;
	        return this;
	    };
	    return Tone.Emitter;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class A Timeline class for scheduling and maintaining state
		 *         along a timeline. All events must have a "time" property.
		 *         Internally, events are stored in time order for fast
		 *         retrieval.
		 *  @extends {Tone}
		 *  @param {Positive} [memory=Infinity] The number of previous events that are retained.
		 */
	    Tone.Timeline = function () {
	        var options = Tone.defaults(arguments, ['memory'], Tone.Timeline);
	        Tone.call(this);
	        /**
			 *  The array of scheduled timeline events
			 *  @type  {Array}
			 *  @private
			 */
	        this._timeline = [];
	        /**
			 *  The memory of the timeline, i.e.
			 *  how many events in the past it will retain
			 *  @type {Positive}
			 */
	        this.memory = options.memory;
	    };
	    Tone.extend(Tone.Timeline);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 */
	    Tone.Timeline.defaults = { 'memory': Infinity };
	    /**
		 *  The number of items in the timeline.
		 *  @type {Number}
		 *  @memberOf Tone.Timeline#
		 *  @name length
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Timeline.prototype, 'length', {
	        get: function () {
	            return this._timeline.length;
	        }
	    });
	    /**
		 *  Insert an event object onto the timeline. Events must have a "time" attribute.
		 *  @param  {Object}  event  The event object to insert into the
		 *                           timeline.
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.add = function (event) {
	        //the event needs to have a time attribute
	        if (Tone.isUndef(event.time)) {
	            throw new Error('Tone.Timeline: events must have a time attribute');
	        }
	        event.time = event.time.valueOf();
	        var index = this._search(event.time);
	        this._timeline.splice(index + 1, 0, event);
	        //if the length is more than the memory, remove the previous ones
	        if (this.length > this.memory) {
	            var diff = this.length - this.memory;
	            this._timeline.splice(0, diff);
	        }
	        return this;
	    };
	    /**
		 *  Remove an event from the timeline.
		 *  @param  {Object}  event  The event object to remove from the list.
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.remove = function (event) {
	        var index = this._timeline.indexOf(event);
	        if (index !== -1) {
	            this._timeline.splice(index, 1);
	        }
	        return this;
	    };
	    /**
		 *  Get the nearest event whose time is less than or equal to the given time.
		 *  @param  {Number}  time  The time to query.
		 *  @param  {String}  comparator Which value in the object to compare
		 *  @returns {Object} The event object set after that time.
		 */
	    Tone.Timeline.prototype.get = function (time, comparator) {
	        comparator = Tone.defaultArg(comparator, 'time');
	        var index = this._search(time, comparator);
	        if (index !== -1) {
	            return this._timeline[index];
	        } else {
	            return null;
	        }
	    };
	    /**
		 *  Return the first event in the timeline without removing it
		 *  @returns {Object} The first event object
		 */
	    Tone.Timeline.prototype.peek = function () {
	        return this._timeline[0];
	    };
	    /**
		 *  Return the first event in the timeline and remove it
		 *  @returns {Object} The first event object
		 */
	    Tone.Timeline.prototype.shift = function () {
	        return this._timeline.shift();
	    };
	    /**
		 *  Get the event which is scheduled after the given time.
		 *  @param  {Number}  time  The time to query.
		 *  @param  {String}  comparator Which value in the object to compare
		 *  @returns {Object} The event object after the given time
		 */
	    Tone.Timeline.prototype.getAfter = function (time, comparator) {
	        comparator = Tone.defaultArg(comparator, 'time');
	        var index = this._search(time, comparator);
	        if (index + 1 < this._timeline.length) {
	            return this._timeline[index + 1];
	        } else {
	            return null;
	        }
	    };
	    /**
		 *  Get the event before the event at the given time.
		 *  @param  {Number}  time  The time to query.
		 *  @param  {String}  comparator Which value in the object to compare
		 *  @returns {Object} The event object before the given time
		 */
	    Tone.Timeline.prototype.getBefore = function (time, comparator) {
	        comparator = Tone.defaultArg(comparator, 'time');
	        var len = this._timeline.length;
	        //if it's after the last item, return the last item
	        if (len > 0 && this._timeline[len - 1][comparator] < time) {
	            return this._timeline[len - 1];
	        }
	        var index = this._search(time, comparator);
	        if (index - 1 >= 0) {
	            return this._timeline[index - 1];
	        } else {
	            return null;
	        }
	    };
	    /**
		 *  Cancel events after the given time
		 *  @param  {Number}  time  The time to query.
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.cancel = function (after) {
	        if (this._timeline.length > 1) {
	            var index = this._search(after);
	            if (index >= 0) {
	                if (this._timeline[index].time === after) {
	                    //get the first item with that time
	                    for (var i = index; i >= 0; i--) {
	                        if (this._timeline[i].time === after) {
	                            index = i;
	                        } else {
	                            break;
	                        }
	                    }
	                    this._timeline = this._timeline.slice(0, index);
	                } else {
	                    this._timeline = this._timeline.slice(0, index + 1);
	                }
	            } else {
	                this._timeline = [];
	            }
	        } else if (this._timeline.length === 1) {
	            //the first item's time
	            if (this._timeline[0].time >= after) {
	                this._timeline = [];
	            }
	        }
	        return this;
	    };
	    /**
		 *  Cancel events before or equal to the given time.
		 *  @param  {Number}  time  The time to cancel before.
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.cancelBefore = function (time) {
	        var index = this._search(time);
	        if (index >= 0) {
	            this._timeline = this._timeline.slice(index + 1);
	        }
	        return this;
	    };
	    /**
		 * Returns the previous event if there is one. null otherwise
		 * @param  {Object} event The event to find the previous one of
		 * @return {Object}       The event right before the given event
		 */
	    Tone.Timeline.prototype.previousEvent = function (event) {
	        var index = this._timeline.indexOf(event);
	        if (index > 0) {
	            return this._timeline[index - 1];
	        } else {
	            return null;
	        }
	    };
	    /**
		 *  Does a binary search on the timeline array and returns the
		 *  nearest event index whose time is after or equal to the given time.
		 *  If a time is searched before the first index in the timeline, -1 is returned.
		 *  If the time is after the end, the index of the last item is returned.
		 *  @param  {Number}  time
		 *  @param  {String}  comparator Which value in the object to compare
		 *  @return  {Number} the index in the timeline array
		 *  @private
		 */
	    Tone.Timeline.prototype._search = function (time, comparator) {
	        if (this._timeline.length === 0) {
	            return -1;
	        }
	        comparator = Tone.defaultArg(comparator, 'time');
	        var beginning = 0;
	        var len = this._timeline.length;
	        var end = len;
	        if (len > 0 && this._timeline[len - 1][comparator] <= time) {
	            return len - 1;
	        }
	        while (beginning < end) {
	            // calculate the midpoint for roughly equal partition
	            var midPoint = Math.floor(beginning + (end - beginning) / 2);
	            var event = this._timeline[midPoint];
	            var nextEvent = this._timeline[midPoint + 1];
	            if (event[comparator] === time) {
	                //choose the last one that has the same time
	                for (var i = midPoint; i < this._timeline.length; i++) {
	                    var testEvent = this._timeline[i];
	                    if (testEvent[comparator] === time) {
	                        midPoint = i;
	                    }
	                }
	                return midPoint;
	            } else if (event[comparator] < time && nextEvent[comparator] > time) {
	                return midPoint;
	            } else if (event[comparator] > time) {
	                //search lower
	                end = midPoint;
	            } else {
	                //search upper
	                beginning = midPoint + 1;
	            }
	        }
	        return -1;
	    };
	    /**
		 *  Internal iterator. Applies extra safety checks for
		 *  removing items from the array.
		 *  @param  {Function}  callback
		 *  @param  {Number=}    lowerBound
		 *  @param  {Number=}    upperBound
		 *  @private
		 */
	    Tone.Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {
	        lowerBound = Tone.defaultArg(lowerBound, 0);
	        upperBound = Tone.defaultArg(upperBound, this._timeline.length - 1);
	        this._timeline.slice(lowerBound, upperBound + 1).forEach(function (event) {
	            callback.call(this, event);
	        }.bind(this));
	    };
	    /**
		 *  Iterate over everything in the array
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEach = function (callback) {
	        this._iterate(callback);
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array at or before the given time.
		 *  @param  {Number}  time The time to check if items are before
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEachBefore = function (time, callback) {
	        //iterate over the items in reverse so that removing an item doesn't break things
	        var upperBound = this._search(time);
	        if (upperBound !== -1) {
	            this._iterate(callback, 0, upperBound);
	        }
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array after the given time.
		 *  @param  {Number}  time The time to check if items are before
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEachAfter = function (time, callback) {
	        //iterate over the items in reverse so that removing an item doesn't break things
	        var lowerBound = this._search(time);
	        this._iterate(callback, lowerBound + 1);
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array between the startTime and endTime. 
		 *  The timerange is inclusive of the startTime, but exclusive of the endTime. 
		 *  range = [startTime, endTime). 
		 *  @param  {Number}  startTime The time to check if items are before
		 *  @param  {Number}  endTime The end of the test interval. 
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEachBetween = function (startTime, endTime, callback) {
	        var lowerBound = this._search(startTime);
	        var upperBound = this._search(endTime);
	        if (lowerBound !== -1 && upperBound !== -1) {
	            if (this._timeline[lowerBound].time !== startTime) {
	                lowerBound += 1;
	            }
	            //exclusive of the end time
	            if (this._timeline[upperBound].time === endTime) {
	                upperBound -= 1;
	            }
	            this._iterate(callback, lowerBound, upperBound);
	        } else if (lowerBound === -1) {
	            this._iterate(callback, 0, upperBound);
	        }
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array at or after the given time. Similar to
		 *  forEachAfter, but includes the item(s) at the given time.
		 *  @param  {Number}  time The time to check if items are before
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEachFrom = function (time, callback) {
	        //iterate over the items in reverse so that removing an item doesn't break things
	        var lowerBound = this._search(time);
	        //work backwards until the event time is less than time
	        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {
	            lowerBound--;
	        }
	        this._iterate(callback, lowerBound + 1);
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array at the given time
		 *  @param  {Number}  time The time to check if items are before
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.Timeline} this
		 */
	    Tone.Timeline.prototype.forEachAtTime = function (time, callback) {
	        //iterate over the items in reverse so that removing an item doesn't break things
	        var upperBound = this._search(time);
	        if (upperBound !== -1) {
	            this._iterate(function (event) {
	                if (event.time === time) {
	                    callback.call(this, event);
	                }
	            }, 0, upperBound);
	        }
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @return  {Tone.Timeline}  this
		 */
	    Tone.Timeline.prototype.dispose = function () {
	        Tone.prototype.dispose.call(this);
	        this._timeline = null;
	        return this;
	    };
	    return Tone.Timeline;
	});
	Module(function (Tone) {
	    if (Tone.supported) {
	        if (!window.hasOwnProperty('OfflineAudioContext') && window.hasOwnProperty('webkitOfflineAudioContext')) {
	            window.OfflineAudioContext = window.webkitOfflineAudioContext;
	        }
	        //returns promise?
	        var context = new OfflineAudioContext(1, 1, 44100);
	        var ret = context.startRendering();
	        if (!(ret instanceof Promise)) {
	            OfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;
	            OfflineAudioContext.prototype.startRendering = function () {
	                return new Promise(function (done) {
	                    this.oncomplete = function (e) {
	                        done(e.renderedBuffer);
	                    };
	                    this._native_startRendering();
	                }.bind(this));
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    if (Tone.supported) {
	        if (!window.hasOwnProperty('AudioContext') && window.hasOwnProperty('webkitAudioContext')) {
	            window.AudioContext = window.webkitAudioContext;
	        }
	        //not functionally equivalent, but only an API placeholder
	        if (!AudioContext.prototype.close) {
	            AudioContext.prototype.close = function () {
	                if (Tone.isFunction(this.suspend)) {
	                    this.suspend();
	                }
	                return Promise.resolve();
	            };
	        }
	        //not functionally equivalent
	        if (!AudioContext.prototype.resume) {
	            AudioContext.prototype.resume = function () {
	                return Promise.resolve();
	            };
	        }
	        //createGain
	        if (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode) {
	            AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;
	        }
	        //createDelay
	        if (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode) {
	            AudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;
	        }
	        //test decodeAudioData returns a promise
	        // https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js
	        // MIT License (c) 2015 @mohayonao
	        var decodeAudioDataPromise = false;
	        var offlineContext = new OfflineAudioContext(1, 1, 44100);
	        var audioData = new Uint32Array([
	            1179011410,
	            48,
	            1163280727,
	            544501094,
	            16,
	            131073,
	            44100,
	            176400,
	            1048580,
	            1635017060,
	            8,
	            0,
	            0,
	            0,
	            0
	        ]).buffer;
	        try {
	            var ret = offlineContext.decodeAudioData(audioData);
	            if (ret instanceof Promise) {
	                decodeAudioDataPromise = true;
	            }
	        } catch (e) {
	            decodeAudioDataPromise = false;
	        }
	        if (!decodeAudioDataPromise) {
	            AudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;
	            AudioContext.prototype.decodeAudioData = function (audioData) {
	                return new Promise(function (success, error) {
	                    this._native_decodeAudioData(audioData, success, error);
	                }.bind(this));
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    /**
		 *  @class Wrapper around the native AudioContext.
		 *  @extends {Tone.Emitter}
		 *  @param {AudioContext=} context optionally pass in a context
		 */
	    Tone.Context = function () {
	        Tone.Emitter.call(this);
	        var options = Tone.defaults(arguments, ['context'], Tone.Context);
	        if (!options.context) {
	            options.context = new window.AudioContext();
	            if (!options.context) {
	                throw new Error('could not create AudioContext. Possibly too many AudioContexts running already.');
	            }
	        }
	        this._context = options.context;
	        // extend all of the methods
	        for (var prop in this._context) {
	            this._defineProperty(this._context, prop);
	        }
	        /**
			 *  The default latency hint
			 *  @type  {String}
			 *  @private
			 */
	        this._latencyHint = options.latencyHint;
	        /**
			 *  An object containing all of the constants AudioBufferSourceNodes
			 *  @type  {Object}
			 *  @private
			 */
	        this._constants = {};
	        ///////////////////////////////////////////////////////////////////////
	        // WORKER
	        ///////////////////////////////////////////////////////////////////////
	        /**
			 *  The amount of time events are scheduled
			 *  into the future
			 *  @type  {Number}
			 */
	        this.lookAhead = options.lookAhead;
	        /**
			 *  A reference to the actual computed update interval
			 *  @type  {Number}
			 *  @private
			 */
	        this._computedUpdateInterval = 0;
	        /**
			 *  A reliable callback method
			 *  @private
			 *  @type  {Ticker}
			 */
	        this._ticker = new Ticker(this.emit.bind(this, 'tick'), options.clockSource, options.updateInterval);
	        ///////////////////////////////////////////////////////////////////////
	        // TIMEOUTS
	        ///////////////////////////////////////////////////////////////////////
	        /**
			 *  All of the setTimeout events.
			 *  @type  {Tone.Timeline}
			 *  @private
			 */
	        this._timeouts = new Tone.Timeline();
	        /**
			 *  The timeout id counter
			 *  @private
			 *  @type {Number}
			 */
	        this._timeoutIds = 0;
	        this.on('tick', this._timeoutLoop.bind(this));
	    };
	    Tone.extend(Tone.Context, Tone.Emitter);
	    Tone.Emitter.mixin(Tone.Context);
	    /**
		 * defaults
		 * @static
		 * @type {Object}
		 */
	    Tone.Context.defaults = {
	        'clockSource': 'worker',
	        'latencyHint': 'interactive',
	        'lookAhead': 0.1,
	        'updateInterval': 0.03
	    };
	    /**
		 *  Define a property on this Tone.Context.
		 *  This is used to extend the native AudioContext
		 *  @param  {AudioContext}  context
		 *  @param  {String}  prop
		 *  @private
		 */
	    Tone.Context.prototype._defineProperty = function (context, prop) {
	        if (Tone.isUndef(this[prop])) {
	            Object.defineProperty(this, prop, {
	                get: function () {
	                    if (typeof context[prop] === 'function') {
	                        return context[prop].bind(context);
	                    } else {
	                        return context[prop];
	                    }
	                },
	                set: function (val) {
	                    context[prop] = val;
	                }
	            });
	        }
	    };
	    /**
		 *  The current audio context time
		 *  @return  {Number}
		 */
	    Tone.Context.prototype.now = function () {
	        return this._context.currentTime + this.lookAhead;
	    };
	    /**
		 *  Promise which is invoked when the context is running.
		 *  Tries to resume the context if it's not started.
		 *  @return  {Promise}
		 */
	    Tone.Context.prototype.ready = function () {
	        return new Promise(function (done) {
	            if (this._context.state === 'running') {
	                done();
	            } else {
	                this._context.resume().then(function () {
	                    done();
	                });
	            }
	        }.bind(this));
	    };
	    /**
		 *  Promise which is invoked when the context is running.
		 *  Tries to resume the context if it's not started.
		 *  @return  {Promise}
		 */
	    Tone.Context.prototype.close = function () {
	        return this._context.close().then(function () {
	            Tone.Context.emit('close', this);
	        }.bind(this));
	    };
	    /**
		 *  Generate a looped buffer at some constant value.
		 *  @param  {Number}  val
		 *  @return  {BufferSourceNode}
		 */
	    Tone.Context.prototype.getConstant = function (val) {
	        if (this._constants[val]) {
	            return this._constants[val];
	        } else {
	            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);
	            var arr = buffer.getChannelData(0);
	            for (var i = 0; i < arr.length; i++) {
	                arr[i] = val;
	            }
	            var constant = this._context.createBufferSource();
	            constant.channelCount = 1;
	            constant.channelCountMode = 'explicit';
	            constant.buffer = buffer;
	            constant.loop = true;
	            constant.start(0);
	            this._constants[val] = constant;
	            return constant;
	        }
	    };
	    /**
		 *  The private loop which keeps track of the context scheduled timeouts
		 *  Is invoked from the clock source
		 *  @private
		 */
	    Tone.Context.prototype._timeoutLoop = function () {
	        var now = this.now();
	        while (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now) {
	            this._timeouts.shift().callback();
	        }
	    };
	    /**
		 *  A setTimeout which is gaurenteed by the clock source.
		 *  Also runs in the offline context.
		 *  @param  {Function}  fn       The callback to invoke
		 *  @param  {Seconds}    timeout  The timeout in seconds
		 *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout
		 */
	    Tone.Context.prototype.setTimeout = function (fn, timeout) {
	        this._timeoutIds++;
	        var now = this.now();
	        this._timeouts.add({
	            callback: fn,
	            time: now + timeout,
	            id: this._timeoutIds
	        });
	        return this._timeoutIds;
	    };
	    /**
		 *  Clears a previously scheduled timeout with Tone.context.setTimeout
		 *  @param  {Number}  id  The ID returned from setTimeout
		 *  @return  {Tone.Context}  this
		 */
	    Tone.Context.prototype.clearTimeout = function (id) {
	        this._timeouts.forEach(function (event) {
	            if (event.id === id) {
	                this.remove(event);
	            }
	        });
	        return this;
	    };
	    /**
		 *  How often the Web Worker callback is invoked.
		 *  This number corresponds to how responsive the scheduling
		 *  can be. Context.updateInterval + Context.lookAhead gives you the
		 *  total latency between scheduling an event and hearing it.
		 *  @type {Number}
		 *  @memberOf Tone.Context#
		 *  @name updateInterval
		 */
	    Object.defineProperty(Tone.Context.prototype, 'updateInterval', {
	        get: function () {
	            return this._ticker.updateInterval;
	        },
	        set: function (interval) {
	            this._ticker.updateInterval = interval;
	        }
	    });
	    /**
		 *  What the source of the clock is, either "worker" (Web Worker [default]),
		 *  "timeout" (setTimeout), or "offline" (none).
		 *  @type {String}
		 *  @memberOf Tone.Context#
		 *  @name clockSource
		 */
	    Object.defineProperty(Tone.Context.prototype, 'clockSource', {
	        get: function () {
	            return this._ticker.type;
	        },
	        set: function (type) {
	            this._ticker.type = type;
	        }
	    });
	    /**
		 *  The type of playback, which affects tradeoffs between audio
		 *  output latency and responsiveness.
		 *
		 *  In addition to setting the value in seconds, the latencyHint also
		 *  accepts the strings "interactive" (prioritizes low latency),
		 *  "playback" (prioritizes sustained playback), "balanced" (balances
		 *  latency and performance), and "fastest" (lowest latency, might glitch more often).
		 *  @type {String|Seconds}
		 *  @memberOf Tone.Context#
		 *  @name latencyHint
		 *  @example
		 * //set the lookAhead to 0.3 seconds
		 * Tone.context.latencyHint = 0.3;
		 */
	    Object.defineProperty(Tone.Context.prototype, 'latencyHint', {
	        get: function () {
	            return this._latencyHint;
	        },
	        set: function (hint) {
	            var lookAhead = hint;
	            this._latencyHint = hint;
	            if (Tone.isString(hint)) {
	                switch (hint) {
	                case 'interactive':
	                    lookAhead = 0.1;
	                    this._context.latencyHint = hint;
	                    break;
	                case 'playback':
	                    lookAhead = 0.8;
	                    this._context.latencyHint = hint;
	                    break;
	                case 'balanced':
	                    lookAhead = 0.25;
	                    this._context.latencyHint = hint;
	                    break;
	                case 'fastest':
	                    this._context.latencyHint = 'interactive';
	                    lookAhead = 0.01;
	                    break;
	                }
	            }
	            this.lookAhead = lookAhead;
	            this.updateInterval = lookAhead / 3;
	        }
	    });
	    /**
		 *  Unlike other dispose methods, this returns a Promise
		 *  which executes when the context is closed and disposed
		 *  @returns {Promise} this
		 */
	    Tone.Context.prototype.dispose = function () {
	        return this.close().then(function () {
	            Tone.Emitter.prototype.dispose.call(this);
	            this._ticker.dispose();
	            this._ticker = null;
	            this._timeouts.dispose();
	            this._timeouts = null;
	            for (var con in this._constants) {
	                this._constants[con].disconnect();
	            }
	            this._constants = null;
	        }.bind(this));
	    };
	    /**
		 * @class A class which provides a reliable callback using either
		 *        a Web Worker, or if that isn't supported, falls back to setTimeout.
		 * @private
		 */
	    var Ticker = function (callback, type, updateInterval) {
	        /**
			 * Either "worker" or "timeout"
			 * @type {String}
			 * @private
			 */
	        this._type = type;
	        /**
			 * The update interval of the worker
			 * @private
			 * @type {Number}
			 */
	        this._updateInterval = updateInterval;
	        /**
			 * The callback to invoke at regular intervals
			 * @type {Function}
			 * @private
			 */
	        this._callback = Tone.defaultArg(callback, Tone.noOp);
	        //create the clock source for the first time
	        this._createClock();
	    };
	    /**
		 * The possible ticker types
		 * @private
		 * @type {Object}
		 */
	    Ticker.Type = {
	        Worker: 'worker',
	        Timeout: 'timeout',
	        Offline: 'offline'
	    };
	    /**
		 *  Generate a web worker
		 *  @return  {WebWorker}
		 *  @private
		 */
	    Ticker.prototype._createWorker = function () {
	        //URL Shim
	        window.URL = window.URL || window.webkitURL;
	        var blob = new Blob([//the initial timeout time
	            'var timeoutTime = ' + (this._updateInterval * 1000).toFixed(1) + ';' + //onmessage callback
	            'self.onmessage = function(msg){' + '\ttimeoutTime = parseInt(msg.data);' + '};' + //the tick function which posts a message
	            //and schedules a new tick
	            'function tick(){' + '\tsetTimeout(tick, timeoutTime);' + '\tself.postMessage(\'tick\');' + '}' + //call tick initially
	            'tick();']);
	        var blobUrl = URL.createObjectURL(blob);
	        var worker = new Worker(blobUrl);
	        worker.onmessage = this._callback.bind(this);
	        this._worker = worker;
	    };
	    /**
		 * Create a timeout loop
		 * @private
		 */
	    Ticker.prototype._createTimeout = function () {
	        this._timeout = setTimeout(function () {
	            this._createTimeout();
	            this._callback();
	        }.bind(this), this._updateInterval * 1000);
	    };
	    /**
		 * Create the clock source.
		 * @private
		 */
	    Ticker.prototype._createClock = function () {
	        if (this._type === Ticker.Type.Worker) {
	            try {
	                this._createWorker();
	            } catch (e) {
	                // workers not supported, fallback to timeout
	                this._type = Ticker.Type.Timeout;
	                this._createClock();
	            }
	        } else if (this._type === Ticker.Type.Timeout) {
	            this._createTimeout();
	        }
	    };
	    /**
		 * @memberOf Ticker#
		 * @type {Number}
		 * @name updateInterval
		 * @private
		 */
	    Object.defineProperty(Ticker.prototype, 'updateInterval', {
	        get: function () {
	            return this._updateInterval;
	        },
	        set: function (interval) {
	            this._updateInterval = Math.max(interval, 128 / 44100);
	            if (this._type === Ticker.Type.Worker) {
	                this._worker.postMessage(Math.max(interval * 1000, 1));
	            }
	        }
	    });
	    /**
		 * The type of the ticker, either a worker or a timeout
		 * @memberOf Ticker#
		 * @type {Number}
		 * @name type
		 * @private
		 */
	    Object.defineProperty(Ticker.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            this._disposeClock();
	            this._type = type;
	            this._createClock();
	        }
	    });
	    /**
		 * Clean up the current clock source
		 * @private
		 */
	    Ticker.prototype._disposeClock = function () {
	        if (this._timeout) {
	            clearTimeout(this._timeout);
	            this._timeout = null;
	        }
	        if (this._worker) {
	            this._worker.terminate();
	            this._worker.onmessage = null;
	            this._worker = null;
	        }
	    };
	    /**
		 * Clean up
		 * @private
		 */
	    Ticker.prototype.dispose = function () {
	        this._disposeClock();
	        this._callback = null;
	    };
	    /**
		 *  Shim all connect/disconnect and some deprecated methods which are still in
		 *  some older implementations.
		 *  @private
		 */
	    Tone.getContext(function () {
	        var nativeConnect = AudioNode.prototype.connect;
	        var nativeDisconnect = AudioNode.prototype.disconnect;
	        //replace the old connect method
	        function toneConnect(B, outNum, inNum) {
	            if (B.input) {
	                inNum = Tone.defaultArg(inNum, 0);
	                if (Tone.isArray(B.input)) {
	                    return this.connect(B.input[inNum]);
	                } else {
	                    return this.connect(B.input, outNum, inNum);
	                }
	            } else {
	                try {
	                    if (B instanceof AudioNode) {
	                        nativeConnect.call(this, B, outNum, inNum);
	                        return B;
	                    } else {
	                        nativeConnect.call(this, B, outNum);
	                        return B;
	                    }
	                } catch (e) {
	                    throw new Error('error connecting to node: ' + B + '\n' + e);
	                }
	            }
	        }
	        //replace the old disconnect method
	        function toneDisconnect(B, outNum, inNum) {
	            if (B && B.input && Tone.isArray(B.input)) {
	                inNum = Tone.defaultArg(inNum, 0);
	                this.disconnect(B.input[inNum], outNum, 0);
	            } else if (B && B.input) {
	                this.disconnect(B.input, outNum, inNum);
	            } else {
	                try {
	                    nativeDisconnect.apply(this, arguments);
	                } catch (e) {
	                    throw new Error('error disconnecting node: ' + B + '\n' + e);
	                }
	            }
	        }
	        if (AudioNode.prototype.connect !== toneConnect) {
	            AudioNode.prototype.connect = toneConnect;
	            AudioNode.prototype.disconnect = toneDisconnect;
	        }
	    });
	    // set the audio context initially, and if one is not already created
	    if (Tone.supported && !Tone.initialized) {
	        Tone.context = new Tone.Context();
	        // log on first initialization
	        // allow optional silencing of this log
	        if (!window.TONE_SILENCE_VERSION_LOGGING) {
	            // eslint-disable-next-line no-console
	            console.log('%c * Tone.js ' + Tone.version + ' * ', 'background: #000; color: #fff');
	        }
	    } else if (!Tone.supported) {
	        // eslint-disable-next-line no-console
	        console.warn('This browser does not support Tone.js');
	    }
	    return Tone.Context;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.AudioNode is the base class for classes which process audio.
		 *         AudioNodes have inputs and outputs.
		 *  @param	{AudioContext=} context	The audio context to use with the class
		 *  @extends {Tone}
		 */
	    Tone.AudioNode = function () {
	        Tone.call(this);
	        //use the default context if one is not passed in
	        var options = Tone.defaults(arguments, ['context'], { 'context': Tone.context });
	        /**
			 * The AudioContext of this instance
			 * @private
			 * @type {AudioContext}
			 */
	        this._context = options.context;
	    };
	    Tone.extend(Tone.AudioNode);
	    /**
		 * Get the audio context belonging to this instance.
		 * @type {Tone.Context}
		 * @memberOf Tone.AudioNode#
		 * @name context
		 * @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'context', {
	        get: function () {
	            return this._context;
	        }
	    });
	    /**
		 *  Create input and outputs for this object.
		 *  @param  {Number}  [input=0]   The number of inputs
		 *  @param  {Number}  [outputs=0]  The number of outputs
		 *  @return  {Tone.AudioNode}  this
		 *  @private
		 */
	    Tone.AudioNode.prototype.createInsOuts = function (inputs, outputs) {
	        if (inputs === 1) {
	            this.input = this.context.createGain();
	        } else if (inputs > 1) {
	            this.input = new Array(inputs);
	        }
	        if (outputs === 1) {
	            this.output = this.context.createGain();
	        } else if (outputs > 1) {
	            this.output = new Array(outputs);
	        }
	    };
	    /**
		 *  channelCount is the number of channels used when up-mixing and down-mixing
		 *  connections to any inputs to the node. The default value is 2 except for
		 *  specific nodes where its value is specially determined.
		 *
		 *  @memberof Tone.AudioNode#
		 *  @type {Number}
		 *  @name channelCount
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'channelCount', {
	        get: function () {
	            return this.output.channelCount;
	        },
	        set: function (c) {
	            return this.output.channelCount = c;
	        }
	    });
	    /**
		 *  channelCountMode determines how channels will be counted when up-mixing and
		 *  down-mixing connections to any inputs to the node.
		 *  The default value is "max". This attribute has no effect for nodes with no inputs.
		 *  @memberof Tone.AudioNode#
		 *  @type {String}
		 *  @name channelCountMode
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'channelCountMode', {
	        get: function () {
	            return this.output.channelCountMode;
	        },
	        set: function (m) {
	            return this.output.channelCountMode = m;
	        }
	    });
	    /**
		 *  channelInterpretation determines how individual channels will be treated
		 *  when up-mixing and down-mixing connections to any inputs to the node.
		 *  The default value is "speakers".
		 *  @memberof Tone.AudioNode#
		 *  @type {String}
		 *  @name channelInterpretation
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'channelInterpretation', {
	        get: function () {
	            return this.output.channelInterpretation;
	        },
	        set: function (i) {
	            return this.output.channelInterpretation = i;
	        }
	    });
	    /**
		 *  The number of inputs feeding into the AudioNode.
		 *  For source nodes, this will be 0.
		 *  @type {Number}
		 *  @name numberOfInputs
		 *  @memberof Tone.AudioNode#
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfInputs', {
	        get: function () {
	            if (this.input) {
	                if (Tone.isArray(this.input)) {
	                    return this.input.length;
	                } else {
	                    return 1;
	                }
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 *  The number of outputs coming out of the AudioNode.
		 *  @type {Number}
		 *  @name numberOfOutputs
		 *  @memberof Tone.AudioNode#
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.AudioNode.prototype, 'numberOfOutputs', {
	        get: function () {
	            if (this.output) {
	                if (Tone.isArray(this.output)) {
	                    return this.output.length;
	                } else {
	                    return 1;
	                }
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 * Called when an audio param connects to this node
		 * @private
		 */
	    Tone.AudioNode.prototype._onConnect = function () {
	    };
	    /**
		 *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode
		 *  @param  {Tone | AudioParam | AudioNode} unit
		 *  @param {number} [outputNum=0] optionally which output to connect from
		 *  @param {number} [inputNum=0] optionally which input to connect to
		 *  @returns {Tone.AudioNode} this
		 */
	    Tone.AudioNode.prototype.connect = function (unit, outputNum, inputNum) {
	        if (unit._onConnect) {
	            unit._onConnect(this);
	        }
	        if (Tone.isArray(this.output)) {
	            outputNum = Tone.defaultArg(outputNum, 0);
	            this.output[outputNum].connect(unit, 0, inputNum);
	        } else {
	            this.output.connect(unit, outputNum, inputNum);
	        }
	        return this;
	    };
	    /**
		 *  disconnect the output
		 *  @param {Number|AudioNode} output Either the output index to disconnect
		 *                                   if the output is an array, or the
		 *                                   node to disconnect from.
		 *  @returns {Tone.AudioNode} this
		 */
	    Tone.AudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {
	        if (Tone.isArray(this.output)) {
	            if (Tone.isNumber(destination)) {
	                this.output[destination].disconnect();
	            } else {
	                outputNum = Tone.defaultArg(outputNum, 0);
	                this.output[outputNum].disconnect(destination, 0, inputNum);
	            }
	        } else {
	            this.output.disconnect.apply(this.output, arguments);
	        }
	    };
	    /**
		 *  Connect the output of this node to the rest of the nodes in series.
		 *  @example
		 *  //connect a node to an effect, panVol and then to the master output
		 *  node.chain(effect, panVol, Tone.Master);
		 *  @param {...AudioParam|Tone|AudioNode} nodes
		 *  @returns {Tone.AudioNode} this
		 *  @private
		 */
	    Tone.AudioNode.prototype.chain = function () {
	        var currentUnit = this;
	        for (var i = 0; i < arguments.length; i++) {
	            var toUnit = arguments[i];
	            currentUnit.connect(toUnit);
	            currentUnit = toUnit;
	        }
	        return this;
	    };
	    /**
		 *  connect the output of this node to the rest of the nodes in parallel.
		 *  @param {...AudioParam|Tone|AudioNode} nodes
		 *  @returns {Tone.AudioNode} this
		 *  @private
		 */
	    Tone.AudioNode.prototype.fan = function () {
	        for (var i = 0; i < arguments.length; i++) {
	            this.connect(arguments[i]);
	        }
	        return this;
	    };
	    if (window.AudioNode) {
	        //give native nodes chain and fan methods
	        AudioNode.prototype.chain = Tone.AudioNode.prototype.chain;
	        AudioNode.prototype.fan = Tone.AudioNode.prototype.fan;
	    }
	    /**
		 * Dispose and disconnect
		 * @return {Tone.AudioNode} this
		 */
	    Tone.AudioNode.prototype.dispose = function () {
	        if (Tone.isDefined(this.input)) {
	            if (this.input instanceof AudioNode) {
	                this.input.disconnect();
	            }
	            this.input = null;
	        }
	        if (Tone.isDefined(this.output)) {
	            if (this.output instanceof AudioNode) {
	                this.output.disconnect();
	            }
	            this.output = null;
	        }
	        this._context = null;
	        return this;
	    };
	    return Tone.AudioNode;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Base class for all Signals. Used Internally.
		 *
		 *  @constructor
		 *  @extends {Tone}
		 */
	    Tone.SignalBase = function () {
	        Tone.AudioNode.call(this);
	    };
	    Tone.extend(Tone.SignalBase, Tone.AudioNode);
	    /**
		 *  When signals connect to other signals or AudioParams,
		 *  they take over the output value of that signal or AudioParam.
		 *  For all other nodes, the behavior is the same as a default <code>connect</code>.
		 *
		 *  @override
		 *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node
		 *  @param {number} [outputNumber=0] The output number to connect from.
		 *  @param {number} [inputNumber=0] The input number to connect to.
		 *  @returns {Tone.SignalBase} this
		 */
	    Tone.SignalBase.prototype.connect = function (node, outputNumber, inputNumber) {
	        //zero it out so that the signal can have full control
	        if (Tone.Signal && Tone.Signal === node.constructor || Tone.Param && Tone.Param === node.constructor) {
	            //cancel changes
	            node._param.cancelScheduledValues(0);
	            //reset the value
	            node._param.value = 0;
	            //mark the value as overridden
	            node.overridden = true;
	        } else if (node instanceof AudioParam) {
	            node.cancelScheduledValues(0);
	            node.value = 0;
	        }
	        Tone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);
	        return this;
	    };
	    return Tone.SignalBase;
	});
	Module(function (Tone) {
	    if (Tone.supported) {
	        //fixes safari only bug which is still present in 11
	        var ua = navigator.userAgent.toLowerCase();
	        var isSafari = ua.includes('safari') && !ua.includes('chrome');
	        if (isSafari) {
	            var WaveShaperNode = function (context) {
	                this._internalNode = this.input = this.output = context._native_createWaveShaper();
	                this._curve = null;
	                for (var prop in this._internalNode) {
	                    this._defineProperty(this._internalNode, prop);
	                }
	            };
	            Object.defineProperty(WaveShaperNode.prototype, 'curve', {
	                get: function () {
	                    return this._curve;
	                },
	                set: function (curve) {
	                    this._curve = curve;
	                    var array = new Float32Array(curve.length + 1);
	                    array.set(curve, 1);
	                    array[0] = curve[0];
	                    this._internalNode.curve = array;
	                }
	            });
	            WaveShaperNode.prototype._defineProperty = function (context, prop) {
	                if (Tone.isUndef(this[prop])) {
	                    Object.defineProperty(this, prop, {
	                        get: function () {
	                            if (typeof context[prop] === 'function') {
	                                return context[prop].bind(context);
	                            } else {
	                                return context[prop];
	                            }
	                        },
	                        set: function (val) {
	                            context[prop] = val;
	                        }
	                    });
	                }
	            };
	            AudioContext.prototype._native_createWaveShaper = AudioContext.prototype.createWaveShaper;
	            AudioContext.prototype.createWaveShaper = function () {
	                return new WaveShaperNode(this);
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Wraps the native Web Audio API
		 *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @param {function|Array|Number} mapping The function used to define the values.
		 *                                    The mapping function should take two arguments:
		 *                                    the first is the value at the current position
		 *                                    and the second is the array position.
		 *                                    If the argument is an array, that array will be
		 *                                    set as the wave shaping function. The input
		 *                                    signal is an AudioRange [-1, 1] value and the output
		 *                                    signal can take on any numerical values.
		 *
		 *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.
		 *  @example
		 * var timesTwo = new Tone.WaveShaper(function(val){
		 * 	return val * 2;
		 * }, 2048);
		 *  @example
		 * //a waveshaper can also be constructed with an array of values
		 * var invert = new Tone.WaveShaper([1, -1]);
		 */
	    Tone.WaveShaper = function (mapping, bufferLen) {
	        Tone.SignalBase.call(this);
	        /**
			 *  the waveshaper
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._shaper = this.input = this.output = this.context.createWaveShaper();
	        /**
			 *  the waveshapers curve
			 *  @type {Float32Array}
			 *  @private
			 */
	        this._curve = null;
	        if (Array.isArray(mapping)) {
	            this.curve = mapping;
	        } else if (isFinite(mapping) || Tone.isUndef(mapping)) {
	            this._curve = new Float32Array(Tone.defaultArg(mapping, 1024));
	        } else if (Tone.isFunction(mapping)) {
	            this._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));
	            this.setMap(mapping);
	        }
	    };
	    Tone.extend(Tone.WaveShaper, Tone.SignalBase);
	    /**
		 *  Uses a mapping function to set the value of the curve.
		 *  @param {function} mapping The function used to define the values.
		 *                            The mapping function take two arguments:
		 *                            the first is the value at the current position
		 *                            which goes from -1 to 1 over the number of elements
		 *                            in the curve array. The second argument is the array position.
		 *  @returns {Tone.WaveShaper} this
		 *  @example
		 * //map the input signal from [-1, 1] to [0, 10]
		 * shaper.setMap(function(val, index){
		 * 	return (val + 1) * 5;
		 * })
		 */
	    Tone.WaveShaper.prototype.setMap = function (mapping) {
	        var array = new Array(this._curve.length);
	        for (var i = 0, len = this._curve.length; i < len; i++) {
	            var normalized = i / (len - 1) * 2 - 1;
	            array[i] = mapping(normalized, i);
	        }
	        this.curve = array;
	        return this;
	    };
	    /**
		 * The array to set as the waveshaper curve. For linear curves
		 * array length does not make much difference, but for complex curves
		 * longer arrays will provide smoother interpolation.
		 * @memberOf Tone.WaveShaper#
		 * @type {Array}
		 * @name curve
		 */
	    Object.defineProperty(Tone.WaveShaper.prototype, 'curve', {
	        get: function () {
	            return this._shaper.curve;
	        },
	        set: function (mapping) {
	            this._curve = new Float32Array(mapping);
	            this._shaper.curve = this._curve;
	        }
	    });
	    /**
		 * Specifies what type of oversampling (if any) should be used when
		 * applying the shaping curve. Can either be "none", "2x" or "4x".
		 * @memberOf Tone.WaveShaper#
		 * @type {string}
		 * @name oversample
		 */
	    Object.defineProperty(Tone.WaveShaper.prototype, 'oversample', {
	        get: function () {
	            return this._shaper.oversample;
	        },
	        set: function (oversampling) {
	            if ([
	                    'none',
	                    '2x',
	                    '4x'
	                ].includes(oversampling)) {
	                this._shaper.oversample = oversampling;
	            } else {
	                throw new RangeError('Tone.WaveShaper: oversampling must be either \'none\', \'2x\', or \'4x\'');
	            }
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.WaveShaper} this
		 */
	    Tone.WaveShaper.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._shaper.disconnect();
	        this._shaper = null;
	        this._curve = null;
	        return this;
	    };
	    return Tone.WaveShaper;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.TimeBase is a flexible encoding of time
		 *         which can be evaluated to and from a string.
		 *  @extends {Tone}
		 *  @param  {Time}  val    The time value as a number or string
		 *  @param  {String=}  units  Unit values
		 *  @example
		 * Tone.TimeBase(4, "n")
		 * Tone.TimeBase(2, "t")
		 * Tone.TimeBase("2t")
		 * Tone.TimeBase("2t") + Tone.TimeBase("4n");
		 */
	    Tone.TimeBase = function (val, units) {
	        //allows it to be constructed with or without 'new'
	        if (this instanceof Tone.TimeBase) {
	            /**
				 *  The value
				 *  @type  {Number|String|Tone.TimeBase}
				 *  @private
				 */
	            this._val = val;
	            /**
				 * The units
				 * @type {String?}
				 * @private
				 */
	            this._units = units;
	            //test if the value is a string representation of a number
	            if (Tone.isUndef(this._units) && Tone.isString(this._val) && // eslint-disable-next-line eqeqeq
	                parseFloat(this._val) == this._val && this._val.charAt(0) !== '+') {
	                this._val = parseFloat(this._val);
	                this._units = this._defaultUnits;
	            } else if (val && val.constructor === this.constructor) {
	                //if they're the same type, just copy values over
	                this._val = val._val;
	                this._units = val._units;
	            } else if (val instanceof Tone.TimeBase) {
	                switch (this._defaultUnits) {
	                case 's':
	                    this._val = val.toSeconds();
	                    break;
	                case 'i':
	                    this._val = val.toTicks();
	                    break;
	                case 'hz':
	                    this._val = val.toFrequency();
	                    break;
	                case 'midi':
	                    this._val = val.toMidi();
	                    break;
	                default:
	                    throw new Error('Unrecognized default units ' + this._defaultUnits);
	                }
	            }
	        } else {
	            return new Tone.TimeBase(val, units);
	        }
	    };
	    Tone.extend(Tone.TimeBase);
	    ///////////////////////////////////////////////////////////////////////////
	    //	ABSTRACT SYNTAX TREE PARSER
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  All the primary expressions.
		 *  @private
		 *  @type  {Object}
		 */
	    Tone.TimeBase.prototype._expressions = {
	        'n': {
	            regexp: /^(\d+)n(\.?)$/i,
	            method: function (value, dot) {
	                value = parseInt(value);
	                var scalar = dot === '.' ? 1.5 : 1;
	                if (value === 1) {
	                    return this._beatsToUnits(this._getTimeSignature()) * scalar;
	                } else {
	                    return this._beatsToUnits(4 / value) * scalar;
	                }
	            }
	        },
	        't': {
	            regexp: /^(\d+)t$/i,
	            method: function (value) {
	                value = parseInt(value);
	                return this._beatsToUnits(8 / (parseInt(value) * 3));
	            }
	        },
	        'm': {
	            regexp: /^(\d+)m$/i,
	            method: function (value) {
	                return this._beatsToUnits(parseInt(value) * this._getTimeSignature());
	            }
	        },
	        'i': {
	            regexp: /^(\d+)i$/i,
	            method: function (value) {
	                return this._ticksToUnits(parseInt(value));
	            }
	        },
	        'hz': {
	            regexp: /^(\d+(?:\.\d+)?)hz$/i,
	            method: function (value) {
	                return this._frequencyToUnits(parseFloat(value));
	            }
	        },
	        'tr': {
	            regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/,
	            method: function (m, q, s) {
	                var total = 0;
	                if (m && m !== '0') {
	                    total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
	                }
	                if (q && q !== '0') {
	                    total += this._beatsToUnits(parseFloat(q));
	                }
	                if (s && s !== '0') {
	                    total += this._beatsToUnits(parseFloat(s) / 4);
	                }
	                return total;
	            }
	        },
	        's': {
	            regexp: /^(\d+(?:\.\d+)?)s$/,
	            method: function (value) {
	                return this._secondsToUnits(parseFloat(value));
	            }
	        },
	        'samples': {
	            regexp: /^(\d+)samples$/,
	            method: function (value) {
	                return parseInt(value) / this.context.sampleRate;
	            }
	        },
	        'default': {
	            regexp: /^(\d+(?:\.\d+)?)$/,
	            method: function (value) {
	                return this._expressions[this._defaultUnits].method.call(this, value);
	            }
	        }
	    };
	    /**
		 *  The default units if none are given.
		 *  @type {String}
		 *  @private
		 */
	    Tone.TimeBase.prototype._defaultUnits = 's';
	    ///////////////////////////////////////////////////////////////////////////
	    //	TRANSPORT FALLBACKS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 * Return the bpm, or 120 if Transport is not available
		 * @type {Number}
		 * @private
		 */
	    Tone.TimeBase.prototype._getBpm = function () {
	        if (Tone.Transport) {
	            return Tone.Transport.bpm.value;
	        } else {
	            return 120;
	        }
	    };
	    /**
		 * Return the timeSignature or 4 if Transport is not available
		 * @type {Number}
		 * @private
		 */
	    Tone.TimeBase.prototype._getTimeSignature = function () {
	        if (Tone.Transport) {
	            return Tone.Transport.timeSignature;
	        } else {
	            return 4;
	        }
	    };
	    /**
		 * Return the PPQ or 192 if Transport is not available
		 * @type {Number}
		 * @private
		 */
	    Tone.TimeBase.prototype._getPPQ = function () {
	        if (Tone.Transport) {
	            return Tone.Transport.PPQ;
	        } else {
	            return 192;
	        }
	    };
	    /**
		 * Return the current time in whichever context is relevant
		 * @type {Number}
		 * @private
		 */
	    Tone.TimeBase.prototype._now = function () {
	        return this.now();
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	UNIT CONVERSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Returns the value of a frequency in the current units
		 *  @param {Frequency} freq
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.TimeBase.prototype._frequencyToUnits = function (freq) {
	        return 1 / freq;
	    };
	    /**
		 *  Return the value of the beats in the current units
		 *  @param {Number} beats
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.TimeBase.prototype._beatsToUnits = function (beats) {
	        return 60 / this._getBpm() * beats;
	    };
	    /**
		 *  Returns the value of a second in the current units
		 *  @param {Seconds} seconds
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.TimeBase.prototype._secondsToUnits = function (seconds) {
	        return seconds;
	    };
	    /**
		 *  Returns the value of a tick in the current time units
		 *  @param {Ticks} ticks
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.TimeBase.prototype._ticksToUnits = function (ticks) {
	        return ticks * (this._beatsToUnits(1) / this._getPPQ());
	    };
	    /**
		 * With no arguments, return 'now'
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.TimeBase.prototype._noArg = function () {
	        return this._now();
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	EXPRESSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Evaluate the time value. Returns the time
		 *  in seconds.
		 *  @return  {Seconds}
		 */
	    Tone.TimeBase.prototype.valueOf = function () {
	        if (Tone.isUndef(this._val)) {
	            return this._noArg();
	        } else if (Tone.isString(this._val) && Tone.isUndef(this._units)) {
	            for (var units in this._expressions) {
	                if (this._expressions[units].regexp.test(this._val.trim())) {
	                    this._units = units;
	                    break;
	                }
	            }
	        }
	        if (Tone.isDefined(this._units)) {
	            var expr = this._expressions[this._units];
	            var matching = this._val.toString().trim().match(expr.regexp);
	            if (matching) {
	                return expr.method.apply(this, matching.slice(1));
	            } else {
	                return expr.method.call(this, parseFloat(this._val));
	            }
	        } else {
	            return this._val;
	        }
	    };
	    /**
		 *  Return the value in seconds
		 *  @return {Seconds}
		 */
	    Tone.TimeBase.prototype.toSeconds = function () {
	        return this.valueOf();
	    };
	    /**
		 *  Return the value in hertz
		 *  @return {Frequency}
		 */
	    Tone.TimeBase.prototype.toFrequency = function () {
	        return 1 / this.toSeconds();
	    };
	    /**
		 *  Return the time in samples
		 *  @return  {Samples}
		 */
	    Tone.TimeBase.prototype.toSamples = function () {
	        return this.toSeconds() * this.context.sampleRate;
	    };
	    /**
		 *  Return the time in milliseconds.
		 *  @return  {Milliseconds}
		 */
	    Tone.TimeBase.prototype.toMilliseconds = function () {
	        return this.toSeconds() * 1000;
	    };
	    /**
		 *  Clean up
		 *  @return {Tone.TimeBase} this
		 */
	    Tone.TimeBase.prototype.dispose = function () {
	        this._val = null;
	        this._units = null;
	    };
	    return Tone.TimeBase;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Frequency is a primitive type for encoding Frequency values.
		 *         Eventually all time values are evaluated to hertz
		 *         using the `eval` method.
		 *  @constructor
		 *  @extends {Tone.TimeBase}
		 *  @param  {String|Number}  val    The time value.
		 *  @param  {String=}  units  The units of the value.
		 *  @example
		 * Tone.Frequency("C3") // 261
		 * Tone.Frequency(38, "midi") //
		 * Tone.Frequency("C3").transpose(4);
		 */
	    Tone.Frequency = function (val, units) {
	        if (this instanceof Tone.Frequency) {
	            Tone.TimeBase.call(this, val, units);
	        } else {
	            return new Tone.Frequency(val, units);
	        }
	    };
	    Tone.extend(Tone.Frequency, Tone.TimeBase);
	    ///////////////////////////////////////////////////////////////////////////
	    //	AUGMENT BASE EXPRESSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    Tone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {
	        'midi': {
	            regexp: /^(\d+(?:\.\d+)?midi)/,
	            method: function (value) {
	                if (this._defaultUnits === 'midi') {
	                    return value;
	                } else {
	                    return Tone.Frequency.mtof(value);
	                }
	            }
	        },
	        'note': {
	            regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
	            method: function (pitch, octave) {
	                var index = noteToScaleIndex[pitch.toLowerCase()];
	                var noteNumber = index + (parseInt(octave) + 1) * 12;
	                if (this._defaultUnits === 'midi') {
	                    return noteNumber;
	                } else {
	                    return Tone.Frequency.mtof(noteNumber);
	                }
	            }
	        },
	        'tr': {
	            regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
	            method: function (m, q, s) {
	                var total = 1;
	                if (m && m !== '0') {
	                    total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
	                }
	                if (q && q !== '0') {
	                    total *= this._beatsToUnits(parseFloat(q));
	                }
	                if (s && s !== '0') {
	                    total *= this._beatsToUnits(parseFloat(s) / 4);
	                }
	                return total;
	            }
	        }
	    });
	    ///////////////////////////////////////////////////////////////////////////
	    //	EXPRESSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Transposes the frequency by the given number of semitones.
		 *  @param  {Interval}  interval
		 *  @return  {Tone.Frequency} A new transposed frequency
		 *  @example
		 * Tone.Frequency("A4").transpose(3); //"C5"
		 */
	    Tone.Frequency.prototype.transpose = function (interval) {
	        return new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));
	    };
	    /**
		 *  Takes an array of semitone intervals and returns
		 *  an array of frequencies transposed by those intervals.
		 *  @param  {Array}  intervals
		 *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies
		 *  @example
		 * Tone.Frequency("A4").harmonize([0, 3, 7]); //["A4", "C5", "E5"]
		 */
	    Tone.Frequency.prototype.harmonize = function (intervals) {
	        return intervals.map(function (interval) {
	            return this.transpose(interval);
	        }.bind(this));
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	UNIT CONVERSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Return the value of the frequency as a MIDI note
		 *  @return  {MIDI}
		 *  @example
		 * Tone.Frequency("C4").toMidi(); //60
		 */
	    Tone.Frequency.prototype.toMidi = function () {
	        return Tone.Frequency.ftom(this.valueOf());
	    };
	    /**
		 *  Return the value of the frequency in Scientific Pitch Notation
		 *  @return  {Note}
		 *  @example
		 * Tone.Frequency(69, "midi").toNote(); //"A4"
		 */
	    Tone.Frequency.prototype.toNote = function () {
	        var freq = this.toFrequency();
	        var log = Math.log2(freq / Tone.Frequency.A4);
	        var noteNumber = Math.round(12 * log) + 57;
	        var octave = Math.floor(noteNumber / 12);
	        if (octave < 0) {
	            noteNumber += -12 * octave;
	        }
	        var noteName = scaleIndexToNote[noteNumber % 12];
	        return noteName + octave.toString();
	    };
	    /**
		 *  Return the duration of one cycle in seconds.
		 *  @return  {Seconds}
		 */
	    Tone.Frequency.prototype.toSeconds = function () {
	        return 1 / Tone.TimeBase.prototype.toSeconds.call(this);
	    };
	    /**
		 *  Return the value in Hertz
		 *  @return  {Frequency}
		 */
	    Tone.Frequency.prototype.toFrequency = function () {
	        return Tone.TimeBase.prototype.toFrequency.call(this);
	    };
	    /**
		 *  Return the duration of one cycle in ticks
		 *  @return  {Ticks}
		 */
	    Tone.Frequency.prototype.toTicks = function () {
	        var quarterTime = this._beatsToUnits(1);
	        var quarters = this.valueOf() / quarterTime;
	        return Math.floor(quarters * Tone.Transport.PPQ);
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	UNIT CONVERSIONS HELPERS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  With no arguments, return 0
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Frequency.prototype._noArg = function () {
	        return 0;
	    };
	    /**
		 *  Returns the value of a frequency in the current units
		 *  @param {Frequency} freq
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Frequency.prototype._frequencyToUnits = function (freq) {
	        return freq;
	    };
	    /**
		 *  Returns the value of a tick in the current time units
		 *  @param {Ticks} ticks
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Frequency.prototype._ticksToUnits = function (ticks) {
	        return 1 / (ticks * 60 / (Tone.Transport.bpm.value * Tone.Transport.PPQ));
	    };
	    /**
		 *  Return the value of the beats in the current units
		 *  @param {Number} beats
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Frequency.prototype._beatsToUnits = function (beats) {
	        return 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);
	    };
	    /**
		 *  Returns the value of a second in the current units
		 *  @param {Seconds} seconds
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Frequency.prototype._secondsToUnits = function (seconds) {
	        return 1 / seconds;
	    };
	    /**
		 *  The default units if none are given.
		 *  @private
		 */
	    Tone.Frequency.prototype._defaultUnits = 'hz';
	    ///////////////////////////////////////////////////////////////////////////
	    //	FREQUENCY CONVERSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Note to scale index
		 *  @type  {Object}
		 */
	    var noteToScaleIndex = {
	        'cbb': -2,
	        'cb': -1,
	        'c': 0,
	        'c#': 1,
	        'cx': 2,
	        'dbb': 0,
	        'db': 1,
	        'd': 2,
	        'd#': 3,
	        'dx': 4,
	        'ebb': 2,
	        'eb': 3,
	        'e': 4,
	        'e#': 5,
	        'ex': 6,
	        'fbb': 3,
	        'fb': 4,
	        'f': 5,
	        'f#': 6,
	        'fx': 7,
	        'gbb': 5,
	        'gb': 6,
	        'g': 7,
	        'g#': 8,
	        'gx': 9,
	        'abb': 7,
	        'ab': 8,
	        'a': 9,
	        'a#': 10,
	        'ax': 11,
	        'bbb': 9,
	        'bb': 10,
	        'b': 11,
	        'b#': 12,
	        'bx': 13
	    };
	    /**
		 *  scale index to note (sharps)
		 *  @type  {Array}
		 */
	    var scaleIndexToNote = [
	        'C',
	        'C#',
	        'D',
	        'D#',
	        'E',
	        'F',
	        'F#',
	        'G',
	        'G#',
	        'A',
	        'A#',
	        'B'
	    ];
	    /**
		 *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)
		 *  A4's values in Hertz.
		 *  @type {Frequency}
		 *  @static
		 */
	    Tone.Frequency.A4 = 440;
	    /**
		 *  Convert a MIDI note to frequency value.
		 *  @param  {MIDI} midi The midi number to convert.
		 *  @return {Frequency} the corresponding frequency value
		 *  @static
		 *  @example
		 * Tone.Frequency.mtof(69); // returns 440
		 */
	    Tone.Frequency.mtof = function (midi) {
	        return Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);
	    };
	    /**
		 *  Convert a frequency value to a MIDI note.
		 *  @param {Frequency} frequency The value to frequency value to convert.
		 *  @returns  {MIDI}
		 *  @static
		 *  @example
		 * Tone.Frequency.ftom(440); // returns 69
		 */
	    Tone.Frequency.ftom = function (frequency) {
	        return 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));
	    };
	    return Tone.Frequency;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Time is a primitive type for encoding Time values.
		 *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed
		 *         into the parameter of any method which takes time as an argument.
		 *  @constructor
		 *  @extends {Tone.TimeBase}
		 *  @param  {String|Number}  val    The time value.
		 *  @param  {String=}  units  The units of the value.
		 *  @example
		 * var t = Tone.Time("4n");//a quarter note
		 */
	    Tone.Time = function (val, units) {
	        if (this instanceof Tone.Time) {
	            Tone.TimeBase.call(this, val, units);
	        } else {
	            return new Tone.Time(val, units);
	        }
	    };
	    Tone.extend(Tone.Time, Tone.TimeBase);
	    /**
		 * Extend the base expressions
		 */
	    Tone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {
	        'quantize': {
	            regexp: /^@(.+)/,
	            method: function (capture) {
	                if (Tone.Transport) {
	                    var quantTo = new this.constructor(capture);
	                    return Tone.Transport.nextSubdivision(quantTo);
	                } else {
	                    return 0;
	                }
	            }
	        },
	        'now': {
	            regexp: /^\+(.+)/,
	            method: function (capture) {
	                return this._now() + new this.constructor(capture);
	            }
	        }
	    });
	    /**
		 *  Quantize the time by the given subdivision. Optionally add a
		 *  percentage which will move the time value towards the ideal
		 *  quantized value by that percentage.
		 *  @param  {Number|Time}  val    The subdivision to quantize to
		 *  @param  {NormalRange}  [percent=1]  Move the time value
		 *                                   towards the quantized value by
		 *                                   a percentage.
		 *  @return  {Number}  this
		 *  @example
		 * Tone.Time(21).quantize(2) //returns 22
		 * Tone.Time(0.6).quantize("4n", 0.5) //returns 0.55
		 */
	    Tone.Time.prototype.quantize = function (subdiv, percent) {
	        percent = Tone.defaultArg(percent, 1);
	        var subdivision = new this.constructor(subdiv);
	        var value = this.valueOf();
	        var multiple = Math.round(value / subdivision);
	        var ideal = multiple * subdivision;
	        var diff = ideal - value;
	        return value + diff * percent;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    // CONVERSIONS
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Convert a Time to Notation. The notation values are will be the
		 *  closest representation between 1m to 128th note.
		 *  @return {Notation}
		 *  @example
		 * //if the Transport is at 120bpm:
		 * Tone.Time(2).toNotation();//returns "1m"
		 */
	    Tone.Time.prototype.toNotation = function () {
	        var time = this.toSeconds();
	        var testNotations = ['1m'];
	        for (var power = 1; power < 8; power++) {
	            var subdiv = Math.pow(2, power);
	            testNotations.push(subdiv + 'n.');
	            testNotations.push(subdiv + 'n');
	            testNotations.push(subdiv + 't');
	        }
	        testNotations.push('0');
	        //find the closets notation representation
	        var closest = testNotations[0];
	        var closestSeconds = Tone.Time(testNotations[0]).toSeconds();
	        testNotations.forEach(function (notation) {
	            var notationSeconds = Tone.Time(notation).toSeconds();
	            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
	                closest = notation;
	                closestSeconds = notationSeconds;
	            }
	        });
	        return closest;
	    };
	    /**
		 *  Return the time encoded as Bars:Beats:Sixteenths.
		 *  @return  {BarsBeatsSixteenths}
		 */
	    Tone.Time.prototype.toBarsBeatsSixteenths = function () {
	        var quarterTime = this._beatsToUnits(1);
	        var quarters = this.valueOf() / quarterTime;
	        var measures = Math.floor(quarters / this._getTimeSignature());
	        var sixteenths = quarters % 1 * 4;
	        quarters = Math.floor(quarters) % this._getTimeSignature();
	        sixteenths = sixteenths.toString();
	        if (sixteenths.length > 3) {
	            // the additional parseFloat removes insignificant trailing zeroes
	            sixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));
	        }
	        var progress = [
	            measures,
	            quarters,
	            sixteenths
	        ];
	        return progress.join(':');
	    };
	    /**
		 *  Return the time in ticks.
		 *  @return  {Ticks}
		 */
	    Tone.Time.prototype.toTicks = function () {
	        var quarterTime = this._beatsToUnits(1);
	        var quarters = this.valueOf() / quarterTime;
	        return Math.round(quarters * this._getPPQ());
	    };
	    /**
		 *  Return the time in seconds.
		 *  @return  {Seconds}
		 */
	    Tone.Time.prototype.toSeconds = function () {
	        return this.valueOf();
	    };
	    /**
		 *  Return the value as a midi note.
		 *  @return  {Midi}
		 */
	    Tone.Time.prototype.toMidi = function () {
	        return Tone.Frequency.ftom(this.toFrequency());
	    };
	    return Tone.Time;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.TransportTime is a the time along the Transport's
		 *         timeline. It is similar to Tone.Time, but instead of evaluating
		 *         against the AudioContext's clock, it is evaluated against
		 *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
		 *  @constructor
		 *  @param  {Time}  val    The time value as a number or string
		 *  @param  {String=}  units  Unit values
		 *  @extends {Tone.Time}
		 */
	    Tone.TransportTime = function (val, units) {
	        if (this instanceof Tone.TransportTime) {
	            Tone.Time.call(this, val, units);
	        } else {
	            return new Tone.TransportTime(val, units);
	        }
	    };
	    Tone.extend(Tone.TransportTime, Tone.Time);
	    /**
		 * Return the current time in whichever context is relevant
		 * @type {Number}
		 * @private
		 */
	    Tone.TransportTime.prototype._now = function () {
	        return Tone.Transport.seconds;
	    };
	    return Tone.TransportTime;
	});
	Module(function (Tone) {
	    ///////////////////////////////////////////////////////////////////////////
	    //	TYPES
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 * Units which a value can take on.
		 * @enum {String}
		 */
	    Tone.Type = {
	        /**
			 *  Default units
			 *  @typedef {Default}
			 */
	        Default: 'number',
	        /**
			 *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).
			 *
			 *  * Numbers, which will be taken literally as the time (in seconds).
			 *  * Notation, ("4n", "8t") describes time in BPM and time signature relative values.
			 *  * TransportTime, ("4:3:2") will also provide tempo and time signature relative times
			 *  in the form BARS:QUARTERS:SIXTEENTHS.
			 *  * Frequency, ("8hz") is converted to the length of the cycle in seconds.
			 *  * Now-Relative, ("+1") prefix any of the above with "+" and it will be interpreted as
			 *  "the current time plus whatever expression follows".
			 *  * Expressions, ("3:0 + 2 - (1m / 7)") any of the above can also be combined
			 *  into a mathematical expression which will be evaluated to compute the desired time.
			 *  * No Argument, for methods which accept time, no argument will be interpreted as
			 *  "now" (i.e. the currentTime).
			 *
			 *  @typedef {Time}
			 */
	        Time: 'time',
	        /**
			 *  Frequency can be described similar to time, except ultimately the
			 *  values are converted to frequency instead of seconds. A number
			 *  is taken literally as the value in hertz. Additionally any of the
			 *  Time encodings can be used. Note names in the form
			 *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their
			 *  frequency value.
			 *  @typedef {Frequency}
			 */
	        Frequency: 'frequency',
	        /**
			 *  TransportTime describes a position along the Transport's timeline. It is
			 *  similar to Time in that it uses all the same encodings, but TransportTime specifically
			 *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.
			 *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)
			 *  @typedef {TransportTime}
			 */
	        TransportTime: 'transportTime',
	        /**
			 *  Ticks are the basic subunit of the Transport. They are
			 *  the smallest unit of time that the Transport supports.
			 *  @typedef {Ticks}
			 */
	        Ticks: 'ticks',
	        /**
			 *  Normal values are within the range [0, 1].
			 *  @typedef {NormalRange}
			 */
	        NormalRange: 'normalRange',
	        /**
			 *  AudioRange values are between [-1, 1].
			 *  @typedef {AudioRange}
			 */
	        AudioRange: 'audioRange',
	        /**
			 *  Decibels are a logarithmic unit of measurement which is useful for volume
			 *  because of the logarithmic way that we perceive loudness. 0 decibels
			 *  means no change in volume. -10db is approximately half as loud and 10db
			 *  is twice is loud.
			 *  @typedef {Decibels}
			 */
	        Decibels: 'db',
	        /**
			 *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.
			 *  @typedef {Interval}
			 */
	        Interval: 'interval',
	        /**
			 *  Beats per minute.
			 *  @typedef {BPM}
			 */
	        BPM: 'bpm',
	        /**
			 *  The value must be greater than or equal to 0.
			 *  @typedef {Positive}
			 */
	        Positive: 'positive',
	        /**
			 *  Gain is the ratio between input and output of a signal.
			 *  A gain of 0 is the same as silencing the signal. A gain of
			 *  1, causes no change to the incoming signal.
			 *  @typedef {Gain}
			 */
	        Gain: 'gain',
	        /**
			 *  A cent is a hundredth of a semitone.
			 *  @typedef {Cents}
			 */
	        Cents: 'cents',
	        /**
			 *  Angle between 0 and 360.
			 *  @typedef {Degrees}
			 */
	        Degrees: 'degrees',
	        /**
			 *  A number representing a midi note.
			 *  @typedef {MIDI}
			 */
	        MIDI: 'midi',
	        /**
			 *  A colon-separated representation of time in the form of
			 *  Bars:Beats:Sixteenths.
			 *  @typedef {BarsBeatsSixteenths}
			 */
	        BarsBeatsSixteenths: 'barsBeatsSixteenths',
	        /**
			 *  Sampling is the reduction of a continuous signal to a discrete signal.
			 *  Audio is typically sampled 44100 times per second.
			 *  @typedef {Samples}
			 */
	        Samples: 'samples',
	        /**
			 *  Hertz are a frequency representation defined as one cycle per second.
			 *  @typedef {Hertz}
			 */
	        Hertz: 'hertz',
	        /**
			 *  A frequency represented by a letter name,
			 *  accidental and octave. This system is known as
			 *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).
			 *  @typedef {Note}
			 */
	        Note: 'note',
	        /**
			 *  One millisecond is a thousandth of a second.
			 *  @typedef {Milliseconds}
			 */
	        Milliseconds: 'milliseconds',
	        /**
			 *  Seconds are the time unit of the AudioContext. In the end,
			 *  all values need to be evaluated to seconds.
			 *  @typedef {Seconds}
			 */
	        Seconds: 'seconds',
	        /**
			 *  A string representing a duration relative to a measure.
			 *  * "4n" = quarter note
			 *  * "2m" = two measures
			 *  * "8t" = eighth-note triplet
			 *  @typedef {Notation}
			 */
	        Notation: 'notation'
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    // AUGMENT TONE's PROTOTYPE
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Convert Time into seconds.
		 *
		 *  Unlike the method which it overrides, this takes into account
		 *  transporttime and musical notation.
		 *
		 *  Time : 1.40
		 *  Notation: 4n or 1m or 2t
		 *  Now Relative: +3n
		 *  Math: 3n+16n or even complicated expressions ((3n*2)/6 + 1)
		 *
		 *  @param  {Time} time
		 *  @return {Seconds}
		 */
	    Tone.prototype.toSeconds = function (time) {
	        if (Tone.isNumber(time)) {
	            return time;
	        } else if (Tone.isUndef(time)) {
	            return this.now();
	        } else if (Tone.isString(time)) {
	            return new Tone.Time(time).toSeconds();
	        } else if (time instanceof Tone.TimeBase) {
	            return time.toSeconds();
	        }
	    };
	    /**
		 *  Convert a frequency representation into a number.
		 *  @param  {Frequency} freq
		 *  @return {Hertz}      the frequency in hertz
		 */
	    Tone.prototype.toFrequency = function (freq) {
	        if (Tone.isNumber(freq)) {
	            return freq;
	        } else if (Tone.isString(freq) || Tone.isUndef(freq)) {
	            return new Tone.Frequency(freq).valueOf();
	        } else if (freq instanceof Tone.TimeBase) {
	            return freq.toFrequency();
	        }
	    };
	    /**
		 *  Convert a time representation into ticks.
		 *  @param  {Time} time
		 *  @return {Ticks}  the time in ticks
		 */
	    Tone.prototype.toTicks = function (time) {
	        if (Tone.isNumber(time) || Tone.isString(time)) {
	            return new Tone.TransportTime(time).toTicks();
	        } else if (Tone.isUndef(time)) {
	            return Tone.Transport.ticks;
	        } else if (time instanceof Tone.TimeBase) {
	            return time.toTicks();
	        }
	    };
	    return Tone;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Param wraps the native Web Audio's AudioParam to provide
		 *         additional unit conversion functionality. It also
		 *         serves as a base-class for classes which have a single,
		 *         automatable parameter.
		 *  @extends {Tone.AudioNode}
		 *  @param  {AudioParam}  param  The parameter to wrap.
		 *  @param  {Tone.Type} units The units of the audio param.
		 *  @param  {Boolean} convert If the param should be converted.
		 */
	    Tone.Param = function () {
	        var options = Tone.defaults(arguments, [
	            'param',
	            'units',
	            'convert'
	        ], Tone.Param);
	        Tone.AudioNode.call(this);
	        /**
			 *  The native parameter to control
			 *  @type  {AudioParam}
			 *  @private
			 */
	        this._param = this.input = options.param;
	        /**
			 *  The units of the parameter
			 *  @type {Tone.Type}
			 */
	        this.units = options.units;
	        /**
			 *  If the value should be converted or not
			 *  @type {Boolean}
			 */
	        this.convert = options.convert;
	        /**
			 *  True if the signal value is being overridden by
			 *  a connected signal.
			 *  @readOnly
			 *  @type  {boolean}
			 *  @private
			 */
	        this.overridden = false;
	        /**
			 * The timeline which tracks all of the automations.
			 * @type {Tone.Timeline}
			 * @private
			 */
	        this._events = new Tone.Timeline(1000);
	        if (Tone.isDefined(options.value) && this._param) {
	            this.value = options.value;
	        }
	    };
	    Tone.extend(Tone.Param, Tone.AudioNode);
	    /**
		 *  Defaults
		 *  @type  {Object}
		 *  @const
		 */
	    Tone.Param.defaults = {
	        'units': Tone.Type.Default,
	        'convert': true,
	        'param': undefined
	    };
	    /**
		 * The current value of the parameter.
		 * @memberOf Tone.Param#
		 * @type {Number}
		 * @name value
		 */
	    Object.defineProperty(Tone.Param.prototype, 'value', {
	        get: function () {
	            var now = this.now();
	            return this._toUnits(this.getValueAtTime(now));
	        },
	        set: function (value) {
	            this._initialValue = this._fromUnits(value);
	            this.cancelScheduledValues(this.context.currentTime);
	            this.setValueAtTime(value, this.context.currentTime);
	        }
	    });
	    /**
		 * The minimum output value of the parameter
		 * @memberOf Tone.Param#
		 * @type {Number}
		 * @name value
		 */
	    Object.defineProperty(Tone.Param.prototype, 'minValue', {
	        get: function () {
	            if (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency || this.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive || this.units === Tone.Type.BPM) {
	                return 0;
	            } else if (this.units === Tone.Type.AudioRange) {
	                return -1;
	            } else if (this.units === Tone.Type.Decibels) {
	                return -Infinity;
	            } else {
	                return this._param.minValue;
	            }
	        }
	    });
	    /**
		 * The maximum output value of the parameter
		 * @memberOf Tone.Param#
		 * @type {Number}
		 * @name value
		 */
	    Object.defineProperty(Tone.Param.prototype, 'maxValue', {
	        get: function () {
	            if (this.units === Tone.Type.NormalRange || this.units === Tone.Type.AudioRange) {
	                return 1;
	            } else {
	                return this._param.maxValue;
	            }
	        }
	    });
	    /**
		 *  Convert the given value from the type specified by Tone.Param.units
		 *  into the destination value (such as Gain or Frequency).
		 *  @private
		 *  @param  {*} val the value to convert
		 *  @return {number}     the number which the value should be set to
		 */
	    Tone.Param.prototype._fromUnits = function (val) {
	        if ((this.convert || Tone.isUndef(this.convert)) && !this.overridden) {
	            switch (this.units) {
	            case Tone.Type.Time:
	                return this.toSeconds(val);
	            case Tone.Type.Frequency:
	                return this.toFrequency(val);
	            case Tone.Type.Decibels:
	                return Tone.dbToGain(val);
	            case Tone.Type.NormalRange:
	                return Math.min(Math.max(val, 0), 1);
	            case Tone.Type.AudioRange:
	                return Math.min(Math.max(val, -1), 1);
	            case Tone.Type.Positive:
	                return Math.max(val, 0);
	            default:
	                return val;
	            }
	        } else {
	            return val;
	        }
	    };
	    /**
		 * Convert the parameters value into the units specified by Tone.Param.units.
		 * @private
		 * @param  {number} val the value to convert
		 * @return {number}
		 */
	    Tone.Param.prototype._toUnits = function (val) {
	        if (this.convert || Tone.isUndef(this.convert)) {
	            switch (this.units) {
	            case Tone.Type.Decibels:
	                return Tone.gainToDb(val);
	            default:
	                return val;
	            }
	        } else {
	            return val;
	        }
	    };
	    /**
		 *  the minimum output value
		 *  @type {Number}
		 *  @private
		 */
	    Tone.Param.prototype._minOutput = 0.00001;
	    /**
		 *  The event types
		 *  @enum {String}
		 *  @private
		 */
	    Tone.Param.AutomationType = {
	        Linear: 'linearRampToValueAtTime',
	        Exponential: 'exponentialRampToValueAtTime',
	        Target: 'setTargetAtTime',
	        SetValue: 'setValueAtTime'
	    };
	    /**
		 *  Schedules a parameter value change at the given time.
		 *  @param {*}	value The value to set the signal.
		 *  @param {Time}  time The time when the change should occur.
		 *  @returns {Tone.Param} this
		 *  @example
		 * //set the frequency to "G4" in exactly 1 second from now.
		 * freq.setValueAtTime("G4", "+1");
		 */
	    Tone.Param.prototype.setValueAtTime = function (value, time) {
	        time = this.toSeconds(time);
	        value = this._fromUnits(value);
	        this._events.add({
	            'type': Tone.Param.AutomationType.SetValue,
	            'value': value,
	            'time': time
	        });
	        this._param.setValueAtTime(value, time);
	        return this;
	    };
	    /**
		 *  Get the signals value at the given time. Subsequent scheduling
		 *  may invalidate the returned value.
		 *  @param {Time} time When to get the value
		 *  @returns {Number} The value at the given time
		 */
	    Tone.Param.prototype.getValueAtTime = function (time) {
	        time = this.toSeconds(time);
	        var after = this._events.getAfter(time);
	        var before = this._events.get(time);
	        var initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);
	        var value = initialValue;
	        //if it was set by
	        if (before === null) {
	            value = initialValue;
	        } else if (before.type === Tone.Param.AutomationType.Target) {
	            var previous = this._events.getBefore(before.time);
	            var previousVal;
	            if (previous === null) {
	                previousVal = initialValue;
	            } else {
	                previousVal = previous.value;
	            }
	            value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);
	        } else if (after === null) {
	            value = before.value;
	        } else if (after.type === Tone.Param.AutomationType.Linear) {
	            value = this._linearInterpolate(before.time, before.value, after.time, after.value, time);
	        } else if (after.type === Tone.Param.AutomationType.Exponential) {
	            value = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);
	        } else {
	            value = before.value;
	        }
	        return value;
	    };
	    /**
		 *  Creates a schedule point with the current value at the current time.
		 *  This is useful for creating an automation anchor point in order to
		 *  schedule changes from the current value.
		 *
		 *  @param {number=} now (Optionally) pass the now value in.
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.setRampPoint = function (time) {
	        time = this.toSeconds(time);
	        var currentVal = this.getValueAtTime(time);
	        this.cancelAndHoldAtTime(time);
	        if (currentVal === 0) {
	            currentVal = this._minOutput;
	        }
	        this.setValueAtTime(this._toUnits(currentVal), time);
	        return this;
	    };
	    /**
		 *  Schedules a linear continuous change in parameter value from the
		 *  previous scheduled parameter value to the given value.
		 *
		 *  @param  {number} value
		 *  @param  {Time} endTime
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.linearRampToValueAtTime = function (value, endTime) {
	        value = this._fromUnits(value);
	        endTime = this.toSeconds(endTime);
	        this._events.add({
	            'type': Tone.Param.AutomationType.Linear,
	            'value': value,
	            'time': endTime
	        });
	        this._param.linearRampToValueAtTime(value, endTime);
	        return this;
	    };
	    /**
		 *  Schedules an exponential continuous change in parameter value from
		 *  the previous scheduled parameter value to the given value.
		 *
		 *  @param  {number} value
		 *  @param  {Time} endTime
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {
	        value = this._fromUnits(value);
	        value = Math.max(this._minOutput, value);
	        endTime = this.toSeconds(endTime);
	        //store the event
	        this._events.add({
	            'type': Tone.Param.AutomationType.Exponential,
	            'time': endTime,
	            'value': value
	        });
	        this._param.exponentialRampToValueAtTime(value, endTime);
	        return this;
	    };
	    /**
		 *  Schedules an exponential continuous change in parameter value from
		 *  the current time and current value to the given value over the
		 *  duration of the rampTime.
		 *
		 *  @param  {number} value   The value to ramp to.
		 *  @param  {Time} rampTime the time that it takes the
		 *                               value to ramp from it's current value
		 *  @param {Time}	[startTime=now] 	When the ramp should start.
		 *  @returns {Tone.Param} this
		 *  @example
		 * //exponentially ramp to the value 2 over 4 seconds.
		 * signal.exponentialRampTo(2, 4);
		 */
	    Tone.Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {
	        startTime = this.toSeconds(startTime);
	        this.setRampPoint(startTime);
	        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
	        return this;
	    };
	    /**
		 *  Schedules an linear continuous change in parameter value from
		 *  the current time and current value to the given value over the
		 *  duration of the rampTime.
		 *
		 *  @param  {number} value   The value to ramp to.
		 *  @param  {Time} rampTime the time that it takes the
		 *                               value to ramp from it's current value
		 *  @param {Time}	[startTime=now] 	When the ramp should start.
		 *  @returns {Tone.Param} this
		 *  @example
		 * //linearly ramp to the value 4 over 3 seconds.
		 * signal.linearRampTo(4, 3);
		 */
	    Tone.Param.prototype.linearRampTo = function (value, rampTime, startTime) {
	        startTime = this.toSeconds(startTime);
	        this.setRampPoint(startTime);
	        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
	        return this;
	    };
	    /**
		 *  Start exponentially approaching the target value at the given time. Since it
		 *  is an exponential approach it will continue approaching after the ramp duration. The
		 *  rampTime is the time that it takes to reach over 99% of the way towards the value.
		 *  @param  {number} value   The value to ramp to.
		 *  @param  {Time} rampTime the time that it takes the
		 *                               value to ramp from it's current value
		 *  @param {Time}	[startTime=now] 	When the ramp should start.
		 *  @returns {Tone.Param} this
		 *  @example
		 * //exponentially ramp to the value 2 over 4 seconds.
		 * signal.exponentialRampTo(2, 4);
		 */
	    Tone.Param.prototype.targetRampTo = function (value, rampTime, startTime) {
	        startTime = this.toSeconds(startTime);
	        this.setRampPoint(startTime);
	        this.exponentialApproachValueAtTime(value, startTime, rampTime);
	        return this;
	    };
	    /**
		 *  Start exponentially approaching the target value at the given time. Since it
		 *  is an exponential approach it will continue approaching after the ramp duration. The
		 *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods
		 *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'
		 *  @param  {number} value   The value to ramp to.
		 *  @param {Time}	time 	When the ramp should start.
		 *  @param  {Time} rampTime the time that it takes the
		 *                               value to ramp from it's current value
		 *  @returns {Tone.Param} this
		 *  @example
		 * //exponentially ramp to the value 2 over 4 seconds.
		 * signal.exponentialRampTo(2, 4);
		 */
	    Tone.Param.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {
	        var timeConstant = Math.log(this.toSeconds(rampTime) + 1) / Math.log(200);
	        time = this.toSeconds(time);
	        return this.setTargetAtTime(value, time, timeConstant);
	    };
	    /**
		 *  Start exponentially approaching the target value at the given time with
		 *  a rate having the given time constant.
		 *  @param {number} value
		 *  @param {Time} startTime
		 *  @param {number} timeConstant
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {
	        value = this._fromUnits(value);
	        // The value will never be able to approach without timeConstant > 0.
	        if (timeConstant <= 0) {
	            throw new Error('timeConstant must be greater than 0');
	        }
	        startTime = this.toSeconds(startTime);
	        this._events.add({
	            'type': Tone.Param.AutomationType.Target,
	            'value': value,
	            'time': startTime,
	            'constant': timeConstant
	        });
	        this._param.setTargetAtTime(value, startTime, timeConstant);
	        return this;
	    };
	    /**
		 *  Sets an array of arbitrary parameter values starting at the given time
		 *  for the given duration.
		 *
		 *  @param {Array} values
		 *  @param {Time} startTime
		 *  @param {Time} duration
		 *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {
	        scaling = Tone.defaultArg(scaling, 1);
	        duration = this.toSeconds(duration);
	        startTime = this.toSeconds(startTime);
	        this.setValueAtTime(values[0] * scaling, startTime);
	        var segTime = duration / (values.length - 1);
	        for (var i = 1; i < values.length; i++) {
	            this.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);
	        }
	        return this;
	    };
	    /**
		 *  Cancels all scheduled parameter changes with times greater than or
		 *  equal to startTime.
		 *
		 *  @param  {Time} time
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.cancelScheduledValues = function (time) {
	        time = this.toSeconds(time);
	        this._events.cancel(time);
	        this._param.cancelScheduledValues(time);
	        return this;
	    };
	    /**
		 *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except
		 *  it holds the automated value at time until the next automated event.
		 *  @param  {Time} time
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.cancelAndHoldAtTime = function (time) {
	        var valueAtTime = this.getValueAtTime(time);
	        //if there is an event at the given time
	        //and that even is not a "set"
	        var before = this._events.get(time);
	        var after = this._events.getAfter(time);
	        if (before && before.time === time) {
	            //remove everything after
	            if (after) {
	                this._events.cancel(after.time);
	            } else {
	                this._events.cancel(time + 0.000001);
	            }
	        } else if (after) {
	            //cancel the next event(s)
	            this._events.cancel(after.time);
	            if (!this._param.cancelAndHoldAtTime) {
	                this._param.cancelScheduledValues(time);
	            }
	            if (after.type === Tone.Param.AutomationType.Linear) {
	                if (!this._param.cancelAndHoldAtTime) {
	                    this.linearRampToValueAtTime(valueAtTime, time);
	                } else {
	                    this._events.add({
	                        'type': Tone.Param.AutomationType.Linear,
	                        'value': valueAtTime,
	                        'time': time
	                    });
	                }
	            } else if (after.type === Tone.Param.AutomationType.Exponential) {
	                if (!this._param.cancelAndHoldAtTime) {
	                    this.exponentialRampToValueAtTime(valueAtTime, time);
	                } else {
	                    this._events.add({
	                        'type': Tone.Param.AutomationType.Exponential,
	                        'value': valueAtTime,
	                        'time': time
	                    });
	                }
	            }
	        }
	        //set the value at the given time
	        this._events.add({
	            'type': Tone.Param.AutomationType.SetValue,
	            'value': valueAtTime,
	            'time': time
	        });
	        if (this._param.cancelAndHoldAtTime) {
	            this._param.cancelAndHoldAtTime(time);
	        } else {
	            this._param.setValueAtTime(valueAtTime, time);
	        }
	        return this;
	    };
	    /**
		 *  Ramps to the given value over the duration of the rampTime.
		 *  Automatically selects the best ramp type (exponential or linear)
		 *  depending on the `units` of the signal
		 *
		 *  @param  {number} value
		 *  @param  {Time} rampTime 	The time that it takes the
		 *                              value to ramp from it's current value
		 *  @param {Time}	[startTime=now] 	When the ramp should start.
		 *  @returns {Tone.Param} this
		 *  @example
		 * //ramp to the value either linearly or exponentially
		 * //depending on the "units" value of the signal
		 * signal.rampTo(0, 10);
		 *  @example
		 * //schedule it to ramp starting at a specific time
		 * signal.rampTo(0, 10, 5)
		 */
	    Tone.Param.prototype.rampTo = function (value, rampTime, startTime) {
	        rampTime = Tone.defaultArg(rampTime, 0.1);
	        if (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels) {
	            this.exponentialRampTo(value, rampTime, startTime);
	        } else {
	            this.linearRampTo(value, rampTime, startTime);
	        }
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	AUTOMATION CURVE CALCULATIONS
	    //	MIT License, copyright (c) 2014 Jordan Santell
	    ///////////////////////////////////////////////////////////////////////////
	    // Calculates the the value along the curve produced by setTargetAtTime
	    Tone.Param.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {
	        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
	    };
	    // Calculates the the value along the curve produced by linearRampToValueAtTime
	    Tone.Param.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {
	        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
	    };
	    // Calculates the the value along the curve produced by exponentialRampToValueAtTime
	    Tone.Param.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {
	        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
	    };
	    /**
		 *  Clean up
		 *  @returns {Tone.Param} this
		 */
	    Tone.Param.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._param = null;
	        this._events = null;
	        return this;
	    };
	    return Tone.Param;
	});
	Module(function (Tone) {
	    /**
		 *  @class Wrapper around the OfflineAudioContext
		 *  @extends {Tone.Context}
		 *  @param  {Number}  channels  The number of channels to render
		 *  @param  {Number}  duration  The duration to render in samples
		 *  @param {Number} sampleRate the sample rate to render at
		 */
	    Tone.OfflineContext = function (channels, duration, sampleRate) {
	        /**
			 *  The offline context
			 *  @private
			 *  @type  {OfflineAudioContext}
			 */
	        var offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);
	        //wrap the methods/members
	        Tone.Context.call(this, {
	            'context': offlineContext,
	            'clockSource': 'offline',
	            'lookAhead': 0,
	            'updateInterval': 128 / sampleRate
	        });
	        /**
			 *  A private reference to the duration
			 *  @private
			 *  @type  {Number}
			 */
	        this._duration = duration;
	        /**
			 *  An artificial clock source
			 *  @type  {Number}
			 *  @private
			 */
	        this._currentTime = 0;
	    };
	    Tone.extend(Tone.OfflineContext, Tone.Context);
	    /**
		 *  Override the now method to point to the internal clock time
		 *  @return  {Number}
		 */
	    Tone.OfflineContext.prototype.now = function () {
	        return this._currentTime;
	    };
	    /**
		 *  Render the output of the OfflineContext
		 *  @return  {Promise}
		 */
	    Tone.OfflineContext.prototype.render = function () {
	        while (this._duration - this._currentTime >= 0) {
	            //invoke all the callbacks on that time
	            this.emit('tick');
	            //increment the clock
	            this._currentTime += this.blockTime;
	        }
	        return this._context.startRendering();
	    };
	    /**
		 *  Close the context
		 *  @return  {Promise}
		 */
	    Tone.OfflineContext.prototype.close = function () {
	        this._context = null;
	        return Promise.resolve();
	    };
	    return Tone.OfflineContext;
	});
	Module(function (Tone) {
	    if (Tone.supported) {
	        var ua = navigator.userAgent.toLowerCase();
	        var isMobileSafari = ua.includes('safari') && !ua.includes('chrome') && ua.includes('mobile');
	        if (isMobileSafari) {
	            //mobile safari has a bizarre bug with the offline context
	            //when a BufferSourceNode is started, it starts the offline context
	            //
	            //deferring all BufferSource starts till the last possible moment
	            //reduces the likelihood of this happening
	            Tone.OfflineContext.prototype.createBufferSource = function () {
	                var bufferSource = this._context.createBufferSource();
	                var _native_start = bufferSource.start;
	                bufferSource.start = function (time) {
	                    this.setTimeout(function () {
	                        _native_start.call(bufferSource, time);
	                    }.bind(this), 0);
	                }.bind(this);
	                return bufferSource;
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class A thin wrapper around the Native Web Audio GainNode.
		 *         The GainNode is a basic building block of the Web Audio
		 *         API and is useful for routing audio and adjusting gains.
		 *  @extends {Tone}
		 *  @param  {Number=}  gain  The initial gain of the GainNode
		 *  @param {Tone.Type=} units The units of the gain parameter.
		 */
	    Tone.Gain = function () {
	        var options = Tone.defaults(arguments, [
	            'gain',
	            'units'
	        ], Tone.Gain);
	        Tone.AudioNode.call(this);
	        /**
			 *  The GainNode
			 *  @type  {GainNode}
			 *  @private
			 */
	        this.input = this.output = this._gainNode = this.context.createGain();
	        /**
			 *  The gain parameter of the gain node.
			 *  @type {Gain}
			 *  @signal
			 */
	        this.gain = new Tone.Param({
	            'param': this._gainNode.gain,
	            'units': options.units,
	            'value': options.gain,
	            'convert': options.convert
	        });
	        this._readOnly('gain');
	    };
	    Tone.extend(Tone.Gain, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Gain.defaults = {
	        'gain': 1,
	        'convert': true
	    };
	    /**
		 *  Clean up.
		 *  @return  {Tone.Gain}  this
		 */
	    Tone.Gain.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._gainNode.disconnect();
	        this._gainNode = null;
	        this._writable('gain');
	        this.gain.dispose();
	        this.gain = null;
	    };
	    return Tone.Gain;
	});
	Module(function (Tone) {
	    if (Tone.supported && !AudioContext.prototype.createConstantSource) {
	        var ConstantSourceNode = function (context) {
	            this.context = context;
	            var buffer = context.createBuffer(1, 128, context.sampleRate);
	            var arr = buffer.getChannelData(0);
	            for (var i = 0; i < arr.length; i++) {
	                arr[i] = 1;
	            }
	            this._bufferSource = context.createBufferSource();
	            this._bufferSource.channelCount = 1;
	            this._bufferSource.channelCountMode = 'explicit';
	            this._bufferSource.buffer = buffer;
	            this._bufferSource.loop = true;
	            var gainNode = this._output = context.createGain();
	            this.offset = gainNode.gain;
	            this._bufferSource.connect(gainNode);
	        };
	        ConstantSourceNode.prototype.start = function (time) {
	            this._bufferSource.start(time);
	            return this;
	        };
	        ConstantSourceNode.prototype.stop = function (time) {
	            this._bufferSource.stop(time);
	            return this;
	        };
	        ConstantSourceNode.prototype.connect = function () {
	            this._output.connect.apply(this._output, arguments);
	            return this;
	        };
	        ConstantSourceNode.prototype.disconnect = function () {
	            this._output.disconnect.apply(this._output, arguments);
	            return this;
	        };
	        AudioContext.prototype.createConstantSource = function () {
	            return new ConstantSourceNode(this);
	        };
	        Tone.Context.prototype.createConstantSource = function () {
	            return new ConstantSourceNode(this);
	        };
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.
		 *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal
		 *          has all of the methods available to native Web Audio
		 *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)
		 *          as well as additional conveniences. Read more about working with signals
		 *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).
		 *
		 *  @constructor
		 *  @extends {Tone.Param}
		 *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam
		 *                                     is passed in, that parameter will be wrapped
		 *                                     and controlled by the Signal.
		 *  @param {string} [units=Number] unit The units the signal is in.
		 *  @example
		 * var signal = new Tone.Signal(10);
		 */
	    Tone.Signal = function () {
	        var options = Tone.defaults(arguments, [
	            'value',
	            'units'
	        ], Tone.Signal);
	        Tone.Param.call(this, options);
	        /**
			* When a signal is connected to another signal or audio param,
			* this signal becomes a proxy for it
			* @type {Array}
			* @private
			*/
	        this._proxies = [];
	        /**
			* Indicates if the constant source was started or not
			* @private
			* @type {Boolean}
			*/
	        this._sourceStarted = false;
	        /**
			 * The constant source node which generates the signal
			 * @type {ConstantSourceNode}
			 * @private
			 */
	        this._constantSource = this.context.createConstantSource();
	        this._param = this._constantSource.offset;
	        this.value = options.value;
	        /**
			 * The node where the constant signal value is scaled.
			 * @type {GainNode}
			 * @private
			 */
	        this.output = this._constantSource;
	        /**
			 * The node where the value is set.
			 * @type {Tone.Param}
			 * @private
			 */
	        this.input = this._param = this.output.offset;
	    };
	    Tone.extend(Tone.Signal, Tone.Param);
	    /**
		 *  The default values
		 *  @type  {Object}
		 *  @static
		 *  @const
		 */
	    Tone.Signal.defaults = {
	        'value': 0,
	        'units': Tone.Type.Default,
	        'convert': true
	    };
	    /**
		 *  When signals connect to other signals or AudioParams,
		 *  they take over the output value of that signal or AudioParam.
		 *  For all other nodes, the behavior is the same as a default <code>connect</code>.
		 *
		 *  @override
		 *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node
		 *  @param {number} [outputNumber=0] The output number to connect from.
		 *  @param {number} [inputNumber=0] The input number to connect to.
		 *  @returns {Tone.Signal} this
		 *  @method
		 */
	    Tone.Signal.prototype.connect = function (node) {
	        //this is an optimization where this node will forward automations
	        //to connected nodes without any signal if possible.
	        if (this._isParam(node) && !this._sourceStarted) {
	            this._proxies.push(node);
	            node.overridden = true;
	            this._applyAutomations(node);
	        } else {
	            Tone.SignalBase.prototype.connect.apply(this, arguments);
	            if (!this._sourceStarted) {
	                this._sourceStarted = true;
	                this._constantSource.start(0);
	            }
	        }
	        return this;
	    };
	    /**
		 * Takes a node as an argument and returns if it is a Param or AudioParam
		 * @param  {*} node The node to test
		 * @return {Boolean}
		 * @private
		 */
	    Tone.Signal.prototype._isParam = function (node) {
	        return Tone.Param && Tone.Param === node.constructor || node instanceof AudioParam;
	    };
	    /**
		 * Discard the optimization and connect all of the proxies
		 * @private
		 */
	    Tone.Signal.prototype._connectProxies = function () {
	        if (!this._sourceStarted) {
	            this._sourceStarted = true;
	            this._constantSource.start(0);
	        }
	        this._proxies.forEach(function (proxy) {
	            Tone.SignalBase.prototype.connect.call(this, proxy);
	            if (proxy._proxies) {
	                proxy._connectProxies();
	            }
	        }.bind(this));
	    };
	    /**
		 * Invoked when a node is connected to this
		 * @param  {AudioNode} from
		 * @private
		 */
	    Tone.Signal.prototype._onConnect = function (from) {
	        if (!this._isParam(from)) {
	            //connect all the proxies
	            this._connectProxies();
	        }
	    };
	    /**
		 * Apply all the current automations to the given parameter
		 * @param  {AudioParam} param
		 * @private
		 */
	    Tone.Signal.prototype._applyAutomations = function (param) {
	        var now = this.context.currentTime;
	        param.cancelScheduledValues(now);
	        var currentVal = this.getValueAtTime(now);
	        param.setValueAtTime(currentVal, now);
	        this._events.forEachFrom(now, function (event) {
	            param[event.type](event.value, event.time, event.constant);
	        });
	    };
	    /**
		 * Disconnect from the given node or all nodes if no param is given.
		 * @param  {AudioNode|AudioParam} node
		 * @return {Tone.Signal}      this
		 */
	    Tone.Signal.prototype.disconnect = function (node) {
	        if (this._proxies.includes(node)) {
	            var index = this._proxies.indexOf(node);
	            this._proxies.splice(index, 1);
	        } else if (!node) {
	            //no argument, disconnect everything
	            this._proxies = [];
	        }
	        return Tone.SignalBase.prototype.disconnect.apply(this, arguments);
	    };
	    /**
		 * Return the current signal value at the given time.
		 * @param  {Time} time When to get the signal value
		 * @return {Number}
		 */
	    Tone.Signal.prototype.getValueAtTime = function (time) {
	        if (this._param.getValueAtTime) {
	            return this._param.getValueAtTime(time);
	        } else {
	            return Tone.Param.prototype.getValueAtTime.call(this, time);
	        }
	    };
	    //wrap all of the automation methods
	    [
	        'setValueAtTime',
	        'linearRampToValueAtTime',
	        'exponentialRampToValueAtTime',
	        'setTargetAtTime'
	    ].forEach(function (method) {
	        var previousMethod = Tone.Signal.prototype[method];
	        Tone.Signal.prototype[method] = function () {
	            var args = arguments;
	            previousMethod.apply(this, arguments);
	            args[0] = this._fromUnits(args[0]);
	            args[1] = this.toSeconds(args[1]);
	            //apply it to the proxies
	            this._proxies.forEach(function (signal) {
	                signal[method].apply(signal, args);
	            });
	        };
	    });
	    [
	        'cancelScheduledValues',
	        'cancelAndHoldAtTime'
	    ].forEach(function (method) {
	        var previousMethod = Tone.Signal.prototype[method];
	        Tone.Signal.prototype[method] = function () {
	            var args = arguments;
	            previousMethod.apply(this, arguments);
	            args[0] = this.toSeconds(args[0]);
	            //apply it to the proxies
	            this._proxies.forEach(function (signal) {
	                signal[method].apply(signal, args);
	            });
	        };
	    });
	    /**
		 *  dispose and disconnect
		 *  @returns {Tone.Signal} this
		 */
	    Tone.Signal.prototype.dispose = function () {
	        Tone.Param.prototype.dispose.call(this);
	        this._constantSource.disconnect();
	        this._constantSource = null;
	        this._proxies = null;
	        return this;
	    };
	    return Tone.Signal;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Pow applies an exponent to the incoming signal. The incoming signal
		 *         must be AudioRange.
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. 
		 *  @example
		 * var pow = new Tone.Pow(2);
		 * var sig = new Tone.Signal(0.5).connect(pow);
		 * //output of pow is 0.25. 
		 */
	    Tone.Pow = function (exp) {
	        Tone.SignalBase.call(this);
	        /**
			 * the exponent
			 * @private
			 * @type {number}
			 */
	        this._exp = Tone.defaultArg(exp, 1);
	        /**
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);
	    };
	    Tone.extend(Tone.Pow, Tone.SignalBase);
	    /**
		 * The value of the exponent.
		 * @memberOf Tone.Pow#
		 * @type {number}
		 * @name value
		 */
	    Object.defineProperty(Tone.Pow.prototype, 'value', {
	        get: function () {
	            return this._exp;
	        },
	        set: function (exp) {
	            this._exp = exp;
	            this._expScaler.setMap(this._expFunc(this._exp));
	        }
	    });
	    /**
		 *  the function which maps the waveshaper
		 *  @param   {number} exp
		 *  @return {function}
		 *  @private
		 */
	    Tone.Pow.prototype._expFunc = function (exp) {
	        return function (val) {
	            return Math.pow(Math.abs(val), exp);
	        };
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Pow} this
		 */
	    Tone.Pow.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._expScaler.dispose();
	        this._expScaler = null;
	        return this;
	    };
	    return Tone.Pow;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)
		 *          envelope generator. Tone.Envelope outputs a signal which
		 *          can be connected to an AudioParam or Tone.Signal.
		 *          <img src="https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg">
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Time} [attack] The amount of time it takes for the envelope to go from
		 *                         0 to it's maximum value.
		 *  @param {Time} [decay]	The period of time after the attack that it takes for the envelope
		 *                       	to fall to the sustain value.
		 *  @param {NormalRange} [sustain]	The percent of the maximum value that the envelope rests at until
		 *                                	the release is triggered.
		 *  @param {Time} [release]	The amount of time after the release is triggered it takes to reach 0.
		 *  @example
		 * //an amplitude envelope
		 * var gainNode = Tone.context.createGain();
		 * var env = new Tone.Envelope({
		 * 	"attack" : 0.1,
		 * 	"decay" : 0.2,
		 * 	"sustain" : 1,
		 * 	"release" : 0.8,
		 * });
		 * env.connect(gainNode.gain);
		 */
	    Tone.Envelope = function () {
	        //get all of the defaults
	        var options = Tone.defaults(arguments, [
	            'attack',
	            'decay',
	            'sustain',
	            'release'
	        ], Tone.Envelope);
	        Tone.AudioNode.call(this);
	        /**
			 *  When triggerAttack is called, the attack time is the amount of
			 *  time it takes for the envelope to reach it's maximum value.
			 *  @type {Time}
			 */
	        this.attack = options.attack;
	        /**
			 *  After the attack portion of the envelope, the value will fall
			 *  over the duration of the decay time to it's sustain value.
			 *  @type {Time}
			 */
	        this.decay = options.decay;
	        /**
			 * 	The sustain value is the value
			 * 	which the envelope rests at after triggerAttack is
			 * 	called, but before triggerRelease is invoked.
			 *  @type {NormalRange}
			 */
	        this.sustain = options.sustain;
	        /**
			 *  After triggerRelease is called, the envelope's
			 *  value will fall to it's miminum value over the
			 *  duration of the release time.
			 *  @type {Time}
			 */
	        this.release = options.release;
	        /**
			 *  the next time the envelope is at standby
			 *  @type {number}
			 *  @private
			 */
	        this._attackCurve = 'linear';
	        /**
			 *  the next time the envelope is at standby
			 *  @type {number}
			 *  @private
			 */
	        this._releaseCurve = 'exponential';
	        /**
			 *  the signal
			 *  @type {Tone.Signal}
			 *  @private
			 */
	        this._sig = this.output = new Tone.Signal(0);
	        //set the attackCurve initially
	        this.attackCurve = options.attackCurve;
	        this.releaseCurve = options.releaseCurve;
	    };
	    Tone.extend(Tone.Envelope, Tone.AudioNode);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 */
	    Tone.Envelope.defaults = {
	        'attack': 0.01,
	        'decay': 0.1,
	        'sustain': 0.5,
	        'release': 1,
	        'attackCurve': 'linear',
	        'releaseCurve': 'exponential'
	    };
	    /**
		 * Read the current value of the envelope. Useful for
		 * syncronizing visual output to the envelope.
		 * @memberOf Tone.Envelope#
		 * @type {Number}
		 * @name value
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Envelope.prototype, 'value', {
	        get: function () {
	            return this.getValueAtTime(this.now());
	        }
	    });
	    /**
		 * The shape of the attack.
		 * Can be any of these strings:
		 * <ul>
		 *   <li>linear</li>
		 *   <li>exponential</li>
		 *   <li>sine</li>
		 *   <li>cosine</li>
		 *   <li>bounce</li>
		 *   <li>ripple</li>
		 *   <li>step</li>
		 * </ul>
		 * Can also be an array which describes the curve. Values
		 * in the array are evenly subdivided and linearly
		 * interpolated over the duration of the attack.
		 * @memberOf Tone.Envelope#
		 * @type {String|Array}
		 * @name attackCurve
		 * @example
		 * env.attackCurve = "linear";
		 * @example
		 * //can also be an array
		 * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]
		 */
	    Object.defineProperty(Tone.Envelope.prototype, 'attackCurve', {
	        get: function () {
	            if (Tone.isString(this._attackCurve)) {
	                return this._attackCurve;
	            } else if (Tone.isArray(this._attackCurve)) {
	                //look up the name in the curves array
	                for (var type in Tone.Envelope.Type) {
	                    if (Tone.Envelope.Type[type].In === this._attackCurve) {
	                        return type;
	                    }
	                }
	                //otherwise just return the array
	                return this._attackCurve;
	            }
	        },
	        set: function (curve) {
	            //check if it's a valid type
	            if (Tone.Envelope.Type.hasOwnProperty(curve)) {
	                var curveDef = Tone.Envelope.Type[curve];
	                if (Tone.isObject(curveDef)) {
	                    this._attackCurve = curveDef.In;
	                } else {
	                    this._attackCurve = curveDef;
	                }
	            } else if (Tone.isArray(curve)) {
	                this._attackCurve = curve;
	            } else {
	                throw new Error('Tone.Envelope: invalid curve: ' + curve);
	            }
	        }
	    });
	    /**
		 * The shape of the release. See the attack curve types.
		 * @memberOf Tone.Envelope#
		 * @type {String|Array}
		 * @name releaseCurve
		 * @example
		 * env.releaseCurve = "linear";
		 */
	    Object.defineProperty(Tone.Envelope.prototype, 'releaseCurve', {
	        get: function () {
	            if (Tone.isString(this._releaseCurve)) {
	                return this._releaseCurve;
	            } else if (Tone.isArray(this._releaseCurve)) {
	                //look up the name in the curves array
	                for (var type in Tone.Envelope.Type) {
	                    if (Tone.Envelope.Type[type].Out === this._releaseCurve) {
	                        return type;
	                    }
	                }
	                //otherwise just return the array
	                return this._releaseCurve;
	            }
	        },
	        set: function (curve) {
	            //check if it's a valid type
	            if (Tone.Envelope.Type.hasOwnProperty(curve)) {
	                var curveDef = Tone.Envelope.Type[curve];
	                if (Tone.isObject(curveDef)) {
	                    this._releaseCurve = curveDef.Out;
	                } else {
	                    this._releaseCurve = curveDef;
	                }
	            } else if (Tone.isArray(curve)) {
	                this._releaseCurve = curve;
	            } else {
	                throw new Error('Tone.Envelope: invalid curve: ' + curve);
	            }
	        }
	    });
	    /**
		 *  Trigger the attack/decay portion of the ADSR envelope.
		 *  @param  {Time} [time=now] When the attack should start.
		 *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.
		 *                               number between 0-1
		 *  @returns {Tone.Envelope} this
		 *  @example
		 *  //trigger the attack 0.5 seconds from now with a velocity of 0.2
		 *  env.triggerAttack("+0.5", 0.2);
		 */
	    Tone.Envelope.prototype.triggerAttack = function (time, velocity) {
	        time = this.toSeconds(time);
	        var originalAttack = this.toSeconds(this.attack);
	        var attack = originalAttack;
	        var decay = this.toSeconds(this.decay);
	        velocity = Tone.defaultArg(velocity, 1);
	        //check if it's not a complete attack
	        var currentValue = this.getValueAtTime(time);
	        if (currentValue > 0) {
	            //subtract the current value from the attack time
	            var attackRate = 1 / attack;
	            var remainingDistance = 1 - currentValue;
	            //the attack is now the remaining time
	            attack = remainingDistance / attackRate;
	        }
	        //attack
	        if (this._attackCurve === 'linear') {
	            this._sig.linearRampTo(velocity, attack, time);
	        } else if (this._attackCurve === 'exponential') {
	            this._sig.targetRampTo(velocity, attack, time);
	        } else if (attack > 0) {
	            this._sig.cancelAndHoldAtTime(time);
	            var curve = this._attackCurve;
	            //take only a portion of the curve
	            if (attack < originalAttack) {
	                var percentComplete = 1 - attack / originalAttack;
	                var sliceIndex = Math.floor(percentComplete * this._attackCurve.length);
	                curve = this._attackCurve.slice(sliceIndex);
	                //the first index is the current value
	                curve[0] = currentValue;
	            }
	            this._sig.setValueCurveAtTime(curve, time, attack, velocity);
	        }
	        //decay
	        if (decay) {
	            this._sig.targetRampTo(velocity * this.sustain, decay, attack + time);
	        }
	        return this;
	    };
	    /**
		 *  Triggers the release of the envelope.
		 *  @param  {Time} [time=now] When the release portion of the envelope should start.
		 *  @returns {Tone.Envelope} this
		 *  @example
		 *  //trigger release immediately
		 *  env.triggerRelease();
		 */
	    Tone.Envelope.prototype.triggerRelease = function (time) {
	        time = this.toSeconds(time);
	        var currentValue = this.getValueAtTime(time);
	        if (currentValue > 0) {
	            var release = this.toSeconds(this.release);
	            if (this._releaseCurve === 'linear') {
	                this._sig.linearRampTo(0, release, time);
	            } else if (this._releaseCurve === 'exponential') {
	                this._sig.targetRampTo(0, release, time);
	            } else {
	                var curve = this._releaseCurve;
	                if (Tone.isArray(curve)) {
	                    this._sig.cancelAndHoldAtTime(time);
	                    this._sig.setValueCurveAtTime(curve, time, release, currentValue);
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Get the scheduled value at the given time. This will
		 *  return the unconverted (raw) value.
		 *  @param  {Number}  time  The time in seconds.
		 *  @return  {Number}  The scheduled value at the given time.
		 */
	    Tone.Envelope.prototype.getValueAtTime = function (time) {
	        return this._sig.getValueAtTime(time);
	    };
	    /**
		 *  triggerAttackRelease is shorthand for triggerAttack, then waiting
		 *  some duration, then triggerRelease.
		 *  @param {Time} duration The duration of the sustain.
		 *  @param {Time} [time=now] When the attack should be triggered.
		 *  @param {number} [velocity=1] The velocity of the envelope.
		 *  @returns {Tone.Envelope} this
		 *  @example
		 * //trigger the attack and then the release after 0.6 seconds.
		 * env.triggerAttackRelease(0.6);
		 */
	    Tone.Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {
	        time = this.toSeconds(time);
	        this.triggerAttack(time, velocity);
	        this.triggerRelease(time + this.toSeconds(duration));
	        return this;
	    };
	    /**
		 *  Cancels all scheduled envelope changes after the given time.
		 *  @param  {Time} after
		 *  @returns {Tone.Envelope} this
		 */
	    Tone.Envelope.prototype.cancel = function (after) {
	        this._sig.cancelScheduledValues(after);
	        return this;
	    };
	    /**
		 *  Borrows the connect method from Tone.Signal.
		 *  @function
		 *  @private
		 */
	    Tone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;
	    /**
	 	 *  Generate some complex envelope curves.
	 	 */
	    (function _createCurves() {
	        var curveLen = 128;
	        var i, k;
	        //cosine curve
	        var cosineCurve = [];
	        for (i = 0; i < curveLen; i++) {
	            cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));
	        }
	        //ripple curve
	        var rippleCurve = [];
	        var rippleCurveFreq = 6.4;
	        for (i = 0; i < curveLen - 1; i++) {
	            k = i / (curveLen - 1);
	            var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
	            rippleCurve[i] = sineWave / 10 + k * 0.83;
	        }
	        rippleCurve[curveLen - 1] = 1;
	        //stairs curve
	        var stairsCurve = [];
	        var steps = 5;
	        for (i = 0; i < curveLen; i++) {
	            stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;
	        }
	        //in-out easing curve
	        var sineCurve = [];
	        for (i = 0; i < curveLen; i++) {
	            k = i / (curveLen - 1);
	            sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
	        }
	        //a bounce curve
	        var bounceCurve = [];
	        for (i = 0; i < curveLen; i++) {
	            k = i / (curveLen - 1);
	            var freq = Math.pow(k, 3) * 4 + 0.2;
	            var val = Math.cos(freq * Math.PI * 2 * k);
	            bounceCurve[i] = Math.abs(val * (1 - k));
	        }
	        /**
			 *  Invert a value curve to make it work for the release
			 *  @private
			 */
	        function invertCurve(curve) {
	            var out = new Array(curve.length);
	            for (var j = 0; j < curve.length; j++) {
	                out[j] = 1 - curve[j];
	            }
	            return out;
	        }
	        /**
			 *  reverse the curve
			 *  @private
			 */
	        function reverseCurve(curve) {
	            return curve.slice(0).reverse();
	        }
	        /**
			 *  attack and release curve arrays
			 *  @type  {Object}
			 *  @private
			 */
	        Tone.Envelope.Type = {
	            'linear': 'linear',
	            'exponential': 'exponential',
	            'bounce': {
	                In: invertCurve(bounceCurve),
	                Out: bounceCurve
	            },
	            'cosine': {
	                In: cosineCurve,
	                Out: reverseCurve(cosineCurve)
	            },
	            'step': {
	                In: stairsCurve,
	                Out: invertCurve(stairsCurve)
	            },
	            'ripple': {
	                In: rippleCurve,
	                Out: invertCurve(rippleCurve)
	            },
	            'sine': {
	                In: sineCurve,
	                Out: invertCurve(sineCurve)
	            }
	        };
	    }());
	    /**
		 *  Disconnect and dispose.
		 *  @returns {Tone.Envelope} this
		 */
	    Tone.Envelope.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._sig.dispose();
	        this._sig = null;
	        this._attackCurve = null;
	        this._releaseCurve = null;
	        return this;
	    };
	    return Tone.Envelope;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.
		 *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts
		 *          an audio signal as the input and will apply the envelope to the amplitude
		 *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).
		 *
		 *  @constructor
		 *  @extends {Tone.Envelope}
		 *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from
		 *                               0 to it's maximum value.
		 *  @param {Time} [decay]	The period of time after the attack that it takes for the envelope
		 *                       	to fall to the sustain value.
		 *  @param {NormalRange} [sustain]	The percent of the maximum value that the envelope rests at until
		 *                                	the release is triggered.
		 *  @param {Time} [release]	The amount of time after the release is triggered it takes to reach 0.
		 *  @example
		 * var ampEnv = new Tone.AmplitudeEnvelope({
		 * 	"attack": 0.1,
		 * 	"decay": 0.2,
		 * 	"sustain": 1.0,
		 * 	"release": 0.8
		 * }).toMaster();
		 * //create an oscillator and connect it
		 * var osc = new Tone.Oscillator().connect(ampEnv).start();
		 * //trigger the envelopes attack and release "8t" apart
		 * ampEnv.triggerAttackRelease("8t");
		 */
	    Tone.AmplitudeEnvelope = function () {
	        Tone.Envelope.apply(this, arguments);
	        /**
			 *  the input node
			 *  @type {GainNode}
			 *  @private
			 */
	        this.input = this.output = new Tone.Gain();
	        this._sig.connect(this.output.gain);
	    };
	    Tone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);
	    /**
		 *  Clean up
		 *  @return  {Tone.AmplitudeEnvelope}  this
		 */
	    Tone.AmplitudeEnvelope.prototype.dispose = function () {
	        Tone.Envelope.prototype.dispose.call(this);
	        return this;
	    };
	    return Tone.AmplitudeEnvelope;
	});
	Module(function (Tone) {
	    /**
		 *  AnalyserNode.getFloatTimeDomainData polyfill
		 *  @private
		 */
	    if (Tone.supported) {
	        if (!AnalyserNode.prototype.getFloatTimeDomainData) {
	            //referenced https://github.com/mohayonao/get-float-time-domain-data
	            AnalyserNode.prototype.getFloatTimeDomainData = function (array) {
	                var uint8 = new Uint8Array(array.length);
	                this.getByteTimeDomainData(uint8);
	                for (var i = 0; i < uint8.length; i++) {
	                    array[i] = (uint8[i] - 128) / 128;
	                }
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Wrapper around the native Web Audio's
		 *          [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).
		 *          Extracts FFT or Waveform data from the incoming signal.
		 *  @extends {Tone.AudioNode}
		 *  @param {String=} type The return type of the analysis, either "fft", or "waveform".
		 *  @param {Number=} size The size of the FFT. Value must be a power of
		 *                       two in the range 32 to 32768.
		 */
	    Tone.Analyser = function () {
	        var options = Tone.defaults(arguments, [
	            'type',
	            'size'
	        ], Tone.Analyser);
	        Tone.AudioNode.call(this);
	        /**
			 *  The analyser node.
			 *  @private
			 *  @type {AnalyserNode}
			 */
	        this._analyser = this.input = this.output = this.context.createAnalyser();
	        /**
			 *  The analysis type
			 *  @type {String}
			 *  @private
			 */
	        this._type = options.type;
	        /**
			 *  The buffer that the FFT data is written to
			 *  @type {TypedArray}
			 *  @private
			 */
	        this._buffer = null;
	        //set the values initially
	        this.size = options.size;
	        this.type = options.type;
	    };
	    Tone.extend(Tone.Analyser, Tone.AudioNode);
	    /**
		 *  The default values.
		 *  @type {Object}
		 *  @const
		 */
	    Tone.Analyser.defaults = {
	        'size': 1024,
	        'type': 'fft',
	        'smoothing': 0.8
	    };
	    /**
		 *  Possible return types of analyser.getValue()
		 *  @enum {String}
		 */
	    Tone.Analyser.Type = {
	        Waveform: 'waveform',
	        FFT: 'fft'
	    };
	    /**
		 *  Run the analysis given the current settings and return the
		 *  result as a TypedArray.
		 *  @returns {TypedArray}
		 */
	    Tone.Analyser.prototype.getValue = function () {
	        if (this._type === Tone.Analyser.Type.FFT) {
	            this._analyser.getFloatFrequencyData(this._buffer);
	        } else if (this._type === Tone.Analyser.Type.Waveform) {
	            this._analyser.getFloatTimeDomainData(this._buffer);
	        }
	        return this._buffer;
	    };
	    /**
		 *  The size of analysis. This must be a power of two in the range 32 to 32768.
		 *  @memberOf Tone.Analyser#
		 *  @type {Number}
		 *  @name size
		 */
	    Object.defineProperty(Tone.Analyser.prototype, 'size', {
	        get: function () {
	            return this._analyser.frequencyBinCount;
	        },
	        set: function (size) {
	            this._analyser.fftSize = size * 2;
	            this._buffer = new Float32Array(size);
	        }
	    });
	    /**
		 *  The analysis function returned by analyser.getValue(), either "fft" or "waveform".
		 *  @memberOf Tone.Analyser#
		 *  @type {String}
		 *  @name type
		 */
	    Object.defineProperty(Tone.Analyser.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            if (type !== Tone.Analyser.Type.Waveform && type !== Tone.Analyser.Type.FFT) {
	                throw new TypeError('Tone.Analyser: invalid type: ' + type);
	            }
	            this._type = type;
	        }
	    });
	    /**
		 *  0 represents no time averaging with the last analysis frame.
		 *  @memberOf Tone.Analyser#
		 *  @type {NormalRange}
		 *  @name smoothing
		 */
	    Object.defineProperty(Tone.Analyser.prototype, 'smoothing', {
	        get: function () {
	            return this._analyser.smoothingTimeConstant;
	        },
	        set: function (val) {
	            this._analyser.smoothingTimeConstant = val;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.Analyser}  this
		 */
	    Tone.Analyser.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._analyser.disconnect();
	        this._analyser = null;
	        this._buffer = null;
	    };
	    return Tone.Analyser;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Compressor is a thin wrapper around the Web Audio
		 *         [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).
		 *         Compression reduces the volume of loud sounds or amplifies quiet sounds
		 *         by narrowing or "compressing" an audio signal's dynamic range.
		 *         Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Decibels|Object} [threshold] The value above which the compression starts to be applied.
		 *  @param {Positive} [ratio] The gain reduction ratio.
		 *  @example
		 * var comp = new Tone.Compressor(-30, 3);
		 */
	    Tone.Compressor = function () {
	        var options = Tone.defaults(arguments, [
	            'threshold',
	            'ratio'
	        ], Tone.Compressor);
	        Tone.AudioNode.call(this);
	        /**
			 *  the compressor node
			 *  @type {DynamicsCompressorNode}
			 *  @private
			 */
	        this._compressor = this.input = this.output = this.context.createDynamicsCompressor();
	        /**
			 *  the threshold vaue
			 *  @type {Decibels}
			 *  @signal
			 */
	        this.threshold = new Tone.Param({
	            'param': this._compressor.threshold,
	            'units': Tone.Type.Decibels,
	            'convert': false
	        });
	        /**
			 *  The attack parameter
			 *  @type {Time}
			 *  @signal
			 */
	        this.attack = new Tone.Param(this._compressor.attack, Tone.Type.Time);
	        /**
			 *  The release parameter
			 *  @type {Time}
			 *  @signal
			 */
	        this.release = new Tone.Param(this._compressor.release, Tone.Type.Time);
	        /**
			 *  The knee parameter
			 *  @type {Decibels}
			 *  @signal
			 */
	        this.knee = new Tone.Param({
	            'param': this._compressor.knee,
	            'units': Tone.Type.Decibels,
	            'convert': false
	        });
	        /**
			 *  The ratio value
			 *  @type {Number}
			 *  @signal
			 */
	        this.ratio = new Tone.Param({
	            'param': this._compressor.ratio,
	            'convert': false
	        });
	        //set the defaults
	        this._readOnly([
	            'knee',
	            'release',
	            'attack',
	            'ratio',
	            'threshold'
	        ]);
	        this.set(options);
	    };
	    Tone.extend(Tone.Compressor, Tone.AudioNode);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Compressor.defaults = {
	        'ratio': 12,
	        'threshold': -24,
	        'release': 0.25,
	        'attack': 0.003,
	        'knee': 30
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.Compressor} this
		 */
	    Tone.Compressor.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'knee',
	            'release',
	            'attack',
	            'ratio',
	            'threshold'
	        ]);
	        this._compressor.disconnect();
	        this._compressor = null;
	        this.attack.dispose();
	        this.attack = null;
	        this.release.dispose();
	        this.release = null;
	        this.threshold.dispose();
	        this.threshold = null;
	        this.ratio.dispose();
	        this.ratio = null;
	        this.knee.dispose();
	        this.knee = null;
	        return this;
	    };
	    return Tone.Compressor;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Add a signal and a number or two signals. When no value is
		 *         passed into the constructor, Tone.Add will sum <code>input[0]</code>
		 *         and <code>input[1]</code>. If a value is passed into the constructor, 
		 *         the it will be added to the input.
		 *  
		 *  @constructor
		 *  @extends {Tone.Signal}
		 *  @param {number=} value If no value is provided, Tone.Add will sum the first
		 *                         and second inputs. 
		 *  @example
		 * var signal = new Tone.Signal(2);
		 * var add = new Tone.Add(2);
		 * signal.connect(add);
		 * //the output of add equals 4
		 *  @example
		 * //if constructed with no arguments
		 * //it will add the first and second inputs
		 * var add = new Tone.Add();
		 * var sig0 = new Tone.Signal(3).connect(add, 0, 0);
		 * var sig1 = new Tone.Signal(4).connect(add, 0, 1);
		 * //the output of add equals 7. 
		 */
	    Tone.Add = function (value) {
	        Tone.Signal.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  the summing node
			 *  @type {GainNode}
			 *  @private
			 */
	        this._sum = this.input[0] = this.input[1] = this.output = new Tone.Gain();
	        /**
			 *  @private
			 *  @type {Tone.Signal}
			 */
	        this._param = this.input[1] = new Tone.Signal(value);
	        this._param.connect(this._sum);
	    };
	    Tone.extend(Tone.Add, Tone.Signal);
	    /**
		 *  Clean up.
		 *  @returns {Tone.Add} this
		 */
	    Tone.Add.prototype.dispose = function () {
	        Tone.Signal.prototype.dispose.call(this);
	        this._sum.dispose();
	        this._sum = null;
	        return this;
	    };
	    return Tone.Add;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,
		 *          multiplies the incoming signal by that value.
		 *
		 *  @constructor
		 *  @extends {Tone.Signal}
		 *  @param {number=} value Constant value to multiple. If no value is provided,
		 *                         it will return the product of the first and second inputs
		 *  @example
		 * var mult = new Tone.Multiply();
		 * var sigA = new Tone.Signal(3);
		 * var sigB = new Tone.Signal(4);
		 * sigA.connect(mult, 0, 0);
		 * sigB.connect(mult, 0, 1);
		 * //output of mult is 12.
		 *  @example
		 * var mult = new Tone.Multiply(10);
		 * var sig = new Tone.Signal(2).connect(mult);
		 * //the output of mult is 20.
		 */
	    Tone.Multiply = function (value) {
	        Tone.Signal.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  the input node is the same as the output node
			 *  it is also the GainNode which handles the scaling of incoming signal
			 *
			 *  @type {GainNode}
			 *  @private
			 */
	        this._mult = this.input[0] = this.output = new Tone.Gain();
	        /**
			 *  the scaling parameter
			 *  @type {AudioParam}
			 *  @private
			 */
	        this._param = this.input[1] = this.output.gain;
	        this.value = Tone.defaultArg(value, 0);
	    };
	    Tone.extend(Tone.Multiply, Tone.Signal);
	    /**
		 *  clean up
		 *  @returns {Tone.Multiply} this
		 */
	    Tone.Multiply.prototype.dispose = function () {
	        Tone.Signal.prototype.dispose.call(this);
	        this._mult.dispose();
	        this._mult = null;
	        this._param = null;
	        return this;
	    };
	    return Tone.Multiply;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Negate the incoming signal. i.e. an input signal of 10 will output -10
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @example
		 * var neg = new Tone.Negate();
		 * var sig = new Tone.Signal(-2).connect(neg);
		 * //output of neg is positive 2. 
		 */
	    Tone.Negate = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  negation is done by multiplying by -1
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._multiply = this.input = this.output = new Tone.Multiply(-1);
	    };
	    Tone.extend(Tone.Negate, Tone.SignalBase);
	    /**
		 *  clean up
		 *  @returns {Tone.Negate} this
		 */
	    Tone.Negate.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._multiply.dispose();
	        this._multiply = null;
	        return this;
	    };
	    return Tone.Negate;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Subtract the signal connected to <code>input[1]</code> from the signal connected 
		 *         to <code>input[0]</code>. If an argument is provided in the constructor, the 
		 *         signals <code>.value</code> will be subtracted from the incoming signal.
		 *
		 *  @extends {Tone.Signal}
		 *  @constructor
		 *  @param {number=} value The value to subtract from the incoming signal. If the value
		 *                         is omitted, it will subtract the second signal from the first.
		 *  @example
		 * var sub = new Tone.Subtract(1);
		 * var sig = new Tone.Signal(4).connect(sub);
		 * //the output of sub is 3. 
		 *  @example
		 * var sub = new Tone.Subtract();
		 * var sigA = new Tone.Signal(10);
		 * var sigB = new Tone.Signal(2.5);
		 * sigA.connect(sub, 0, 0);
		 * sigB.connect(sub, 0, 1);
		 * //output of sub is 7.5
		 */
	    Tone.Subtract = function (value) {
	        Tone.Signal.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  the summing node
			 *  @type {GainNode}
			 *  @private
			 */
	        this._sum = this.input[0] = this.output = new Tone.Gain();
	        /**
			 *  negate the input of the second input before connecting it
			 *  to the summing node.
			 *  @type {Tone.Negate}
			 *  @private
			 */
	        this._neg = new Tone.Negate();
	        /**
			 *  the node where the value is set
			 *  @private
			 *  @type {Tone.Signal}
			 */
	        this._param = this.input[1] = new Tone.Signal(value);
	        this._param.chain(this._neg, this._sum);
	    };
	    Tone.extend(Tone.Subtract, Tone.Signal);
	    /**
		 *  Clean up.
		 *  @returns {Tone.SignalBase} this
		 */
	    Tone.Subtract.prototype.dispose = function () {
	        Tone.Signal.prototype.dispose.call(this);
	        this._neg.dispose();
	        this._neg = null;
	        this._sum.disconnect();
	        this._sum = null;
	        return this;
	    };
	    return Tone.Subtract;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Convert an incoming signal between 0, 1 to an equal power gain scale.
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @example
		 * var eqPowGain = new Tone.EqualPowerGain();
		 */
	    Tone.EqualPowerGain = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  @type {Tone.WaveShaper}
			 *  @private
			 */
	        this._eqPower = this.input = this.output = new Tone.WaveShaper(function (val) {
	            if (Math.abs(val) < 0.001) {
	                //should output 0 when input is 0
	                return 0;
	            } else {
	                return Tone.equalPowerScale(val);
	            }
	        }.bind(this), 4096);
	    };
	    Tone.extend(Tone.EqualPowerGain, Tone.SignalBase);
	    /**
		 *  clean up
		 *  @returns {Tone.EqualPowerGain} this
		 */
	    Tone.EqualPowerGain.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._eqPower.dispose();
	        this._eqPower = null;
	        return this;
	    };
	    return Tone.EqualPowerGain;
	});
	Module(function (Tone) {
	    
	    /**
		 * @class  Tone.Crossfade provides equal power fading between two inputs.
		 *         More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).
		 *
		 * @constructor
		 * @extends {Tone.AudioNode}
		 * @param {NormalRange} [initialFade=0.5]
		 * @example
		 * var crossFade = new Tone.CrossFade(0.5);
		 * //connect effect A to crossfade from
		 * //effect output 0 to crossfade input 0
		 * effectA.connect(crossFade, 0, 0);
		 * //connect effect B to crossfade from
		 * //effect output 0 to crossfade input 1
		 * effectB.connect(crossFade, 0, 1);
		 * crossFade.fade.value = 0;
		 * // ^ only effectA is output
		 * crossFade.fade.value = 1;
		 * // ^ only effectB is output
		 * crossFade.fade.value = 0.5;
		 * // ^ the two signals are mixed equally.
		 */
	    Tone.CrossFade = function (initialFade) {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(2, 1);
	        /**
			 *  Alias for <code>input[0]</code>.
			 *  @type {Tone.Gain}
			 */
	        this.a = this.input[0] = new Tone.Gain();
	        /**
			 *  Alias for <code>input[1]</code>.
			 *  @type {Tone.Gain}
			 */
	        this.b = this.input[1] = new Tone.Gain();
	        /**
			 * 	The mix between the two inputs. A fade value of 0
			 * 	will output 100% <code>input[0]</code> and
			 * 	a value of 1 will output 100% <code>input[1]</code>.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.fade = new Tone.Signal(Tone.defaultArg(initialFade, 0.5), Tone.Type.NormalRange);
	        /**
			 *  equal power gain cross fade
			 *  @private
			 *  @type {Tone.EqualPowerGain}
			 */
	        this._equalPowerA = new Tone.EqualPowerGain();
	        /**
			 *  equal power gain cross fade
			 *  @private
			 *  @type {Tone.EqualPowerGain}
			 */
	        this._equalPowerB = new Tone.EqualPowerGain();
	        /**
			 *  invert the incoming signal
			 *  @private
			 *  @type {Tone}
			 */
	        this._one = this.context.getConstant(1);
	        /**
			 *  invert the incoming signal
			 *  @private
			 *  @type {Tone.Subtract}
			 */
	        this._invert = new Tone.Subtract();
	        //connections
	        this.a.connect(this.output);
	        this.b.connect(this.output);
	        this.fade.chain(this._equalPowerB, this.b.gain);
	        this._one.connect(this._invert, 0, 0);
	        this.fade.connect(this._invert, 0, 1);
	        this._invert.chain(this._equalPowerA, this.a.gain);
	        this._readOnly('fade');
	    };
	    Tone.extend(Tone.CrossFade, Tone.AudioNode);
	    /**
		 *  clean up
		 *  @returns {Tone.CrossFade} this
		 */
	    Tone.CrossFade.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable('fade');
	        this._equalPowerA.dispose();
	        this._equalPowerA = null;
	        this._equalPowerB.dispose();
	        this._equalPowerB = null;
	        this.fade.dispose();
	        this.fade = null;
	        this._invert.dispose();
	        this._invert = null;
	        this._one = null;
	        this.a.dispose();
	        this.a = null;
	        this.b.dispose();
	        this.b = null;
	        return this;
	    };
	    return Tone.CrossFade;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Filter is a filter which allows for all of the same native methods
		 *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).
		 *          Tone.Filter has the added ability to set the filter rolloff at -12
		 *          (default), -24 and -48.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Frequency|Object} [frequency] The cutoff frequency of the filter.
		 *  @param {string=} type The type of filter.
		 *  @param {number=} rolloff The drop in decibels per octave after the cutoff frequency.
		 *                            3 choices: -12, -24, and -48
		 *  @example
		 *  var filter = new Tone.Filter(200, "highpass");
		 */
	    Tone.Filter = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type',
	            'rolloff'
	        ], Tone.Filter);
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 1);
	        /**
			 *  the filter(s)
			 *  @type {Array}
			 *  @private
			 */
	        this._filters = [];
	        /**
			 *  The cutoff frequency of the filter.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The detune parameter
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(0, Tone.Type.Cents);
	        /**
			 *  The gain of the filter, only used in certain filter types
			 *  @type {Number}
			 *  @signal
			 */
	        this.gain = new Tone.Signal({
	            'value': options.gain,
	            'convert': false
	        });
	        /**
			 *  The Q or Quality of the filter
			 *  @type {Positive}
			 *  @signal
			 */
	        this.Q = new Tone.Signal(options.Q);
	        /**
			 *  the type of the filter
			 *  @type {string}
			 *  @private
			 */
	        this._type = options.type;
	        /**
			 *  the rolloff value of the filter
			 *  @type {number}
			 *  @private
			 */
	        this._rolloff = options.rolloff;
	        //set the rolloff;
	        this.rolloff = options.rolloff;
	        this._readOnly([
	            'detune',
	            'frequency',
	            'gain',
	            'Q'
	        ]);
	    };
	    Tone.extend(Tone.Filter, Tone.AudioNode);
	    /**
		 *  the default parameters
		 *
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Filter.defaults = {
	        'type': 'lowpass',
	        'frequency': 350,
	        'rolloff': -12,
	        'Q': 1,
	        'gain': 0
	    };
	    /**
		 * The type of the filter. Types: "lowpass", "highpass",
		 * "bandpass", "lowshelf", "highshelf", "notch", "allpass", or "peaking".
		 * @memberOf Tone.Filter#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.Filter.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            var types = [
	                'lowpass',
	                'highpass',
	                'bandpass',
	                'lowshelf',
	                'highshelf',
	                'notch',
	                'allpass',
	                'peaking'
	            ];
	            if (types.indexOf(type) === -1) {
	                throw new TypeError('Tone.Filter: invalid type ' + type);
	            }
	            this._type = type;
	            for (var i = 0; i < this._filters.length; i++) {
	                this._filters[i].type = type;
	            }
	        }
	    });
	    /**
		 * The rolloff of the filter which is the drop in db
		 * per octave. Implemented internally by cascading filters.
		 * Only accepts the values -12, -24, -48 and -96.
		 * @memberOf Tone.Filter#
		 * @type {number}
		 * @name rolloff
		 */
	    Object.defineProperty(Tone.Filter.prototype, 'rolloff', {
	        get: function () {
	            return this._rolloff;
	        },
	        set: function (rolloff) {
	            rolloff = parseInt(rolloff, 10);
	            var possibilities = [
	                -12,
	                -24,
	                -48,
	                -96
	            ];
	            var cascadingCount = possibilities.indexOf(rolloff);
	            //check the rolloff is valid
	            if (cascadingCount === -1) {
	                throw new RangeError('Tone.Filter: rolloff can only be -12, -24, -48 or -96');
	            }
	            cascadingCount += 1;
	            this._rolloff = rolloff;
	            //first disconnect the filters and throw them away
	            this.input.disconnect();
	            for (var i = 0; i < this._filters.length; i++) {
	                this._filters[i].disconnect();
	                this._filters[i] = null;
	            }
	            this._filters = new Array(cascadingCount);
	            for (var count = 0; count < cascadingCount; count++) {
	                var filter = this.context.createBiquadFilter();
	                filter.type = this._type;
	                this.frequency.connect(filter.frequency);
	                this.detune.connect(filter.detune);
	                this.Q.connect(filter.Q);
	                this.gain.connect(filter.gain);
	                this._filters[count] = filter;
	            }
	            //connect them up
	            var connectionChain = [this.input].concat(this._filters).concat([this.output]);
	            Tone.connectSeries.apply(Tone, connectionChain);
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.Filter} this
		 */
	    Tone.Filter.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        for (var i = 0; i < this._filters.length; i++) {
	            this._filters[i].disconnect();
	            this._filters[i] = null;
	        }
	        this._filters = null;
	        this._writable([
	            'detune',
	            'frequency',
	            'gain',
	            'Q'
	        ]);
	        this.frequency.dispose();
	        this.Q.dispose();
	        this.frequency = null;
	        this.Q = null;
	        this.detune.dispose();
	        this.detune = null;
	        this.gain.dispose();
	        this.gain = null;
	        return this;
	    };
	    return Tone.Filter;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Split the incoming signal into three bands (low, mid, high)
		 *         with two crossover frequency controls.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Frequency|Object} [lowFrequency] the low/mid crossover frequency
		 *  @param {Frequency} [highFrequency] the mid/high crossover frequency
		 */
	    Tone.MultibandSplit = function () {
	        var options = Tone.defaults(arguments, [
	            'lowFrequency',
	            'highFrequency'
	        ], Tone.MultibandSplit);
	        Tone.AudioNode.call(this);
	        /**
			 *  the input
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this.input = new Tone.Gain();
	        /**
			 *  the outputs
			 *  @type {Array}
			 *  @private
			 */
	        this.output = new Array(3);
	        /**
			 *  The low band. Alias for <code>output[0]</code>
			 *  @type {Tone.Filter}
			 */
	        this.low = this.output[0] = new Tone.Filter(0, 'lowpass');
	        /**
			 *  the lower filter of the mid band
			 *  @type {Tone.Filter}
			 *  @private
			 */
	        this._lowMidFilter = new Tone.Filter(0, 'highpass');
	        /**
			 *  The mid band output. Alias for <code>output[1]</code>
			 *  @type {Tone.Filter}
			 */
	        this.mid = this.output[1] = new Tone.Filter(0, 'lowpass');
	        /**
			 *  The high band output. Alias for <code>output[2]</code>
			 *  @type {Tone.Filter}
			 */
	        this.high = this.output[2] = new Tone.Filter(0, 'highpass');
	        /**
			 *  The low/mid crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.lowFrequency = new Tone.Signal(options.lowFrequency, Tone.Type.Frequency);
	        /**
			 *  The mid/high crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.highFrequency = new Tone.Signal(options.highFrequency, Tone.Type.Frequency);
	        /**
			 *  The quality of all the filters
			 *  @type {Number}
			 *  @signal
			 */
	        this.Q = new Tone.Signal(options.Q);
	        this.input.fan(this.low, this.high);
	        this.input.chain(this._lowMidFilter, this.mid);
	        //the frequency control signal
	        this.lowFrequency.connect(this.low.frequency);
	        this.lowFrequency.connect(this._lowMidFilter.frequency);
	        this.highFrequency.connect(this.mid.frequency);
	        this.highFrequency.connect(this.high.frequency);
	        //the Q value
	        this.Q.connect(this.low.Q);
	        this.Q.connect(this._lowMidFilter.Q);
	        this.Q.connect(this.mid.Q);
	        this.Q.connect(this.high.Q);
	        this._readOnly([
	            'high',
	            'mid',
	            'low',
	            'highFrequency',
	            'lowFrequency'
	        ]);
	    };
	    Tone.extend(Tone.MultibandSplit, Tone.AudioNode);
	    /**
		 *  @private
		 *  @static
		 *  @type {Object}
		 */
	    Tone.MultibandSplit.defaults = {
	        'lowFrequency': 400,
	        'highFrequency': 2500,
	        'Q': 1
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.MultibandSplit} this
		 */
	    Tone.MultibandSplit.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'high',
	            'mid',
	            'low',
	            'highFrequency',
	            'lowFrequency'
	        ]);
	        this.low.dispose();
	        this.low = null;
	        this._lowMidFilter.dispose();
	        this._lowMidFilter = null;
	        this.mid.dispose();
	        this.mid = null;
	        this.high.dispose();
	        this.high = null;
	        this.lowFrequency.dispose();
	        this.lowFrequency = null;
	        this.highFrequency.dispose();
	        this.highFrequency = null;
	        this.Q.dispose();
	        this.Q = null;
	        return this;
	    };
	    return Tone.MultibandSplit;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.EQ3 is a three band EQ with control over low, mid, and high gain as
		 *         well as the low and high crossover frequencies.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *
		 *  @param {Decibels|Object} [lowLevel] The gain applied to the lows.
		 *  @param {Decibels} [midLevel] The gain applied to the mid.
		 *  @param {Decibels} [highLevel] The gain applied to the high.
		 *  @example
		 * var eq = new Tone.EQ3(-10, 3, -20);
		 */
	    Tone.EQ3 = function () {
	        var options = Tone.defaults(arguments, [
	            'low',
	            'mid',
	            'high'
	        ], Tone.EQ3);
	        Tone.AudioNode.call(this);
	        /**
			 *  the output node
			 *  @type {GainNode}
			 *  @private
			 */
	        this.output = new Tone.Gain();
	        /**
			 *  the multiband split
			 *  @type {Tone.MultibandSplit}
			 *  @private
			 */
	        this._multibandSplit = this.input = new Tone.MultibandSplit({
	            'lowFrequency': options.lowFrequency,
	            'highFrequency': options.highFrequency
	        });
	        /**
			 *  The gain for the lower signals
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._lowGain = new Tone.Gain(options.low, Tone.Type.Decibels);
	        /**
			 *  The gain for the mid signals
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._midGain = new Tone.Gain(options.mid, Tone.Type.Decibels);
	        /**
			 * The gain in decibels of the high part
			 * @type {Tone.Gain}
			 * @private
			 */
	        this._highGain = new Tone.Gain(options.high, Tone.Type.Decibels);
	        /**
			 * The gain in decibels of the low part
			 * @type {Decibels}
			 * @signal
			 */
	        this.low = this._lowGain.gain;
	        /**
			 * The gain in decibels of the mid part
			 * @type {Decibels}
			 * @signal
			 */
	        this.mid = this._midGain.gain;
	        /**
			 * The gain in decibels of the high part
			 * @type {Decibels}
			 * @signal
			 */
	        this.high = this._highGain.gain;
	        /**
			 *  The Q value for all of the filters.
			 *  @type {Positive}
			 *  @signal
			 */
	        this.Q = this._multibandSplit.Q;
	        /**
			 *  The low/mid crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.lowFrequency = this._multibandSplit.lowFrequency;
	        /**
			 *  The mid/high crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.highFrequency = this._multibandSplit.highFrequency;
	        //the frequency bands
	        this._multibandSplit.low.chain(this._lowGain, this.output);
	        this._multibandSplit.mid.chain(this._midGain, this.output);
	        this._multibandSplit.high.chain(this._highGain, this.output);
	        this._readOnly([
	            'low',
	            'mid',
	            'high',
	            'lowFrequency',
	            'highFrequency'
	        ]);
	    };
	    Tone.extend(Tone.EQ3, Tone.AudioNode);
	    /**
		 *  the default values
		 */
	    Tone.EQ3.defaults = {
	        'low': 0,
	        'mid': 0,
	        'high': 0,
	        'lowFrequency': 400,
	        'highFrequency': 2500
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.EQ3} this
		 */
	    Tone.EQ3.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'low',
	            'mid',
	            'high',
	            'lowFrequency',
	            'highFrequency'
	        ]);
	        this._multibandSplit.dispose();
	        this._multibandSplit = null;
	        this.lowFrequency = null;
	        this.highFrequency = null;
	        this._lowGain.dispose();
	        this._lowGain = null;
	        this._midGain.dispose();
	        this._midGain = null;
	        this._highGain.dispose();
	        this._highGain = null;
	        this.low = null;
	        this.mid = null;
	        this.high = null;
	        this.Q = null;
	        return this;
	    };
	    return Tone.EQ3;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Performs a linear scaling on an input signal.
		 *          Scales a NormalRange input to between
		 *          outputMin and outputMax.
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @param {number} [outputMin=0] The output value when the input is 0. 
		 *  @param {number} [outputMax=1]	The output value when the input is 1. 
		 *  @example
		 * var scale = new Tone.Scale(50, 100);
		 * var signal = new Tone.Signal(0.5).connect(scale);
		 * //the output of scale equals 75
		 */
	    Tone.Scale = function (outputMin, outputMax) {
	        Tone.SignalBase.call(this);
	        /** 
			 *  @private
			 *  @type {number}
			 */
	        this._outputMin = Tone.defaultArg(outputMin, 0);
	        /** 
			 *  @private
			 *  @type {number}
			 */
	        this._outputMax = Tone.defaultArg(outputMax, 1);
	        /** 
			 *  @private
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._scale = this.input = new Tone.Multiply(1);
	        /** 
			 *  @private
			 *  @type {Tone.Add}
			 *  @private
			 */
	        this._add = this.output = new Tone.Add(0);
	        this._scale.connect(this._add);
	        this._setRange();
	    };
	    Tone.extend(Tone.Scale, Tone.SignalBase);
	    /**
		 * The minimum output value. This number is output when 
		 * the value input value is 0. 
		 * @memberOf Tone.Scale#
		 * @type {number}
		 * @name min
		 */
	    Object.defineProperty(Tone.Scale.prototype, 'min', {
	        get: function () {
	            return this._outputMin;
	        },
	        set: function (min) {
	            this._outputMin = min;
	            this._setRange();
	        }
	    });
	    /**
		 * The maximum output value. This number is output when 
		 * the value input value is 1. 
		 * @memberOf Tone.Scale#
		 * @type {number}
		 * @name max
		 */
	    Object.defineProperty(Tone.Scale.prototype, 'max', {
	        get: function () {
	            return this._outputMax;
	        },
	        set: function (max) {
	            this._outputMax = max;
	            this._setRange();
	        }
	    });
	    /**
		 *  set the values
		 *  @private
		 */
	    Tone.Scale.prototype._setRange = function () {
	        this._add.value = this._outputMin;
	        this._scale.value = this._outputMax - this._outputMin;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Scale} this
		 */
	    Tone.Scale.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._add.dispose();
	        this._add = null;
	        this._scale.dispose();
	        this._scale = null;
	        return this;
	    };
	    return Tone.Scale;
	});
	Module(function (Tone) {
	    /**
		 *  @class  Performs an exponential scaling on an input signal.
		 *          Scales a NormalRange value [0,1] exponentially
		 *          to the output range of outputMin to outputMax.
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @param {number} [outputMin=0] The output value when the input is 0.
		 *  @param {number} [outputMax=1]	The output value when the input is 1.
		 *  @param {number} [exponent=2] The exponent which scales the incoming signal.
		 *  @example
		 * var scaleExp = new Tone.ScaleExp(0, 100, 2);
		 * var signal = new Tone.Signal(0.5).connect(scaleExp);
		 */
	    Tone.ScaleExp = function (outputMin, outputMax, exponent) {
	        Tone.SignalBase.call(this);
	        /**
			 *  scale the input to the output range
			 *  @type {Tone.Scale}
			 *  @private
			 */
	        this._scale = this.output = new Tone.Scale(outputMin, outputMax);
	        /**
			 *  @private
			 *  @type {Tone.Pow}
			 *  @private
			 */
	        this._exp = this.input = new Tone.Pow(Tone.defaultArg(exponent, 2));
	        this._exp.connect(this._scale);
	    };
	    Tone.extend(Tone.ScaleExp, Tone.SignalBase);
	    /**
		 * Instead of interpolating linearly between the <code>min</code> and
		 * <code>max</code> values, setting the exponent will interpolate between
		 * the two values with an exponential curve.
		 * @memberOf Tone.ScaleExp#
		 * @type {number}
		 * @name exponent
		 */
	    Object.defineProperty(Tone.ScaleExp.prototype, 'exponent', {
	        get: function () {
	            return this._exp.value;
	        },
	        set: function (exp) {
	            this._exp.value = exp;
	        }
	    });
	    /**
		 * The minimum output value. This number is output when
		 * the value input value is 0.
		 * @memberOf Tone.ScaleExp#
		 * @type {number}
		 * @name min
		 */
	    Object.defineProperty(Tone.ScaleExp.prototype, 'min', {
	        get: function () {
	            return this._scale.min;
	        },
	        set: function (min) {
	            this._scale.min = min;
	        }
	    });
	    /**
		 * The maximum output value. This number is output when
		 * the value input value is 1.
		 * @memberOf Tone.ScaleExp#
		 * @type {number}
		 * @name max
		 */
	    Object.defineProperty(Tone.ScaleExp.prototype, 'max', {
	        get: function () {
	            return this._scale.max;
	        },
	        set: function (max) {
	            this._scale.max = max;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.ScaleExp} this
		 */
	    Tone.ScaleExp.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._scale.dispose();
	        this._scale = null;
	        this._exp.dispose();
	        this._exp = null;
	        return this;
	    };
	    return Tone.ScaleExp;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).
		 *  @extends {Tone}
		 *  @param {Time=} delayTime The delay applied to the incoming signal.
		 *  @param {Time=} maxDelay The maximum delay time.
		 */
	    Tone.Delay = function () {
	        var options = Tone.defaults(arguments, [
	            'delayTime',
	            'maxDelay'
	        ], Tone.Delay);
	        Tone.AudioNode.call(this);
	        /**
			 * The maximum delay time initialized with the node
			 * @type {Number}
			 * @private
			 */
	        this._maxDelay = Math.max(this.toSeconds(options.maxDelay), this.toSeconds(options.delayTime));
	        /**
			 *  The native delay node
			 *  @type {DelayNode}
			 *  @private
			 */
	        this._delayNode = this.input = this.output = this.context.createDelay(this._maxDelay);
	        /**
			 *  The amount of time the incoming signal is
			 *  delayed.
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = new Tone.Param({
	            'param': this._delayNode.delayTime,
	            'units': Tone.Type.Time,
	            'value': options.delayTime
	        });
	        this._readOnly('delayTime');
	    };
	    Tone.extend(Tone.Delay, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Delay.defaults = {
	        'maxDelay': 1,
	        'delayTime': 0
	    };
	    /**
		 * The maximum delay time. This cannot be changed. The value is passed into the constructor.
		 * @memberof Tone.Delay#
		 * @type {Time}
		 * @name maxDelay
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Delay.prototype, 'maxDelay', {
	        get: function () {
	            return this._maxDelay;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.Delay}  this
		 */
	    Tone.Delay.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._delayNode.disconnect();
	        this._delayNode = null;
	        this._writable('delayTime');
	        this.delayTime = null;
	        return this;
	    };
	    return Tone.Delay;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Comb filters are basic building blocks for physical modeling. Read more
		 *         about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Time|Object} [delayTime] The delay time of the filter.
		 *  @param {NormalRange=} resonance The amount of feedback the filter has.
		 */
	    Tone.FeedbackCombFilter = function () {
	        var options = Tone.defaults(arguments, [
	            'delayTime',
	            'resonance'
	        ], Tone.FeedbackCombFilter);
	        Tone.AudioNode.call(this);
	        /**
			 *  the delay node
			 *  @type {DelayNode}
			 *  @private
			 */
	        this._delay = this.input = this.output = new Tone.Delay(options.delayTime);
	        /**
			 *  The amount of delay of the comb filter.
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = this._delay.delayTime;
	        /**
			 *  the feedback node
			 *  @type {GainNode}
			 *  @private
			 */
	        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);
	        /**
			 *  The amount of feedback of the delayed signal.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.resonance = this._feedback.gain;
	        this._delay.chain(this._feedback, this._delay);
	        this._readOnly([
	            'resonance',
	            'delayTime'
	        ]);
	    };
	    Tone.extend(Tone.FeedbackCombFilter, Tone.AudioNode);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.FeedbackCombFilter.defaults = {
	        'delayTime': 0.1,
	        'resonance': 0.5
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.FeedbackCombFilter} this
		 */
	    Tone.FeedbackCombFilter.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'resonance',
	            'delayTime'
	        ]);
	        this._delay.dispose();
	        this._delay = null;
	        this.delayTime = null;
	        this._feedback.dispose();
	        this._feedback = null;
	        this.resonance = null;
	        return this;
	    };
	    return Tone.FeedbackCombFilter;
	});
	Module(function (Tone) {
	    /**
		 *  @class  Get the current waveform data of the connected audio source.
		 *  @extends {Tone.AudioNode}
		 *  @param {Number=} size The size of the FFT. Value must be a power of
		 *                       two in the range 32 to 32768.
		 */
	    Tone.FFT = function () {
	        var options = Tone.defaults(arguments, ['size'], Tone.FFT);
	        options.type = Tone.Analyser.Type.FFT;
	        Tone.AudioNode.call(this);
	        /**
			 *  The analyser node.
			 *  @private
			 *  @type {Tone.Analyser}
			 */
	        this._analyser = this.input = this.output = new Tone.Analyser(options);
	    };
	    Tone.extend(Tone.FFT, Tone.AudioNode);
	    /**
		 *  The default values.
		 *  @type {Object}
		 *  @const
		 */
	    Tone.FFT.defaults = { 'size': 1024 };
	    /**
		 *  Gets the waveform of the audio source. Returns the waveform data
		 *  of length [size](#size) as a Float32Array with values between -1 and 1.
		 *  @returns {TypedArray}
		 */
	    Tone.FFT.prototype.getValue = function () {
	        return this._analyser.getValue();
	    };
	    /**
		 *  The size of analysis. This must be a power of two in the range 32 to 32768.
		 *  @memberOf Tone.FFT#
		 *  @type {Number}
		 *  @name size
		 */
	    Object.defineProperty(Tone.FFT.prototype, 'size', {
	        get: function () {
	            return this._analyser.size;
	        },
	        set: function (size) {
	            this._analyser.size = size;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.FFT}  this
		 */
	    Tone.FFT.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._analyser.dispose();
	        this._analyser = null;
	    };
	    return Tone.FFT;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Return the absolute value of an incoming signal.
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @example
		 * var signal = new Tone.Signal(-1);
		 * var abs = new Tone.Abs();
		 * signal.connect(abs);
		 * //the output of abs is 1.
		 */
	    Tone.Abs = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  @type {Tone.LessThan}
			 *  @private
			 */
	        this._abs = this.input = this.output = new Tone.WaveShaper(function (val) {
	            if (Math.abs(val) < 0.001) {
	                return 0;
	            } else {
	                return Math.abs(val);
	            }
	        }, 1024);
	    };
	    Tone.extend(Tone.Abs, Tone.SignalBase);
	    /**
		 *  dispose method
		 *  @returns {Tone.Abs} this
		 */
	    Tone.Abs.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._abs.dispose();
	        this._abs = null;
	        return this;
	    };
	    return Tone.Abs;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Follower is a  crude envelope follower which will follow
		 *          the amplitude of an incoming signal.
		 *          Take care with small (< 0.02) attack or decay values
		 *          as follower has some ripple which is exaggerated
		 *          at these values. Read more about envelope followers (also known
		 *          as envelope detectors) on [Wikipedia](https://en.wikipedia.org/wiki/Envelope_detector).
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Time|Object} [attack] The rate at which the follower rises.
		 *  @param {Time=} release The rate at which the folower falls.
		 *  @example
		 * var follower = new Tone.Follower(0.2, 0.4);
		 */
	    Tone.Follower = function () {
	        var options = Tone.defaults(arguments, [
	            'attack',
	            'release'
	        ], Tone.Follower);
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 1);
	        /**
			 *  @type {Tone.Abs}
			 *  @private
			 */
	        this._abs = new Tone.Abs();
	        /**
			 *  the lowpass filter which smooths the input
			 *  @type {BiquadFilterNode}
			 *  @private
			 */
	        this._filter = this.context.createBiquadFilter();
	        this._filter.type = 'lowpass';
	        this._filter.frequency.value = 0;
	        this._filter.Q.value = -100;
	        /**
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._frequencyValues = new Tone.WaveShaper();
	        /**
			 *  @type {Tone.Subtract}
			 *  @private
			 */
	        this._sub = new Tone.Subtract();
	        /**
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._delay = new Tone.Delay(this.blockTime);
	        /**
			 *  this keeps it far from 0, even for very small differences
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._mult = new Tone.Multiply(10000);
	        /**
			 *  @private
			 *  @type {number}
			 */
	        this._attack = options.attack;
	        /**
			 *  @private
			 *  @type {number}
			 */
	        this._release = options.release;
	        //the smoothed signal to get the values
	        this.input.chain(this._abs, this._filter, this.output);
	        //the difference path
	        this._abs.connect(this._sub, 0, 1);
	        this._filter.chain(this._delay, this._sub);
	        //threshold the difference and use the thresh to set the frequency
	        this._sub.chain(this._mult, this._frequencyValues, this._filter.frequency);
	        //set the attack and release values in the table
	        this._setAttackRelease(this._attack, this._release);
	    };
	    Tone.extend(Tone.Follower, Tone.AudioNode);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Follower.defaults = {
	        'attack': 0.05,
	        'release': 0.5
	    };
	    /**
		 *  sets the attack and release times in the wave shaper
		 *  @param   {Time} attack
		 *  @param   {Time} release
		 *  @private
		 */
	    Tone.Follower.prototype._setAttackRelease = function (attack, release) {
	        var minTime = this.blockTime;
	        attack = Tone.Time(attack).toFrequency();
	        release = Tone.Time(release).toFrequency();
	        attack = Math.max(attack, minTime);
	        release = Math.max(release, minTime);
	        this._frequencyValues.setMap(function (val) {
	            if (val <= 0) {
	                return attack;
	            } else {
	                return release;
	            }
	        });
	    };
	    /**
		 * The attack time.
		 * @memberOf Tone.Follower#
		 * @type {Time}
		 * @name attack
		 */
	    Object.defineProperty(Tone.Follower.prototype, 'attack', {
	        get: function () {
	            return this._attack;
	        },
	        set: function (attack) {
	            this._attack = attack;
	            this._setAttackRelease(this._attack, this._release);
	        }
	    });
	    /**
		 * The release time.
		 * @memberOf Tone.Follower#
		 * @type {Time}
		 * @name release
		 */
	    Object.defineProperty(Tone.Follower.prototype, 'release', {
	        get: function () {
	            return this._release;
	        },
	        set: function (release) {
	            this._release = release;
	            this._setAttackRelease(this._attack, this._release);
	        }
	    });
	    /**
		 *  Borrows the connect method from Signal so that the output can be used
		 *  as a Tone.Signal control signal.
		 *  @function
		 */
	    Tone.Follower.prototype.connect = Tone.SignalBase.prototype.connect;
	    /**
		 *  dispose
		 *  @returns {Tone.Follower} this
		 */
	    Tone.Follower.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._filter.disconnect();
	        this._filter = null;
	        this._frequencyValues.disconnect();
	        this._frequencyValues = null;
	        this._delay.dispose();
	        this._delay = null;
	        this._sub.disconnect();
	        this._sub = null;
	        this._abs.dispose();
	        this._abs = null;
	        this._mult.dispose();
	        this._mult = null;
	        this._curve = null;
	        return this;
	    };
	    return Tone.Follower;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.ScaledEnvelop is an envelope which can be scaled
		 *         to any range. It's useful for applying an envelope
		 *         to a frequency or any other non-NormalRange signal
		 *         parameter.
		 *
		 *  @extends {Tone.Envelope}
		 *  @constructor
		 *  @param {Time|Object} [attack]	the attack time in seconds
		 *  @param {Time} [decay]	the decay time in seconds
		 *  @param {number} [sustain] 	a percentage (0-1) of the full amplitude
		 *  @param {Time} [release]	the release time in seconds
		 *  @example
		 *  var scaledEnv = new Tone.ScaledEnvelope({
		 *  	"attack" : 0.2,
		 *  	"min" : 200,
		 *  	"max" : 2000
		 *  });
		 *  scaledEnv.connect(oscillator.frequency);
		 */
	    Tone.ScaledEnvelope = function () {
	        //get all of the defaults
	        var options = Tone.defaults(arguments, [
	            'attack',
	            'decay',
	            'sustain',
	            'release'
	        ], Tone.Envelope);
	        Tone.Envelope.call(this, options);
	        options = Tone.defaultArg(options, Tone.ScaledEnvelope.defaults);
	        /**
			 *  scale the incoming signal by an exponent
			 *  @type {Tone.Pow}
			 *  @private
			 */
	        this._exp = this.output = new Tone.Pow(options.exponent);
	        /**
			 *  scale the signal to the desired range
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._scale = this.output = new Tone.Scale(options.min, options.max);
	        this._sig.chain(this._exp, this._scale);
	    };
	    Tone.extend(Tone.ScaledEnvelope, Tone.Envelope);
	    /**
		 *  the default parameters
		 *  @static
		 */
	    Tone.ScaledEnvelope.defaults = {
	        'min': 0,
	        'max': 1,
	        'exponent': 1
	    };
	    /**
		 * The envelope's min output value. This is the value which it
		 * starts at.
		 * @memberOf Tone.ScaledEnvelope#
		 * @type {number}
		 * @name min
		 */
	    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'min', {
	        get: function () {
	            return this._scale.min;
	        },
	        set: function (min) {
	            this._scale.min = min;
	        }
	    });
	    /**
		 * The envelope's max output value. In other words, the value
		 * at the peak of the attack portion of the envelope.
		 * @memberOf Tone.ScaledEnvelope#
		 * @type {number}
		 * @name max
		 */
	    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'max', {
	        get: function () {
	            return this._scale.max;
	        },
	        set: function (max) {
	            this._scale.max = max;
	        }
	    });
	    /**
		 * The envelope's exponent value.
		 * @memberOf Tone.ScaledEnvelope#
		 * @type {number}
		 * @name exponent
		 */
	    Object.defineProperty(Tone.ScaledEnvelope.prototype, 'exponent', {
	        get: function () {
	            return this._exp.value;
	        },
	        set: function (exp) {
	            this._exp.value = exp;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.ScaledEnvelope} this
		 */
	    Tone.ScaledEnvelope.prototype.dispose = function () {
	        Tone.Envelope.prototype.dispose.call(this);
	        this._scale.dispose();
	        this._scale = null;
	        this._exp.dispose();
	        this._exp = null;
	        return this;
	    };
	    return Tone.ScaledEnvelope;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.FrequencyEnvelope is a Tone.ScaledEnvelope, but instead of `min` and `max`
		 *         it's got a `baseFrequency` and `octaves` parameter.
		 *
		 *  @extends {Tone.Envelope}
		 *  @constructor
		 *  @param {Time|Object} [attack]	the attack time in seconds
		 *  @param {Time} [decay]	the decay time in seconds
		 *  @param {number} [sustain] 	a percentage (0-1) of the full amplitude
		 *  @param {Time} [release]	the release time in seconds
		 *  @example
		 *  var freqEnv = new Tone.FrequencyEnvelope({
		 *  	"attack" : 0.2,
		 *  	"baseFrequency" : "C2",
		 *  	"octaves" : 4
		 *  });
		 *  freqEnv.connect(oscillator.frequency);
		 */
	    Tone.FrequencyEnvelope = function () {
	        var options = Tone.defaults(arguments, [
	            'attack',
	            'decay',
	            'sustain',
	            'release'
	        ], Tone.Envelope);
	        Tone.ScaledEnvelope.call(this, options);
	        //merge it with the frequency envelope defaults
	        options = Tone.defaultArg(options, Tone.FrequencyEnvelope.defaults);
	        /**
			 *  Stores the octave value
			 *  @type {Positive}
			 *  @private
			 */
	        this._octaves = options.octaves;
	        //setup
	        this.baseFrequency = options.baseFrequency;
	        this.octaves = options.octaves;
	    };
	    Tone.extend(Tone.FrequencyEnvelope, Tone.Envelope);
	    /**
		 *  the default parameters
		 *  @static
		 */
	    Tone.FrequencyEnvelope.defaults = {
	        'baseFrequency': 200,
	        'octaves': 4,
	        'exponent': 2
	    };
	    /**
		 * The envelope's mininum output value. This is the value which it
		 * starts at.
		 * @memberOf Tone.FrequencyEnvelope#
		 * @type {Frequency}
		 * @name baseFrequency
		 */
	    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'baseFrequency', {
	        get: function () {
	            return this._scale.min;
	        },
	        set: function (min) {
	            this._scale.min = this.toFrequency(min);
	            //also update the octaves
	            this.octaves = this._octaves;
	        }
	    });
	    /**
		 * The number of octaves above the baseFrequency that the
		 * envelope will scale to.
		 * @memberOf Tone.FrequencyEnvelope#
		 * @type {Positive}
		 * @name octaves
		 */
	    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'octaves', {
	        get: function () {
	            return this._octaves;
	        },
	        set: function (octaves) {
	            this._octaves = octaves;
	            this._scale.max = this.baseFrequency * Math.pow(2, octaves);
	        }
	    });
	    /**
		 * The envelope's exponent value.
		 * @memberOf Tone.FrequencyEnvelope#
		 * @type {number}
		 * @name exponent
		 */
	    Object.defineProperty(Tone.FrequencyEnvelope.prototype, 'exponent', {
	        get: function () {
	            return this._exp.value;
	        },
	        set: function (exp) {
	            this._exp.value = exp;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.FrequencyEnvelope} this
		 */
	    Tone.FrequencyEnvelope.prototype.dispose = function () {
	        Tone.ScaledEnvelope.prototype.dispose.call(this);
	        return this;
	    };
	    return Tone.FrequencyEnvelope;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  GreaterThanZero outputs 1 when the input is strictly greater than zero
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @example
		 * var gt0 = new Tone.GreaterThanZero();
		 * var sig = new Tone.Signal(0.01).connect(gt0);
		 * //the output of gt0 is 1.
		 * sig.value = 0;
		 * //the output of gt0 is 0.
		 */
	    Tone.GreaterThanZero = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  @type {Tone.WaveShaper}
			 *  @private
			 */
	        this._thresh = this.output = new Tone.WaveShaper(function (val) {
	            if (val <= 0) {
	                return 0;
	            } else {
	                return 1;
	            }
	        }, 127);
	        /**
			 *  scale the first thresholded signal by a large value.
			 *  this will help with values which are very close to 0
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._scale = this.input = new Tone.Multiply(10000);
	        //connections
	        this._scale.connect(this._thresh);
	    };
	    Tone.extend(Tone.GreaterThanZero, Tone.SignalBase);
	    /**
		 *  dispose method
		 *  @returns {Tone.GreaterThanZero} this
		 */
	    Tone.GreaterThanZero.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._scale.dispose();
	        this._scale = null;
	        this._thresh.dispose();
	        this._thresh = null;
	        return this;
	    };
	    return Tone.GreaterThanZero;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Output 1 if the signal is greater than the value, otherwise outputs 0.
		 *          can compare two signals or a signal and a number.
		 *
		 *  @constructor
		 *  @extends {Tone.Signal}
		 *  @param {number} [value=0] the value to compare to the incoming signal
		 *  @example
		 * var gt = new Tone.GreaterThan(2);
		 * var sig = new Tone.Signal(4).connect(gt);
		 * //output of gt is equal 1.
		 */
	    Tone.GreaterThan = function (value) {
	        Tone.Signal.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  subtract the amount from the incoming signal
			 *  @type {Tone.Subtract}
			 *  @private
			 */
	        this._param = this.input[0] = new Tone.Subtract(value);
	        this.input[1] = this._param.input[1];
	        /**
			 *  compare that amount to zero
			 *  @type {Tone.GreaterThanZero}
			 *  @private
			 */
	        this._gtz = this.output = new Tone.GreaterThanZero();
	        //connect
	        this._param.connect(this._gtz);
	    };
	    Tone.extend(Tone.GreaterThan, Tone.Signal);
	    /**
		 *  dispose method
		 *  @returns {Tone.GreaterThan} this
		 */
	    Tone.GreaterThan.prototype.dispose = function () {
	        Tone.Signal.prototype.dispose.call(this);
	        this._gtz.dispose();
	        this._gtz = null;
	        return this;
	    };
	    return Tone.GreaterThan;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Gate only passes a signal through when the incoming
		 *          signal exceeds a specified threshold. To do this, Gate uses
		 *          a Tone.Follower to follow the amplitude of the incoming signal.
		 *          A common implementation of this class is a [Noise Gate](https://en.wikipedia.org/wiki/Noise_gate).
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Decibels|Object} [threshold] The threshold above which the gate will open.
		 *  @param {Time=} attack The follower's attack time
		 *  @param {Time=} release The follower's release time
		 *  @example
		 * var gate = new Tone.Gate(-30, 0.2, 0.3).toMaster();
		 * var mic = new Tone.UserMedia().connect(gate);
		 * //the gate will only pass through the incoming
		 * //signal when it's louder than -30db
		 */
	    Tone.Gate = function () {
	        var options = Tone.defaults(arguments, [
	            'threshold',
	            'attack',
	            'release'
	        ], Tone.Gate);
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 1);
	        /**
			 *  @type {Tone.Follower}
			 *  @private
			 */
	        this._follower = new Tone.Follower(options.attack, options.release);
	        /**
			 *  @type {Tone.GreaterThan}
			 *  @private
			 */
	        this._gt = new Tone.GreaterThan(Tone.dbToGain(options.threshold));
	        //the connections
	        this.input.connect(this.output);
	        //the control signal
	        this.input.chain(this._gt, this._follower, this.output.gain);
	    };
	    Tone.extend(Tone.Gate, Tone.AudioNode);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Gate.defaults = {
	        'attack': 0.1,
	        'release': 0.1,
	        'threshold': -40
	    };
	    /**
		 * The threshold of the gate in decibels
		 * @memberOf Tone.Gate#
		 * @type {Decibels}
		 * @name threshold
		 */
	    Object.defineProperty(Tone.Gate.prototype, 'threshold', {
	        get: function () {
	            return Tone.gainToDb(this._gt.value);
	        },
	        set: function (thresh) {
	            this._gt.value = Tone.dbToGain(thresh);
	        }
	    });
	    /**
		 * The attack speed of the gate
		 * @memberOf Tone.Gate#
		 * @type {Time}
		 * @name attack
		 */
	    Object.defineProperty(Tone.Gate.prototype, 'attack', {
	        get: function () {
	            return this._follower.attack;
	        },
	        set: function (attackTime) {
	            this._follower.attack = attackTime;
	        }
	    });
	    /**
		 * The release speed of the gate
		 * @memberOf Tone.Gate#
		 * @type {Time}
		 * @name release
		 */
	    Object.defineProperty(Tone.Gate.prototype, 'release', {
	        get: function () {
	            return this._follower.release;
	        },
	        set: function (releaseTime) {
	            this._follower.release = releaseTime;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.Gate} this
		 */
	    Tone.Gate.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._follower.dispose();
	        this._gt.dispose();
	        this._follower = null;
	        this._gt = null;
	        return this;
	    };
	    return Tone.Gate;
	});
	Module(function (Tone) {
	    /**
		 * @class Tone.TickSignal extends Tone.Signal, but adds the capability
		 *        to calculate the number of elapsed ticks. exponential and target curves
		 *        are approximated with multiple linear ramps.
		 *
		 *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)
		 *        describing integrating timing functions for tempo calculations.
		 *
		 * @param {Number} value The initial value of the signal
		 * @extends {Tone.Signal}
		 */
	    Tone.TickSignal = function (value) {
	        value = Tone.defaultArg(value, 1);
	        Tone.Signal.call(this, {
	            'units': Tone.Type.Ticks,
	            'value': value
	        });
	        //extend the memory
	        this._events.memory = Infinity;
	        //clear the clock from the beginning
	        this.cancelScheduledValues(0);
	        //set an initial event
	        this._events.add({
	            'type': Tone.Param.AutomationType.SetValue,
	            'time': 0,
	            'value': value
	        });
	    };
	    Tone.extend(Tone.TickSignal, Tone.Signal);
	    /**
		 * Wraps Tone.Signal methods so that they also
		 * record the ticks.
		 * @param  {Function} method
		 * @return {Function}
		 * @private
		 */
	    function _wrapScheduleMethods(method) {
	        return function (value, time) {
	            time = this.toSeconds(time);
	            method.apply(this, arguments);
	            var event = this._events.get(time);
	            var previousEvent = this._events.previousEvent(event);
	            var ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);
	            event.ticks = Math.max(ticksUntilTime, 0);
	            return this;
	        };
	    }
	    Tone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);
	    Tone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);
	    /**
		 *  Start exponentially approaching the target value at the given time with
		 *  a rate having the given time constant.
		 *  @param {number} value
		 *  @param {Time} startTime
		 *  @param {number} timeConstant
		 *  @returns {Tone.TickSignal} this
		 */
	    Tone.TickSignal.prototype.setTargetAtTime = function (value, time, constant) {
	        //aproximate it with multiple linear ramps
	        time = this.toSeconds(time);
	        this.setRampPoint(time);
	        value = this._fromUnits(value);
	        //start from previously scheduled value
	        var prevEvent = this._events.get(time);
	        var segments = Math.round(Math.max(1 / constant, 1));
	        for (var i = 0; i <= segments; i++) {
	            var segTime = constant * i + time;
	            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);
	            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);
	        }
	        return this;
	    };
	    /**
		 *  Schedules an exponential continuous change in parameter value from
		 *  the previous scheduled parameter value to the given value.
		 *  @param  {number} value
		 *  @param  {Time} endTime
		 *  @returns {Tone.TickSignal} this
		 */
	    Tone.TickSignal.prototype.exponentialRampToValueAtTime = function (value, time) {
	        //aproximate it with multiple linear ramps
	        time = this.toSeconds(time);
	        value = this._fromUnits(value);
	        //start from previously scheduled value
	        var prevEvent = this._events.get(time);
	        if (prevEvent === null) {
	            prevEvent = {
	                'value': this._initialValue,
	                'time': 0
	            };
	        }
	        //approx 10 segments per second
	        var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
	        var segmentDur = (time - prevEvent.time) / segments;
	        for (var i = 0; i <= segments; i++) {
	            var segTime = segmentDur * i + prevEvent.time;
	            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);
	            this.linearRampToValueAtTime(this._toUnits(rampVal), segTime);
	        }
	        return this;
	    };
	    /**
		 * Returns the tick value at the time. Takes into account
		 * any automation curves scheduled on the signal.
		 * @private
		 * @param  {Time} time The time to get the tick count at
		 * @return {Ticks}      The number of ticks which have elapsed at the time
		 *                          given any automations.
		 */
	    Tone.TickSignal.prototype._getTicksUntilEvent = function (event, time) {
	        if (event === null) {
	            event = {
	                'ticks': 0,
	                'time': 0
	            };
	        } else if (Tone.isUndef(event.ticks)) {
	            var previousEvent = this._events.previousEvent(event);
	            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
	        }
	        var val0 = this.getValueAtTime(event.time);
	        var val1 = this.getValueAtTime(time);
	        //if it's right on the line, take the previous value
	        if (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue) {
	            val1 = this.getValueAtTime(time - this.sampleTime);
	        }
	        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
	    };
	    /**
		 * Returns the tick value at the time. Takes into account
		 * any automation curves scheduled on the signal.
		 * @param  {Time} time The time to get the tick count at
		 * @return {Ticks}      The number of ticks which have elapsed at the time
		 *                          given any automations.
		 */
	    Tone.TickSignal.prototype.getTicksAtTime = function (time) {
	        time = this.toSeconds(time);
	        var event = this._events.get(time);
	        return Math.max(this._getTicksUntilEvent(event, time), 0);
	    };
	    /**
		 * Return the elapsed time of the number of ticks from the given time
		 * @param {Ticks} ticks The number of ticks to calculate
		 * @param  {Time} time The time to get the next tick from
		 * @return {Seconds} The duration of the number of ticks from the given time in seconds
		 */
	    Tone.TickSignal.prototype.getDurationOfTicks = function (ticks, time) {
	        time = this.toSeconds(time);
	        var currentTick = this.getTicksAtTime(time);
	        return this.getTimeOfTick(currentTick + ticks) - time;
	    };
	    /**
		 * Given a tick, returns the time that tick occurs at.
		 * @param  {Ticks} tick
		 * @return {Time}      The time that the tick occurs.
		 */
	    Tone.TickSignal.prototype.getTimeOfTick = function (tick) {
	        var before = this._events.get(tick, 'ticks');
	        var after = this._events.getAfter(tick, 'ticks');
	        if (before && before.ticks === tick) {
	            return before.time;
	        } else if (before && after && after.type === Tone.Param.AutomationType.Linear && before.value !== after.value) {
	            var val0 = this.getValueAtTime(before.time);
	            var val1 = this.getValueAtTime(after.time);
	            var delta = (val1 - val0) / (after.time - before.time);
	            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
	            var sol1 = (-val0 + k) / delta;
	            var sol2 = (-val0 - k) / delta;
	            return (sol1 > 0 ? sol1 : sol2) + before.time;
	        } else if (before) {
	            if (before.value === 0) {
	                return Infinity;
	            } else {
	                return before.time + (tick - before.ticks) / before.value;
	            }
	        } else {
	            return tick / this._initialValue;
	        }
	    };
	    /**
		 * Convert some number of ticks their the duration in seconds accounting
		 * for any automation curves starting at the given time.
		 * @param  {Ticks} ticks The number of ticks to convert to seconds.
		 * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.
		 * @return {Tone.Time}       The duration in seconds of the ticks.
		 */
	    Tone.TickSignal.prototype.ticksToTime = function (ticks, when) {
	        when = this.toSeconds(when);
	        return new Tone.Time(this.getDurationOfTicks(ticks, when));
	    };
	    /**
		 * The inverse of [ticksToTime](#tickstotime). Convert a duration in
		 * seconds to the corresponding number of ticks accounting for any
		 * automation curves starting at the given time.
		 * @param  {Time} duration The time interval to convert to ticks.
		 * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.
		 * @return {Tone.Ticks}          The duration in ticks.
		 */
	    Tone.TickSignal.prototype.timeToTicks = function (duration, when) {
	        when = this.toSeconds(when);
	        duration = this.toSeconds(duration);
	        var startTicks = this.getTicksAtTime(when);
	        var endTicks = this.getTicksAtTime(when + duration);
	        return new Tone.Ticks(endTicks - startTicks);
	    };
	    return Tone.TickSignal;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  A Timeline State. Provides the methods: <code>setStateAtTime("state", time)</code>
		 *          and <code>getValueAtTime(time)</code>.
		 *
		 *  @extends {Tone.Timeline}
		 *  @param {String} initial The initial state of the TimelineState. 
		 *                          Defaults to <code>undefined</code>
		 */
	    Tone.TimelineState = function (initial) {
	        Tone.Timeline.call(this);
	        /**
			 *  The initial state
			 *  @private
			 *  @type {String}
			 */
	        this._initial = initial;
	    };
	    Tone.extend(Tone.TimelineState, Tone.Timeline);
	    /**
		 *  Returns the scheduled state scheduled before or at
		 *  the given time.
		 *  @param  {Number}  time  The time to query.
		 *  @return  {String}  The name of the state input in setStateAtTime.
		 */
	    Tone.TimelineState.prototype.getValueAtTime = function (time) {
	        var event = this.get(time);
	        if (event !== null) {
	            return event.state;
	        } else {
	            return this._initial;
	        }
	    };
	    /**
		 *  Add a state to the timeline.
		 *  @param  {String}  state The name of the state to set.
		 *  @param  {Number}  time  The time to query.
		 *  @returns {Tone.TimelineState} this
		 */
	    Tone.TimelineState.prototype.setStateAtTime = function (state, time) {
	        //all state changes need to be >= the previous state time
	        //TODO throw error if time < the previous event time
	        this.add({
	            'state': state,
	            'time': time
	        });
	        return this;
	    };
	    /**
		 *  Return the event before the time with the given state
		 *  @param {Tone.State} state The state to look for
		 *  @param  {Time}  time  When to check before			
		 *  @return  {Object}  The event with the given state before the time
		 */
	    Tone.TimelineState.prototype.getLastState = function (state, time) {
	        time = this.toSeconds(time);
	        var index = this._search(time);
	        for (var i = index; i >= 0; i--) {
	            var event = this._timeline[i];
	            if (event.state === state) {
	                return event;
	            }
	        }
	    };
	    /**
		 *  Return the event after the time with the given state
		 *  @param {Tone.State} state The state to look for
		 *  @param  {Time}  time  When to check from
		 *  @return  {Object}  The event with the given state after the time
		 */
	    Tone.TimelineState.prototype.getNextState = function (state, time) {
	        time = this.toSeconds(time);
	        var index = this._search(time);
	        if (index !== -1) {
	            for (var i = index; i < this._timeline.length; i++) {
	                var event = this._timeline[i];
	                if (event.state === state) {
	                    return event;
	                }
	            }
	        }
	    };
	    return Tone.TimelineState;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with
		 *  		complex automation curves.
		 *
		 * 	@constructor
	     *  @param {Frequency} frequency The initial frequency that the signal ticks at
		 *  @extends {Tone}
		 */
	    Tone.TickSource = function () {
	        var options = Tone.defaults(arguments, ['frequency'], Tone.TickSource);
	        /**
			 *  The frequency the callback function should be invoked.
			 *  @type  {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.TickSignal(options.frequency, Tone.Type.Frequency);
	        this._readOnly('frequency');
	        /**
			 *  The state timeline
			 *  @type {Tone.TimelineState}
			 *  @private
			 */
	        this._state = new Tone.TimelineState(Tone.State.Stopped);
	        this._state.setStateAtTime(Tone.State.Stopped, 0);
	        /**
			 * The offset values of the ticks
			 * @type {Tone.Timeline}
			 * @private
			 */
	        this._tickOffset = new Tone.Timeline();
	        //add the first event
	        this.setTicksAtTime(0, 0);
	    };
	    Tone.extend(Tone.TickSource);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.TickSource.defaults = { 'frequency': 1 };
	    /**
		 *  Returns the playback state of the source, either "started", "stopped" or "paused".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.TickSource#
		 *  @name state
		 */
	    Object.defineProperty(Tone.TickSource.prototype, 'state', {
	        get: function () {
	            return this._state.getValueAtTime(this.now());
	        }
	    });
	    /**
		 *  Start the clock at the given time. Optionally pass in an offset
		 *  of where to start the tick counter from.
		 *  @param  {Time=}  time    The time the clock should start
		 *  @param {Ticks=0} offset The number of ticks to start the source at
		 *  @return  {Tone.TickSource}  this
		 */
	    Tone.TickSource.prototype.start = function (time, offset) {
	        time = this.toSeconds(time);
	        if (this._state.getValueAtTime(time) !== Tone.State.Started) {
	            this._state.setStateAtTime(Tone.State.Started, time);
	            if (Tone.isDefined(offset)) {
	                this.setTicksAtTime(offset, time);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Stop the clock. Stopping the clock resets the tick counter to 0.
		 *  @param {Time} [time=now] The time when the clock should stop.
		 *  @returns {Tone.TickSource} this
		 *  @example
		 * clock.stop();
		 */
	    Tone.TickSource.prototype.stop = function (time) {
	        time = this.toSeconds(time);
	        //cancel the previous stop
	        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {
	            var event = this._state.get(time);
	            if (event.time > 0) {
	                this._tickOffset.cancel(event.time);
	                this._state.cancel(event.time);
	            }
	        }
	        this._state.cancel(time);
	        this._state.setStateAtTime(Tone.State.Stopped, time);
	        this.setTicksAtTime(0, time);
	        return this;
	    };
	    /**
		 *  Pause the clock. Pausing does not reset the tick counter.
		 *  @param {Time} [time=now] The time when the clock should stop.
		 *  @returns {Tone.TickSource} this
		 */
	    Tone.TickSource.prototype.pause = function (time) {
	        time = this.toSeconds(time);
	        if (this._state.getValueAtTime(time) === Tone.State.Started) {
	            this._state.setStateAtTime(Tone.State.Paused, time);
	        }
	        return this;
	    };
	    /**
		 *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.
		 *  @param {Time} [time=now] When to clear the events after
		 *  @returns {Tone.TickSource} this
		 */
	    Tone.TickSource.prototype.cancel = function (time) {
	        time = this.toSeconds(time);
	        this._state.cancel(time);
	        this._tickOffset.cancel(time);
	        return this;
	    };
	    /**
		 * Get the elapsed ticks at the given time
		 * @param  {Time} time  When to get the tick value
		 * @return {Ticks}     The number of ticks
		 */
	    Tone.TickSource.prototype.getTicksAtTime = function (time) {
	        time = this.toSeconds(time);
	        var stopEvent = this._state.getLastState(Tone.State.Stopped, time);
	        //this event allows forEachBetween to iterate until the current time
	        var tmpEvent = {
	            state: Tone.State.Paused,
	            time: time
	        };
	        this._state.add(tmpEvent);
	        //keep track of the previous offset event
	        var lastState = stopEvent;
	        var elapsedTicks = 0;
	        //iterate through all the events since the last stop
	        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {
	            var periodStartTime = lastState.time;
	            //if there is an offset event in this period use that
	            var offsetEvent = this._tickOffset.get(e.time);
	            if (offsetEvent.time >= lastState.time) {
	                elapsedTicks = offsetEvent.ticks;
	                periodStartTime = offsetEvent.time;
	            }
	            if (lastState.state === Tone.State.Started && e.state !== Tone.State.Started) {
	                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);
	            }
	            lastState = e;
	        }.bind(this));
	        //remove the temporary event
	        this._state.remove(tmpEvent);
	        //return the ticks
	        return elapsedTicks;
	    };
	    /**
		 *  The number of times the callback was invoked. Starts counting at 0
		 *  and increments after the callback was invoked. Returns -1 when stopped.
		 *  @memberOf Tone.TickSource#
		 *  @name ticks
		 *  @type {Ticks}
		 */
	    Object.defineProperty(Tone.TickSource.prototype, 'ticks', {
	        get: function () {
	            return this.getTicksAtTime(this.now());
	        },
	        set: function (t) {
	            this.setTicksAtTime(t, this.now());
	        }
	    });
	    /**
		 *  The time since ticks=0 that the TickSource has been running. Accounts
		 *  for tempo curves
		 *  @memberOf Tone.TickSource#
		 *  @name seconds
		 *  @type {Seconds}
		 */
	    Object.defineProperty(Tone.TickSource.prototype, 'seconds', {
	        get: function () {
	            return this.getSecondsAtTime(this.now());
	        },
	        set: function (s) {
	            var now = this.now();
	            var ticks = this.frequency.timeToTicks(s, now);
	            this.setTicksAtTime(ticks, now);
	        }
	    });
	    /**
		 *  Return the elapsed seconds at the given time.
		 *  @param  {Time}  time  When to get the elapsed seconds
		 *  @return  {Seconds}  The number of elapsed seconds
		 */
	    Tone.TickSource.prototype.getSecondsAtTime = function (time) {
	        time = this.toSeconds(time);
	        var stopEvent = this._state.getLastState(Tone.State.Stopped, time);
	        //this event allows forEachBetween to iterate until the current time
	        var tmpEvent = {
	            state: Tone.State.Paused,
	            time: time
	        };
	        this._state.add(tmpEvent);
	        //keep track of the previous offset event
	        var lastState = stopEvent;
	        var elapsedSeconds = 0;
	        //iterate through all the events since the last stop
	        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {
	            var periodStartTime = lastState.time;
	            //if there is an offset event in this period use that
	            var offsetEvent = this._tickOffset.get(e.time);
	            if (offsetEvent.time >= lastState.time) {
	                elapsedSeconds = offsetEvent.seconds;
	                periodStartTime = offsetEvent.time;
	            }
	            if (lastState.state === Tone.State.Started && e.state !== Tone.State.Started) {
	                elapsedSeconds += e.time - periodStartTime;
	            }
	            lastState = e;
	        }.bind(this));
	        //remove the temporary event
	        this._state.remove(tmpEvent);
	        //return the ticks
	        return elapsedSeconds;
	    };
	    /**
		 * Set the clock's ticks at the given time.
		 * @param  {Ticks} ticks The tick value to set
		 * @param  {Time} time  When to set the tick value
		 * @return {Tone.TickSource}       this
		 */
	    Tone.TickSource.prototype.setTicksAtTime = function (ticks, time) {
	        time = this.toSeconds(time);
	        this._tickOffset.cancel(time);
	        this._tickOffset.add({
	            'time': time,
	            'ticks': ticks,
	            'seconds': this.frequency.getDurationOfTicks(ticks, time)
	        });
	        return this;
	    };
	    /**
		 *  Returns the scheduled state at the given time.
		 *  @param  {Time}  time  The time to query.
		 *  @return  {String}  The name of the state input in setStateAtTime.
		 *  @example
		 * source.start("+0.1");
		 * source.getStateAtTime("+0.1"); //returns "started"
		 */
	    Tone.TickSource.prototype.getStateAtTime = function (time) {
	        time = this.toSeconds(time);
	        return this._state.getValueAtTime(time);
	    };
	    /**
		 * Get the time of the given tick. The second argument
		 * is when to test before. Since ticks can be set (with setTicksAtTime)
		 * there may be multiple times for a given tick value. 
		 * @param  {Ticks} ticks The tick number.
		 * @param  {Time=} before When to measure the tick value from. 
		 * @return {Time}       The time of the tick
		 */
	    Tone.TickSource.prototype.getTimeOfTick = function (tick, before) {
	        before = Tone.defaultArg(before, this.now());
	        var offset = this._tickOffset.get(before);
	        var event = this._state.get(before);
	        var startTime = Math.max(offset.time, event.time);
	        var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
	        return this.frequency.getTimeOfTick(absoluteTicks);
	    };
	    /**
		 *  Invoke the callback event at all scheduled ticks between the 
		 *  start time and the end time
		 *  @param  {Time}    startTime  The beginning of the search range
		 *  @param  {Time}    endTime    The end of the search range
		 *  @param  {Function<Time,Ticks>}  callback   The callback to invoke with each tick
		 *  @return  {Tone.TickSource}    this
		 */
	    Tone.TickSource.prototype.forEachTickBetween = function (startTime, endTime, callback) {
	        //only iterate through the sections where it is "started"
	        var lastStateEvent = this._state.get(startTime);
	        this._state.forEachBetween(startTime, endTime, function (event) {
	            if (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started) {
	                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);
	            }
	            lastStateEvent = event;
	        }.bind(this));
	        startTime = Math.max(lastStateEvent.time, startTime);
	        if (lastStateEvent.state === Tone.State.Started && this._state) {
	            //figure out the difference between the frequency ticks and the 
	            var startTicks = this.frequency.getTicksAtTime(startTime);
	            var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
	            var diff = startTicks - ticksAtStart;
	            var offset = diff % 1;
	            if (offset !== 0) {
	                offset = 1 - offset;
	            }
	            var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);
	            var error = null;
	            while (nextTickTime < endTime && this._state) {
	                try {
	                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
	                } catch (e) {
	                    error = e;
	                    break;
	                }
	                if (this._state) {
	                    nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
	                }
	            }
	        }
	        if (error) {
	            throw error;
	        }
	        return this;
	    };
	    /**
		 *  Clean up
		 *  @returns {Tone.TickSource} this
		 */
	    Tone.TickSource.prototype.dispose = function () {
	        Tone.Param.prototype.dispose.call(this);
	        this._state.dispose();
	        this._state = null;
	        this._tickOffset.dispose();
	        this._tickOffset = null;
	        this._writable('frequency');
	        this.frequency.dispose();
	        this.frequency = null;
	        return this;
	    };
	    return Tone.TickSource;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  A sample accurate clock which provides a callback at the given rate.
		 *          While the callback is not sample-accurate (it is still susceptible to
		 *          loose JS timing), the time passed in as the argument to the callback
		 *          is precise. For most applications, it is better to use Tone.Transport
		 *          instead of the Clock by itself since you can synchronize multiple callbacks.
		 *
		 * 	@constructor
		 *  @extends {Tone.Emitter}
		 * 	@param {function} callback The callback to be invoked with the time of the audio event
		 * 	@param {Frequency} frequency The rate of the callback
		 * 	@example
		 * //the callback will be invoked approximately once a second
		 * //and will print the time exactly once a second apart.
		 * var clock = new Tone.Clock(function(time){
		 * 	console.log(time);
		 * }, 1);
		 */
	    Tone.Clock = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'frequency'
	        ], Tone.Clock);
	        Tone.Emitter.call(this);
	        /**
			 *  The callback function to invoke at the scheduled tick.
			 *  @type  {Function}
			 */
	        this.callback = options.callback;
	        /**
			 *  The next time the callback is scheduled.
			 *  @type {Number}
			 *  @private
			 */
	        this._nextTick = 0;
	        /**
			 *  The tick counter
			 *  @type  {Tone.TickSource}
			 *  @private
			 */
	        this._tickSource = new Tone.TickSource(options.frequency);
	        /**
			 *  The last time the loop callback was invoked
			 *  @private
			 *  @type {Number}
			 */
	        this._lastUpdate = 0;
	        /**
			 *  The rate the callback function should be invoked.
			 *  @type  {BPM}
			 *  @signal
			 */
	        this.frequency = this._tickSource.frequency;
	        this._readOnly('frequency');
	        /**
			 *  The state timeline
			 *  @type {Tone.TimelineState}
			 *  @private
			 */
	        this._state = new Tone.TimelineState(Tone.State.Stopped);
	        //add an initial state
	        this._state.setStateAtTime(Tone.State.Stopped, 0);
	        /**
			 *  The loop function bound to its context.
			 *  This is necessary to remove the event in the end.
			 *  @type {Function}
			 *  @private
			 */
	        this._boundLoop = this._loop.bind(this);
	        //bind a callback to the worker thread
	        this.context.on('tick', this._boundLoop);
	    };
	    Tone.extend(Tone.Clock, Tone.Emitter);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Clock.defaults = {
	        'callback': Tone.noOp,
	        'frequency': 1
	    };
	    /**
		 *  Returns the playback state of the source, either "started", "stopped" or "paused".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.Clock#
		 *  @name state
		 */
	    Object.defineProperty(Tone.Clock.prototype, 'state', {
	        get: function () {
	            return this._state.getValueAtTime(this.now());
	        }
	    });
	    /**
		 *  Start the clock at the given time. Optionally pass in an offset
		 *  of where to start the tick counter from.
		 *  @param  {Time=}  time    The time the clock should start
		 *  @param  {Ticks=}  offset  Where the tick counter starts counting from.
		 *  @return  {Tone.Clock}  this
		 */
	    Tone.Clock.prototype.start = function (time, offset) {
	        time = this.toSeconds(time);
	        if (this._state.getValueAtTime(time) !== Tone.State.Started) {
	            this._state.setStateAtTime(Tone.State.Started, time);
	            this._tickSource.start(time, offset);
	            if (time < this._lastUpdate) {
	                this.emit('start', time, offset);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Stop the clock. Stopping the clock resets the tick counter to 0.
		 *  @param {Time} [time=now] The time when the clock should stop.
		 *  @returns {Tone.Clock} this
		 *  @example
		 * clock.stop();
		 */
	    Tone.Clock.prototype.stop = function (time) {
	        time = this.toSeconds(time);
	        this._state.cancel(time);
	        this._state.setStateAtTime(Tone.State.Stopped, time);
	        this._tickSource.stop(time);
	        if (time < this._lastUpdate) {
	            this.emit('stop', time);
	        }
	        return this;
	    };
	    /**
		 *  Pause the clock. Pausing does not reset the tick counter.
		 *  @param {Time} [time=now] The time when the clock should stop.
		 *  @returns {Tone.Clock} this
		 */
	    Tone.Clock.prototype.pause = function (time) {
	        time = this.toSeconds(time);
	        if (this._state.getValueAtTime(time) === Tone.State.Started) {
	            this._state.setStateAtTime(Tone.State.Paused, time);
	            this._tickSource.pause(time);
	            if (time < this._lastUpdate) {
	                this.emit('pause', time);
	            }
	        }
	        return this;
	    };
	    /**
		 *  The number of times the callback was invoked. Starts counting at 0
		 *  and increments after the callback was invoked.
		 *  @type {Ticks}
		 */
	    Object.defineProperty(Tone.Clock.prototype, 'ticks', {
	        get: function () {
	            return Math.ceil(this.getTicksAtTime(this.now()));
	        },
	        set: function (t) {
	            this._tickSource.ticks = t;
	        }
	    });
	    /**
		 *  The time since ticks=0 that the Clock has been running. Accounts
		 *  for tempo curves
		 *  @type {Seconds}
		 */
	    Object.defineProperty(Tone.Clock.prototype, 'seconds', {
	        get: function () {
	            return this._tickSource.seconds;
	        },
	        set: function (s) {
	            this._tickSource.seconds = s;
	        }
	    });
	    /**
		 *  Return the elapsed seconds at the given time.
		 *  @param  {Time}  time  When to get the elapsed seconds
		 *  @return  {Seconds}  The number of elapsed seconds
		 */
	    Tone.Clock.prototype.getSecondsAtTime = function (time) {
	        return this._tickSource.getSecondsAtTime(time);
	    };
	    /**
		 * Set the clock's ticks at the given time.
		 * @param  {Ticks} ticks The tick value to set
		 * @param  {Time} time  When to set the tick value
		 * @return {Tone.Clock}       this
		 */
	    Tone.Clock.prototype.setTicksAtTime = function (ticks, time) {
	        this._tickSource.setTicksAtTime(ticks, time);
	        return this;
	    };
	    /**
		 * Get the clock's ticks at the given time.
		 * @param  {Time} time  When to get the tick value
		 * @return {Ticks}       The tick value at the given time.
		 */
	    Tone.Clock.prototype.getTicksAtTime = function (time) {
	        return this._tickSource.getTicksAtTime(time);
	    };
	    /**
		 * Get the time of the next tick
		 * @param  {Ticks} ticks The tick number.
		 * @param  {Time} before 
		 * @return {Tone.Clock}       this
		 */
	    Tone.Clock.prototype.nextTickTime = function (offset, when) {
	        when = this.toSeconds(when);
	        var currentTick = this.getTicksAtTime(when);
	        return this._tickSource.getTimeOfTick(currentTick + offset, when);
	    };
	    /**
		 *  The scheduling loop.
		 *  @private
		 */
	    Tone.Clock.prototype._loop = function () {
	        var startTime = this._lastUpdate;
	        var endTime = this.now();
	        this._lastUpdate = endTime;
	        if (startTime !== endTime) {
	            //the state change events
	            this._state.forEachBetween(startTime, endTime, function (e) {
	                switch (e.state) {
	                case Tone.State.Started:
	                    var offset = this._tickSource.getTicksAtTime(e.time);
	                    this.emit('start', e.time, offset);
	                    break;
	                case Tone.State.Stopped:
	                    if (e.time !== 0) {
	                        this.emit('stop', e.time);
	                    }
	                    break;
	                case Tone.State.Paused:
	                    this.emit('pause', e.time);
	                    break;
	                }
	            }.bind(this));
	            //the tick callbacks
	            this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {
	                this.callback(time, ticks);
	            }.bind(this));
	        }
	    };
	    /**
		 *  Returns the scheduled state at the given time.
		 *  @param  {Time}  time  The time to query.
		 *  @return  {String}  The name of the state input in setStateAtTime.
		 *  @example
		 * clock.start("+0.1");
		 * clock.getStateAtTime("+0.1"); //returns "started"
		 */
	    Tone.Clock.prototype.getStateAtTime = function (time) {
	        time = this.toSeconds(time);
	        return this._state.getValueAtTime(time);
	    };
	    /**
		 *  Clean up
		 *  @returns {Tone.Clock} this
		 */
	    Tone.Clock.prototype.dispose = function () {
	        Tone.Emitter.prototype.dispose.call(this);
	        this.context.off('tick', this._boundLoop);
	        this._writable('frequency');
	        this._tickSource.dispose();
	        this._tickSource = null;
	        this.frequency = null;
	        this._boundLoop = null;
	        this._nextTick = Infinity;
	        this.callback = null;
	        this._state.dispose();
	        this._state = null;
	    };
	    return Tone.Clock;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Similar to Tone.Timeline, but all events represent
		 *         intervals with both "time" and "duration" times. The
		 *         events are placed in a tree structure optimized
		 *         for querying an intersection point with the timeline
		 *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)
		 *         to represent the data.
		 *  @extends {Tone}
		 */
	    Tone.IntervalTimeline = function () {
	        Tone.call(this);
	        /**
			 *  The root node of the inteval tree
			 *  @type  {IntervalNode}
			 *  @private
			 */
	        this._root = null;
	        /**
			 *  Keep track of the length of the timeline.
			 *  @type  {Number}
			 *  @private
			 */
	        this._length = 0;
	    };
	    Tone.extend(Tone.IntervalTimeline);
	    /**
		 *  The event to add to the timeline. All events must
		 *  have a time and duration value
		 *  @param  {Object}  event  The event to add to the timeline
		 *  @return  {Tone.IntervalTimeline}  this
		 */
	    Tone.IntervalTimeline.prototype.add = function (event) {
	        if (Tone.isUndef(event.time) || Tone.isUndef(event.duration)) {
	            throw new Error('Tone.IntervalTimeline: events must have time and duration parameters');
	        }
	        event.time = event.time.valueOf();
	        var node = new IntervalNode(event.time, event.time + event.duration, event);
	        if (this._root === null) {
	            this._root = node;
	        } else {
	            this._root.insert(node);
	        }
	        this._length++;
	        // Restructure tree to be balanced
	        while (node !== null) {
	            node.updateHeight();
	            node.updateMax();
	            this._rebalance(node);
	            node = node.parent;
	        }
	        return this;
	    };
	    /**
		 *  Remove an event from the timeline.
		 *  @param  {Object}  event  The event to remove from the timeline
		 *  @return  {Tone.IntervalTimeline}  this
		 */
	    Tone.IntervalTimeline.prototype.remove = function (event) {
	        if (this._root !== null) {
	            var results = [];
	            this._root.search(event.time, results);
	            for (var i = 0; i < results.length; i++) {
	                var node = results[i];
	                if (node.event === event) {
	                    this._removeNode(node);
	                    this._length--;
	                    break;
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  The number of items in the timeline.
		 *  @type {Number}
		 *  @memberOf Tone.IntervalTimeline#
		 *  @name length
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.IntervalTimeline.prototype, 'length', {
	        get: function () {
	            return this._length;
	        }
	    });
	    /**
		 *  Remove events whose time time is after the given time
		 *  @param  {Number}  time  The time to query.
		 *  @returns {Tone.IntervalTimeline} this
		 */
	    Tone.IntervalTimeline.prototype.cancel = function (after) {
	        this.forEachFrom(after, function (event) {
	            this.remove(event);
	        }.bind(this));
	        return this;
	    };
	    /**
		 *  Set the root node as the given node
		 *  @param {IntervalNode} node
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._setRoot = function (node) {
	        this._root = node;
	        if (this._root !== null) {
	            this._root.parent = null;
	        }
	    };
	    /**
		 *  Replace the references to the node in the node's parent
		 *  with the replacement node.
		 *  @param  {IntervalNode}  node
		 *  @param  {IntervalNode}  replacement
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {
	        if (node.parent !== null) {
	            if (node.isLeftChild()) {
	                node.parent.left = replacement;
	            } else {
	                node.parent.right = replacement;
	            }
	            this._rebalance(node.parent);
	        } else {
	            this._setRoot(replacement);
	        }
	    };
	    /**
		 *  Remove the node from the tree and replace it with
		 *  a successor which follows the schema.
		 *  @param  {IntervalNode}  node
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._removeNode = function (node) {
	        if (node.left === null && node.right === null) {
	            this._replaceNodeInParent(node, null);
	        } else if (node.right === null) {
	            this._replaceNodeInParent(node, node.left);
	        } else if (node.left === null) {
	            this._replaceNodeInParent(node, node.right);
	        } else {
	            var balance = node.getBalance();
	            var replacement, temp;
	            if (balance > 0) {
	                if (node.left.right === null) {
	                    replacement = node.left;
	                    replacement.right = node.right;
	                    temp = replacement;
	                } else {
	                    replacement = node.left.right;
	                    while (replacement.right !== null) {
	                        replacement = replacement.right;
	                    }
	                    replacement.parent.right = replacement.left;
	                    temp = replacement.parent;
	                    replacement.left = node.left;
	                    replacement.right = node.right;
	                }
	            } else if (node.right.left === null) {
	                replacement = node.right;
	                replacement.left = node.left;
	                temp = replacement;
	            } else {
	                replacement = node.right.left;
	                while (replacement.left !== null) {
	                    replacement = replacement.left;
	                }
	                replacement.parent = replacement.parent;
	                replacement.parent.left = replacement.right;
	                temp = replacement.parent;
	                replacement.left = node.left;
	                replacement.right = node.right;
	            }
	            if (node.parent !== null) {
	                if (node.isLeftChild()) {
	                    node.parent.left = replacement;
	                } else {
	                    node.parent.right = replacement;
	                }
	            } else {
	                this._setRoot(replacement);
	            }
	            // this._replaceNodeInParent(node, replacement);
	            this._rebalance(temp);
	        }
	        node.dispose();
	    };
	    /**
		 *  Rotate the tree to the left
		 *  @param  {IntervalNode}  node
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._rotateLeft = function (node) {
	        var parent = node.parent;
	        var isLeftChild = node.isLeftChild();
	        // Make node.right the new root of this sub tree (instead of node)
	        var pivotNode = node.right;
	        node.right = pivotNode.left;
	        pivotNode.left = node;
	        if (parent !== null) {
	            if (isLeftChild) {
	                parent.left = pivotNode;
	            } else {
	                parent.right = pivotNode;
	            }
	        } else {
	            this._setRoot(pivotNode);
	        }
	    };
	    /**
		 *  Rotate the tree to the right
		 *  @param  {IntervalNode}  node
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._rotateRight = function (node) {
	        var parent = node.parent;
	        var isLeftChild = node.isLeftChild();
	        // Make node.left the new root of this sub tree (instead of node)
	        var pivotNode = node.left;
	        node.left = pivotNode.right;
	        pivotNode.right = node;
	        if (parent !== null) {
	            if (isLeftChild) {
	                parent.left = pivotNode;
	            } else {
	                parent.right = pivotNode;
	            }
	        } else {
	            this._setRoot(pivotNode);
	        }
	    };
	    /**
		 *  Balance the BST
		 *  @param  {IntervalNode}  node
		 *  @private
		 */
	    Tone.IntervalTimeline.prototype._rebalance = function (node) {
	        var balance = node.getBalance();
	        if (balance > 1) {
	            if (node.left.getBalance() < 0) {
	                this._rotateLeft(node.left);
	            } else {
	                this._rotateRight(node);
	            }
	        } else if (balance < -1) {
	            if (node.right.getBalance() > 0) {
	                this._rotateRight(node.right);
	            } else {
	                this._rotateLeft(node);
	            }
	        }
	    };
	    /**
		 *  Get an event whose time and duration span the give time. Will
		 *  return the match whose "time" value is closest to the given time.
		 *  @param  {Object}  event  The event to add to the timeline
		 *  @return  {Object}  The event which spans the desired time
		 */
	    Tone.IntervalTimeline.prototype.get = function (time) {
	        if (this._root !== null) {
	            var results = [];
	            this._root.search(time, results);
	            if (results.length > 0) {
	                var max = results[0];
	                for (var i = 1; i < results.length; i++) {
	                    if (results[i].low > max.low) {
	                        max = results[i];
	                    }
	                }
	                return max.event;
	            }
	        }
	        return null;
	    };
	    /**
		 *  Iterate over everything in the timeline.
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.IntervalTimeline} this
		 */
	    Tone.IntervalTimeline.prototype.forEach = function (callback) {
	        if (this._root !== null) {
	            var allNodes = [];
	            this._root.traverse(function (node) {
	                allNodes.push(node);
	            });
	            for (var i = 0; i < allNodes.length; i++) {
	                var ev = allNodes[i].event;
	                if (ev) {
	                    callback(ev);
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array in which the given time
		 *  overlaps with the time and duration time of the event.
		 *  @param  {Number}  time The time to check if items are overlapping
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.IntervalTimeline} this
		 */
	    Tone.IntervalTimeline.prototype.forEachAtTime = function (time, callback) {
	        if (this._root !== null) {
	            var results = [];
	            this._root.search(time, results);
	            for (var i = results.length - 1; i >= 0; i--) {
	                var ev = results[i].event;
	                if (ev) {
	                    callback(ev);
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Iterate over everything in the array in which the time is greater
		 *  than or equal to the given time.
		 *  @param  {Number}  time The time to check if items are before
		 *  @param  {Function}  callback The callback to invoke with every item
		 *  @returns {Tone.IntervalTimeline} this
		 */
	    Tone.IntervalTimeline.prototype.forEachFrom = function (time, callback) {
	        if (this._root !== null) {
	            var results = [];
	            this._root.searchAfter(time, results);
	            for (var i = results.length - 1; i >= 0; i--) {
	                var ev = results[i].event;
	                callback(ev);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.IntervalTimeline}  this
		 */
	    Tone.IntervalTimeline.prototype.dispose = function () {
	        var allNodes = [];
	        if (this._root !== null) {
	            this._root.traverse(function (node) {
	                allNodes.push(node);
	            });
	        }
	        for (var i = 0; i < allNodes.length; i++) {
	            allNodes[i].dispose();
	        }
	        allNodes = null;
	        this._root = null;
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	INTERVAL NODE HELPER
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Represents a node in the binary search tree, with the addition
		 *  of a "high" value which keeps track of the highest value of
		 *  its children.
		 *  References:
		 *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/
		 *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf
		 *  @param {Number} low
		 *  @param {Number} high
		 *  @private
		 */
	    var IntervalNode = function (low, high, event) {
	        //the event container
	        this.event = event;
	        //the low value
	        this.low = low;
	        //the high value
	        this.high = high;
	        //the high value for this and all child nodes
	        this.max = this.high;
	        //the nodes to the left
	        this._left = null;
	        //the nodes to the right
	        this._right = null;
	        //the parent node
	        this.parent = null;
	        //the number of child nodes
	        this.height = 0;
	    };
	    /**
		 *  Insert a node into the correct spot in the tree
		 *  @param  {IntervalNode}  node
		 */
	    IntervalNode.prototype.insert = function (node) {
	        if (node.low <= this.low) {
	            if (this.left === null) {
	                this.left = node;
	            } else {
	                this.left.insert(node);
	            }
	        } else if (this.right === null) {
	            this.right = node;
	        } else {
	            this.right.insert(node);
	        }
	    };
	    /**
		 *  Search the tree for nodes which overlap
		 *  with the given point
		 *  @param  {Number}  point  The point to query
		 *  @param  {Array}  results  The array to put the results
		 */
	    IntervalNode.prototype.search = function (point, results) {
	        // If p is to the right of the rightmost point of any interval
	        // in this node and all children, there won't be any matches.
	        if (point > this.max) {
	            return;
	        }
	        // Search left children
	        if (this.left !== null) {
	            this.left.search(point, results);
	        }
	        // Check this node
	        if (this.low <= point && this.high > point) {
	            results.push(this);
	        }
	        // If p is to the left of the time of this interval,
	        // then it can't be in any child to the right.
	        if (this.low > point) {
	            return;
	        }
	        // Search right children
	        if (this.right !== null) {
	            this.right.search(point, results);
	        }
	    };
	    /**
		 *  Search the tree for nodes which are less
		 *  than the given point
		 *  @param  {Number}  point  The point to query
		 *  @param  {Array}  results  The array to put the results
		 */
	    IntervalNode.prototype.searchAfter = function (point, results) {
	        // Check this node
	        if (this.low >= point) {
	            results.push(this);
	            if (this.left !== null) {
	                this.left.searchAfter(point, results);
	            }
	        }
	        // search the right side
	        if (this.right !== null) {
	            this.right.searchAfter(point, results);
	        }
	    };
	    /**
		 *  Invoke the callback on this element and both it's branches
		 *  @param  {Function}  callback
		 */
	    IntervalNode.prototype.traverse = function (callback) {
	        callback(this);
	        if (this.left !== null) {
	            this.left.traverse(callback);
	        }
	        if (this.right !== null) {
	            this.right.traverse(callback);
	        }
	    };
	    /**
		 *  Update the height of the node
		 */
	    IntervalNode.prototype.updateHeight = function () {
	        if (this.left !== null && this.right !== null) {
	            this.height = Math.max(this.left.height, this.right.height) + 1;
	        } else if (this.right !== null) {
	            this.height = this.right.height + 1;
	        } else if (this.left !== null) {
	            this.height = this.left.height + 1;
	        } else {
	            this.height = 0;
	        }
	    };
	    /**
		 *  Update the height of the node
		 */
	    IntervalNode.prototype.updateMax = function () {
	        this.max = this.high;
	        if (this.left !== null) {
	            this.max = Math.max(this.max, this.left.max);
	        }
	        if (this.right !== null) {
	            this.max = Math.max(this.max, this.right.max);
	        }
	    };
	    /**
		 *  The balance is how the leafs are distributed on the node
		 *  @return  {Number}  Negative numbers are balanced to the right
		 */
	    IntervalNode.prototype.getBalance = function () {
	        var balance = 0;
	        if (this.left !== null && this.right !== null) {
	            balance = this.left.height - this.right.height;
	        } else if (this.left !== null) {
	            balance = this.left.height + 1;
	        } else if (this.right !== null) {
	            balance = -(this.right.height + 1);
	        }
	        return balance;
	    };
	    /**
		 *  @returns {Boolean} true if this node is the left child
		 *  of its parent
		 */
	    IntervalNode.prototype.isLeftChild = function () {
	        return this.parent !== null && this.parent.left === this;
	    };
	    /**
		 *  get/set the left node
		 *  @type {IntervalNode}
		 */
	    Object.defineProperty(IntervalNode.prototype, 'left', {
	        get: function () {
	            return this._left;
	        },
	        set: function (node) {
	            this._left = node;
	            if (node !== null) {
	                node.parent = this;
	            }
	            this.updateHeight();
	            this.updateMax();
	        }
	    });
	    /**
		 *  get/set the right node
		 *  @type {IntervalNode}
		 */
	    Object.defineProperty(IntervalNode.prototype, 'right', {
	        get: function () {
	            return this._right;
	        },
	        set: function (node) {
	            this._right = node;
	            if (node !== null) {
	                node.parent = this;
	            }
	            this.updateHeight();
	            this.updateMax();
	        }
	    });
	    /**
		 *  null out references.
		 */
	    IntervalNode.prototype.dispose = function () {
	        this.parent = null;
	        this._left = null;
	        this._right = null;
	        this.event = null;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	END INTERVAL NODE HELPER
	    ///////////////////////////////////////////////////////////////////////////
	    return Tone.IntervalTimeline;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Ticks is a primitive type for encoding Time values.
		 *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed
		 *         into the parameter of any method which takes time as an argument.
		 *  @constructor
		 *  @extends {Tone.TransportTime}
		 *  @param  {String|Number}  val    The time value.
		 *  @param  {String=}  units  The units of the value.
		 *  @example
		 * var t = Tone.Ticks("4n");//a quarter note
		 */
	    Tone.Ticks = function (val, units) {
	        if (this instanceof Tone.Ticks) {
	            Tone.TransportTime.call(this, val, units);
	        } else {
	            return new Tone.Ticks(val, units);
	        }
	    };
	    Tone.extend(Tone.Ticks, Tone.TransportTime);
	    /**
		 *  The default units if none are given.
		 *  @type {String}
		 *  @private
		 */
	    Tone.Ticks.prototype._defaultUnits = 'i';
	    /**
		 * Get the current time in the given units
		 * @return {Ticks}
		 * @private
		 */
	    Tone.Ticks.prototype._now = function () {
	        return Tone.Transport.ticks;
	    };
	    /**
		 *  Return the value of the beats in the current units
		 *  @param {Number} beats
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Ticks.prototype._beatsToUnits = function (beats) {
	        return this._getPPQ() * beats;
	    };
	    /**
		 *  Returns the value of a second in the current units
		 *  @param {Seconds} seconds
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Ticks.prototype._secondsToUnits = function (seconds) {
	        return seconds / (60 / this._getBpm()) * this._getPPQ();
	    };
	    /**
		 *  Returns the value of a tick in the current time units
		 *  @param {Ticks} ticks
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Ticks.prototype._ticksToUnits = function (ticks) {
	        return ticks;
	    };
	    /**
		 *  Return the time in ticks
		 *  @return  {Ticks}
		 */
	    Tone.Ticks.prototype.toTicks = function () {
	        return this.valueOf();
	    };
	    /**
		 *  Return the time in ticks
		 *  @return  {Ticks}
		 */
	    Tone.Ticks.prototype.toSeconds = function () {
	        return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
	    };
	    return Tone.Ticks;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]
		 *         to schedule events. Do no invoke this class directly, it is
		 *         handled from within Tone.Transport.
		 *  @extends {Tone}
		 *  @param {Object} options
		 */
	    Tone.TransportEvent = function (Transport, options) {
	        options = Tone.defaultArg(options, Tone.TransportEvent.defaults);
	        Tone.call(this);
	        /**
			 * Reference to the Transport that created it
			 * @type {Tone.Transport}
			 */
	        this.Transport = Transport;
	        /**
			 * The unique id of the event
			 * @type {Number}
			 */
	        this.id = Tone.TransportEvent._eventId++;
	        /**
			 * The time the event starts
			 * @type {Ticks}
			 */
	        this.time = Tone.Ticks(options.time);
	        /**
			 * The callback to invoke
			 * @type {Function}
			 */
	        this.callback = options.callback;
	        /**
			 * If the event should be removed after being created.
			 * @type {Boolean}
			 * @private
			 */
	        this._once = options.once;
	    };
	    Tone.extend(Tone.TransportEvent);
	    /**
		 * The defaults
		 * @static
		 * @type {Object}
		 */
	    Tone.TransportEvent.defaults = {
	        'once': false,
	        'callback': Tone.noOp
	    };
	    /**
		 * Current ID counter
		 * @private
		 * @static
		 * @type {Number}
		 */
	    Tone.TransportEvent._eventId = 0;
	    /**
		 * Invoke the event callback.
		 * @param  {Time} time  The AudioContext time in seconds of the event
		 */
	    Tone.TransportEvent.prototype.invoke = function (time) {
	        if (this.callback) {
	            this.callback(time);
	            if (this._once && this.Transport) {
	                this.Transport.clear(this.id);
	            }
	        }
	    };
	    /**
		 * Clean up
		 * @return {Tone.TransportEvent} this
		 */
	    Tone.TransportEvent.prototype.dispose = function () {
	        Tone.prototype.dispose.call(this);
	        this.Transport = null;
	        this.callback = null;
	        this.time = null;
	        return this;
	    };
	    return Tone.TransportEvent;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport
		 *         to schedule repeat events. This class should not be instantiated directly.
		 *  @extends {Tone.TransportEvent}
		 *  @param {Object} options
		 */
	    Tone.TransportRepeatEvent = function (Transport, options) {
	        Tone.TransportEvent.call(this, Transport, options);
	        options = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);
	        /**
			 * When the event should stop repeating
			 * @type {Ticks}
			 * @private
			 */
	        this.duration = Tone.Ticks(options.duration);
	        /**
			 * The interval of the repeated event
			 * @type {Ticks}
			 * @private
			 */
	        this._interval = Tone.Ticks(options.interval);
	        /**
			 * The ID of the current timeline event
			 * @type {Number}
			 * @private
			 */
	        this._currentId = -1;
	        /**
			 * The ID of the next timeline event
			 * @type {Number}
			 * @private
			 */
	        this._nextId = -1;
	        /**
			  * The time of the next event
			  * @type {Ticks}
			  * @private
			  */
	        this._nextTick = this.time;
	        /**
			 * a reference to the bound start method
			 * @type {Function}
			 * @private
			 */
	        this._boundRestart = this._restart.bind(this);
	        this.Transport.on('start loopStart', this._boundRestart);
	        this._restart();
	    };
	    Tone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);
	    /**
		 * The defaults
		 * @static
		 * @type {Object}
		 */
	    Tone.TransportRepeatEvent.defaults = {
	        'duration': Infinity,
	        'interval': 1
	    };
	    /**
		 * Invoke the callback. Returns the tick time which
		 * the next event should be scheduled at.
		 * @param  {Number} time  The AudioContext time in seconds of the event
		 */
	    Tone.TransportRepeatEvent.prototype.invoke = function (time) {
	        //create more events if necessary
	        this._createEvents(time);
	        //call the super class
	        Tone.TransportEvent.prototype.invoke.call(this, time);
	    };
	    /**
		 * Push more events onto the timeline to keep up with the position of the timeline
		 * @private
		 */
	    Tone.TransportRepeatEvent.prototype._createEvents = function (time) {
	        // schedule the next event
	        var ticks = this.Transport.getTicksAtTime(time);
	        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
	            this._nextTick += this._interval;
	            this._currentId = this._nextId;
	            this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));
	        }
	    };
	    /**
		 * Push more events onto the timeline to keep up with the position of the timeline
		 * @private
		 */
	    Tone.TransportRepeatEvent.prototype._restart = function (time) {
	        this.Transport.clear(this._currentId);
	        this.Transport.clear(this._nextId);
	        this._nextTick = this.time;
	        var ticks = this.Transport.getTicksAtTime(time);
	        if (ticks > this.time) {
	            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
	        }
	        this._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));
	        this._nextTick += this._interval;
	        this._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));
	    };
	    /**
		 * Clean up
		 * @return {Tone.TransportRepeatEvent} this
		 */
	    Tone.TransportRepeatEvent.prototype.dispose = function () {
	        this.Transport.clear(this._currentId);
	        this.Transport.clear(this._nextId);
	        this.Transport.off('start loopStart', this._boundRestart);
	        this._boundCreateEvents = null;
	        Tone.TransportEvent.prototype.dispose.call(this);
	        this.duration = null;
	        this._interval = null;
	        return this;
	    };
	    return Tone.TransportRepeatEvent;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Transport for timing musical events.
		 *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)
		 *          Tone.Transport timing events pass in the exact time of the scheduled event
		 *          in the argument of the callback function. Pass that time value to the object
		 *          you're scheduling. <br><br>
		 *          A single transport is created for you when the library is initialized.
		 *          <br><br>
		 *          The transport emits the events: "start", "stop", "pause", and "loop" which are
		 *          called with the time of that event as the argument.
		 *
		 *  @extends {Tone.Emitter}
		 *  @singleton
		 *  @example
		 * //repeated event every 8th note
		 * Tone.Transport.scheduleRepeat(function(time){
		 * 	//do something with the time
		 * }, "8n");
		 *  @example
		 * //schedule an event on the 16th measure
		 * Tone.Transport.schedule(function(time){
		 * 	//do something with the time
		 * }, "16:0:0");
		 */
	    Tone.Transport = function () {
	        Tone.Emitter.call(this);
	        Tone.getContext(function () {
	            ///////////////////////////////////////////////////////////////////////
	            //	LOOPING
	            //////////////////////////////////////////////////////////////////////
	            /**
				 * 	If the transport loops or not.
				 *  @type {boolean}
				 */
	            this.loop = false;
	            /**
				 * 	The loop start position in ticks
				 *  @type {Ticks}
				 *  @private
				 */
	            this._loopStart = 0;
	            /**
				 * 	The loop end position in ticks
				 *  @type {Ticks}
				 *  @private
				 */
	            this._loopEnd = 0;
	            ///////////////////////////////////////////////////////////////////////
	            //	CLOCK/TEMPO
	            //////////////////////////////////////////////////////////////////////
	            /**
				 *  Pulses per quarter is the number of ticks per quarter note.
				 *  @private
				 *  @type  {Number}
				 */
	            this._ppq = TransportConstructor.defaults.PPQ;
	            /**
				 *  watches the main oscillator for timing ticks
				 *  initially starts at 120bpm
				 *  @private
				 *  @type {Tone.Clock}
				 */
	            this._clock = new Tone.Clock({
	                'callback': this._processTick.bind(this),
	                'frequency': 0
	            });
	            this._bindClockEvents();
	            /**
				 *  The Beats Per Minute of the Transport.
				 *  @type {BPM}
				 *  @signal
				 *  @example
				 * Tone.Transport.bpm.value = 80;
				 * //ramp the bpm to 120 over 10 seconds
				 * Tone.Transport.bpm.rampTo(120, 10);
				 */
	            this.bpm = this._clock.frequency;
	            this.bpm._toUnits = this._toUnits.bind(this);
	            this.bpm._fromUnits = this._fromUnits.bind(this);
	            this.bpm.units = Tone.Type.BPM;
	            this.bpm.value = TransportConstructor.defaults.bpm;
	            this._readOnly('bpm');
	            /**
				 *  The time signature, or more accurately the numerator
				 *  of the time signature over a denominator of 4.
				 *  @type {Number}
				 *  @private
				 */
	            this._timeSignature = TransportConstructor.defaults.timeSignature;
	            ///////////////////////////////////////////////////////////////////////
	            //	TIMELINE EVENTS
	            //////////////////////////////////////////////////////////////////////
	            /**
				 *  All the events in an object to keep track by ID
				 *  @type {Object}
				 *  @private
				 */
	            this._scheduledEvents = {};
	            /**
				 * 	The scheduled events.
				 *  @type {Tone.Timeline}
				 *  @private
				 */
	            this._timeline = new Tone.Timeline();
	            /**
				 *  Repeated events
				 *  @type {Array}
				 *  @private
				 */
	            this._repeatedEvents = new Tone.IntervalTimeline();
	            /**
				 *  All of the synced Signals
				 *  @private
				 *  @type {Array}
				 */
	            this._syncedSignals = [];
	            ///////////////////////////////////////////////////////////////////////
	            //	SWING
	            //////////////////////////////////////////////////////////////////////
	            /**
				 *  The subdivision of the swing
				 *  @type  {Ticks}
				 *  @private
				 */
	            this._swingTicks = TransportConstructor.defaults.PPQ / 2;
	            //8n
	            /**
				 *  The swing amount
				 *  @type {NormalRange}
				 *  @private
				 */
	            this._swingAmount = 0;
	        }.bind(this));
	    };
	    Tone.extend(Tone.Transport, Tone.Emitter);
	    /**
		 *  the defaults
		 *  @type {Object}
		 *  @const
		 *  @static
		 */
	    Tone.Transport.defaults = {
	        'bpm': 120,
	        'swing': 0,
	        'swingSubdivision': '8n',
	        'timeSignature': 4,
	        'loopStart': 0,
	        'loopEnd': '4m',
	        'PPQ': 192
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	TICKS
	    ///////////////////////////////////////////////////////////////////////////////
	    /**
		 *  called on every tick
		 *  @param   {number} tickTime clock relative tick time
		 *  @private
		 */
	    Tone.Transport.prototype._processTick = function (tickTime, ticks) {
	        //handle swing
	        if (this._swingAmount > 0 && ticks % this._ppq !== 0 && //not on a downbeat
	            ticks % (this._swingTicks * 2) !== 0) {
	            //add some swing
	            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);
	            var amount = Math.sin(progress * Math.PI) * this._swingAmount;
	            tickTime += Tone.Ticks(this._swingTicks * 2 / 3).toSeconds() * amount;
	        }
	        //do the loop test
	        if (this.loop) {
	            if (ticks >= this._loopEnd) {
	                this.emit('loopEnd', tickTime);
	                this._clock.setTicksAtTime(this._loopStart, tickTime);
	                ticks = this._loopStart;
	                this.emit('loopStart', tickTime, this._clock.getSecondsAtTime(tickTime));
	                this.emit('loop', tickTime);
	            }
	        }
	        //invoke the timeline events scheduled on this tick
	        this._timeline.forEachAtTime(ticks, function (event) {
	            event.invoke(tickTime);
	        });
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	SCHEDULABLE EVENTS
	    ///////////////////////////////////////////////////////////////////////////////
	    /**
		 *  Schedule an event along the timeline.
		 *  @param {Function} callback The callback to be invoked at the time.
		 *  @param {TransportTime}  time The time to invoke the callback at.
		 *  @return {Number} The id of the event which can be used for canceling the event.
		 *  @example
		 * //trigger the callback when the Transport reaches the desired time
		 * Tone.Transport.schedule(function(time){
		 * 	envelope.triggerAttack(time);
		 * }, "128i");
		 */
	    Tone.Transport.prototype.schedule = function (callback, time) {
	        var event = new Tone.TransportEvent(this, {
	            'time': Tone.TransportTime(time),
	            'callback': callback
	        });
	        return this._addEvent(event, this._timeline);
	    };
	    /**
		 *  Schedule a repeated event along the timeline. The event will fire
		 *  at the `interval` starting at the `startTime` and for the specified
		 *  `duration`.
		 *  @param  {Function}  callback   The callback to invoke.
		 *  @param  {Time}    interval   The duration between successive
		 *                               callbacks. Must be a positive number.
		 *  @param  {TransportTime=}    startTime  When along the timeline the events should
		 *                               start being invoked.
		 *  @param {Time} [duration=Infinity] How long the event should repeat.
		 *  @return  {Number}    The ID of the scheduled event. Use this to cancel
		 *                           the event.
		 *  @example
		 * //a callback invoked every eighth note after the first measure
		 * Tone.Transport.scheduleRepeat(callback, "8n", "1m");
		 */
	    Tone.Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {
	        var event = new Tone.TransportRepeatEvent(this, {
	            'callback': callback,
	            'interval': Tone.Time(interval),
	            'time': Tone.TransportTime(startTime),
	            'duration': Tone.Time(Tone.defaultArg(duration, Infinity))
	        });
	        //kick it off if the Transport is started
	        return this._addEvent(event, this._repeatedEvents);
	    };
	    /**
		 *  Schedule an event that will be removed after it is invoked.
		 *  Note that if the given time is less than the current transport time,
		 *  the event will be invoked immediately.
		 *  @param {Function} callback The callback to invoke once.
		 *  @param {TransportTime} time The time the callback should be invoked.
		 *  @returns {Number} The ID of the scheduled event.
		 */
	    Tone.Transport.prototype.scheduleOnce = function (callback, time) {
	        var event = new Tone.TransportEvent(this, {
	            'time': Tone.TransportTime(time),
	            'callback': callback,
	            'once': true
	        });
	        return this._addEvent(event, this._timeline);
	    };
	    /**
		 *  Clear the passed in event id from the timeline
		 *  @param {Number} eventId The id of the event.
		 *  @returns {Tone.Transport} this
		 */
	    Tone.Transport.prototype.clear = function (eventId) {
	        if (this._scheduledEvents.hasOwnProperty(eventId)) {
	            var item = this._scheduledEvents[eventId.toString()];
	            item.timeline.remove(item.event);
	            item.event.dispose();
	            delete this._scheduledEvents[eventId.toString()];
	        }
	        return this;
	    };
	    /**
		 * Add an event to the correct timeline. Keep track of the
		 * timeline it was added to.
		 * @param {Tone.TransportEvent}	event
		 * @param {Tone.Timeline} timeline
		 * @returns {Number} the event id which was just added
		 * @private
		 */
	    Tone.Transport.prototype._addEvent = function (event, timeline) {
	        this._scheduledEvents[event.id.toString()] = {
	            'event': event,
	            'timeline': timeline
	        };
	        timeline.add(event);
	        return event.id;
	    };
	    /**
		 *  Remove scheduled events from the timeline after
		 *  the given time. Repeated events will be removed
		 *  if their startTime is after the given time
		 *  @param {TransportTime} [after=0] Clear all events after
		 *                          this time.
		 *  @returns {Tone.Transport} this
		 */
	    Tone.Transport.prototype.cancel = function (after) {
	        after = Tone.defaultArg(after, 0);
	        after = this.toTicks(after);
	        this._timeline.forEachFrom(after, function (event) {
	            this.clear(event.id);
	        }.bind(this));
	        this._repeatedEvents.forEachFrom(after, function (event) {
	            this.clear(event.id);
	        }.bind(this));
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	START/STOP/PAUSE
	    ///////////////////////////////////////////////////////////////////////////////
	    /**
		 *  Bind start/stop/pause events from the clock and emit them.
		 *  @private
		 */
	    Tone.Transport.prototype._bindClockEvents = function () {
	        this._clock.on('start', function (time, offset) {
	            offset = Tone.Ticks(offset).toSeconds();
	            this.emit('start', time, offset);
	        }.bind(this));
	        this._clock.on('stop', function (time) {
	            this.emit('stop', time);
	        }.bind(this));
	        this._clock.on('pause', function (time) {
	            this.emit('pause', time);
	        }.bind(this));
	    };
	    /**
		 *  Returns the playback state of the source, either "started", "stopped", or "paused"
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.Transport#
		 *  @name state
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'state', {
	        get: function () {
	            return this._clock.getStateAtTime(this.now());
	        }
	    });
	    /**
		 *  Start the transport and all sources synced to the transport.
		 *  @param  {Time} [time=now] The time when the transport should start.
		 *  @param  {TransportTime=} offset The timeline offset to start the transport.
		 *  @returns {Tone.Transport} this
		 *  @example
		 * //start the transport in one second starting at beginning of the 5th measure.
		 * Tone.Transport.start("+1", "4:0:0");
		 */
	    Tone.Transport.prototype.start = function (time, offset) {
	        //start the clock
	        if (Tone.isDefined(offset)) {
	            offset = this.toTicks(offset);
	        }
	        this._clock.start(time, offset);
	        return this;
	    };
	    /**
		 *  Stop the transport and all sources synced to the transport.
		 *  @param  {Time} [time=now] The time when the transport should stop.
		 *  @returns {Tone.Transport} this
		 *  @example
		 * Tone.Transport.stop();
		 */
	    Tone.Transport.prototype.stop = function (time) {
	        this._clock.stop(time);
	        return this;
	    };
	    /**
		 *  Pause the transport and all sources synced to the transport.
		 *  @param  {Time} [time=now]
		 *  @returns {Tone.Transport} this
		 */
	    Tone.Transport.prototype.pause = function (time) {
	        this._clock.pause(time);
	        return this;
	    };
	    /**
		 * Toggle the current state of the transport. If it is
		 * started, it will stop it, otherwise it will start the Transport.
		 * @param  {Time=} time The time of the event
		 * @return {Tone.Transport}      this
		 */
	    Tone.Transport.prototype.toggle = function (time) {
	        time = this.toSeconds(time);
	        if (this._clock.getStateAtTime(time) !== Tone.State.Started) {
	            this.start(time);
	        } else {
	            this.stop(time);
	        }
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	SETTERS/GETTERS
	    ///////////////////////////////////////////////////////////////////////////////
	    /**
		 *  The time signature as just the numerator over 4.
		 *  For example 4/4 would be just 4 and 6/8 would be 3.
		 *  @memberOf Tone.Transport#
		 *  @type {Number|Array}
		 *  @name timeSignature
		 *  @example
		 * //common time
		 * Tone.Transport.timeSignature = 4;
		 * // 7/8
		 * Tone.Transport.timeSignature = [7, 8];
		 * //this will be reduced to a single number
		 * Tone.Transport.timeSignature; //returns 3.5
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'timeSignature', {
	        get: function () {
	            return this._timeSignature;
	        },
	        set: function (timeSig) {
	            if (Tone.isArray(timeSig)) {
	                timeSig = timeSig[0] / timeSig[1] * 4;
	            }
	            this._timeSignature = timeSig;
	        }
	    });
	    /**
		 * When the Tone.Transport.loop = true, this is the starting position of the loop.
		 * @memberOf Tone.Transport#
		 * @type {Time}
		 * @name loopStart
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'loopStart', {
	        get: function () {
	            return Tone.Ticks(this._loopStart).toSeconds();
	        },
	        set: function (startPosition) {
	            this._loopStart = this.toTicks(startPosition);
	        }
	    });
	    /**
		 * When the Tone.Transport.loop = true, this is the ending position of the loop.
		 * @memberOf Tone.Transport#
		 * @type {Time}
		 * @name loopEnd
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'loopEnd', {
	        get: function () {
	            return Tone.Ticks(this._loopEnd).toSeconds();
	        },
	        set: function (endPosition) {
	            this._loopEnd = this.toTicks(endPosition);
	        }
	    });
	    /**
		 *  Set the loop start and stop at the same time.
		 *  @param {TransportTime} startPosition
		 *  @param {TransportTime} endPosition
		 *  @returns {Tone.Transport} this
		 *  @example
		 * //loop over the first measure
		 * Tone.Transport.setLoopPoints(0, "1m");
		 * Tone.Transport.loop = true;
		 */
	    Tone.Transport.prototype.setLoopPoints = function (startPosition, endPosition) {
	        this.loopStart = startPosition;
	        this.loopEnd = endPosition;
	        return this;
	    };
	    /**
		 *  The swing value. Between 0-1 where 1 equal to
		 *  the note + half the subdivision.
		 *  @memberOf Tone.Transport#
		 *  @type {NormalRange}
		 *  @name swing
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'swing', {
	        get: function () {
	            return this._swingAmount;
	        },
	        set: function (amount) {
	            //scale the values to a normal range
	            this._swingAmount = amount;
	        }
	    });
	    /**
		 *  Set the subdivision which the swing will be applied to.
		 *  The default value is an 8th note. Value must be less
		 *  than a quarter note.
		 *
		 *  @memberOf Tone.Transport#
		 *  @type {Time}
		 *  @name swingSubdivision
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'swingSubdivision', {
	        get: function () {
	            return Tone.Ticks(this._swingTicks).toNotation();
	        },
	        set: function (subdivision) {
	            this._swingTicks = this.toTicks(subdivision);
	        }
	    });
	    /**
		 *  The Transport's position in Bars:Beats:Sixteenths.
		 *  Setting the value will jump to that position right away.
		 *  @memberOf Tone.Transport#
		 *  @type {BarsBeatsSixteenths}
		 *  @name position
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'position', {
	        get: function () {
	            var now = this.now();
	            var ticks = this._clock.getTicksAtTime(now);
	            return Tone.Ticks(ticks).toBarsBeatsSixteenths();
	        },
	        set: function (progress) {
	            var ticks = this.toTicks(progress);
	            this.ticks = ticks;
	        }
	    });
	    /**
		 *  The Transport's position in seconds
		 *  Setting the value will jump to that position right away.
		 *  @memberOf Tone.Transport#
		 *  @type {Seconds}
		 *  @name seconds
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'seconds', {
	        get: function () {
	            return this._clock.seconds;
	        },
	        set: function (s) {
	            var now = this.now();
	            var ticks = this.bpm.timeToTicks(s, now);
	            this.ticks = ticks;
	        }
	    });
	    /**
		 *  The Transport's loop position as a normalized value. Always
		 *  returns 0 if the transport if loop is not true.
		 *  @memberOf Tone.Transport#
		 *  @name progress
		 *  @type {NormalRange}
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'progress', {
	        get: function () {
	            if (this.loop) {
	                var now = this.now();
	                var ticks = this._clock.getTicksAtTime(now);
	                return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 *  The transports current tick position.
		 *
		 *  @memberOf Tone.Transport#
		 *  @type {Ticks}
		 *  @name ticks
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'ticks', {
	        get: function () {
	            return this._clock.ticks;
	        },
	        set: function (t) {
	            if (this._clock.ticks !== t) {
	                var now = this.now();
	                //stop everything synced to the transport
	                if (this.state === Tone.State.Started) {
	                    this.emit('stop', now);
	                    this._clock.setTicksAtTime(t, now);
	                    //restart it with the new time
	                    this.emit('start', now, this.seconds);
	                } else {
	                    this._clock.setTicksAtTime(t, now);
	                }
	            }
	        }
	    });
	    /**
		 * Get the clock's ticks at the given time.
		 * @param  {Time} time  When to get the tick value
		 * @return {Ticks}       The tick value at the given time.
		 */
	    Tone.Transport.prototype.getTicksAtTime = function (time) {
	        return Math.round(this._clock.getTicksAtTime(time));
	    };
	    /**
		 *  Return the elapsed seconds at the given time.
		 *  @param  {Time}  time  When to get the elapsed seconds
		 *  @return  {Seconds}  The number of elapsed seconds
		 */
	    Tone.Transport.prototype.getSecondsAtTime = function (time) {
	        return this._clock.getSecondsAtTime(time);
	    };
	    /**
		 *  Pulses Per Quarter note. This is the smallest resolution
		 *  the Transport timing supports. This should be set once
		 *  on initialization and not set again. Changing this value
		 *  after other objects have been created can cause problems.
		 *
		 *  @memberOf Tone.Transport#
		 *  @type {Number}
		 *  @name PPQ
		 */
	    Object.defineProperty(Tone.Transport.prototype, 'PPQ', {
	        get: function () {
	            return this._ppq;
	        },
	        set: function (ppq) {
	            var bpm = this.bpm.value;
	            this._ppq = ppq;
	            this.bpm.value = bpm;
	        }
	    });
	    /**
		 *  Convert from BPM to frequency (factoring in PPQ)
		 *  @param  {BPM}  bpm The BPM value to convert to frequency
		 *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.
		 *  @private
		 */
	    Tone.Transport.prototype._fromUnits = function (bpm) {
	        return 1 / (60 / bpm / this.PPQ);
	    };
	    /**
		 *  Convert from frequency (with PPQ) into BPM
		 *  @param  {Frequency}  freq The clocks frequency to convert to BPM
		 *  @return  {BPM}  The frequency value as BPM.
		 *  @private
		 */
	    Tone.Transport.prototype._toUnits = function (freq) {
	        return freq / this.PPQ * 60;
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	SYNCING
	    ///////////////////////////////////////////////////////////////////////////////
	    /**
		 *  Returns the time aligned to the next subdivision
		 *  of the Transport. If the Transport is not started,
		 *  it will return 0.
		 *  Note: this will not work precisely during tempo ramps.
		 *  @param  {Time}  subdivision  The subdivision to quantize to
		 *  @return  {Number}  The context time of the next subdivision.
		 *  @example
		 * Tone.Transport.start(); //the transport must be started
		 * Tone.Transport.nextSubdivision("4n");
		 */
	    Tone.Transport.prototype.nextSubdivision = function (subdivision) {
	        subdivision = this.toTicks(subdivision);
	        if (this.state !== Tone.State.Started) {
	            //if the transport's not started, return 0
	            return 0;
	        } else {
	            var now = this.now();
	            //the remainder of the current ticks and the subdivision
	            var transportPos = this.getTicksAtTime(now);
	            var remainingTicks = subdivision - transportPos % subdivision;
	            return this._clock.nextTickTime(remainingTicks, now);
	        }
	    };
	    /**
		 *  Attaches the signal to the tempo control signal so that
		 *  any changes in the tempo will change the signal in the same
		 *  ratio.
		 *
		 *  @param  {Tone.Signal} signal
		 *  @param {number=} ratio Optionally pass in the ratio between
		 *                         the two signals. Otherwise it will be computed
		 *                         based on their current values.
		 *  @returns {Tone.Transport} this
		 */
	    Tone.Transport.prototype.syncSignal = function (signal, ratio) {
	        if (!ratio) {
	            //get the sync ratio
	            var now = this.now();
	            if (signal.getValueAtTime(now) !== 0) {
	                ratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);
	            } else {
	                ratio = 0;
	            }
	        }
	        var ratioSignal = new Tone.Gain(ratio);
	        this.bpm.chain(ratioSignal, signal._param);
	        this._syncedSignals.push({
	            'ratio': ratioSignal,
	            'signal': signal,
	            'initial': signal.value
	        });
	        signal.value = 0;
	        return this;
	    };
	    /**
		 *  Unsyncs a previously synced signal from the transport's control.
		 *  See Tone.Transport.syncSignal.
		 *  @param  {Tone.Signal} signal
		 *  @returns {Tone.Transport} this
		 */
	    Tone.Transport.prototype.unsyncSignal = function (signal) {
	        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {
	            var syncedSignal = this._syncedSignals[i];
	            if (syncedSignal.signal === signal) {
	                syncedSignal.ratio.dispose();
	                syncedSignal.signal.value = syncedSignal.initial;
	                this._syncedSignals.splice(i, 1);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Transport} this
		 *  @private
		 */
	    Tone.Transport.prototype.dispose = function () {
	        Tone.Emitter.prototype.dispose.call(this);
	        this._clock.dispose();
	        this._clock = null;
	        this._writable('bpm');
	        this.bpm = null;
	        this._timeline.dispose();
	        this._timeline = null;
	        this._repeatedEvents.dispose();
	        this._repeatedEvents = null;
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////////
	    //	INITIALIZATION
	    ///////////////////////////////////////////////////////////////////////////////
	    var TransportConstructor = Tone.Transport;
	    Tone.Transport = new TransportConstructor();
	    Tone.Context.on('init', function (context) {
	        if (context.Transport instanceof TransportConstructor) {
	            Tone.Transport = context.Transport;
	        } else {
	            Tone.Transport = new TransportConstructor();
	        }
	        //store the Transport on the context so it can be retrieved later
	        context.Transport = Tone.Transport;
	    });
	    Tone.Context.on('close', function (context) {
	        if (context.Transport instanceof TransportConstructor) {
	            context.Transport.dispose();
	        }
	    });
	    return Tone.Transport;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Decibels} [volume=0] the initial volume
		 *  @example
		 * var vol = new Tone.Volume(-12);
		 * instrument.chain(vol, Tone.Master);
		 */
	    Tone.Volume = function () {
	        var options = Tone.defaults(arguments, ['volume'], Tone.Volume);
	        Tone.AudioNode.call(this);
	        /**
			 * the output node
			 * @type {GainNode}
			 * @private
			 */
	        this.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);
	        /**
			 * The unmuted volume
			 * @type {Decibels}
			 * @private
			 */
	        this._unmutedVolume = options.volume;
	        /**
			 *  The volume control in decibels.
			 *  @type {Decibels}
			 *  @signal
			 */
	        this.volume = this.output.gain;
	        this._readOnly('volume');
	        //set the mute initially
	        this.mute = options.mute;
	    };
	    Tone.extend(Tone.Volume, Tone.AudioNode);
	    /**
		 *  Defaults
		 *  @type  {Object}
		 *  @const
		 *  @static
		 */
	    Tone.Volume.defaults = {
	        'volume': 0,
	        'mute': false
	    };
	    /**
		 * Mute the output.
		 * @memberOf Tone.Volume#
		 * @type {boolean}
		 * @name mute
		 * @example
		 * //mute the output
		 * volume.mute = true;
		 */
	    Object.defineProperty(Tone.Volume.prototype, 'mute', {
	        get: function () {
	            return this.volume.value === -Infinity;
	        },
	        set: function (mute) {
	            if (!this.mute && mute) {
	                this._unmutedVolume = this.volume.value;
	                //maybe it should ramp here?
	                this.volume.value = -Infinity;
	            } else if (this.mute && !mute) {
	                this.volume.value = this._unmutedVolume;
	            }
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.Volume} this
		 */
	    Tone.Volume.prototype.dispose = function () {
	        this.input.dispose();
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable('volume');
	        this.volume.dispose();
	        this.volume = null;
	        return this;
	    };
	    return Tone.Volume;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  A single master output which is connected to the
		 *          AudioDestinationNode (aka your speakers).
		 *          It provides useful conveniences such as the ability
		 *          to set the volume and mute the entire application.
		 *          It also gives you the ability to apply master effects to your application.
		 *          <br><br>
		 *          Like Tone.Transport, A single Tone.Master is created
		 *          on initialization and you do not need to explicitly construct one.
		 *
		 *  @constructor
		 *  @extends {Tone}
		 *  @singleton
		 *  @example
		 * //the audio will go from the oscillator to the speakers
		 * oscillator.connect(Tone.Master);
		 * //a convenience for connecting to the master output is also provided:
		 * oscillator.toMaster();
		 * //the above two examples are equivalent.
		 */
	    Tone.Master = function () {
	        Tone.AudioNode.call(this);
	        Tone.getContext(function () {
	            this.createInsOuts(1, 0);
	            /**
				 *  The private volume node
				 *  @type  {Tone.Volume}
				 *  @private
				 */
	            this._volume = this.output = new Tone.Volume();
	            /**
				 * The volume of the master output.
				 * @type {Decibels}
				 * @signal
				 */
	            this.volume = this._volume.volume;
	            this._readOnly('volume');
	            //connections
	            this.input.chain(this.output, this.context.destination);
	        }.bind(this));
	    };
	    Tone.extend(Tone.Master, Tone.AudioNode);
	    /**
		 *  @type {Object}
		 *  @const
		 */
	    Tone.Master.defaults = {
	        'volume': 0,
	        'mute': false
	    };
	    /**
		 * Mute the output.
		 * @memberOf Tone.Master#
		 * @type {boolean}
		 * @name mute
		 * @example
		 * //mute the output
		 * Tone.Master.mute = true;
		 */
	    Object.defineProperty(Tone.Master.prototype, 'mute', {
	        get: function () {
	            return this._volume.mute;
	        },
	        set: function (mute) {
	            this._volume.mute = mute;
	        }
	    });
	    /**
		 *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously
		 *  chained in the master effects chain.
		 *  @param {AudioNode|Tone} args... All arguments will be connected in a row
		 *                                  and the Master will be routed through it.
		 *  @return  {Tone.Master}  this
		 *  @example
		 * //some overall compression to keep the levels in check
		 * var masterCompressor = new Tone.Compressor({
		 * 	"threshold" : -6,
		 * 	"ratio" : 3,
		 * 	"attack" : 0.5,
		 * 	"release" : 0.1
		 * });
		 * //give a little boost to the lows
		 * var lowBump = new Tone.Filter(200, "lowshelf");
		 * //route everything through the filter
		 * //and compressor before going to the speakers
		 * Tone.Master.chain(lowBump, masterCompressor);
		 */
	    Tone.Master.prototype.chain = function () {
	        this.input.disconnect();
	        this.input.chain.apply(this.input, arguments);
	        arguments[arguments.length - 1].connect(this.output);
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.Master}  this
		 */
	    Tone.Master.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable('volume');
	        this._volume.dispose();
	        this._volume = null;
	        this.volume = null;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    //	AUGMENT TONE's PROTOTYPE
	    ///////////////////////////////////////////////////////////////////////////
	    /**
		 *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)
		 *  @returns {Tone.AudioNode} this
		 *  @example
		 * //connect an oscillator to the master output
		 * var osc = new Tone.Oscillator().toMaster();
		 */
	    Tone.AudioNode.prototype.toMaster = function () {
	        this.connect(Tone.Master);
	        return this;
	    };
	    if (window.AudioNode) {
	        // Also augment AudioNode's prototype to include toMaster as a convenience
	        AudioNode.prototype.toMaster = function () {
	            this.connect(Tone.Master);
	            return this;
	        };
	    }
	    /**
		 *  initialize the module and listen for new audio contexts
		 */
	    var MasterConstructor = Tone.Master;
	    Tone.Master = new MasterConstructor();
	    Tone.Context.on('init', function (context) {
	        // if it already exists, just restore it
	        if (context.Master instanceof MasterConstructor) {
	            Tone.Master = context.Master;
	        } else {
	            Tone.Master = new MasterConstructor();
	        }
	        context.Master = Tone.Master;
	    });
	    Tone.Context.on('close', function (context) {
	        if (context.Master instanceof MasterConstructor) {
	            context.Master.dispose();
	        }
	    });
	    return Tone.Master;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Base class for sources. Sources have start/stop methods
		 *          and the ability to be synced to the
		 *          start/stop of Tone.Transport.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @example
		 * //Multiple state change events can be chained together,
		 * //but must be set in the correct order and with ascending times
		 *
		 * // OK
		 * state.start().stop("+0.2");
		 * // AND
		 * state.start().stop("+0.2").start("+0.4").stop("+0.7")
		 *
		 * // BAD
		 * state.stop("+0.2").start();
		 * // OR
		 * state.start("+0.3").stop("+0.2");
		 *
		 */
	    Tone.Source = function (options) {
	        options = Tone.defaultArg(options, Tone.Source.defaults);
	        Tone.AudioNode.call(this);
	        /**
			 *  The output volume node
			 *  @type  {Tone.Volume}
			 *  @private
			 */
	        this._volume = this.output = new Tone.Volume(options.volume);
	        /**
			 * The volume of the output in decibels.
			 * @type {Decibels}
			 * @signal
			 * @example
			 * source.volume.value = -6;
			 */
	        this.volume = this._volume.volume;
	        this._readOnly('volume');
	        /**
			 * 	Keep track of the scheduled state.
			 *  @type {Tone.TimelineState}
			 *  @private
			 */
	        this._state = new Tone.TimelineState(Tone.State.Stopped);
	        this._state.memory = 100;
	        /**
			 *  The synced `start` callback function from the transport
			 *  @type {Function}
			 *  @private
			 */
	        this._synced = false;
	        /**
			 *  Keep track of all of the scheduled event ids
			 *  @type  {Array}
			 *  @private
			 */
	        this._scheduled = [];
	        //make the output explicitly stereo
	        this._volume.output.output.channelCount = 2;
	        this._volume.output.output.channelCountMode = 'explicit';
	        //mute initially
	        this.mute = options.mute;
	    };
	    Tone.extend(Tone.Source, Tone.AudioNode);
	    /**
		 *  The default parameters
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Source.defaults = {
	        'volume': 0,
	        'mute': false
	    };
	    /**
		 *  Returns the playback state of the source, either "started" or "stopped".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.Source#
		 *  @name state
		 */
	    Object.defineProperty(Tone.Source.prototype, 'state', {
	        get: function () {
	            if (this._synced) {
	                if (Tone.Transport.state === Tone.State.Started) {
	                    return this._state.getValueAtTime(Tone.Transport.seconds);
	                } else {
	                    return Tone.State.Stopped;
	                }
	            } else {
	                return this._state.getValueAtTime(this.now());
	            }
	        }
	    });
	    /**
		 * Mute the output.
		 * @memberOf Tone.Source#
		 * @type {boolean}
		 * @name mute
		 * @example
		 * //mute the output
		 * source.mute = true;
		 */
	    Object.defineProperty(Tone.Source.prototype, 'mute', {
	        get: function () {
	            return this._volume.mute;
	        },
	        set: function (mute) {
	            this._volume.mute = mute;
	        }
	    });
	    //overwrite these functions
	    Tone.Source.prototype._start = Tone.noOp;
	    Tone.Source.prototype.restart = Tone.noOp;
	    Tone.Source.prototype._stop = Tone.noOp;
	    /**
		 *  Start the source at the specified time. If no time is given,
		 *  start the source now.
		 *  @param  {Time} [time=now] When the source should be started.
		 *  @returns {Tone.Source} this
		 *  @example
		 * source.start("+0.5"); //starts the source 0.5 seconds from now
		 */
	    Tone.Source.prototype.start = function (time, offset, duration) {
	        if (Tone.isUndef(time) && this._synced) {
	            time = Tone.Transport.seconds;
	        } else {
	            time = this.toSeconds(time);
	        }
	        //if it's started, stop it and restart it
	        if (this._state.getValueAtTime(time) === Tone.State.Started) {
	            this._state.cancel(time);
	            this._state.setStateAtTime(Tone.State.Started, time);
	            this.restart(time, offset, duration);
	        } else {
	            this._state.setStateAtTime(Tone.State.Started, time);
	            if (this._synced) {
	                // add the offset time to the event
	                var event = this._state.get(time);
	                event.offset = Tone.defaultArg(offset, 0);
	                event.duration = duration;
	                var sched = Tone.Transport.schedule(function (t) {
	                    this._start(t, offset, duration);
	                }.bind(this), time);
	                this._scheduled.push(sched);
	                //if it's already started
	                if (Tone.Transport.state === Tone.State.Started) {
	                    this._syncedStart(this.now(), Tone.Transport.seconds);
	                }
	            } else {
	                this._start.apply(this, arguments);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Stop the source at the specified time. If no time is given,
		 *  stop the source now.
		 *  @param  {Time} [time=now] When the source should be stopped.
		 *  @returns {Tone.Source} this
		 *  @example
		 * source.stop(); // stops the source immediately
		 */
	    Tone.Source.prototype.stop = function (time) {
	        if (Tone.isUndef(time) && this._synced) {
	            time = Tone.Transport.seconds;
	        } else {
	            time = this.toSeconds(time);
	        }
	        if (!this._synced) {
	            this._stop.apply(this, arguments);
	        } else {
	            var sched = Tone.Transport.schedule(this._stop.bind(this), time);
	            this._scheduled.push(sched);
	        }
	        this._state.cancel(time);
	        this._state.setStateAtTime(Tone.State.Stopped, time);
	        return this;
	    };
	    /**
		 *  Sync the source to the Transport so that all subsequent
		 *  calls to `start` and `stop` are synced to the TransportTime
		 *  instead of the AudioContext time.
		 *
		 *  @returns {Tone.Source} this
		 *  @example
		 * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline
		 * source.sync().start(0).stop(0.3);
		 * //start the transport.
		 * Tone.Transport.start();
		 *
		 *  @example
		 * //start the transport with an offset and the sync'ed sources
		 * //will start in the correct position
		 * source.sync().start(0.1);
		 * //the source will be invoked with an offset of 0.4
		 * Tone.Transport.start("+0.5", 0.5);
		 */
	    Tone.Source.prototype.sync = function () {
	        this._synced = true;
	        this._syncedStart = function (time, offset) {
	            if (offset > 0) {
	                // get the playback state at that time
	                var stateEvent = this._state.get(offset);
	                // listen for start events which may occur in the middle of the sync'ed time
	                if (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset) {
	                    // get the offset
	                    var startOffset = offset - this.toSeconds(stateEvent.time);
	                    var duration;
	                    if (stateEvent.duration) {
	                        duration = this.toSeconds(stateEvent.duration) - startOffset;
	                    }
	                    this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);
	                }
	            }
	        }.bind(this);
	        this._syncedStop = function (time) {
	            var seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));
	            if (this._state.getValueAtTime(seconds) === Tone.State.Started) {
	                this._stop(time);
	            }
	        }.bind(this);
	        Tone.Transport.on('start loopStart', this._syncedStart);
	        Tone.Transport.on('stop pause loopEnd', this._syncedStop);
	        return this;
	    };
	    /**
		 *  Unsync the source to the Transport. See Tone.Source.sync
		 *  @returns {Tone.Source} this
		 */
	    Tone.Source.prototype.unsync = function () {
	        if (this._synced) {
	            Tone.Transport.off('stop pause loopEnd', this._syncedStop);
	            Tone.Transport.off('start loopStart', this._syncedStart);
	        }
	        this._synced = false;
	        // clear all of the scheduled ids
	        for (var i = 0; i < this._scheduled.length; i++) {
	            var id = this._scheduled[i];
	            Tone.Transport.clear(id);
	        }
	        this._scheduled = [];
	        this._state.cancel(0);
	        return this;
	    };
	    /**
		 *	Clean up.
		 *  @return {Tone.Source} this
		 */
	    Tone.Source.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.unsync();
	        this._scheduled = null;
	        this._writable('volume');
	        this._volume.dispose();
	        this._volume = null;
	        this.volume = null;
	        this._state.dispose();
	        this._state = null;
	    };
	    return Tone.Source;
	});
	Module(function (Tone) {
	    /**
		 *  AudioBuffer.copyTo/FromChannel polyfill
		 *  @private
		 */
	    if (Tone.supported) {
	        if (!AudioBuffer.prototype.copyToChannel) {
	            AudioBuffer.prototype.copyToChannel = function (src, chanNum, start) {
	                var channel = this.getChannelData(chanNum);
	                start = start || 0;
	                for (var i = 0; i < channel.length; i++) {
	                    channel[i + start] = src[i];
	                }
	            };
	            AudioBuffer.prototype.copyFromChannel = function (dest, chanNum, start) {
	                var channel = this.getChannelData(chanNum);
	                start = start || 0;
	                for (var i = 0; i < dest.length; i++) {
	                    dest[i] = channel[i + start];
	                }
	            };
	        }
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Buffer loading and storage. Tone.Buffer is used internally by all
		 *          classes that make requests for audio files such as Tone.Player,
		 *          Tone.Sampler and Tone.Convolver.
		 *
		 *          Aside from load callbacks from individual buffers, Tone.Buffer
		 *  		provides events which keep track of the loading progress
		 *  		of _all_ of the buffers. These are Tone.Buffer.on("load" / "progress" / "error")
		 *
		 *  @constructor
		 *  @extends {Tone}
		 *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.
		 *  @param {Function=} onload A callback which is invoked after the buffer is loaded.
		 *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead
		 *                            since it will give you a callback when _all_ buffers are loaded.
		 *  @param {Function=} onerror The callback to invoke if there is an error
		 *  @example
		 * var buffer = new Tone.Buffer("path/to/sound.mp3", function(){
		 * 	//the buffer is now available.
		 * 	var buff = buffer.get();
		 * });
		 *  @example
		 * //can load provide fallback extension types if the first type is not supported.
		 * var buffer = new Tone.Buffer("path/to/sound.[mp3|ogg|wav]");
		 */
	    Tone.Buffer = function () {
	        var options = Tone.defaults(arguments, [
	            'url',
	            'onload',
	            'onerror'
	        ], Tone.Buffer);
	        Tone.call(this);
	        /**
			 *  stores the loaded AudioBuffer
			 *  @type {AudioBuffer}
			 *  @private
			 */
	        this._buffer = null;
	        /**
			 *  indicates if the buffer should be reversed or not
			 *  @type {Boolean}
			 *  @private
			 */
	        this._reversed = options.reverse;
	        /**
			 *  The XHR
			 *  @type  {XMLHttpRequest}
			 *  @private
			 */
	        this._xhr = null;
	        /**
			 * Private callback when the buffer is loaded.
			 * @type {Function}
			 * @private
			 */
	        this._onload = Tone.noOp;
	        if (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer) {
	            this.set(options.url);
	            // invoke the onload callback
	            if (options.onload) {
	                if (this.loaded) {
	                    options.onload(this);
	                } else {
	                    this._onload = options.onload;
	                }
	            }
	        } else if (Tone.isString(options.url)) {
	            this.load(options.url).then(options.onload).catch(options.onerror);
	        }
	    };
	    Tone.extend(Tone.Buffer);
	    /**
		 *  the default parameters
		 *  @type {Object}
		 */
	    Tone.Buffer.defaults = {
	        'url': undefined,
	        'reverse': false,
	        'onload': Tone.noOp,
	        'onerror': Tone.noOp
	    };
	    /**
		 *  Pass in an AudioBuffer or Tone.Buffer to set the value
		 *  of this buffer.
		 *  @param {AudioBuffer|Tone.Buffer} buffer the buffer
		 *  @returns {Tone.Buffer} this
		 */
	    Tone.Buffer.prototype.set = function (buffer) {
	        if (buffer instanceof Tone.Buffer) {
	            if (buffer.loaded) {
	                this._buffer = buffer.get();
	            } else {
	                buffer._onload = function () {
	                    this.set(buffer);
	                    this._onload(this);
	                }.bind(this);
	            }
	        } else {
	            this._buffer = buffer;
	        }
	        return this;
	    };
	    /**
		 *  @return {AudioBuffer} The audio buffer stored in the object.
		 */
	    Tone.Buffer.prototype.get = function () {
	        return this._buffer;
	    };
	    /**
		 *  Makes an xhr reqest for the selected url then decodes
		 *  the file as an audio buffer. Invokes
		 *  the callback once the audio buffer loads.
		 *  @param {String} url The url of the buffer to load.
		 *                      filetype support depends on the
		 *                      browser.
		 *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer
		 */
	    Tone.Buffer.prototype.load = function (url, onload, onerror) {
	        var promise = new Promise(function (load, error) {
	            this._xhr = Tone.Buffer.load(url, //success
	            function (buff) {
	                this._xhr = null;
	                this.set(buff);
	                load(this);
	                this._onload(this);
	                if (onload) {
	                    onload(this);
	                }
	            }.bind(this), //error
	            function (err) {
	                this._xhr = null;
	                error(err);
	                if (onerror) {
	                    onerror(err);
	                }
	            }.bind(this));
	        }.bind(this));
	        return promise;
	    };
	    /**
		 *  dispose and disconnect
		 *  @returns {Tone.Buffer} this
		 */
	    Tone.Buffer.prototype.dispose = function () {
	        Tone.prototype.dispose.call(this);
	        this._buffer = null;
	        if (this._xhr) {
	            Tone.Buffer._removeFromDownloadQueue(this._xhr);
	            this._xhr.abort();
	            this._xhr = null;
	        }
	        return this;
	    };
	    /**
		 * If the buffer is loaded or not
		 * @memberOf Tone.Buffer#
		 * @type {Boolean}
		 * @name loaded
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Buffer.prototype, 'loaded', {
	        get: function () {
	            return this.length > 0;
	        }
	    });
	    /**
		 * The duration of the buffer.
		 * @memberOf Tone.Buffer#
		 * @type {Number}
		 * @name duration
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Buffer.prototype, 'duration', {
	        get: function () {
	            if (this._buffer) {
	                return this._buffer.duration;
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 * The length of the buffer in samples
		 * @memberOf Tone.Buffer#
		 * @type {Number}
		 * @name length
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Buffer.prototype, 'length', {
	        get: function () {
	            if (this._buffer) {
	                return this._buffer.length;
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 * The number of discrete audio channels. Returns 0 if no buffer
		 * is loaded.
		 * @memberOf Tone.Buffer#
		 * @type {Number}
		 * @name numberOfChannels
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Buffer.prototype, 'numberOfChannels', {
	        get: function () {
	            if (this._buffer) {
	                return this._buffer.numberOfChannels;
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 *  Set the audio buffer from the array. To create a multichannel AudioBuffer,
		 *  pass in a multidimensional array.
		 *  @param {Float32Array} array The array to fill the audio buffer
		 *  @return {Tone.Buffer} this
		 */
	    Tone.Buffer.prototype.fromArray = function (array) {
	        var isMultidimensional = array[0].length > 0;
	        var channels = isMultidimensional ? array.length : 1;
	        var len = isMultidimensional ? array[0].length : array.length;
	        var buffer = this.context.createBuffer(channels, len, this.context.sampleRate);
	        if (!isMultidimensional && channels === 1) {
	            array = [array];
	        }
	        for (var c = 0; c < channels; c++) {
	            buffer.copyToChannel(array[c], c);
	        }
	        this._buffer = buffer;
	        return this;
	    };
	    /**
		 * 	Sums muliple channels into 1 channel
		 *  @param {Number=} channel Optionally only copy a single channel from the array.
		 *  @return {Array}
		 */
	    Tone.Buffer.prototype.toMono = function (chanNum) {
	        if (Tone.isNumber(chanNum)) {
	            this.fromArray(this.toArray(chanNum));
	        } else {
	            var outputArray = new Float32Array(this.length);
	            var numChannels = this.numberOfChannels;
	            for (var channel = 0; channel < numChannels; channel++) {
	                var channelArray = this.toArray(channel);
	                for (var i = 0; i < channelArray.length; i++) {
	                    outputArray[i] += channelArray[i];
	                }
	            }
	            //divide by the number of channels
	            outputArray = outputArray.map(function (sample) {
	                return sample / numChannels;
	            });
	            this.fromArray(outputArray);
	        }
	        return this;
	    };
	    /**
		 * 	Get the buffer as an array. Single channel buffers will return a 1-dimensional
		 * 	Float32Array, and multichannel buffers will return multidimensional arrays.
		 *  @param {Number=} channel Optionally only copy a single channel from the array.
		 *  @return {Array}
		 */
	    Tone.Buffer.prototype.toArray = function (channel) {
	        if (Tone.isNumber(channel)) {
	            return this.getChannelData(channel);
	        } else if (this.numberOfChannels === 1) {
	            return this.toArray(0);
	        } else {
	            var ret = [];
	            for (var c = 0; c < this.numberOfChannels; c++) {
	                ret[c] = this.getChannelData(c);
	            }
	            return ret;
	        }
	    };
	    /**
		 *  Returns the Float32Array representing the PCM audio data for the specific channel.
		 *  @param  {Number}  channel  The channel number to return
		 *  @return  {Float32Array}  The audio as a TypedArray
		 */
	    Tone.Buffer.prototype.getChannelData = function (channel) {
	        return this._buffer.getChannelData(channel);
	    };
	    /**
		 *  Cut a subsection of the array and return a buffer of the
		 *  subsection. Does not modify the original buffer
		 *  @param {Time} start The time to start the slice
		 *  @param {Time=} end The end time to slice. If none is given
		 *                     will default to the end of the buffer
		 *  @return {Tone.Buffer} this
		 */
	    Tone.Buffer.prototype.slice = function (start, end) {
	        end = Tone.defaultArg(end, this.duration);
	        var startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));
	        var endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));
	        var replacement = [];
	        for (var i = 0; i < this.numberOfChannels; i++) {
	            replacement[i] = this.toArray(i).slice(startSamples, endSamples);
	        }
	        var retBuffer = new Tone.Buffer().fromArray(replacement);
	        return retBuffer;
	    };
	    /**
		 *  Reverse the buffer.
		 *  @private
		 *  @return {Tone.Buffer} this
		 */
	    Tone.Buffer.prototype._reverse = function () {
	        if (this.loaded) {
	            for (var i = 0; i < this.numberOfChannels; i++) {
	                Array.prototype.reverse.call(this.getChannelData(i));
	            }
	        }
	        return this;
	    };
	    /**
		 * Reverse the buffer.
		 * @memberOf Tone.Buffer#
		 * @type {Boolean}
		 * @name reverse
		 */
	    Object.defineProperty(Tone.Buffer.prototype, 'reverse', {
	        get: function () {
	            return this._reversed;
	        },
	        set: function (rev) {
	            if (this._reversed !== rev) {
	                this._reversed = rev;
	                this._reverse();
	            }
	        }
	    });
	    ///////////////////////////////////////////////////////////////////////////
	    // STATIC METHODS
	    ///////////////////////////////////////////////////////////////////////////
	    //statically inherits Emitter methods
	    Tone.Emitter.mixin(Tone.Buffer);
	    /**
		 *  the static queue for all of the xhr requests
		 *  @type {Array}
		 *  @private
		 */
	    Tone.Buffer._downloadQueue = [];
	    /**
		 *  A path which is prefixed before every url.
		 *  @type  {String}
		 *  @static
		 */
	    Tone.Buffer.baseUrl = '';
	    /**
		 *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,
		 *  pass in a multidimensional array.
		 *  @param {Float32Array} array The array to fill the audio buffer
		 *  @return {Tone.Buffer} A Tone.Buffer created from the array
		 */
	    Tone.Buffer.fromArray = function (array) {
	        return new Tone.Buffer().fromArray(array);
	    };
	    /**
		 * Creates a Tone.Buffer from a URL, returns a promise
		 * which resolves to a Tone.Buffer
		 * @param  {String} url The url to load.
		 * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer
		 */
	    Tone.Buffer.fromUrl = function (url) {
	        var buffer = new Tone.Buffer();
	        return buffer.load(url).then(function () {
	            return buffer;
	        });
	    };
	    /**
		 * Remove an xhr request from the download queue
		 * @private
		 */
	    Tone.Buffer._removeFromDownloadQueue = function (request) {
	        var index = Tone.Buffer._downloadQueue.indexOf(request);
	        if (index !== -1) {
	            Tone.Buffer._downloadQueue.splice(index, 1);
	        }
	    };
	    /**
		 *  Loads a url using XMLHttpRequest.
		 *  @param {String} url
		 *  @param {Function} onload
		 *  @param {Function} onerror
		 *  @param {Function} onprogress
		 *  @return {XMLHttpRequest}
		 */
	    Tone.Buffer.load = function (url, onload, onerror) {
	        //default
	        onload = Tone.defaultArg(onload, Tone.noOp);
	        // test if the url contains multiple extensions
	        var matches = url.match(/\[(.+\|?)+\]$/);
	        if (matches) {
	            var extensions = matches[1].split('|');
	            var extension = extensions[0];
	            for (var i = 0; i < extensions.length; i++) {
	                if (Tone.Buffer.supportsType(extensions[i])) {
	                    extension = extensions[i];
	                    break;
	                }
	            }
	            url = url.replace(matches[0], extension);
	        }
	        function onError(e) {
	            Tone.Buffer._removeFromDownloadQueue(request);
	            Tone.Buffer.emit('error', e);
	            if (onerror) {
	                onerror(e);
	            } else {
	                throw e;
	            }
	        }
	        function onProgress() {
	            //calculate the progress
	            var totalProgress = 0;
	            for (var i = 0; i < Tone.Buffer._downloadQueue.length; i++) {
	                totalProgress += Tone.Buffer._downloadQueue[i].progress;
	            }
	            Tone.Buffer.emit('progress', totalProgress / Tone.Buffer._downloadQueue.length);
	        }
	        var request = new XMLHttpRequest();
	        request.open('GET', Tone.Buffer.baseUrl + url, true);
	        request.responseType = 'arraybuffer';
	        //start out as 0
	        request.progress = 0;
	        Tone.Buffer._downloadQueue.push(request);
	        request.addEventListener('load', function () {
	            if (request.status === 200) {
	                Tone.context.decodeAudioData(request.response).then(function (buff) {
	                    request.progress = 1;
	                    onProgress();
	                    onload(buff);
	                    Tone.Buffer._removeFromDownloadQueue(request);
	                    if (Tone.Buffer._downloadQueue.length === 0) {
	                        //emit the event at the end
	                        Tone.Buffer.emit('load');
	                    }
	                }).catch(function () {
	                    Tone.Buffer._removeFromDownloadQueue(request);
	                    onError('Tone.Buffer: could not decode audio data: ' + url);
	                });
	            } else {
	                onError('Tone.Buffer: could not locate file: ' + url);
	            }
	        });
	        request.addEventListener('error', onError);
	        request.addEventListener('progress', function (event) {
	            if (event.lengthComputable) {
	                //only go to 95%, the last 5% is when the audio is decoded
	                request.progress = event.loaded / event.total * 0.95;
	                onProgress();
	            }
	        });
	        request.send();
	        return request;
	    };
	    /**
		 *  Stop all of the downloads in progress
		 *  @return {Tone.Buffer}
		 *  @static
		 */
	    Tone.Buffer.cancelDownloads = function () {
	        Tone.Buffer._downloadQueue.slice().forEach(function (request) {
	            Tone.Buffer._removeFromDownloadQueue(request);
	            request.abort();
	        });
	        return Tone.Buffer;
	    };
	    /**
		 *  Checks a url's extension to see if the current browser can play that file type.
		 *  @param {String} url The url/extension to test
		 *  @return {Boolean} If the file extension can be played
		 *  @static
		 *  @example
		 * Tone.Buffer.supportsType("wav"); //returns true
		 * Tone.Buffer.supportsType("path/to/file.wav"); //returns true
		 */
	    Tone.Buffer.supportsType = function (url) {
	        var extension = url.split('.');
	        extension = extension[extension.length - 1];
	        var response = document.createElement('audio').canPlayType('audio/' + extension);
	        return response !== '';
	    };
	    /**
		 *  Returns a Promise which resolves when all of the buffers have loaded
		 *  @return {Promise}
		 */
	    Tone.loaded = function () {
	        var onload, onerror;
	        function removeEvents() {
	            //remove the events when it's resolved
	            Tone.Buffer.off('load', onload);
	            Tone.Buffer.off('error', onerror);
	        }
	        return new Promise(function (success, fail) {
	            onload = function () {
	                success();
	            };
	            onerror = function () {
	                fail();
	            };
	            //add the event listeners
	            Tone.Buffer.on('load', onload);
	            Tone.Buffer.on('error', onerror);
	        }).then(removeEvents).catch(function (e) {
	            removeEvents();
	            throw new Error(e);
	        });
	    };
	    return Tone.Buffer;
	});
	Module(function (Tone) {
	    /**
		 *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the
		 *     ability to reschedule the stop method.
		 *  @extends {Tone.AudioNode}
		 *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play
		 *  @param  {Function}  onload  The callback to invoke when the
		 *                               buffer is done playing.
		 */
	    Tone.OscillatorNode = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type'
	        ], Tone.OscillatorNode);
	        Tone.AudioNode.call(this, options);
	        /**
			 *  The callback to invoke after the
			 *  buffer source is done playing.
			 *  @type  {Function}
			 */
	        this.onended = options.onended;
	        /**
			 *  The oscillator start time
			 *  @type  {Number}
			 *  @private
			 */
	        this._startTime = -1;
	        /**
			 *  The oscillator stop time
			 *  @type  {Number}
			 *  @private
			 */
	        this._stopTime = -1;
	        /**
			 *  The gain node which envelopes the OscillatorNode
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._gainNode = this.output = new Tone.Gain();
	        this._gainNode.gain.setValueAtTime(0, this.context.currentTime);
	        /**
			 *  The oscillator
			 *  @type  {OscillatorNode}
			 *  @private
			 */
	        this._oscillator = this.context.createOscillator();
	        this._oscillator.connect(this._gainNode);
	        this.type = options.type;
	        /**
			 *  The frequency of the oscillator
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Param(this._oscillator.frequency, Tone.Type.Frequency);
	        this.frequency.value = options.frequency;
	        /**
			 *  The detune of the oscillator
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.detune = new Tone.Param(this._oscillator.detune, Tone.Type.Cents);
	        this.detune.value = options.detune;
	        /**
			 *  The value that the buffer ramps to
			 *  @type {Gain}
			 *  @private
			 */
	        this._gain = 1;
	    };
	    Tone.extend(Tone.OscillatorNode, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.OscillatorNode.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'type': 'sine',
	        'onended': Tone.noOp
	    };
	    /**
		 *  Returns the playback state of the oscillator, either "started" or "stopped".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.OscillatorNode#
		 *  @name state
		 */
	    Object.defineProperty(Tone.OscillatorNode.prototype, 'state', {
	        get: function () {
	            return this.getStateAtTime(this.now());
	        }
	    });
	    /**
		 *  Get the playback state at the given time
		 *  @param  {Time}  time  The time to test the state at
		 *  @return  {Tone.State}  The playback state. 
		 */
	    Tone.OscillatorNode.prototype.getStateAtTime = function (time) {
	        time = this.toSeconds(time);
	        if (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)) {
	            return Tone.State.Started;
	        } else {
	            return Tone.State.Stopped;
	        }
	    };
	    /**
	     * Start the oscillator node at the given time
	     * @param  {Time=} time When to start the oscillator
	     * @return {OscillatorNode}      this
	     */
	    Tone.OscillatorNode.prototype.start = function (time) {
	        if (this._startTime === -1) {
	            this._startTime = this.toSeconds(time);
	            this._oscillator.start(this._startTime);
	            var now = this.context.currentTime;
	            this._gainNode.gain.cancelScheduledValues(now);
	            this._gainNode.gain.setValueAtTime(0, now);
	            this._gainNode.gain.setValueAtTime(1, this._startTime);
	        } else {
	            throw new Error('cannot call OscillatorNode.start more than once');
	        }
	        return this;
	    };
	    /**
	     * Sets an arbitrary custom periodic waveform given a PeriodicWave.
	     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave
	     * @return {OscillatorNode} this
	     */
	    Tone.OscillatorNode.prototype.setPeriodicWave = function (periodicWave) {
	        this._oscillator.setPeriodicWave(periodicWave);
	        return this;
	    };
	    /**
	     * Stop the oscillator node at the given time
	     * @param  {Time=} time When to stop the oscillator
	     * @return {OscillatorNode}      this
	     */
	    Tone.OscillatorNode.prototype.stop = function (time) {
	        //cancel the previous stop
	        this.cancelStop();
	        //reschedule it
	        this._stopTime = this.toSeconds(time);
	        this._gainNode.gain.setValueAtTime(0, this._stopTime);
	        this.context.clearTimeout(this._timeout);
	        this._timeout = this.context.setTimeout(function () {
	            this._oscillator.stop(this.now());
	            this.onended();
	        }.bind(this), this._stopTime - this.now());
	        return this;
	    };
	    /**
		 *  Cancel a scheduled stop event
		 *  @return  {Tone.OscillatorNode}  this
		 */
	    Tone.OscillatorNode.prototype.cancelStop = function () {
	        if (this._startTime !== -1) {
	            //cancel the stop envelope
	            this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);
	            this._gainNode.gain.setValueAtTime(1, Math.max(this.now(), this._startTime));
	            this.context.clearTimeout(this._timeout);
	            this._stopTime = -1;
	        }
	        return this;
	    };
	    /**
		 * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'
		 * @memberOf Tone.OscillatorNode#
		 * @type {Time}
		 * @name type
		 */
	    Object.defineProperty(Tone.OscillatorNode.prototype, 'type', {
	        get: function () {
	            return this._oscillator.type;
	        },
	        set: function (type) {
	            this._oscillator.type = type;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.OscillatorNode}  this
		 */
	    Tone.OscillatorNode.prototype.dispose = function () {
	        this.context.clearTimeout(this._timeout);
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.onended = null;
	        this._oscillator.disconnect();
	        this._oscillator = null;
	        this._gainNode.dispose();
	        this._gainNode = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune.dispose();
	        this.detune = null;
	        return this;
	    };
	    return Tone.OscillatorNode;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Oscillator supports a number of features including
		 *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),
		 *         and Transport syncing (see Tone.Oscillator.syncFrequency).
		 *
		 *  @constructor
		 *  @extends {Tone.Source}
		 *  @param {Frequency} [frequency] Starting frequency
		 *  @param {string} [type] The oscillator type. Read more about type below.
		 *  @example
		 * //make and start a 440hz sine tone
		 * var osc = new Tone.Oscillator(440, "sine").toMaster().start();
		 */
	    Tone.Oscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type'
	        ], Tone.Oscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  the main oscillator
			 *  @type {OscillatorNode}
			 *  @private
			 */
	        this._oscillator = null;
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The detune control signal.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        /**
			 *  the periodic wave
			 *  @type {PeriodicWave}
			 *  @private
			 */
	        this._wave = null;
	        /**
			 *  The partials of the oscillator
			 *  @type {Array}
			 *  @private
			 */
	        this._partials = Tone.defaultArg(options.partials, [1]);
	        /**
			 *  the phase of the oscillator
			 *  between 0 - 360
			 *  @type {number}
			 *  @private
			 */
	        this._phase = options.phase;
	        /**
			 *  the type of the oscillator
			 *  @type {string}
			 *  @private
			 */
	        this._type = null;
	        //setup
	        this.type = options.type;
	        this.phase = this._phase;
	        this._readOnly([
	            'frequency',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.Oscillator, Tone.Source);
	    /**
		 *  the default parameters
		 *  @type {Object}
		 */
	    Tone.Oscillator.defaults = {
	        'type': 'sine',
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'partials': []
	    };
	    /**
		 *  The Oscillator types
		 *  @enum {String}
		 */
	    Tone.Oscillator.Type = {
	        Sine: 'sine',
	        Triangle: 'triangle',
	        Sawtooth: 'sawtooth',
	        Square: 'square',
	        Custom: 'custom'
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.Oscillator.prototype._start = function (time) {
	        //new oscillator with previous values
	        this._oscillator = new Tone.OscillatorNode();
	        if (this._wave) {
	            this._oscillator.setPeriodicWave(this._wave);
	        } else {
	            this._oscillator.type = this._type;
	        }
	        //connect the control signal to the oscillator frequency & detune
	        this._oscillator.connect(this.output);
	        this.frequency.connect(this._oscillator.frequency);
	        this.detune.connect(this._oscillator.detune);
	        //start the oscillator
	        time = this.toSeconds(time);
	        this._oscillator.start(time);
	    };
	    /**
		 *  stop the oscillator
		 *  @private
		 *  @param  {Time} [time=now] (optional) timing parameter
		 *  @returns {Tone.Oscillator} this
		 */
	    Tone.Oscillator.prototype._stop = function (time) {
	        if (this._oscillator) {
	            time = this.toSeconds(time);
	            this._oscillator.stop(time);
	        }
	        return this;
	    };
	    /**
		 * Restart the oscillator. Does not stop the oscillator, but instead
		 * just cancels any scheduled 'stop' from being invoked.
		 * @param  {Time=} time
		 * @return {Tone.Oscillator}      this
		 */
	    Tone.Oscillator.prototype.restart = function (time) {
	        this._oscillator.cancelStop();
	        this._state.cancel(this.toSeconds(time));
	        return this;
	    };
	    /**
		 *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,
		 *  will also affect the oscillators frequency.
		 *  @returns {Tone.Oscillator} this
		 *  @example
		 * Tone.Transport.bpm.value = 120;
		 * osc.frequency.value = 440;
		 * //the ration between the bpm and the frequency will be maintained
		 * osc.syncFrequency();
		 * Tone.Transport.bpm.value = 240;
		 * // the frequency of the oscillator is doubled to 880
		 */
	    Tone.Oscillator.prototype.syncFrequency = function () {
	        Tone.Transport.syncSignal(this.frequency);
	        return this;
	    };
	    /**
		 *  Unsync the oscillator's frequency from the Transport.
		 *  See Tone.Oscillator.syncFrequency
		 *  @returns {Tone.Oscillator} this
		 */
	    Tone.Oscillator.prototype.unsyncFrequency = function () {
	        Tone.Transport.unsyncSignal(this.frequency);
	        return this;
	    };
	    /**
		 * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of
		 * setting the first x number of partials of the oscillator. For example: "sine4" would
		 * set be the first 4 partials of the sine wave and "triangle8" would set the first
		 * 8 partials of the triangle wave.
		 * <br><br>
		 * Uses PeriodicWave internally even for native types so that it can set the phase.
		 * PeriodicWave equations are from the
		 * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).
		 *
		 * @memberOf Tone.Oscillator#
		 * @type {string}
		 * @name type
		 * @example
		 * //set it to a square wave
		 * osc.type = "square";
		 * @example
		 * //set the first 6 partials of a sawtooth wave
		 * osc.type = "sawtooth6";
		 */
	    Object.defineProperty(Tone.Oscillator.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            var isBasicType = [
	                Tone.Oscillator.Type.Sine,
	                Tone.Oscillator.Type.Square,
	                Tone.Oscillator.Type.Triangle,
	                Tone.Oscillator.Type.Sawtooth
	            ].includes(type);
	            if (this._phase === 0 && isBasicType) {
	                this._wave = null;
	                //just go with the basic approach
	                if (this._oscillator !== null) {
	                    this._oscillator.type === type;
	                }
	            } else {
	                var coefs = this._getRealImaginary(type, this._phase);
	                var periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);
	                this._wave = periodicWave;
	                if (this._oscillator !== null) {
	                    this._oscillator.setPeriodicWave(this._wave);
	                }
	            }
	            this._type = type;
	        }
	    });
	    /**
		 *  Returns the real and imaginary components based
		 *  on the oscillator type.
		 *  @returns {Array} [real, imaginary]
		 *  @private
		 */
	    Tone.Oscillator.prototype._getRealImaginary = function (type, phase) {
	        var fftSize = 4096;
	        var periodicWaveSize = fftSize / 2;
	        var real = new Float32Array(periodicWaveSize);
	        var imag = new Float32Array(periodicWaveSize);
	        var partialCount = 1;
	        if (type === Tone.Oscillator.Type.Custom) {
	            partialCount = this._partials.length + 1;
	            periodicWaveSize = partialCount;
	        } else {
	            var partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);
	            if (partial) {
	                partialCount = parseInt(partial[2]) + 1;
	                type = partial[1];
	                partialCount = Math.max(partialCount, 2);
	                periodicWaveSize = partialCount;
	            }
	        }
	        for (var n = 1; n < periodicWaveSize; ++n) {
	            var piFactor = 2 / (n * Math.PI);
	            var b;
	            switch (type) {
	            case Tone.Oscillator.Type.Sine:
	                b = n <= partialCount ? 1 : 0;
	                break;
	            case Tone.Oscillator.Type.Square:
	                b = n & 1 ? 2 * piFactor : 0;
	                break;
	            case Tone.Oscillator.Type.Sawtooth:
	                b = piFactor * (n & 1 ? 1 : -1);
	                break;
	            case Tone.Oscillator.Type.Triangle:
	                if (n & 1) {
	                    b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);
	                } else {
	                    b = 0;
	                }
	                break;
	            case Tone.Oscillator.Type.Custom:
	                b = this._partials[n - 1];
	                break;
	            default:
	                throw new TypeError('Tone.Oscillator: invalid type: ' + type);
	            }
	            if (b !== 0) {
	                real[n] = -b * Math.sin(phase * n);
	                imag[n] = b * Math.cos(phase * n);
	            } else {
	                real[n] = 0;
	                imag[n] = 0;
	            }
	        }
	        return [
	            real,
	            imag
	        ];
	    };
	    /**
		 *  Compute the inverse FFT for a given phase.
		 *  @param  {Float32Array}  real
		 *  @param  {Float32Array}  imag
		 *  @param  {NormalRange}  phase
		 *  @return  {AudioRange}
		 *  @private
		 */
	    Tone.Oscillator.prototype._inverseFFT = function (real, imag, phase) {
	        var sum = 0;
	        var len = real.length;
	        for (var i = 0; i < len; i++) {
	            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
	        }
	        return sum;
	    };
	    /**
		 *  Returns the initial value of the oscillator.
		 *  @return  {AudioRange}
		 *  @private
		 */
	    Tone.Oscillator.prototype._getInitialValue = function () {
	        var coefs = this._getRealImaginary(this._type, 0);
	        var real = coefs[0];
	        var imag = coefs[1];
	        var maxValue = 0;
	        var twoPi = Math.PI * 2;
	        //check for peaks in 8 places
	        for (var i = 0; i < 8; i++) {
	            maxValue = Math.max(this._inverseFFT(real, imag, i / 8 * twoPi), maxValue);
	        }
	        return -this._inverseFFT(real, imag, this._phase) / maxValue;
	    };
	    /**
		 * The partials of the waveform. A partial represents
		 * the amplitude at a harmonic. The first harmonic is the
		 * fundamental frequency, the second is the octave and so on
		 * following the harmonic series.
		 * Setting this value will automatically set the type to "custom".
		 * The value is an empty array when the type is not "custom".
		 * @memberOf Tone.Oscillator#
		 * @type {Array}
		 * @name partials
		 * @example
		 * osc.partials = [1, 0.2, 0.01];
		 */
	    Object.defineProperty(Tone.Oscillator.prototype, 'partials', {
	        get: function () {
	            if (this._type !== Tone.Oscillator.Type.Custom) {
	                return [];
	            } else {
	                return this._partials;
	            }
	        },
	        set: function (partials) {
	            this._partials = partials;
	            this.type = Tone.Oscillator.Type.Custom;
	        }
	    });
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.Oscillator#
		 * @type {Degrees}
		 * @name phase
		 * @example
		 * osc.phase = 180; //flips the phase of the oscillator
		 */
	    Object.defineProperty(Tone.Oscillator.prototype, 'phase', {
	        get: function () {
	            return this._phase * (180 / Math.PI);
	        },
	        set: function (phase) {
	            this._phase = phase * Math.PI / 180;
	            //reset the type
	            this.type = this._type;
	        }
	    });
	    /**
		 *  Dispose and disconnect.
		 *  @return {Tone.Oscillator} this
		 */
	    Tone.Oscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        if (this._oscillator !== null) {
	            this._oscillator.dispose();
	            this._oscillator = null;
	        }
	        this._wave = null;
	        this._writable([
	            'frequency',
	            'detune'
	        ]);
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune.dispose();
	        this.detune = null;
	        this._partials = null;
	        return this;
	    };
	    return Tone.Oscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. 
		 *         See Tone.GainToAudio.
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @example
		 *  var a2g = new Tone.AudioToGain();
		 */
	    Tone.AudioToGain = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {
	            return (x + 1) / 2;
	        });
	    };
	    Tone.extend(Tone.AudioToGain, Tone.SignalBase);
	    /**
		 *  clean up
		 *  @returns {Tone.AudioToGain} this
		 */
	    Tone.AudioToGain.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._norm.dispose();
	        this._norm = null;
	        return this;
	    };
	    return Tone.AudioToGain;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Zero outputs 0's at audio-rate. The reason this has to be
		 *         it's own class is that many browsers optimize out Tone.Signal
		 *         with a value of 0 and will not process nodes further down the graph.
		 *  @extends {Tone.SignalBase}
		 */
	    Tone.Zero = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  The gain node
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._gain = this.input = this.output = new Tone.Gain();
	        this.context.getConstant(0).connect(this._gain);
	    };
	    Tone.extend(Tone.Zero, Tone.SignalBase);
	    /**
		 *  clean up
		 *  @return  {Tone.Zero}  this
		 */
	    Tone.Zero.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._gain.dispose();
	        this._gain = null;
	        return this;
	    };
	    return Tone.Zero;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  LFO stands for low frequency oscillator. Tone.LFO produces an output signal
		 *          which can be attached to an AudioParam or Tone.Signal
		 *          in order to modulate that parameter with an oscillator. The LFO can
		 *          also be synced to the transport to start/stop and change when the tempo changes.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Frequency|Object} [frequency] The frequency of the oscillation. Typically, LFOs will be
		 *                               in the frequency range of 0.1 to 10 hertz.
		 *  @param {number=} min The minimum output value of the LFO.
		 *  @param {number=} max The maximum value of the LFO.
		 *  @example
		 * var lfo = new Tone.LFO("4n", 400, 4000);
		 * lfo.connect(filter.frequency);
		 */
	    Tone.LFO = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'min',
	            'max'
	        ], Tone.LFO);
	        Tone.AudioNode.call(this);
	        /**
			 *  The oscillator.
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._oscillator = new Tone.Oscillator({
	            'frequency': options.frequency,
	            'type': options.type
	        });
	        /**
			 *  the lfo's frequency
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this._oscillator.frequency;
	        /**
			 * The amplitude of the LFO, which controls the output range between
			 * the min and max output. For example if the min is -10 and the max
			 * is 10, setting the amplitude to 0.5 would make the LFO modulate
			 * between -5 and 5.
			 * @type {Number}
			 * @signal
			 */
	        this.amplitude = this._oscillator.volume;
	        this.amplitude.units = Tone.Type.NormalRange;
	        this.amplitude.value = options.amplitude;
	        /**
			 *  The signal which is output when the LFO is stopped
			 *  @type  {Tone.Signal}
			 *  @private
			 */
	        this._stoppedSignal = new Tone.Signal(0, Tone.Type.AudioRange);
	        /**
			 *  Just outputs zeros.
			 *  @type {Tone.Zero}
			 *  @private
			 */
	        this._zeros = new Tone.Zero();
	        /**
			 *  The value that the LFO outputs when it's stopped
			 *  @type {AudioRange}
			 *  @private
			 */
	        this._stoppedValue = 0;
	        /**
			 *  @type {Tone.AudioToGain}
			 *  @private
			 */
	        this._a2g = new Tone.AudioToGain();
	        /**
			 *  @type {Tone.Scale}
			 *  @private
			 */
	        this._scaler = this.output = new Tone.Scale(options.min, options.max);
	        /**
			 *  the units of the LFO (used for converting)
			 *  @type {Tone.Type}
			 *  @private
			 */
	        this._units = Tone.Type.Default;
	        this.units = options.units;
	        //connect it up
	        this._oscillator.chain(this._a2g, this._scaler);
	        this._zeros.connect(this._a2g);
	        this._stoppedSignal.connect(this._a2g);
	        this._readOnly([
	            'amplitude',
	            'frequency'
	        ]);
	        this.phase = options.phase;
	    };
	    Tone.extend(Tone.LFO, Tone.AudioNode);
	    /**
		 *  the default parameters
		 *
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.LFO.defaults = {
	        'type': 'sine',
	        'min': 0,
	        'max': 1,
	        'phase': 0,
	        'frequency': '4n',
	        'amplitude': 1,
	        'units': Tone.Type.Default
	    };
	    /**
		 *  Start the LFO.
		 *  @param  {Time} [time=now] the time the LFO will start
		 *  @returns {Tone.LFO} this
		 */
	    Tone.LFO.prototype.start = function (time) {
	        time = this.toSeconds(time);
	        this._stoppedSignal.setValueAtTime(0, time);
	        this._oscillator.start(time);
	        return this;
	    };
	    /**
		 *  Stop the LFO.
		 *  @param  {Time} [time=now] the time the LFO will stop
		 *  @returns {Tone.LFO} this
		 */
	    Tone.LFO.prototype.stop = function (time) {
	        time = this.toSeconds(time);
	        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);
	        this._oscillator.stop(time);
	        return this;
	    };
	    /**
		 *  Sync the start/stop/pause to the transport
		 *  and the frequency to the bpm of the transport
		 *  @returns {Tone.LFO} this
		 *  @example
		 *  lfo.frequency.value = "8n";
		 *  lfo.sync().start(0)
		 *  //the rate of the LFO will always be an eighth note,
		 *  //even as the tempo changes
		 */
	    Tone.LFO.prototype.sync = function () {
	        this._oscillator.sync();
	        this._oscillator.syncFrequency();
	        return this;
	    };
	    /**
		 *  unsync the LFO from transport control
		 *  @returns {Tone.LFO} this
		 */
	    Tone.LFO.prototype.unsync = function () {
	        this._oscillator.unsync();
	        this._oscillator.unsyncFrequency();
	        return this;
	    };
	    /**
		 * The miniumum output of the LFO.
		 * @memberOf Tone.LFO#
		 * @type {number}
		 * @name min
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'min', {
	        get: function () {
	            return this._toUnits(this._scaler.min);
	        },
	        set: function (min) {
	            min = this._fromUnits(min);
	            this._scaler.min = min;
	        }
	    });
	    /**
		 * The maximum output of the LFO.
		 * @memberOf Tone.LFO#
		 * @type {number}
		 * @name max
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'max', {
	        get: function () {
	            return this._toUnits(this._scaler.max);
	        },
	        set: function (max) {
	            max = this._fromUnits(max);
	            this._scaler.max = max;
	        }
	    });
	    /**
		 * The type of the oscillator: sine, square, sawtooth, triangle.
		 * @memberOf Tone.LFO#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'type', {
	        get: function () {
	            return this._oscillator.type;
	        },
	        set: function (type) {
	            this._oscillator.type = type;
	            this._stoppedValue = this._oscillator._getInitialValue();
	            this._stoppedSignal.value = this._stoppedValue;
	        }
	    });
	    /**
		 * The phase of the LFO.
		 * @memberOf Tone.LFO#
		 * @type {number}
		 * @name phase
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'phase', {
	        get: function () {
	            return this._oscillator.phase;
	        },
	        set: function (phase) {
	            this._oscillator.phase = phase;
	            this._stoppedValue = this._oscillator._getInitialValue();
	            this._stoppedSignal.value = this._stoppedValue;
	        }
	    });
	    /**
		 * The output units of the LFO.
		 * @memberOf Tone.LFO#
		 * @type {Tone.Type}
		 * @name units
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'units', {
	        get: function () {
	            return this._units;
	        },
	        set: function (val) {
	            var currentMin = this.min;
	            var currentMax = this.max;
	            //convert the min and the max
	            this._units = val;
	            this.min = currentMin;
	            this.max = currentMax;
	        }
	    });
	    /**
		 * Mute the output.
		 * @memberOf Tone.LFO#
		 * @type {Boolean}
		 * @name mute
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'mute', {
	        get: function () {
	            return this._oscillator.mute;
	        },
	        set: function (mute) {
	            this._oscillator.mute = mute;
	        }
	    });
	    /**
		 *  Returns the playback state of the source, either "started" or "stopped".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.LFO#
		 *  @name state
		 */
	    Object.defineProperty(Tone.LFO.prototype, 'state', {
	        get: function () {
	            return this._oscillator.state;
	        }
	    });
	    /**
		 *  Connect the output of the LFO to an AudioParam, AudioNode, or Tone Node.
		 *  Tone.LFO will automatically convert to the destination units of the
		 *  will get the units from the connected node.
		 *  @param  {Tone | AudioParam | AudioNode} node
		 *  @param {number} [outputNum=0] optionally which output to connect from
		 *  @param {number} [inputNum=0] optionally which input to connect to
		 *  @returns {Tone.LFO} this
		 *  @private
		 */
	    Tone.LFO.prototype.connect = function (node) {
	        if (node.constructor === Tone.Signal || node.constructor === Tone.Param) {
	            this.convert = node.convert;
	            this.units = node.units;
	        }
	        Tone.SignalBase.prototype.connect.apply(this, arguments);
	        return this;
	    };
	    /**
		 *  private method borrowed from Param converts
		 *  units from their destination value
		 *  @function
		 *  @private
		 */
	    Tone.LFO.prototype._fromUnits = Tone.Param.prototype._fromUnits;
	    /**
		 *  private method borrowed from Param converts
		 *  units to their destination value
		 *  @function
		 *  @private
		 */
	    Tone.LFO.prototype._toUnits = Tone.Param.prototype._toUnits;
	    /**
		 *  disconnect and dispose
		 *  @returns {Tone.LFO} this
		 */
	    Tone.LFO.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'amplitude',
	            'frequency'
	        ]);
	        this._oscillator.dispose();
	        this._oscillator = null;
	        this._stoppedSignal.dispose();
	        this._stoppedSignal = null;
	        this._zeros.dispose();
	        this._zeros = null;
	        this._scaler.dispose();
	        this._scaler = null;
	        this._a2g.dispose();
	        this._a2g = null;
	        this.frequency = null;
	        this.amplitude = null;
	        return this;
	    };
	    return Tone.LFO;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Limiter will limit the loudness of an incoming signal.
		 *         It is composed of a Tone.Compressor with a fast attack
		 *         and release. Limiters are commonly used to safeguard against
		 *         signal clipping. Unlike a compressor, limiters do not provide
		 *         smooth gain reduction and almost completely prevent
		 *         additional gain above the threshold.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {number} threshold The theshold above which the limiting is applied.
		 *  @example
		 *  var limiter = new Tone.Limiter(-6);
		 */
	    Tone.Limiter = function () {
	        var options = Tone.defaults(arguments, ['threshold'], Tone.Limiter);
	        Tone.AudioNode.call(this);
	        /**
			 *  the compressor
			 *  @private
			 *  @type {Tone.Compressor}
			 */
	        this._compressor = this.input = this.output = new Tone.Compressor({
	            'attack': 0.001,
	            'decay': 0.001,
	            'threshold': options.threshold
	        });
	        /**
			 * The threshold of of the limiter
			 * @type {Decibel}
			 * @signal
			 */
	        this.threshold = this._compressor.threshold;
	        this._readOnly('threshold');
	    };
	    Tone.extend(Tone.Limiter, Tone.AudioNode);
	    /**
		 *  The default value
		 *  @type {Object}
		 *  @const
		 *  @static
		 */
	    Tone.Limiter.defaults = { 'threshold': -12 };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Limiter} this
		 */
	    Tone.Limiter.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._compressor.dispose();
	        this._compressor = null;
	        this._writable('threshold');
	        this.threshold = null;
	        return this;
	    };
	    return Tone.Limiter;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Lowpass is a lowpass feedback comb filter. It is similar to
		 *         Tone.FeedbackCombFilter, but includes a lowpass filter.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Time|Object} [delayTime] The delay time of the comb filter
		 *  @param {NormalRange=} resonance The resonance (feedback) of the comb filter
		 *  @param {Frequency=} dampening The cutoff of the lowpass filter dampens the
		 *                                signal as it is fedback.
		 */
	    Tone.LowpassCombFilter = function () {
	        var options = Tone.defaults(arguments, [
	            'delayTime',
	            'resonance',
	            'dampening'
	        ], Tone.LowpassCombFilter);
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 1);
	        /**
			 *  the delay node
			 *  @type {DelayNode}
			 *  @private
			 */
	        this._delay = this.input = new Tone.Delay(options.delayTime);
	        /**
			 *  The delayTime of the comb filter.
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = this._delay.delayTime;
	        /**
			 *  the lowpass filter
			 *  @type  {BiquadFilterNode}
			 *  @private
			 */
	        this._lowpass = this.output = this.context.createBiquadFilter();
	        this._lowpass.Q.value = -3.0102999566398125;
	        this._lowpass.type = 'lowpass';
	        /**
			 *  The dampening control of the feedback
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.dampening = new Tone.Param({
	            'param': this._lowpass.frequency,
	            'units': Tone.Type.Frequency,
	            'value': options.dampening
	        });
	        /**
			 *  the feedback gain
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedback = new Tone.Gain(options.resonance, Tone.Type.NormalRange);
	        /**
			 *  The amount of feedback of the delayed signal.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.resonance = this._feedback.gain;
	        //connections
	        this._delay.chain(this._lowpass, this._feedback, this._delay);
	        this._readOnly([
	            'dampening',
	            'resonance',
	            'delayTime'
	        ]);
	    };
	    Tone.extend(Tone.LowpassCombFilter, Tone.AudioNode);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.LowpassCombFilter.defaults = {
	        'delayTime': 0.1,
	        'resonance': 0.5,
	        'dampening': 3000
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.LowpassCombFilter} this
		 */
	    Tone.LowpassCombFilter.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'dampening',
	            'resonance',
	            'delayTime'
	        ]);
	        this.dampening.dispose();
	        this.dampening = null;
	        this.resonance.dispose();
	        this.resonance = null;
	        this._delay.dispose();
	        this._delay = null;
	        this.delayTime = null;
	        this._lowpass.disconnect();
	        this._lowpass = null;
	        this._feedback.disconnect();
	        this._feedback = null;
	        return this;
	    };
	    return Tone.LowpassCombFilter;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Merge brings two signals into the left and right
		 *          channels of a single stereo channel.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @example
		 * var merge = new Tone.Merge().toMaster();
		 * //routing a sine tone in the left channel
		 * //and noise in the right channel
		 * var osc = new Tone.Oscillator().connect(merge.left);
		 * var noise = new Tone.Noise().connect(merge.right);
		 * //starting our oscillators
		 * noise.start();
		 * osc.start();
		 */
	    Tone.Merge = function () {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  The left input channel.
			 *  Alias for <code>input[0]</code>
			 *  @type {GainNode}
			 */
	        this.left = this.input[0] = new Tone.Gain();
	        /**
			 *  The right input channel.
			 *  Alias for <code>input[1]</code>.
			 *  @type {GainNode}
			 */
	        this.right = this.input[1] = new Tone.Gain();
	        /**
			 *  the merger node for the two channels
			 *  @type {ChannelMergerNode}
			 *  @private
			 */
	        this._merger = this.output = this.context.createChannelMerger(2);
	        //connections
	        this.left.connect(this._merger, 0, 0);
	        this.right.connect(this._merger, 0, 1);
	        this.left.channelCount = 1;
	        this.right.channelCount = 1;
	        this.left.channelCountMode = 'explicit';
	        this.right.channelCountMode = 'explicit';
	    };
	    Tone.extend(Tone.Merge, Tone.AudioNode);
	    /**
		 *  Clean up.
		 *  @returns {Tone.Merge} this
		 */
	    Tone.Merge.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.left.dispose();
	        this.left = null;
	        this.right.dispose();
	        this.right = null;
	        this._merger.disconnect();
	        this._merger = null;
	        return this;
	    };
	    return Tone.Merge;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)
		 *          of an input signal with some averaging applied. It can also get the raw
		 *          value of the input signal.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Number} smoothing The amount of smoothing applied between frames.
		 *  @example
		 * var meter = new Tone.Meter();
		 * var mic = new Tone.UserMedia().open();
		 * //connect mic to the meter
		 * mic.connect(meter);
		 * //the current level of the mic input in decibels
		 * var level = meter.getValue();
		 */
	    Tone.Meter = function () {
	        var options = Tone.defaults(arguments, ['smoothing'], Tone.Meter);
	        Tone.AudioNode.call(this);
	        /**
			 *  The analyser node which computes the levels.
			 *  @private
			 *  @type  {Tone.Analyser}
			 */
	        this.input = this.output = this._analyser = new Tone.Analyser('waveform', 1024);
	        /**
			 *  The amount of carryover between the current and last frame.
			 *  Only applied meter for "level" type.
			 *  @type  {Number}
			 */
	        this.smoothing = options.smoothing;
	    };
	    Tone.extend(Tone.Meter, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @type {Object}
		 *  @static
		 *  @const
		 */
	    Tone.Meter.defaults = { 'smoothing': 0.8 };
	    /**
		 *  Get the current decibel value of the incoming signal
		 *  @returns {Decibels}
		 */
	    Tone.Meter.prototype.getLevel = function () {
	        this._analyser.type = 'fft';
	        var values = this._analyser.getValue();
	        var offset = 28;
	        // normalizes most signal levels
	        // TODO: compute loudness from FFT
	        return Math.max.apply(this, values) + offset;
	    };
	    /**
		 *  Get the signal value of the incoming signal
		 *  @returns {Number}
		 */
	    Tone.Meter.prototype.getValue = function () {
	        this._analyser.type = 'waveform';
	        var value = this._analyser.getValue();
	        return value[0];
	    };
	    /**
		 * A value from 0 -> 1 where 0 represents no time averaging with the last analysis frame.
		 * @memberOf Tone.Meter#
		 * @type {Number}
		 * @name smoothing
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Meter.prototype, 'smoothing', {
	        get: function () {
	            return this._analyser.smoothing;
	        },
	        set: function (val) {
	            this._analyser.smoothing = val;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.Meter} this
		 */
	    Tone.Meter.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._analyser.dispose();
	        this._analyser = null;
	        return this;
	    };
	    return Tone.Meter;
	});
	Module(function (Tone) {
	    
	    /**
		 *	@class  Tone.Split splits an incoming signal into left and right channels.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @example
		 * var split = new Tone.Split();
		 * stereoSignal.connect(split);
		 */
	    Tone.Split = function () {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(0, 2);
	        /**
			 *  @type {ChannelSplitterNode}
			 *  @private
			 */
	        this._splitter = this.input = this.context.createChannelSplitter(2);
	        this._splitter.channelCount = 2;
	        this._splitter.channelCountMode = 'explicit';
	        /**
			 *  Left channel output.
			 *  Alias for <code>output[0]</code>
			 *  @type {Tone.Gain}
			 */
	        this.left = this.output[0] = new Tone.Gain();
	        /**
			 *  Right channel output.
			 *  Alias for <code>output[1]</code>
			 *  @type {Tone.Gain}
			 */
	        this.right = this.output[1] = new Tone.Gain();
	        //connections
	        this._splitter.connect(this.left, 0, 0);
	        this._splitter.connect(this.right, 1, 0);
	    };
	    Tone.extend(Tone.Split, Tone.AudioNode);
	    /**
		 *  Clean up.
		 *  @returns {Tone.Split} this
		 */
	    Tone.Split.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._splitter.disconnect();
	        this.left.dispose();
	        this.left = null;
	        this.right.dispose();
	        this.right = null;
	        this._splitter = null;
	        return this;
	    };
	    return Tone.Split;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Mid/Side processing separates the the 'mid' signal
		 *         (which comes out of both the left and the right channel)
		 *         and the 'side' (which only comes out of the the side channels). <br><br>
		 *         <code>
		 *         Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right<br>
		 *         Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ<br>
		 *         </code>
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 */
	    Tone.MidSideSplit = function () {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(0, 2);
	        /**
			 *  split the incoming signal into left and right channels
			 *  @type  {Tone.Split}
			 *  @private
			 */
	        this._split = this.input = new Tone.Split();
	        /**
			 *  The mid send. Connect to mid processing. Alias for
			 *  <code>output[0]</code>
			 *  @type {Tone.Add}
			 */
	        this._midAdd = new Tone.Add();
	        /**
			 * Multiply the _midAdd by sqrt(1/2)
			 * @type {Tone.Multiply}
			 */
	        this.mid = this.output[0] = new Tone.Multiply(Math.SQRT1_2);
	        /**
			 *  The side output. Connect to side processing. Also Output 1
			 *  @type {Tone.Subtract}
			 */
	        this._sideSubtract = new Tone.Subtract();
	        /**
			 * Multiply the _midAdd by sqrt(1/2)
			 * @type {Tone.Multiply}
			 */
	        this.side = this.output[1] = new Tone.Multiply(Math.SQRT1_2);
	        this._split.connect(this._midAdd, 0, 0);
	        this._split.connect(this._midAdd, 1, 1);
	        this._split.connect(this._sideSubtract, 0, 0);
	        this._split.connect(this._sideSubtract, 1, 1);
	        this._midAdd.connect(this.mid);
	        this._sideSubtract.connect(this.side);
	    };
	    Tone.extend(Tone.MidSideSplit, Tone.AudioNode);
	    /**
		 *  clean up
		 *  @returns {Tone.MidSideSplit} this
		 */
	    Tone.MidSideSplit.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.mid.dispose();
	        this.mid = null;
	        this.side.dispose();
	        this.side = null;
	        this._midAdd.dispose();
	        this._midAdd = null;
	        this._sideSubtract.dispose();
	        this._sideSubtract = null;
	        this._split.dispose();
	        this._split = null;
	        return this;
	    };
	    return Tone.MidSideSplit;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Mid/Side processing separates the the 'mid' signal
		 *         (which comes out of both the left and the right channel)
		 *         and the 'side' (which only comes out of the the side channels).
		 *         MidSideMerge merges the mid and side signal after they've been seperated
		 *         by Tone.MidSideSplit.<br><br>
		 *         <code>
		 *         Left = (Mid+Side)/sqrt(2);   // obtain left signal from mid and side<br>
		 *         Right = (Mid-Side)/sqrt(2);   // obtain right signal from mid and side<br>
		 *         </code>
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 */
	    Tone.MidSideMerge = function () {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(2, 0);
	        /**
			 *  The mid signal input. Alias for
			 *  <code>input[0]</code>
			 *  @type  {Tone.Gain}
			 */
	        this.mid = this.input[0] = new Tone.Gain();
	        /**
			 *  recombine the mid/side into Left
			 *  @type {Tone.Add}
			 *  @private
			 */
	        this._left = new Tone.Add();
	        /**
			 * Multiply the left by sqrt(1/2)
			 * @type {Tone.Multiply}
			 */
	        this._timesTwoLeft = new Tone.Multiply(Math.SQRT1_2);
	        /**
			 *  The side signal input. Alias for
			 *  <code>input[1]</code>
			 *  @type  {Tone.Gain}
			 */
	        this.side = this.input[1] = new Tone.Gain();
	        /**
			 *  recombine the mid/side into Right
			 *  @type {Tone.Subtract}
			 *  @private
			 */
	        this._right = new Tone.Subtract();
	        /**
			 * Multiply the right by sqrt(1/2)
			 * @type {Tone.Multiply}
			 */
	        this._timesTwoRight = new Tone.Multiply(Math.SQRT1_2);
	        /**
			 *  Merge the left/right signal back into a stereo signal.
			 *  @type {Tone.Merge}
			 *  @private
			 */
	        this._merge = this.output = new Tone.Merge();
	        this.mid.connect(this._left, 0, 0);
	        this.side.connect(this._left, 0, 1);
	        this.mid.connect(this._right, 0, 0);
	        this.side.connect(this._right, 0, 1);
	        this._left.connect(this._timesTwoLeft);
	        this._right.connect(this._timesTwoRight);
	        this._timesTwoLeft.connect(this._merge, 0, 0);
	        this._timesTwoRight.connect(this._merge, 0, 1);
	    };
	    Tone.extend(Tone.MidSideMerge, Tone.AudioNode);
	    /**
		 *  clean up
		 *  @returns {Tone.MidSideMerge} this
		 */
	    Tone.MidSideMerge.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.mid.dispose();
	        this.mid = null;
	        this.side.dispose();
	        this.side = null;
	        this._left.dispose();
	        this._left = null;
	        this._timesTwoLeft.dispose();
	        this._timesTwoLeft = null;
	        this._right.dispose();
	        this._right = null;
	        this._timesTwoRight.dispose();
	        this._timesTwoRight = null;
	        this._merge.dispose();
	        this._merge = null;
	        return this;
	    };
	    return Tone.MidSideMerge;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.MidSideCompressor applies two different compressors to the mid
		 *         and side signal components. See Tone.MidSideSplit.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @param {Object} options The options that are passed to the mid and side
		 *                          compressors.
		 *  @constructor
		 */
	    Tone.MidSideCompressor = function (options) {
	        Tone.AudioNode.call(this);
	        options = Tone.defaultArg(options, Tone.MidSideCompressor.defaults);
	        /**
			 *  the mid/side split
			 *  @type  {Tone.MidSideSplit}
			 *  @private
			 */
	        this._midSideSplit = this.input = new Tone.MidSideSplit();
	        /**
			 *  the mid/side recombination
			 *  @type  {Tone.MidSideMerge}
			 *  @private
			 */
	        this._midSideMerge = this.output = new Tone.MidSideMerge();
	        /**
			 *  The compressor applied to the mid signal
			 *  @type  {Tone.Compressor}
			 */
	        this.mid = new Tone.Compressor(options.mid);
	        /**
			 *  The compressor applied to the side signal
			 *  @type  {Tone.Compressor}
			 */
	        this.side = new Tone.Compressor(options.side);
	        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);
	        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);
	        this._readOnly([
	            'mid',
	            'side'
	        ]);
	    };
	    Tone.extend(Tone.MidSideCompressor, Tone.AudioNode);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.MidSideCompressor.defaults = {
	        'mid': {
	            'ratio': 3,
	            'threshold': -24,
	            'release': 0.03,
	            'attack': 0.02,
	            'knee': 16
	        },
	        'side': {
	            'ratio': 6,
	            'threshold': -30,
	            'release': 0.25,
	            'attack': 0.03,
	            'knee': 10
	        }
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.MidSideCompressor} this
		 */
	    Tone.MidSideCompressor.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'mid',
	            'side'
	        ]);
	        this.mid.dispose();
	        this.mid = null;
	        this.side.dispose();
	        this.side = null;
	        this._midSideSplit.dispose();
	        this._midSideSplit = null;
	        this._midSideMerge.dispose();
	        this._midSideMerge = null;
	        return this;
	    };
	    return Tone.MidSideCompressor;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Mono coerces the incoming mono or stereo signal into a mono signal
		 *         where both left and right channels have the same value. This can be useful
		 *         for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 */
	    Tone.Mono = function () {
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 0);
	        /**
			 *  merge the signal
			 *  @type {Tone.Merge}
			 *  @private
			 */
	        this._merge = this.output = new Tone.Merge();
	        this.input.connect(this._merge, 0, 0);
	        this.input.connect(this._merge, 0, 1);
	    };
	    Tone.extend(Tone.Mono, Tone.AudioNode);
	    /**
		 *  clean up
		 *  @returns {Tone.Mono} this
		 */
	    Tone.Mono.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._merge.dispose();
	        this._merge = null;
	        return this;
	    };
	    return Tone.Mono;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class A compressor with seperate controls over low/mid/high dynamics
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {Object} options The low/mid/high compressor settings.
		 *  @example
		 *  var multiband = new Tone.MultibandCompressor({
		 *  	"lowFrequency" : 200,
		 *  	"highFrequency" : 1300
		 *  	"low" : {
		 *  		"threshold" : -12
		 *  	}
		 *  })
		 */
	    Tone.MultibandCompressor = function (options) {
	        Tone.AudioNode.call(this);
	        options = Tone.defaultArg(arguments, Tone.MultibandCompressor.defaults);
	        /**
			 *  split the incoming signal into high/mid/low
			 *  @type {Tone.MultibandSplit}
			 *  @private
			 */
	        this._splitter = this.input = new Tone.MultibandSplit({
	            'lowFrequency': options.lowFrequency,
	            'highFrequency': options.highFrequency
	        });
	        /**
			 *  low/mid crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.lowFrequency = this._splitter.lowFrequency;
	        /**
			 *  mid/high crossover frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.highFrequency = this._splitter.highFrequency;
	        /**
			 *  the output
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this.output = new Tone.Gain();
	        /**
			 *  The compressor applied to the low frequencies.
			 *  @type {Tone.Compressor}
			 */
	        this.low = new Tone.Compressor(options.low);
	        /**
			 *  The compressor applied to the mid frequencies.
			 *  @type {Tone.Compressor}
			 */
	        this.mid = new Tone.Compressor(options.mid);
	        /**
			 *  The compressor applied to the high frequencies.
			 *  @type {Tone.Compressor}
			 */
	        this.high = new Tone.Compressor(options.high);
	        //connect the compressor
	        this._splitter.low.chain(this.low, this.output);
	        this._splitter.mid.chain(this.mid, this.output);
	        this._splitter.high.chain(this.high, this.output);
	        this._readOnly([
	            'high',
	            'mid',
	            'low',
	            'highFrequency',
	            'lowFrequency'
	        ]);
	    };
	    Tone.extend(Tone.MultibandCompressor, Tone.AudioNode);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.MultibandCompressor.defaults = {
	        'low': Tone.Compressor.defaults,
	        'mid': Tone.Compressor.defaults,
	        'high': Tone.Compressor.defaults,
	        'lowFrequency': 250,
	        'highFrequency': 2000
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.MultibandCompressor} this
		 */
	    Tone.MultibandCompressor.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._splitter.dispose();
	        this._writable([
	            'high',
	            'mid',
	            'low',
	            'highFrequency',
	            'lowFrequency'
	        ]);
	        this.low.dispose();
	        this.mid.dispose();
	        this.high.dispose();
	        this._splitter = null;
	        this.low = null;
	        this.mid = null;
	        this.high = null;
	        this.lowFrequency = null;
	        this.highFrequency = null;
	        return this;
	    };
	    return Tone.MultibandCompressor;
	});
	Module(function (Tone) {
	    if (Tone.supported && !window.StereoPannerNode) {
	        /**
			 * @class Shimmed StereoPannerNode
			 * @param  {AudioContext} context
			 * @private
			 */
	        var StereoPannerNode = function (context) {
	            /**
				 * The audio context
				 * @type {AudioContext}
				 */
	            this.context = context;
	            /**
				 * The left/right panning. [-1, 1]
				 * @type {AudioRange}
				 * @signal
				 */
	            this.pan = new Tone.Signal(0, Tone.Type.AudioRange);
	            /**
				 * Equal power scaling of the right gain
				 * @type {Tone.WaveShaper}
				 */
	            var rightWaveShaper = new Tone.WaveShaper(function (val) {
	                return Tone.equalPowerScale((val + 1) / 2);
	            }, 4096);
	            /**
				 * Equal power scaling of the left gain
				 * @type {Tone.WaveShaper}
				 * @private
				 */
	            var leftWaveShaper = new Tone.WaveShaper(function (val) {
	                return Tone.equalPowerScale(1 - (val + 1) / 2);
	            }, 4096);
	            /**
				 * The left gain value
				 * @type {Tone.Gain}
				 * @private
				 */
	            var leftGain = new Tone.Gain();
	            /**
				 * The right gain value
				 * @type {Tone.Gain}
				 * @private
				 */
	            var rightGain = new Tone.Gain();
	            /**
				 * Split the incoming signal
				 * @type {Tone.Split}
				 * @private
				 */
	            var split = this.input = new Tone.Split();
	            /**
				 * Keeps the waveshapers from optimizing 0s
				 * @type {Tone.Zero}
				 * @private
				 */
	            var zero = new Tone.Zero();
	            zero.fan(rightWaveShaper, leftWaveShaper);
	            /**
				 * Merge the outgoing signal
				 * @type {Tone.Merge}
				 * @private
				 */
	            var merge = this.output = new Tone.Merge();
	            //connections
	            split.left.chain(leftGain, merge.left);
	            split.right.chain(rightGain, merge.right);
	            this.pan.chain(leftWaveShaper, leftGain.gain);
	            this.pan.chain(rightWaveShaper, rightGain.gain);
	        };
	        StereoPannerNode.prototype.disconnect = function () {
	            this.output.disconnect.apply(this.output, arguments);
	        };
	        StereoPannerNode.prototype.connect = function () {
	            this.output.connect.apply(this.output, arguments);
	        };
	        //add it to the AudioContext
	        AudioContext.prototype.createStereoPanner = function () {
	            return new StereoPannerNode(this);
	        };
	        Tone.Context.prototype.createStereoPanner = function () {
	            return new StereoPannerNode(this);
	        };
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Panner is an equal power Left/Right Panner and does not
		 *          support 3D. Panner uses the StereoPannerNode when available.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {NormalRange} [initialPan=0] The initail panner value (center).
		 *  @example
		 *  //pan the input signal hard right.
		 *  var panner = new Tone.Panner(1);
		 */
	    Tone.Panner = function (initialPan) {
	        Tone.AudioNode.call(this);
	        /**
			*  the panner node
			*  @type {StereoPannerNode}
			*  @private
			*/
	        this._panner = this.input = this.output = this.context.createStereoPanner();
	        /**
			*  The pan control. -1 = hard left, 1 = hard right.
			*  @type {AudioRange}
			*  @signal
			*/
	        this.pan = this._panner.pan;
	        //initial value
	        this.pan.value = Tone.defaultArg(initialPan, 0);
	        this._readOnly('pan');
	    };
	    Tone.extend(Tone.Panner, Tone.AudioNode);
	    /**
		 *  Clean up.
		 *  @returns {Tone.Panner} this
		 */
	    Tone.Panner.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable('pan');
	        this._panner.disconnect();
	        this._panner = null;
	        this.pan = null;
	        return this;
	    };
	    return Tone.Panner;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  A spatialized panner node which supports equalpower or HRTF panning.
		 *          Tries to normalize the API across various browsers. See Tone.Listener
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Number} positionX The initial x position.
		 *  @param {Number} positionY The initial y position.
		 *  @param {Number} positionZ The initial z position.
		 */
	    Tone.Panner3D = function () {
	        var options = Tone.defaults(arguments, [
	            'positionX',
	            'positionY',
	            'positionZ'
	        ], Tone.Panner3D);
	        Tone.AudioNode.call(this);
	        /**
			 *  The panner node
			 *  @type {PannerNode}
			 *  @private
			 */
	        this._panner = this.input = this.output = this.context.createPanner();
	        //set some values
	        this._panner.panningModel = options.panningModel;
	        this._panner.maxDistance = options.maxDistance;
	        this._panner.distanceModel = options.distanceModel;
	        this._panner.coneOuterGain = options.coneOuterGain;
	        this._panner.coneOuterAngle = options.coneOuterAngle;
	        this._panner.coneInnerAngle = options.coneInnerAngle;
	        this._panner.refDistance = options.refDistance;
	        this._panner.rolloffFactor = options.rolloffFactor;
	        /**
			 *  Holds the current orientation
			 *  @type  {Array}
			 *  @private
			 */
	        this._orientation = [
	            options.orientationX,
	            options.orientationY,
	            options.orientationZ
	        ];
	        /**
			 *  Holds the current position
			 *  @type  {Array}
			 *  @private
			 */
	        this._position = [
	            options.positionX,
	            options.positionY,
	            options.positionZ
	        ];
	        // set the default position/orientation
	        this.orientationX = options.orientationX;
	        this.orientationY = options.orientationY;
	        this.orientationZ = options.orientationZ;
	        this.positionX = options.positionX;
	        this.positionY = options.positionY;
	        this.positionZ = options.positionZ;
	    };
	    Tone.extend(Tone.Panner3D, Tone.AudioNode);
	    /**
		 *  Defaults according to the specification
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Panner3D.defaults = {
	        'positionX': 0,
	        'positionY': 0,
	        'positionZ': 0,
	        'orientationX': 0,
	        'orientationY': 0,
	        'orientationZ': 0,
	        'panningModel': 'equalpower',
	        'maxDistance': 10000,
	        'distanceModel': 'inverse',
	        'coneOuterGain': 0,
	        'coneOuterAngle': 360,
	        'coneInnerAngle': 360,
	        'refDistance': 1,
	        'rolloffFactor': 1
	    };
	    /**
		 * The ramp time which is applied to the setTargetAtTime
		 * @type {Number}
		 * @private
		 */
	    Tone.Panner3D.prototype._rampTimeConstant = 0.01;
	    /**
		 *  Sets the position of the source in 3d space.
		 *  @param  {Number}  x
		 *  @param  {Number}  y
		 *  @param  {Number}  z
		 *  @return {Tone.Panner3D} this
		 */
	    Tone.Panner3D.prototype.setPosition = function (x, y, z) {
	        if (this._panner.positionX) {
	            var now = this.now();
	            this._panner.positionX.setTargetAtTime(x, now, this._rampTimeConstant);
	            this._panner.positionY.setTargetAtTime(y, now, this._rampTimeConstant);
	            this._panner.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);
	        } else {
	            this._panner.setPosition(x, y, z);
	        }
	        this._position = Array.prototype.slice.call(arguments);
	        return this;
	    };
	    /**
		 *  Sets the orientation of the source in 3d space.
		 *  @param  {Number}  x
		 *  @param  {Number}  y
		 *  @param  {Number}  z
		 *  @return {Tone.Panner3D} this
		 */
	    Tone.Panner3D.prototype.setOrientation = function (x, y, z) {
	        if (this._panner.orientationX) {
	            var now = this.now();
	            this._panner.orientationX.setTargetAtTime(x, now, this._rampTimeConstant);
	            this._panner.orientationY.setTargetAtTime(y, now, this._rampTimeConstant);
	            this._panner.orientationZ.setTargetAtTime(z, now, this._rampTimeConstant);
	        } else {
	            this._panner.setOrientation(x, y, z);
	        }
	        this._orientation = Array.prototype.slice.call(arguments);
	        return this;
	    };
	    /**
		 *  The x position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name positionX
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'positionX', {
	        set: function (pos) {
	            this._position[0] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[0];
	        }
	    });
	    /**
		 *  The y position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name positionY
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'positionY', {
	        set: function (pos) {
	            this._position[1] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[1];
	        }
	    });
	    /**
		 *  The z position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name positionZ
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'positionZ', {
	        set: function (pos) {
	            this._position[2] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[2];
	        }
	    });
	    /**
		 *  The x orientation of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name orientationX
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'orientationX', {
	        set: function (pos) {
	            this._orientation[0] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[0];
	        }
	    });
	    /**
		 *  The y orientation of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name orientationY
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'orientationY', {
	        set: function (pos) {
	            this._orientation[1] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[1];
	        }
	    });
	    /**
		 *  The z orientation of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name orientationZ
		 */
	    Object.defineProperty(Tone.Panner3D.prototype, 'orientationZ', {
	        set: function (pos) {
	            this._orientation[2] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[2];
	        }
	    });
	    /**
		 *  Proxy a property on the panner to an exposed public propery
		 *  @param  {String}  prop
		 *  @private
		 */
	    Tone.Panner3D._aliasProperty = function (prop) {
	        Object.defineProperty(Tone.Panner3D.prototype, prop, {
	            set: function (val) {
	                this._panner[prop] = val;
	            },
	            get: function () {
	                return this._panner[prop];
	            }
	        });
	    };
	    /**
		 *  The panning model. Either "equalpower" or "HRTF".
		 *  @type {String}
		 *  @memberOf Tone.Panner3D#
		 *  @name panningModel
		 */
	    Tone.Panner3D._aliasProperty('panningModel');
	    /**
		 *  A reference distance for reducing volume as source move further from the listener
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name refDistance
		 */
	    Tone.Panner3D._aliasProperty('refDistance');
	    /**
		 *  Describes how quickly the volume is reduced as source moves away from listener.
		 *  @type {Number}
		 *  @memberOf Tone.Panner3D#
		 *  @name rolloffFactor
		 */
	    Tone.Panner3D._aliasProperty('rolloffFactor');
	    /**
		 *  The distance model used by,  "linear", "inverse", or "exponential".
		 *  @type {String}
		 *  @memberOf Tone.Panner3D#
		 *  @name distanceModel
		 */
	    Tone.Panner3D._aliasProperty('distanceModel');
	    /**
		 *  The angle, in degrees, inside of which there will be no volume reduction
		 *  @type {Degrees}
		 *  @memberOf Tone.Panner3D#
		 *  @name coneInnerAngle
		 */
	    Tone.Panner3D._aliasProperty('coneInnerAngle');
	    /**
		 *  The angle, in degrees, outside of which the volume will be reduced
		 *  to a constant value of coneOuterGain
		 *  @type {Degrees}
		 *  @memberOf Tone.Panner3D#
		 *  @name coneOuterAngle
		 */
	    Tone.Panner3D._aliasProperty('coneOuterAngle');
	    /**
		 *  The gain outside of the coneOuterAngle
		 *  @type {Gain}
		 *  @memberOf Tone.Panner3D#
		 *  @name coneOuterGain
		 */
	    Tone.Panner3D._aliasProperty('coneOuterGain');
	    /**
		 *  The maximum distance between source and listener,
		 *  after which the volume will not be reduced any further.
		 *  @type {Positive}
		 *  @memberOf Tone.Panner3D#
		 *  @name maxDistance
		 */
	    Tone.Panner3D._aliasProperty('maxDistance');
	    /**
		 *  Clean up.
		 *  @returns {Tone.Panner3D} this
		 */
	    Tone.Panner3D.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._panner.disconnect();
	        this._panner = null;
	        this._orientation = null;
	        this._position = null;
	        return this;
	    };
	    return Tone.Panner3D;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.PanVol is a Tone.Panner and Tone.Volume in one.
		 *
		 *  @extends {Tone.AudioNode}
		 *  @constructor
		 *  @param {AudioRange} pan the initial pan
		 *  @param {number} volume The output volume.
		 *  @example
		 * //pan the incoming signal left and drop the volume
		 * var panVol = new Tone.PanVol(-0.25, -12);
		 */
	    Tone.PanVol = function () {
	        var options = Tone.defaults(arguments, [
	            'pan',
	            'volume'
	        ], Tone.PanVol);
	        Tone.AudioNode.call(this);
	        /**
			 *  The panning node
			 *  @type {Tone.Panner}
			 *  @private
			 */
	        this._panner = this.input = new Tone.Panner(options.pan);
	        /**
			 *  The L/R panning control.
			 *  @type {AudioRange}
			 *  @signal
			 */
	        this.pan = this._panner.pan;
	        /**
			 *  The volume node
			 *  @type {Tone.Volume}
			 *  @private
			 */
	        this._volume = this.output = new Tone.Volume(options.volume);
	        /**
			 *  The volume control in decibels.
			 *  @type {Decibels}
			 *  @signal
			 */
	        this.volume = this._volume.volume;
	        //connections
	        this._panner.connect(this._volume);
	        this.mute = options.mute;
	        this._readOnly([
	            'pan',
	            'volume'
	        ]);
	    };
	    Tone.extend(Tone.PanVol, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @type  {Object}
		 *  @const
		 *  @static
		 */
	    Tone.PanVol.defaults = {
	        'pan': 0,
	        'volume': 0,
	        'mute': false
	    };
	    /**
		 * Mute/unmute the volume
		 * @memberOf Tone.PanVol#
		 * @name mute
		 * @type {Boolean}
		 */
	    Object.defineProperty(Tone.PanVol.prototype, 'mute', {
	        get: function () {
	            return this._volume.mute;
	        },
	        set: function (mute) {
	            this._volume.mute = mute;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.PanVol} this
		 */
	    Tone.PanVol.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._writable([
	            'pan',
	            'volume'
	        ]);
	        this._panner.dispose();
	        this._panner = null;
	        this.pan = null;
	        this._volume.dispose();
	        this._volume = null;
	        this.volume = null;
	        return this;
	    };
	    return Tone.PanVol;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Solo lets you isolate a specific audio stream. When
		 *         an instance is set to `solo=true`, it will mute all other instances.
		 *  @extends {Tone.AudioNode}
		 *  @example
		 * var soloA = new Tone.Solo()
		 * var soloB = new Tone.Solo()
		 * soloA.solo = true
		 * //no audio will pass through soloB
		 */
	    Tone.Solo = function () {
	        var options = Tone.defaults(arguments, ['solo'], Tone.Solo);
	        Tone.AudioNode.call(this);
	        /**
			 *  The input and output node
			 *  @type  {Tone.Gain}
			 */
	        this.input = this.output = new Tone.Gain();
	        /**
			 *  A bound _soloed method
			 *  @type  {Function}
			 *  @private
			 */
	        this._soloBind = this._soloed.bind(this);
	        //listen for solo events class-wide.
	        this.context.on('solo', this._soloBind);
	        //set initially
	        this.solo = options.solo;
	    };
	    Tone.extend(Tone.Solo, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @type  {Object}
		 *  @static
		 */
	    Tone.Solo.defaults = { solo: false };
	    /**
		 *  Isolates this instance and mutes all other instances of Tone.Solo.
		 *  Only one instance can be soloed at a time. A soloed
		 *  instance will report `solo=false` when another instance is soloed.
		 *  @memberOf Tone.Solo#
		 *  @type {Boolean}
		 *  @name solo
		 */
	    Object.defineProperty(Tone.Solo.prototype, 'solo', {
	        get: function () {
	            return this._isSoloed();
	        },
	        set: function (solo) {
	            if (solo) {
	                this._addSolo();
	            } else {
	                this._removeSolo();
	            }
	            this.context.emit('solo', this);
	        }
	    });
	    /**
		 *  If the current instance is muted, i.e. another instance is soloed
		 *  @memberOf Tone.Solo#
		 *  @type {Boolean}
		 *  @name muted
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Solo.prototype, 'muted', {
	        get: function () {
	            return this.input.gain.value === 0;
	        }
	    });
	    /**
		 * Add this to the soloed array
		 * @private
		 */
	    Tone.Solo.prototype._addSolo = function () {
	        if (!Tone.isArray(this.context._currentSolo)) {
	            this.context._currentSolo = [];
	        }
	        if (!this._isSoloed()) {
	            this.context._currentSolo.push(this);
	        }
	    };
	    /**
		 * Remove this from the soloed array
		 * @private
		 */
	    Tone.Solo.prototype._removeSolo = function () {
	        if (this._isSoloed()) {
	            var index = this.context._currentSolo.indexOf(this);
	            this.context._currentSolo.splice(index, 1);
	        }
	    };
	    /**
		 * @return {Boolean} Is this on the soloed array
		 * @private
		 */
	    Tone.Solo.prototype._isSoloed = function () {
	        if (Tone.isArray(this.context._currentSolo)) {
	            return this.context._currentSolo.length !== 0 && this.context._currentSolo.indexOf(this) !== -1;
	        } else {
	            return false;
	        }
	    };
	    /**
		 * @return {Boolean} Returns true if no one is soloed
		 * @private
		 */
	    Tone.Solo.prototype._noSolos = function () {
	        return !Tone.isArray(this.context._currentSolo) || this.context._currentSolo.length === 0;
	    };
	    /**
		 *  Solo the current instance and unsolo all other instances.
		 *  @param  {Tone.Solo}  instance  The instance which is being soloed/unsoloed.
		 *  @private
		 */
	    Tone.Solo.prototype._soloed = function () {
	        if (this._isSoloed()) {
	            this.input.gain.value = 1;
	        } else if (this._noSolos()) {
	            //no one is soloed
	            this.input.gain.value = 1;
	        } else {
	            this.input.gain.value = 0;
	        }
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.Solo}  this
		 */
	    Tone.Solo.prototype.dispose = function () {
	        this.context.off('solo', this._soloBind);
	        this._removeSolo();
	        this._soloBind = null;
	        Tone.AudioNode.prototype.dispose.call(this);
	        return this;
	    };
	    return Tone.Solo;
	});
	Module(function (Tone) {
	    /**
		 *  @class  Get the current waveform data of the connected audio source.
		 *  @extends {Tone.AudioNode}
		 *  @param {Number=} size The size of the FFT. Value must be a power of
		 *                       two in the range 32 to 32768.
		 */
	    Tone.Waveform = function () {
	        var options = Tone.defaults(arguments, ['size'], Tone.Waveform);
	        options.type = Tone.Analyser.Type.Waveform;
	        Tone.AudioNode.call(this);
	        /**
			 *  The analyser node.
			 *  @private
			 *  @type {Tone.Analyser}
			 */
	        this._analyser = this.input = this.output = new Tone.Analyser(options);
	    };
	    Tone.extend(Tone.Waveform, Tone.AudioNode);
	    /**
		 *  The default values.
		 *  @type {Object}
		 *  @const
		 */
	    Tone.Waveform.defaults = { 'size': 1024 };
	    /**
		 *  Gets the waveform of the audio source. Returns the waveform data
		 *  of length [size](#size) as a Float32Array with values between -1 and 1.
		 *  @returns {TypedArray}
		 */
	    Tone.Waveform.prototype.getValue = function () {
	        return this._analyser.getValue();
	    };
	    /**
		 *  The size of analysis. This must be a power of two in the range 32 to 32768.
		 *  @memberOf Tone.Waveform#
		 *  @type {Number}
		 *  @name size
		 */
	    Object.defineProperty(Tone.Waveform.prototype, 'size', {
	        get: function () {
	            return this._analyser.size;
	        },
	        set: function (size) {
	            this._analyser.size = size;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.Waveform}  this
		 */
	    Tone.Waveform.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._analyser.dispose();
	        this._analyser = null;
	    };
	    return Tone.Waveform;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.CtrlInterpolate will interpolate between given values based
		 *         on the "index" property. Passing in an array or object literal
		 *         will interpolate each of the parameters. Note (i.e. "C3")
		 *         and Time (i.e. "4n + 2") can be interpolated. All other values are
		 *         assumed to be numbers. 
		 *  @example
		 * var interp = new Tone.CtrlInterpolate([0, 2, 9, 4]);
		 * interp.index = 0.75;
		 * interp.value; //returns 1.5
		 *
		 *  @example
		 * var interp = new Tone.CtrlInterpolate([
		 * 	[2, 4, 5],
		 * 	[9, 3, 2],
		 * ]);
		 * @param {Array} values The array of values to interpolate over
		 * @param {Positive} index The initial interpolation index.
		 * @extends {Tone}
		 */
	    Tone.CtrlInterpolate = function () {
	        var options = Tone.defaults(arguments, [
	            'values',
	            'index'
	        ], Tone.CtrlInterpolate);
	        Tone.call(this);
	        /**
			 *  The values to interpolate between
			 *  @type  {Array}
			 */
	        this.values = options.values;
	        /**
			 *  The interpolated index between values. For example: a value of 1.5
			 *  would interpolate equally between the value at index 1
			 *  and the value at index 2. 
			 *  @example
			 * interp.index = 0; 
			 * interp.value; //returns the value at 0
			 * interp.index = 0.5;
			 * interp.value; //returns the value between indices 0 and 1. 
			 *  @type  {Positive}
			 */
	        this.index = options.index;
	    };
	    Tone.extend(Tone.CtrlInterpolate);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.CtrlInterpolate.defaults = {
	        'index': 0,
	        'values': []
	    };
	    /**
		 *  The current interpolated value based on the index
		 *  @readOnly
		 *  @memberOf Tone.CtrlInterpolate#
		 *  @type {*}
		 *  @name value
		 */
	    Object.defineProperty(Tone.CtrlInterpolate.prototype, 'value', {
	        get: function () {
	            var index = this.index;
	            index = Math.min(index, this.values.length - 1);
	            var lowerPosition = Math.floor(index);
	            var lower = this.values[lowerPosition];
	            var upper = this.values[Math.ceil(index)];
	            return this._interpolate(index - lowerPosition, lower, upper);
	        }
	    });
	    /**
		 *  Internal interpolation routine
		 *  @param  {NormalRange}  index  The index between the lower and upper
		 *  @param  {*}  lower 
		 *  @param  {*}  upper 
		 *  @return  {*}  The interpolated value
		 *  @private
		 */
	    Tone.CtrlInterpolate.prototype._interpolate = function (index, lower, upper) {
	        if (Tone.isArray(lower)) {
	            var retArray = [];
	            for (var i = 0; i < lower.length; i++) {
	                retArray[i] = this._interpolate(index, lower[i], upper[i]);
	            }
	            return retArray;
	        } else if (Tone.isObject(lower)) {
	            var retObj = {};
	            for (var attr in lower) {
	                retObj[attr] = this._interpolate(index, lower[attr], upper[attr]);
	            }
	            return retObj;
	        } else {
	            lower = this._toNumber(lower);
	            upper = this._toNumber(upper);
	            return (1 - index) * lower + index * upper;
	        }
	    };
	    /**
		 *  Convert from the given type into a number
		 *  @param  {Number|String}  value
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.CtrlInterpolate.prototype._toNumber = function (val) {
	        if (Tone.isNumber(val)) {
	            return val;
	        } else {
	            //otherwise assume that it's Time...
	            return this.toSeconds(val);
	        }
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.CtrlInterpolate}  this
		 */
	    Tone.CtrlInterpolate.prototype.dispose = function () {
	        this.values = null;
	    };
	    return Tone.CtrlInterpolate;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.CtrlMarkov represents a Markov Chain where each call
		 *         to Tone.CtrlMarkov.next will move to the next state. If the next
		 *         state choice is an array, the next state is chosen randomly with
		 *         even probability for all of the choices. For a weighted probability
		 *         of the next choices, pass in an object with "state" and "probability" attributes. 
		 *         The probabilities will be normalized and then chosen. If no next options
		 *         are given for the current state, the state will stay there. 
		 *  @extends {Tone}
		 *  @example
		 * var chain = new Tone.CtrlMarkov({
		 * 	"beginning" : ["end", "middle"],
		 * 	"middle" : "end"
		 * });
		 * chain.value = "beginning";
		 * chain.next(); //returns "end" or "middle" with 50% probability
		 *
		 *  @example
		 * var chain = new Tone.CtrlMarkov({
		 * 	"beginning" : [{"value" : "end", "probability" : 0.8}, 
		 * 					{"value" : "middle", "probability" : 0.2}],
		 * 	"middle" : "end"
		 * });
		 * chain.value = "beginning";
		 * chain.next(); //returns "end" with 80% probability or "middle" with 20%.
		 *  @param {Object} values An object with the state names as the keys
		 *                         and the next state(s) as the values. 
		 */
	    Tone.CtrlMarkov = function (values, initial) {
	        Tone.call(this);
	        /**
			 *  The Markov values with states as the keys
			 *  and next state(s) as the values. 
			 *  @type {Object}
			 */
	        this.values = Tone.defaultArg(values, {});
	        /**
			 *  The current state of the Markov values. The next
			 *  state will be evaluated and returned when Tone.CtrlMarkov.next
			 *  is invoked.
			 *  @type {String}
			 */
	        this.value = Tone.defaultArg(initial, Object.keys(this.values)[0]);
	    };
	    Tone.extend(Tone.CtrlMarkov);
	    /**
		 *  Returns the next state of the Markov values. 
		 *  @return  {String}
		 */
	    Tone.CtrlMarkov.prototype.next = function () {
	        if (this.values.hasOwnProperty(this.value)) {
	            var next = this.values[this.value];
	            if (Tone.isArray(next)) {
	                var distribution = this._getProbDistribution(next);
	                var rand = Math.random();
	                var total = 0;
	                for (var i = 0; i < distribution.length; i++) {
	                    var dist = distribution[i];
	                    if (rand > total && rand < total + dist) {
	                        var chosen = next[i];
	                        if (Tone.isObject(chosen)) {
	                            this.value = chosen.value;
	                        } else {
	                            this.value = chosen;
	                        }
	                    }
	                    total += dist;
	                }
	            } else {
	                this.value = next;
	            }
	        }
	        return this.value;
	    };
	    /**
		 *  Choose randomly from an array weighted options in the form 
		 *  {"state" : string, "probability" : number} or an array of values
		 *  @param  {Array}  options 
		 *  @return  {Array}  The randomly selected choice
		 *  @private
		 */
	    Tone.CtrlMarkov.prototype._getProbDistribution = function (options) {
	        var distribution = [];
	        var total = 0;
	        var needsNormalizing = false;
	        for (var i = 0; i < options.length; i++) {
	            var option = options[i];
	            if (Tone.isObject(option)) {
	                needsNormalizing = true;
	                distribution[i] = option.probability;
	            } else {
	                distribution[i] = 1 / options.length;
	            }
	            total += distribution[i];
	        }
	        if (needsNormalizing) {
	            //normalize the values
	            for (var j = 0; j < distribution.length; j++) {
	                distribution[j] = distribution[j] / total;
	            }
	        }
	        return distribution;
	    };
	    /**
		 *  Clean up
		 *  @return  {Tone.CtrlMarkov}  this
		 */
	    Tone.CtrlMarkov.prototype.dispose = function () {
	        this.values = null;
	    };
	    return Tone.CtrlMarkov;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Generate patterns from an array of values.
		 *         Has a number of arpeggiation and randomized
		 *         selection patterns. 
		 *           <ul>
		 *  	        <li>"up" - cycles upward</li>
		 *  			<li>"down" - cycles downward</li>
		 *  			<li>"upDown" - up then and down</li>
		 *  			<li>"downUp" - cycles down then and up</li>
		 *  			<li>"alternateUp" - jump up two and down one</li>
		 *  			<li>"alternateDown" - jump down two and up one</li>
		 *  			<li>"random" - randomly select an index</li>
		 *  			<li>"randomWalk" - randomly moves one index away from the current position</li>
		 *  			<li>"randomOnce" - randomly select an index without repeating until all values have been chosen.</li>
		 *     		</ul>
		 *  @param  {Array}  values   An array of options to choose from.
		 *  @param  {Tone.CtrlPattern.Type=}  type  The name of the pattern.
		 *  @extends {Tone}
		 */
	    Tone.CtrlPattern = function () {
	        var options = Tone.defaults(arguments, [
	            'values',
	            'type'
	        ], Tone.CtrlPattern);
	        Tone.call(this);
	        /**
			 *  The array of values to arpeggiate over
			 *  @type {Array}
			 */
	        this.values = options.values;
	        /**
			 *  The current position in the values array
			 *  @type  {Number}
			 */
	        this.index = 0;
	        /**
			 *  The type placeholder
			 *  @type {Tone.CtrlPattern.Type}
			 *  @private
			 */
	        this._type = null;
	        /**
			 *  Shuffled values for the RandomOnce type
			 *  @type {Array}
			 *  @private
			 */
	        this._shuffled = null;
	        /**
			 *  The direction of the movement
			 *  @type {String}
			 *  @private
			 */
	        this._direction = null;
	        this.type = options.type;
	    };
	    Tone.extend(Tone.CtrlPattern);
	    /**
		 *  The Control Patterns
		 *  @type  {Object}
		 *  @static
		 */
	    Tone.CtrlPattern.Type = {
	        Up: 'up',
	        Down: 'down',
	        UpDown: 'upDown',
	        DownUp: 'downUp',
	        AlternateUp: 'alternateUp',
	        AlternateDown: 'alternateDown',
	        Random: 'random',
	        RandomWalk: 'randomWalk',
	        RandomOnce: 'randomOnce'
	    };
	    /**
		 *  The default values. 
		 *  @type  {Object}
		 */
	    Tone.CtrlPattern.defaults = {
	        'type': Tone.CtrlPattern.Type.Up,
	        'values': []
	    };
	    /**
		 *  The value at the current index of the pattern.
		 *  @readOnly
		 *  @memberOf Tone.CtrlPattern#
		 *  @type {*}
		 *  @name value
		 */
	    Object.defineProperty(Tone.CtrlPattern.prototype, 'value', {
	        get: function () {
	            //some safeguards
	            if (this.values.length === 0) {
	                return;
	            } else if (this.values.length === 1) {
	                return this.values[0];
	            }
	            this.index = Math.min(this.index, this.values.length - 1);
	            var val = this.values[this.index];
	            if (this.type === Tone.CtrlPattern.Type.RandomOnce) {
	                if (this.values.length !== this._shuffled.length) {
	                    this._shuffleValues();
	                }
	                val = this.values[this._shuffled[this.index]];
	            }
	            return val;
	        }
	    });
	    /**
		 *  The pattern used to select the next
		 *  item from the values array
		 *  @memberOf Tone.CtrlPattern#
		 *  @type {Tone.CtrlPattern.Type}
		 *  @name type
		 */
	    Object.defineProperty(Tone.CtrlPattern.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            this._type = type;
	            this._shuffled = null;
	            //the first index
	            if (this._type === Tone.CtrlPattern.Type.Up || this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.RandomOnce || this._type === Tone.CtrlPattern.Type.AlternateUp) {
	                this.index = 0;
	            } else if (this._type === Tone.CtrlPattern.Type.Down || this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {
	                this.index = this.values.length - 1;
	            }
	            //the direction
	            if (this._type === Tone.CtrlPattern.Type.UpDown || this._type === Tone.CtrlPattern.Type.AlternateUp) {
	                this._direction = Tone.CtrlPattern.Type.Up;
	            } else if (this._type === Tone.CtrlPattern.Type.DownUp || this._type === Tone.CtrlPattern.Type.AlternateDown) {
	                this._direction = Tone.CtrlPattern.Type.Down;
	            }
	            //randoms
	            if (this._type === Tone.CtrlPattern.Type.RandomOnce) {
	                this._shuffleValues();
	            } else if (this._type === Tone.CtrlPattern.Random) {
	                this.index = Math.floor(Math.random() * this.values.length);
	            }
	        }
	    });
	    /**
		 *  Return the next value given the current position
		 *  and pattern.
		 *  @return {*} The next value
		 */
	    Tone.CtrlPattern.prototype.next = function () {
	        var type = this.type;
	        //choose the next index
	        if (type === Tone.CtrlPattern.Type.Up) {
	            this.index++;
	            if (this.index >= this.values.length) {
	                this.index = 0;
	            }
	        } else if (type === Tone.CtrlPattern.Type.Down) {
	            this.index--;
	            if (this.index < 0) {
	                this.index = this.values.length - 1;
	            }
	        } else if (type === Tone.CtrlPattern.Type.UpDown || type === Tone.CtrlPattern.Type.DownUp) {
	            if (this._direction === Tone.CtrlPattern.Type.Up) {
	                this.index++;
	            } else {
	                this.index--;
	            }
	            if (this.index < 0) {
	                this.index = 1;
	                this._direction = Tone.CtrlPattern.Type.Up;
	            } else if (this.index >= this.values.length) {
	                this.index = this.values.length - 2;
	                this._direction = Tone.CtrlPattern.Type.Down;
	            }
	        } else if (type === Tone.CtrlPattern.Type.Random) {
	            this.index = Math.floor(Math.random() * this.values.length);
	        } else if (type === Tone.CtrlPattern.Type.RandomWalk) {
	            if (Math.random() < 0.5) {
	                this.index--;
	                this.index = Math.max(this.index, 0);
	            } else {
	                this.index++;
	                this.index = Math.min(this.index, this.values.length - 1);
	            }
	        } else if (type === Tone.CtrlPattern.Type.RandomOnce) {
	            this.index++;
	            if (this.index >= this.values.length) {
	                this.index = 0;
	                //reshuffle the values for next time
	                this._shuffleValues();
	            }
	        } else if (type === Tone.CtrlPattern.Type.AlternateUp) {
	            if (this._direction === Tone.CtrlPattern.Type.Up) {
	                this.index += 2;
	                this._direction = Tone.CtrlPattern.Type.Down;
	            } else {
	                this.index -= 1;
	                this._direction = Tone.CtrlPattern.Type.Up;
	            }
	            if (this.index >= this.values.length) {
	                this.index = 0;
	                this._direction = Tone.CtrlPattern.Type.Up;
	            }
	        } else if (type === Tone.CtrlPattern.Type.AlternateDown) {
	            if (this._direction === Tone.CtrlPattern.Type.Up) {
	                this.index += 1;
	                this._direction = Tone.CtrlPattern.Type.Down;
	            } else {
	                this.index -= 2;
	                this._direction = Tone.CtrlPattern.Type.Up;
	            }
	            if (this.index < 0) {
	                this.index = this.values.length - 1;
	                this._direction = Tone.CtrlPattern.Type.Down;
	            }
	        }
	        return this.value;
	    };
	    /**
		 *  Shuffles the values and places the results into the _shuffled
		 *  @private
		 */
	    Tone.CtrlPattern.prototype._shuffleValues = function () {
	        var copy = [];
	        this._shuffled = [];
	        for (var i = 0; i < this.values.length; i++) {
	            copy[i] = i;
	        }
	        while (copy.length > 0) {
	            var randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);
	            this._shuffled.push(randVal[0]);
	        }
	    };
	    /**
		 *  Clean up
		 *  @returns {Tone.CtrlPattern} this
		 */
	    Tone.CtrlPattern.prototype.dispose = function () {
	        this._shuffled = null;
	        this.values = null;
	    };
	    return Tone.CtrlPattern;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Choose a random value.
		 *  @extends {Tone}
		 *  @example
		 * var randomWalk = new Tone.CtrlRandom({
		 * 	"min" : 0,
		 * 	"max" : 10,
		 * 	"integer" : true
		 * });
		 * randomWalk.eval();
		 *
		 *  @param {Number|Time=} min The minimum return value.
		 *  @param {Number|Time=} max The maximum return value.
		 */
	    Tone.CtrlRandom = function () {
	        var options = Tone.defaults(arguments, [
	            'min',
	            'max'
	        ], Tone.CtrlRandom);
	        Tone.call(this);
	        /**
			 *  The minimum return value
			 *  @type  {Number|Time}
			 */
	        this.min = options.min;
	        /**
			 *  The maximum return value
			 *  @type  {Number|Time}
			 */
	        this.max = options.max;
	        /**
			 *  If the return value should be an integer
			 *  @type  {Boolean}
			 */
	        this.integer = options.integer;
	    };
	    Tone.extend(Tone.CtrlRandom);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.CtrlRandom.defaults = {
	        'min': 0,
	        'max': 1,
	        'integer': false
	    };
	    /**
		 *  Return a random value between min and max. 
		 *  @readOnly
		 *  @memberOf Tone.CtrlRandom#
		 *  @type {*}
		 *  @name value
		 */
	    Object.defineProperty(Tone.CtrlRandom.prototype, 'value', {
	        get: function () {
	            var min = this.toSeconds(this.min);
	            var max = this.toSeconds(this.max);
	            var rand = Math.random();
	            var val = rand * min + (1 - rand) * max;
	            if (this.integer) {
	                val = Math.floor(val);
	            }
	            return val;
	        }
	    });
	    return Tone.CtrlRandom;
	});
	Module(function (Tone) {
	    /**
		 *  @class A data structure for holding multiple buffers.
		 *  
		 *  @param  {Object|Array}    urls      An object literal or array
		 *                                      of urls to load.
		 *  @param  {Function=}  callback  The callback to invoke when
		 *                                 the buffers are loaded. 
		 *  @extends {Tone}
		 *  @example
		 * //load a whole bank of piano samples
		 * var pianoSamples = new Tone.Buffers({
		 * 	"C4" : "path/to/C4.mp3"
		 * 	"C#4" : "path/to/C#4.mp3"
		 * 	"D4" : "path/to/D4.mp3"
		 * 	"D#4" : "path/to/D#4.mp3"
		 * 	...
		 * }, function(){
		 * 	//play one of the samples when they all load
		 * 	player.buffer = pianoSamples.get("C4");
		 * 	player.start();
		 * });
		 * 	@example
		 * //To pass in additional parameters in the second parameter
		 * var buffers = new Tone.Buffers(urls, {
		 * 	"onload" : callback,
		 * 	"baseUrl" : "../path/to/audio/"
		 * })
		 */
	    Tone.Buffers = function (urls) {
	        //remove the urls from the options
	        var args = Array.prototype.slice.call(arguments);
	        args.shift();
	        var options = Tone.defaults(args, [
	            'onload',
	            'baseUrl'
	        ], Tone.Buffers);
	        Tone.call(this);
	        /**
			 *  All of the buffers
			 *  @type  {Object}
			 *  @private
			 */
	        this._buffers = {};
	        /**
			 *  A path which is prefixed before every url.
			 *  @type  {String}
			 */
	        this.baseUrl = options.baseUrl;
	        this._loadingCount = 0;
	        //add each one
	        for (var key in urls) {
	            this._loadingCount++;
	            this.add(key, urls[key], this._bufferLoaded.bind(this, options.onload));
	        }
	    };
	    Tone.extend(Tone.Buffers);
	    /**
		 *  Defaults
		 *  @type  {Object}
		 */
	    Tone.Buffers.defaults = {
	        'onload': Tone.noOp,
	        'baseUrl': ''
	    };
	    /**
		 *  True if the buffers object has a buffer by that name.
		 *  @param  {String|Number}  name  The key or index of the 
		 *                                 buffer.
		 *  @return  {Boolean}
		 */
	    Tone.Buffers.prototype.has = function (name) {
	        return this._buffers.hasOwnProperty(name);
	    };
	    /**
		 *  Get a buffer by name. If an array was loaded, 
		 *  then use the array index.
		 *  @param  {String|Number}  name  The key or index of the 
		 *                                 buffer.
		 *  @return  {Tone.Buffer}
		 */
	    Tone.Buffers.prototype.get = function (name) {
	        if (this.has(name)) {
	            return this._buffers[name];
	        } else {
	            throw new Error('Tone.Buffers: no buffer named ' + name);
	        }
	    };
	    /**
		 *  A buffer was loaded. decrement the counter.
		 *  @param  {Function}  callback 
		 *  @private
		 */
	    Tone.Buffers.prototype._bufferLoaded = function (callback) {
	        this._loadingCount--;
	        if (this._loadingCount === 0 && callback) {
	            callback(this);
	        }
	    };
	    /**
		 * If the buffers are loaded or not
		 * @memberOf Tone.Buffers#
		 * @type {Boolean}
		 * @name loaded
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Buffers.prototype, 'loaded', {
	        get: function () {
	            var isLoaded = true;
	            for (var buffName in this._buffers) {
	                var buff = this.get(buffName);
	                isLoaded = isLoaded && buff.loaded;
	            }
	            return isLoaded;
	        }
	    });
	    /**
		 *  Add a buffer by name and url to the Buffers
		 *  @param  {String}    name      A unique name to give
		 *                                the buffer
		 *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer, 
		 *                                                 or a buffer which will be added
		 *                                                 with the given name.
		 *  @param  {Function=}  callback  The callback to invoke 
		 *                                 when the url is loaded.
		 */
	    Tone.Buffers.prototype.add = function (name, url, callback) {
	        callback = Tone.defaultArg(callback, Tone.noOp);
	        if (url instanceof Tone.Buffer) {
	            this._buffers[name] = url;
	            callback(this);
	        } else if (url instanceof AudioBuffer) {
	            this._buffers[name] = new Tone.Buffer(url);
	            callback(this);
	        } else if (Tone.isString(url)) {
	            this._buffers[name] = new Tone.Buffer(this.baseUrl + url, callback);
	        }
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @return  {Tone.Buffers} this
		 */
	    Tone.Buffers.prototype.dispose = function () {
	        Tone.prototype.dispose.call(this);
	        for (var name in this._buffers) {
	            this._buffers[name].dispose();
	        }
	        this._buffers = null;
	        return this;
	    };
	    return Tone.Buffers;
	});
	Module(function (Tone) {
	    
	    /**
		 *  buses are another way of routing audio
		 *
		 *  augments Tone.prototype to include send and recieve
		 */
	    /**
		 *  All of the routes
		 *
		 *  @type {Object}
		 *  @static
		 *  @private
		 */
	    var Buses = {};
	    /**
		 *  Send this signal to the channel name.
		 *  @param  {String} channelName A named channel to send the signal to.
		 *  @param  {Decibels} amount The amount of the source to send to the bus.
		 *  @return {GainNode} The gain node which connects this node to the desired channel.
		 *                     Can be used to adjust the levels of the send.
		 *  @example
		 * source.send("reverb", -12);
		 */
	    Tone.prototype.send = function (channelName, amount) {
	        if (!Buses.hasOwnProperty(channelName)) {
	            Buses[channelName] = this.context.createGain();
	        }
	        amount = Tone.defaultArg(amount, 0);
	        var sendKnob = new Tone.Gain(amount, Tone.Type.Decibels);
	        this.connect(sendKnob);
	        sendKnob.connect(Buses[channelName]);
	        return sendKnob;
	    };
	    /**
		 *  Recieve the input from the desired channelName to the input
		 *
		 *  @param  {String} channelName A named channel to send the signal to.
		 *  @param  {Number=} channelNumber The channel to connect to
		 *  @returns {Tone} this
		 *  @example
		 * reverbEffect.receive("reverb");
		 */
	    Tone.prototype.receive = function (channelName, inputNum) {
	        if (!Buses.hasOwnProperty(channelName)) {
	            Buses[channelName] = this.context.createGain();
	        }
	        Buses[channelName].connect(this, 0, inputNum);
	        return this;
	    };
	    //remove all the send/receives when a new audio context is passed in
	    Tone.Context.on('init', function (context) {
	        if (context.Buses) {
	            Buses = context.Buses;
	        } else {
	            Buses = {};
	            context.Buses = Buses;
	        }
	    });
	    return Tone;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Draw is useful for synchronizing visuals and audio events.
		 *         Callbacks from Tone.Transport or any of the Tone.Event classes
		 *         always happen _before_ the scheduled time and are not synchronized
		 *         to the animation frame so they are not good for triggering tightly
		 *         synchronized visuals and sound. Tone.Draw makes it easy to schedule
		 *         callbacks using the AudioContext time and uses requestAnimationFrame.
		 *         
		 *  @singleton
		 *  @extends {Tone}
		 *  @example
		 * Tone.Transport.schedule(function(time){
		 * 	//use the time argument to schedule a callback with Tone.Draw
		 * 	Tone.Draw.schedule(function(){
		 * 		//do drawing or DOM manipulation here
		 * 	}, time)
		 * }, "+0.5")
		 */
	    Tone.Draw = function () {
	        Tone.call(this);
	        /**
			 *  All of the events.
			 *  @type  {Tone.Timeline}
			 *  @private
			 */
	        this._events = new Tone.Timeline();
	        /**
			 *  The duration after which events are not invoked.
			 *  @type  {Number}
			 *  @default 0.25
			 */
	        this.expiration = 0.25;
	        /**
			 *  The amount of time before the scheduled time 
			 *  that the callback can be invoked. Default is
			 *  half the time of an animation frame (0.008 seconds).
			 *  @type  {Number}
			 *  @default 0.008
			 */
	        this.anticipation = 0.008;
	        /**
			 *  The draw loop
			 *  @type  {Function}
			 *  @private
			 */
	        this._boundDrawLoop = this._drawLoop.bind(this);
	    };
	    Tone.extend(Tone.Draw);
	    /**
		 *  Schedule a function at the given time to be invoked
		 *  on the nearest animation frame.
		 *  @param  {Function}  callback  Callback is invoked at the given time.
		 *  @param  {Time}    time      The time relative to the AudioContext time
		 *                              to invoke the callback.
		 *  @return  {Tone.Draw}    this
		 */
	    Tone.Draw.prototype.schedule = function (callback, time) {
	        this._events.add({
	            callback: callback,
	            time: this.toSeconds(time)
	        });
	        //start the draw loop on the first event
	        if (this._events.length === 1) {
	            requestAnimationFrame(this._boundDrawLoop);
	        }
	        return this;
	    };
	    /**
		 *  Cancel events scheduled after the given time
		 *  @param  {Time=}  after  Time after which scheduled events will 
		 *                          be removed from the scheduling timeline.
		 *  @return  {Tone.Draw}  this
		 */
	    Tone.Draw.prototype.cancel = function (after) {
	        this._events.cancel(this.toSeconds(after));
	        return this;
	    };
	    /**
		 *  The draw loop
		 *  @private
		 */
	    Tone.Draw.prototype._drawLoop = function () {
	        var now = Tone.now();
	        while (this._events.length && this._events.peek().time - this.anticipation <= now) {
	            var event = this._events.shift();
	            if (now - event.time <= this.expiration) {
	                event.callback();
	            }
	        }
	        if (this._events.length > 0) {
	            requestAnimationFrame(this._boundDrawLoop);
	        }
	    };
	    //make a singleton
	    Tone.Draw = new Tone.Draw();
	    return Tone.Draw;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Both Tone.Panner3D and Tone.Listener have a position in 3D space
		 *          using a right-handed cartesian coordinate system.
		 *          The units used in the coordinate system are not defined;
		 *          these coordinates are independent/invariant of any particular
		 *          units such as meters or feet. Tone.Panner3D objects have an forward
		 *          vector representing the direction the sound is projecting. Additionally,
		 *          they have a sound cone representing how directional the sound is.
		 *          For example, the sound could be omnidirectional, in which case it would
		 *          be heard anywhere regardless of its forward, or it can be more directional
		 *          and heard only if it is facing the listener. Tone.Listener objects
		 *          (representing a person's ears) have an forward and up vector
		 *          representing in which direction the person is facing. Because both the
		 *          source stream and the listener can be moving, they both have a velocity
		 *          vector representing both the speed and direction of movement. Taken together,
		 *          these two velocities can be used to generate a doppler shift effect which changes the pitch.
		 *          <br><br>
		 *          Note: the position of the Listener will have no effect on nodes not connected to a Tone.Panner3D
		 *
		 *  @constructor
		 *  @extends {Tone}
		 *  @singleton
		 */
	    Tone.Listener = function () {
	        Tone.call(this);
	        /**
			 *  Holds the current forward orientation
			 *  @type  {Array}
			 *  @private
			 */
	        this._orientation = [
	            0,
	            0,
	            0,
	            0,
	            0,
	            0
	        ];
	        /**
			 *  Holds the current position
			 *  @type  {Array}
			 *  @private
			 */
	        this._position = [
	            0,
	            0,
	            0
	        ];
	        Tone.getContext(function () {
	            // set the default position/forward
	            this.set(ListenerConstructor.defaults);
	        }.bind(this));
	    };
	    Tone.extend(Tone.Listener);
	    /**
		 *  Defaults according to the specification
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Listener.defaults = {
	        'positionX': 0,
	        'positionY': 0,
	        'positionZ': 0,
	        'forwardX': 0,
	        'forwardY': 0,
	        'forwardZ': 1,
	        'upX': 0,
	        'upY': 1,
	        'upZ': 0
	    };
	    /**
		 * The ramp time which is applied to the setTargetAtTime
		 * @type {Number}
		 * @private
		 */
	    Tone.Listener.prototype._rampTimeConstant = 0.01;
	    /**
		 *  Sets the position of the listener in 3d space.
		 *  @param  {Number}  x
		 *  @param  {Number}  y
		 *  @param  {Number}  z
		 *  @return {Tone.Listener} this
		 */
	    Tone.Listener.prototype.setPosition = function (x, y, z) {
	        if (this.context.listener.positionX) {
	            var now = this.now();
	            this.context.listener.positionX.setTargetAtTime(x, now, this._rampTimeConstant);
	            this.context.listener.positionY.setTargetAtTime(y, now, this._rampTimeConstant);
	            this.context.listener.positionZ.setTargetAtTime(z, now, this._rampTimeConstant);
	        } else {
	            this.context.listener.setPosition(x, y, z);
	        }
	        this._position = Array.prototype.slice.call(arguments);
	        return this;
	    };
	    /**
		 *  Sets the orientation of the listener using two vectors, the forward
		 *  vector (which direction the listener is facing) and the up vector
		 *  (which the up direction of the listener). An up vector
		 *  of 0, 0, 1 is equivalent to the listener standing up in the Z direction.
		 *  @param  {Number}  x
		 *  @param  {Number}  y
		 *  @param  {Number}  z
		 *  @param  {Number}  upX
		 *  @param  {Number}  upY
		 *  @param  {Number}  upZ
		 *  @return {Tone.Listener} this
		 */
	    Tone.Listener.prototype.setOrientation = function (x, y, z, upX, upY, upZ) {
	        if (this.context.listener.forwardX) {
	            var now = this.now();
	            this.context.listener.forwardX.setTargetAtTime(x, now, this._rampTimeConstant);
	            this.context.listener.forwardY.setTargetAtTime(y, now, this._rampTimeConstant);
	            this.context.listener.forwardZ.setTargetAtTime(z, now, this._rampTimeConstant);
	            this.context.listener.upX.setTargetAtTime(upX, now, this._rampTimeConstant);
	            this.context.listener.upY.setTargetAtTime(upY, now, this._rampTimeConstant);
	            this.context.listener.upZ.setTargetAtTime(upZ, now, this._rampTimeConstant);
	        } else {
	            this.context.listener.setOrientation(x, y, z, upX, upY, upZ);
	        }
	        this._orientation = Array.prototype.slice.call(arguments);
	        return this;
	    };
	    /**
		 *  The x position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name positionX
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'positionX', {
	        set: function (pos) {
	            this._position[0] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[0];
	        }
	    });
	    /**
		 *  The y position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name positionY
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'positionY', {
	        set: function (pos) {
	            this._position[1] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[1];
	        }
	    });
	    /**
		 *  The z position of the panner object.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name positionZ
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'positionZ', {
	        set: function (pos) {
	            this._position[2] = pos;
	            this.setPosition.apply(this, this._position);
	        },
	        get: function () {
	            return this._position[2];
	        }
	    });
	    /**
		 *  The x coordinate of the listeners front direction. i.e.
		 *  which way they are facing.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name forwardX
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'forwardX', {
	        set: function (pos) {
	            this._orientation[0] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[0];
	        }
	    });
	    /**
		 *  The y coordinate of the listeners front direction. i.e.
		 *  which way they are facing.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name forwardY
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'forwardY', {
	        set: function (pos) {
	            this._orientation[1] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[1];
	        }
	    });
	    /**
		 *  The z coordinate of the listeners front direction. i.e.
		 *  which way they are facing.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name forwardZ
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'forwardZ', {
	        set: function (pos) {
	            this._orientation[2] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[2];
	        }
	    });
	    /**
		 *  The x coordinate of the listener's up direction. i.e.
		 *  the direction the listener is standing in.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name upX
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'upX', {
	        set: function (pos) {
	            this._orientation[3] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[3];
	        }
	    });
	    /**
		 *  The y coordinate of the listener's up direction. i.e.
		 *  the direction the listener is standing in.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name upY
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'upY', {
	        set: function (pos) {
	            this._orientation[4] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[4];
	        }
	    });
	    /**
		 *  The z coordinate of the listener's up direction. i.e.
		 *  the direction the listener is standing in.
		 *  @type {Number}
		 *  @memberOf Tone.Listener#
		 *  @name upZ
		 */
	    Object.defineProperty(Tone.Listener.prototype, 'upZ', {
	        set: function (pos) {
	            this._orientation[5] = pos;
	            this.setOrientation.apply(this, this._orientation);
	        },
	        get: function () {
	            return this._orientation[5];
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.Listener} this
		 */
	    Tone.Listener.prototype.dispose = function () {
	        this._orientation = null;
	        this._position = null;
	        return this;
	    };
	    //SINGLETON SETUP
	    var ListenerConstructor = Tone.Listener;
	    Tone.Listener = new ListenerConstructor();
	    Tone.Context.on('init', function (context) {
	        if (context.Listener instanceof ListenerConstructor) {
	            //a single listener object
	            Tone.Listener = context.Listener;
	        } else {
	            //make new Listener insides
	            Tone.Listener = new ListenerConstructor();
	        }
	        context.Listener = Tone.Listener;
	    });
	    //END SINGLETON SETUP
	    return Tone.Listener;
	});
	Module(function (Tone) {
	    /**
		 * Because of a bug in iOS causing the currentTime to increment
		 * before the rendering is started, sometimes it takes multiple
		 * attempts to render the audio correctly.
		 * @private
		 */
	    function attemptRender(callback, duration, sampleRate, tries) {
	        tries = Tone.defaultArg(tries, 0);
	        var context = new Tone.OfflineContext(2, duration, sampleRate);
	        Tone.context = context;
	        //invoke the callback/scheduling
	        var response = callback(Tone.Transport);
	        if (context.currentTime > 0 && tries < 1000) {
	            return attemptRender(callback, duration, sampleRate, ++tries);
	        } else {
	            return {
	                'response': response,
	                'context': context
	            };
	        }
	    }
	    /**
		 *  Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.
		 *  The OfflineAudioContext is capable of rendering much faster than real time in many cases.
		 *  The callback function also passes in an offline instance of Tone.Transport which can be used
		 *  to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions
		 *  as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit
		 *  user action like a click or tap. 
		 *  @param  {Function}  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.
		 *  @param  {Time}  duration     the amount of time to record for.
		 *  @return  {Promise}  The promise which is invoked with the Tone.Buffer of the recorded output.
		 *  @example
		 * //render 2 seconds of the oscillator
		 * Tone.Offline(function(){
		 * 	//only nodes created in this callback will be recorded
		 * 	var oscillator = new Tone.Oscillator().toMaster().start(0)
		 * 	//schedule their events
		 * }, 2).then(function(buffer){
		 * 	//do something with the output buffer
		 * })
		 * @example
		 * //can also schedule events along the Transport
		 * //using the passed in Offline Transport
		 * Tone.Offline(function(Transport){
		 * 	var osc = new Tone.Oscillator().toMaster()
		 * 	Transport.schedule(function(time){
		 * 		osc.start(time).stop(time + 0.1)
		 * 	}, 1)
		 * 	Transport.start(0.2)
		 * }, 4).then(function(buffer){
		 * 	//do something with the output buffer
		 * })
		 */
	    Tone.Offline = function (callback, duration) {
	        //set the OfflineAudioContext
	        var sampleRate = Tone.context.sampleRate;
	        var originalContext = Tone.context;
	        var renderRet = attemptRender(callback, duration, sampleRate);
	        var response = renderRet.response;
	        var context = renderRet.context;
	        var ret;
	        if (response instanceof Promise) {
	            //wait for the promise to resolve
	            ret = response.then(function () {
	                //then render the audio
	                return context.render();
	            });
	        } else {
	            //process the audio
	            ret = context.render();
	        }
	        //return the original AudioContext
	        Tone.context = originalContext;
	        //return the audio
	        return ret.then(function (buffer) {
	            //wrap it in a Tone.Buffer
	            return new Tone.Buffer(buffer);
	        });
	    };
	    return Tone.Offline;
	});
	Module(function (Tone) {
	    
	    /**
		 * 	@class  Tone.Effect is the base class for effects. Connect the effect between
		 * 	        the effectSend and effectReturn GainNodes, then control the amount of
		 * 	        effect which goes to the output using the wet control.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {NormalRange|Object} [wet] The starting wet value.
		 */
	    Tone.Effect = function () {
	        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);
	        Tone.AudioNode.call(this);
	        this.createInsOuts(1, 1);
	        /**
			 *  the drywet knob to control the amount of effect
			 *  @type {Tone.CrossFade}
			 *  @private
			 */
	        this._dryWet = new Tone.CrossFade(options.wet);
	        /**
			 *  The wet control is how much of the effected
			 *  will pass through to the output. 1 = 100% effected
			 *  signal, 0 = 100% dry signal.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.wet = this._dryWet.fade;
	        /**
			 *  connect the effectSend to the input of hte effect
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this.effectSend = new Tone.Gain();
	        /**
			 *  connect the output of the effect to the effectReturn
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this.effectReturn = new Tone.Gain();
	        //connections
	        this.input.connect(this._dryWet.a);
	        this.input.connect(this.effectSend);
	        this.effectReturn.connect(this._dryWet.b);
	        this._dryWet.connect(this.output);
	        this._readOnly(['wet']);
	    };
	    Tone.extend(Tone.Effect, Tone.AudioNode);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Effect.defaults = { 'wet': 1 };
	    /**
		 *  chains the effect in between the effectSend and effectReturn
		 *  @param  {Tone} effect
		 *  @private
		 *  @returns {Tone.Effect} this
		 */
	    Tone.Effect.prototype.connectEffect = function (effect) {
	        this.effectSend.chain(effect, this.effectReturn);
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Effect} this
		 */
	    Tone.Effect.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._dryWet.dispose();
	        this._dryWet = null;
	        this.effectSend.dispose();
	        this.effectSend = null;
	        this.effectReturn.dispose();
	        this.effectReturn = null;
	        this._writable(['wet']);
	        this.wet = null;
	        return this;
	    };
	    return Tone.Effect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
		 *         Setting the LFO rate and depth allows for control over the filter modulation rate 
		 *         and depth.
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {Time|Object} [frequency] The rate of the LFO.
		 *  @param {Frequency=} baseFrequency The lower value of the LFOs oscillation
	 	 *  @param {Frequency=} octaves The number of octaves above the baseFrequency
		 *  @example
		 * //create an autofilter and start it's LFO
		 * var autoFilter = new Tone.AutoFilter("4n").toMaster().start();
		 * //route an oscillator through the filter and start it
		 * var oscillator = new Tone.Oscillator().connect(autoFilter).start();
		 */
	    Tone.AutoFilter = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'baseFrequency',
	            'octaves'
	        ], Tone.AutoFilter);
	        Tone.Effect.call(this, options);
	        /**
			 *  the lfo which drives the filter cutoff
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfo = new Tone.LFO({
	            'frequency': options.frequency,
	            'amplitude': options.depth
	        });
	        /**
			 * The range of the filter modulating between the min and max frequency. 
			 * 0 = no modulation. 1 = full modulation.
			 * @type {NormalRange}
			 * @signal
			 */
	        this.depth = this._lfo.amplitude;
	        /**
			 * How fast the filter modulates between min and max. 
			 * @type {Frequency}
			 * @signal
			 */
	        this.frequency = this._lfo.frequency;
	        /**
			 *  The filter node
			 *  @type {Tone.Filter}
			 */
	        this.filter = new Tone.Filter(options.filter);
	        /**
			 *  The octaves placeholder
			 *  @type {Positive}
			 *  @private
			 */
	        this._octaves = 0;
	        //connections
	        this.connectEffect(this.filter);
	        this._lfo.connect(this.filter.frequency);
	        this.type = options.type;
	        this._readOnly([
	            'frequency',
	            'depth'
	        ]);
	        this.octaves = options.octaves;
	        this.baseFrequency = options.baseFrequency;
	    };
	    //extend Effect
	    Tone.extend(Tone.AutoFilter, Tone.Effect);
	    /**
		 *  defaults
		 *  @static
		 *  @type {Object}
		 */
	    Tone.AutoFilter.defaults = {
	        'frequency': 1,
	        'type': 'sine',
	        'depth': 1,
	        'baseFrequency': 200,
	        'octaves': 2.6,
	        'filter': {
	            'type': 'lowpass',
	            'rolloff': -12,
	            'Q': 1
	        }
	    };
	    /**
		 * Start the effect.
		 * @param {Time} [time=now] When the LFO will start. 
		 * @returns {Tone.AutoFilter} this
		 */
	    Tone.AutoFilter.prototype.start = function (time) {
	        this._lfo.start(time);
	        return this;
	    };
	    /**
		 * Stop the effect.
		 * @param {Time} [time=now] When the LFO will stop. 
		 * @returns {Tone.AutoFilter} this
		 */
	    Tone.AutoFilter.prototype.stop = function (time) {
	        this._lfo.stop(time);
	        return this;
	    };
	    /**
		 * Sync the filter to the transport.
		 * @param {Time} [delay=0] Delay time before starting the effect after the
		 *                               Transport has started. 
		 * @returns {Tone.AutoFilter} this
		 */
	    Tone.AutoFilter.prototype.sync = function (delay) {
	        this._lfo.sync(delay);
	        return this;
	    };
	    /**
		 * Unsync the filter from the transport.
		 * @returns {Tone.AutoFilter} this
		 */
	    Tone.AutoFilter.prototype.unsync = function () {
	        this._lfo.unsync();
	        return this;
	    };
	    /**
		 * Type of oscillator attached to the AutoFilter. 
		 * Possible values: "sine", "square", "triangle", "sawtooth".
		 * @memberOf Tone.AutoFilter#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.AutoFilter.prototype, 'type', {
	        get: function () {
	            return this._lfo.type;
	        },
	        set: function (type) {
	            this._lfo.type = type;
	        }
	    });
	    /**
		 * The minimum value of the filter's cutoff frequency.
		 * @memberOf Tone.AutoFilter#
		 * @type {Frequency}
		 * @name min
		 */
	    Object.defineProperty(Tone.AutoFilter.prototype, 'baseFrequency', {
	        get: function () {
	            return this._lfo.min;
	        },
	        set: function (freq) {
	            this._lfo.min = this.toFrequency(freq);
	            //and set the max
	            this.octaves = this._octaves;
	        }
	    });
	    /**
		 * The maximum value of the filter's cutoff frequency. 
		 * @memberOf Tone.AutoFilter#
		 * @type {Positive}
		 * @name octaves
		 */
	    Object.defineProperty(Tone.AutoFilter.prototype, 'octaves', {
	        get: function () {
	            return this._octaves;
	        },
	        set: function (oct) {
	            this._octaves = oct;
	            this._lfo.max = this.baseFrequency * Math.pow(2, oct);
	        }
	    });
	    /**
		 *  Clean up. 
		 *  @returns {Tone.AutoFilter} this
		 */
	    Tone.AutoFilter.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._lfo.dispose();
	        this._lfo = null;
	        this.filter.dispose();
	        this.filter = null;
	        this._writable([
	            'frequency',
	            'depth'
	        ]);
	        this.frequency = null;
	        this.depth = null;
	        return this;
	    };
	    return Tone.AutoFilter;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.AutoPanner is a Tone.Panner with an LFO connected to the pan amount. 
		 *         More on using autopanners [here](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {Frequency|Object} [frequency] Rate of left-right oscillation. 
		 *  @example
		 * //create an autopanner and start it's LFO
		 * var autoPanner = new Tone.AutoPanner("4n").toMaster().start();
		 * //route an oscillator through the panner and start it
		 * var oscillator = new Tone.Oscillator().connect(autoPanner).start();
		 */
	    Tone.AutoPanner = function () {
	        var options = Tone.defaults(arguments, ['frequency'], Tone.AutoPanner);
	        Tone.Effect.call(this, options);
	        /**
			 *  the lfo which drives the panning
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfo = new Tone.LFO({
	            'frequency': options.frequency,
	            'amplitude': options.depth,
	            'min': -1,
	            'max': 1
	        });
	        /**
			 * The amount of panning between left and right. 
			 * 0 = always center. 1 = full range between left and right. 
			 * @type {NormalRange}
			 * @signal
			 */
	        this.depth = this._lfo.amplitude;
	        /**
			 *  the panner node which does the panning
			 *  @type {Tone.Panner}
			 *  @private
			 */
	        this._panner = new Tone.Panner();
	        /**
			 * How fast the panner modulates between left and right. 
			 * @type {Frequency}
			 * @signal
			 */
	        this.frequency = this._lfo.frequency;
	        //connections
	        this.connectEffect(this._panner);
	        this._lfo.connect(this._panner.pan);
	        this.type = options.type;
	        this._readOnly([
	            'depth',
	            'frequency'
	        ]);
	    };
	    //extend Effect
	    Tone.extend(Tone.AutoPanner, Tone.Effect);
	    /**
		 *  defaults
		 *  @static
		 *  @type {Object}
		 */
	    Tone.AutoPanner.defaults = {
	        'frequency': 1,
	        'type': 'sine',
	        'depth': 1
	    };
	    /**
		 * Start the effect.
		 * @param {Time} [time=now] When the LFO will start. 
		 * @returns {Tone.AutoPanner} this
		 */
	    Tone.AutoPanner.prototype.start = function (time) {
	        this._lfo.start(time);
	        return this;
	    };
	    /**
		 * Stop the effect.
		 * @param {Time} [time=now] When the LFO will stop. 
		 * @returns {Tone.AutoPanner} this
		 */
	    Tone.AutoPanner.prototype.stop = function (time) {
	        this._lfo.stop(time);
	        return this;
	    };
	    /**
		 * Sync the panner to the transport.
		 * @param {Time} [delay=0] Delay time before starting the effect after the
		 *                               Transport has started. 
		 * @returns {Tone.AutoPanner} this
		 */
	    Tone.AutoPanner.prototype.sync = function (delay) {
	        this._lfo.sync(delay);
	        return this;
	    };
	    /**
		 * Unsync the panner from the transport
		 * @returns {Tone.AutoPanner} this
		 */
	    Tone.AutoPanner.prototype.unsync = function () {
	        this._lfo.unsync();
	        return this;
	    };
	    /**
		 * Type of oscillator attached to the AutoFilter. 
		 * Possible values: "sine", "square", "triangle", "sawtooth".
		 * @memberOf Tone.AutoFilter#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.AutoPanner.prototype, 'type', {
	        get: function () {
	            return this._lfo.type;
	        },
	        set: function (type) {
	            this._lfo.type = type;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.AutoPanner} this
		 */
	    Tone.AutoPanner.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._lfo.dispose();
	        this._lfo = null;
	        this._panner.dispose();
	        this._panner = null;
	        this._writable([
	            'depth',
	            'frequency'
	        ]);
	        this.frequency = null;
	        this.depth = null;
	        return this;
	    };
	    return Tone.AutoPanner;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.AutoWah connects a Tone.Follower to a bandpass filter (Tone.Filter).
		 *          The frequency of the filter is adjusted proportionally to the
		 *          incoming signal's amplitude. Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {Frequency|Object} [baseFrequency] The frequency the filter is set
		 *                                            to at the low point of the wah
		 *  @param {Positive} [octaves] The number of octaves above the baseFrequency
		 *                                the filter will sweep to when fully open
		 *  @param {Decibels} [sensitivity] The decibel threshold sensitivity for
		 *                                   the incoming signal. Normal range of -40 to 0.
		 *  @example
		 * var autoWah = new Tone.AutoWah(50, 6, -30).toMaster();
		 * //initialize the synth and connect to autowah
		 * var synth = new Synth.connect(autoWah);
		 * //Q value influences the effect of the wah - default is 2
		 * autoWah.Q.value = 6;
		 * //more audible on higher notes
		 * synth.triggerAttackRelease("C4", "8n")
		 */
	    Tone.AutoWah = function () {
	        var options = Tone.defaults(arguments, [
	            'baseFrequency',
	            'octaves',
	            'sensitivity'
	        ], Tone.AutoWah);
	        Tone.Effect.call(this, options);
	        /**
			 *  The envelope follower. Set the attack/release
			 *  timing to adjust how the envelope is followed.
			 *  @type {Tone.Follower}
			 *  @private
			 */
	        this.follower = new Tone.Follower(options.follower);
	        /**
			 *  scales the follower value to the frequency domain
			 *  @type {Tone}
			 *  @private
			 */
	        this._sweepRange = new Tone.ScaleExp(0, 1, 0.5);
	        /**
			 *  @type {number}
			 *  @private
			 */
	        this._baseFrequency = options.baseFrequency;
	        /**
			 *  @type {number}
			 *  @private
			 */
	        this._octaves = options.octaves;
	        /**
			 *  the input gain to adjust the sensitivity
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._inputBoost = new Tone.Gain();
	        /**
			 *  @type {BiquadFilterNode}
			 *  @private
			 */
	        this._bandpass = new Tone.Filter({
	            'rolloff': -48,
	            'frequency': 0,
	            'Q': options.Q
	        });
	        /**
			 *  @type {Tone.Filter}
			 *  @private
			 */
	        this._peaking = new Tone.Filter(0, 'peaking');
	        this._peaking.gain.value = options.gain;
	        /**
			 * The gain of the filter.
			 * @type {Number}
			 * @signal
			 */
	        this.gain = this._peaking.gain;
	        /**
			 * The quality of the filter.
			 * @type {Positive}
			 * @signal
			 */
	        this.Q = this._bandpass.Q;
	        //the control signal path
	        this.effectSend.chain(this._inputBoost, this.follower, this._sweepRange);
	        this._sweepRange.connect(this._bandpass.frequency);
	        this._sweepRange.connect(this._peaking.frequency);
	        //the filtered path
	        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);
	        //set the initial value
	        this._setSweepRange();
	        this.sensitivity = options.sensitivity;
	        this._readOnly([
	            'gain',
	            'Q'
	        ]);
	    };
	    Tone.extend(Tone.AutoWah, Tone.Effect);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.AutoWah.defaults = {
	        'baseFrequency': 100,
	        'octaves': 6,
	        'sensitivity': 0,
	        'Q': 2,
	        'gain': 2,
	        'follower': {
	            'attack': 0.3,
	            'release': 0.5
	        }
	    };
	    /**
		 * The number of octaves that the filter will sweep above the
		 * baseFrequency.
		 * @memberOf Tone.AutoWah#
		 * @type {Number}
		 * @name octaves
		 */
	    Object.defineProperty(Tone.AutoWah.prototype, 'octaves', {
	        get: function () {
	            return this._octaves;
	        },
	        set: function (octaves) {
	            this._octaves = octaves;
	            this._setSweepRange();
	        }
	    });
	    /**
		 * The base frequency from which the sweep will start from.
		 * @memberOf Tone.AutoWah#
		 * @type {Frequency}
		 * @name baseFrequency
		 */
	    Object.defineProperty(Tone.AutoWah.prototype, 'baseFrequency', {
	        get: function () {
	            return this._baseFrequency;
	        },
	        set: function (baseFreq) {
	            this._baseFrequency = baseFreq;
	            this._setSweepRange();
	        }
	    });
	    /**
		 * The sensitivity to control how responsive to the input signal the filter is.
		 * @memberOf Tone.AutoWah#
		 * @type {Decibels}
		 * @name sensitivity
		 */
	    Object.defineProperty(Tone.AutoWah.prototype, 'sensitivity', {
	        get: function () {
	            return Tone.gainToDb(1 / this._inputBoost.gain.value);
	        },
	        set: function (sensitivy) {
	            this._inputBoost.gain.value = 1 / Tone.dbToGain(sensitivy);
	        }
	    });
	    /**
		 *  sets the sweep range of the scaler
		 *  @private
		 */
	    Tone.AutoWah.prototype._setSweepRange = function () {
	        this._sweepRange.min = this._baseFrequency;
	        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.AutoWah} this
		 */
	    Tone.AutoWah.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this.follower.dispose();
	        this.follower = null;
	        this._sweepRange.dispose();
	        this._sweepRange = null;
	        this._bandpass.dispose();
	        this._bandpass = null;
	        this._peaking.dispose();
	        this._peaking = null;
	        this._inputBoost.dispose();
	        this._inputBoost = null;
	        this._writable([
	            'gain',
	            'Q'
	        ]);
	        this.gain = null;
	        this.Q = null;
	        return this;
	    };
	    return Tone.AutoWah;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Signal-rate modulo operator. Only works in AudioRange [-1, 1] and for modulus
		 *         values in the NormalRange.
		 *
		 *  @constructor
		 *  @extends {Tone.SignalBase}
		 *  @param {NormalRange} modulus The modulus to apply.
		 *  @example
		 * var mod = new Tone.Modulo(0.2)
		 * var sig = new Tone.Signal(0.5).connect(mod);
		 * //mod outputs 0.1
		 */
	    Tone.Modulo = function (modulus) {
	        Tone.SignalBase.call(this);
	        this.createInsOuts(1, 0);
	        /**
			 *  A waveshaper gets the integer multiple of
			 *  the input signal and the modulus.
			 *  @private
			 *  @type {Tone.WaveShaper}
			 */
	        this._shaper = new Tone.WaveShaper(Math.pow(2, 16));
	        /**
			 *  the integer multiple is multiplied by the modulus
			 *  @type  {Tone.Multiply}
			 *  @private
			 */
	        this._multiply = new Tone.Multiply();
	        /**
			 *  and subtracted from the input signal
			 *  @type  {Tone.Subtract}
			 *  @private
			 */
	        this._subtract = this.output = new Tone.Subtract();
	        /**
			 *  the modulus signal
			 *  @type  {Tone.Signal}
			 *  @private
			 */
	        this._modSignal = new Tone.Signal(modulus);
	        //connections
	        this.input.fan(this._shaper, this._subtract);
	        this._modSignal.connect(this._multiply, 0, 0);
	        this._shaper.connect(this._multiply, 0, 1);
	        this._multiply.connect(this._subtract, 0, 1);
	        this._setWaveShaper(modulus);
	    };
	    Tone.extend(Tone.Modulo, Tone.SignalBase);
	    /**
		 *  @param  {number}  mod  the modulus to apply
		 *  @private
		 */
	    Tone.Modulo.prototype._setWaveShaper = function (mod) {
	        this._shaper.setMap(function (val) {
	            var multiple = Math.floor((val + 0.0001) / mod);
	            return multiple;
	        });
	    };
	    /**
		 * The modulus value.
		 * @memberOf Tone.Modulo#
		 * @type {NormalRange}
		 * @name value
		 */
	    Object.defineProperty(Tone.Modulo.prototype, 'value', {
	        get: function () {
	            return this._modSignal.value;
	        },
	        set: function (mod) {
	            this._modSignal.value = mod;
	            this._setWaveShaper(mod);
	        }
	    });
	    /**
		 * clean up
		 *  @returns {Tone.Modulo} this
		 */
	    Tone.Modulo.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._shaper.dispose();
	        this._shaper = null;
	        this._multiply.dispose();
	        this._multiply = null;
	        this._subtract.dispose();
	        this._subtract = null;
	        this._modSignal.dispose();
	        this._modSignal = null;
	        return this;
	    };
	    return Tone.Modulo;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Bitcrusher downsamples the incoming signal to a different bitdepth.
		 *         Lowering the bitdepth of the signal creates distortion. Read more about Bitcrushing
		 *         on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {Number} bits The number of bits to downsample the signal. Nominal range
		 *                       of 1 to 8.
		 *  @example
		 * //initialize crusher and route a synth through it
		 * var crusher = new Tone.BitCrusher(4).toMaster();
		 * var synth = new Tone.MonoSynth().connect(crusher);
		 */
	    Tone.BitCrusher = function () {
	        var options = Tone.defaults(arguments, ['bits'], Tone.BitCrusher);
	        Tone.Effect.call(this, options);
	        var invStepSize = 1 / Math.pow(2, options.bits - 1);
	        /**
			 *  Subtract the input signal and the modulus of the input signal
			 *  @type {Tone.Subtract}
			 *  @private
			 */
	        this._subtract = new Tone.Subtract();
	        /**
			 *  The mod function
			 *  @type  {Tone.Modulo}
			 *  @private
			 */
	        this._modulo = new Tone.Modulo(invStepSize);
	        /**
			 *  keeps track of the bits
			 *  @type {number}
			 *  @private
			 */
	        this._bits = options.bits;
	        //connect it up
	        this.effectSend.fan(this._subtract, this._modulo);
	        this._modulo.connect(this._subtract, 0, 1);
	        this._subtract.connect(this.effectReturn);
	    };
	    Tone.extend(Tone.BitCrusher, Tone.Effect);
	    /**
		 *  the default values
		 *  @static
		 *  @type {Object}
		 */
	    Tone.BitCrusher.defaults = { 'bits': 4 };
	    /**
		 * The bit depth of the effect. Nominal range of 1-8.
		 * @memberOf Tone.BitCrusher#
		 * @type {number}
		 * @name bits
		 */
	    Object.defineProperty(Tone.BitCrusher.prototype, 'bits', {
	        get: function () {
	            return this._bits;
	        },
	        set: function (bits) {
	            this._bits = bits;
	            var invStepSize = 1 / Math.pow(2, bits - 1);
	            this._modulo.value = invStepSize;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.BitCrusher} this
		 */
	    Tone.BitCrusher.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._subtract.dispose();
	        this._subtract = null;
	        this._modulo.dispose();
	        this._modulo = null;
	        return this;
	    };
	    return Tone.BitCrusher;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.ChebyShev is a Chebyshev waveshaper, an effect which is good 
		 *         for making different types of distortion sounds.
		 *         Note that odd orders sound very different from even ones, 
		 *         and order = 1 is no change. 
		 *         Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).
		 *
		 *  @extends {Tone.Effect}
		 *  @constructor
		 *  @param {Positive|Object} [order] The order of the chebyshev polynomial. Normal range between 1-100. 
		 *  @example
		 * //create a new cheby
		 * var cheby = new Tone.Chebyshev(50);
		 * //create a monosynth connected to our cheby
		 * synth = new Tone.MonoSynth().connect(cheby);
		 */
	    Tone.Chebyshev = function () {
	        var options = Tone.defaults(arguments, ['order'], Tone.Chebyshev);
	        Tone.Effect.call(this, options);
	        /**
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._shaper = new Tone.WaveShaper(4096);
	        /**
			 * holds onto the order of the filter
			 * @type {number}
			 * @private
			 */
	        this._order = options.order;
	        this.connectEffect(this._shaper);
	        this.order = options.order;
	        this.oversample = options.oversample;
	    };
	    Tone.extend(Tone.Chebyshev, Tone.Effect);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Chebyshev.defaults = {
	        'order': 1,
	        'oversample': 'none'
	    };
	    /**
		 *  get the coefficient for that degree
		 *  @param {number} x the x value
		 *  @param   {number} degree 
		 *  @param {Object} memo memoize the computed value. 
		 *                       this speeds up computation greatly. 
		 *  @return  {number}       the coefficient 
		 *  @private
		 */
	    Tone.Chebyshev.prototype._getCoefficient = function (x, degree, memo) {
	        if (memo.hasOwnProperty(degree)) {
	            return memo[degree];
	        } else if (degree === 0) {
	            memo[degree] = 0;
	        } else if (degree === 1) {
	            memo[degree] = x;
	        } else {
	            memo[degree] = 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo);
	        }
	        return memo[degree];
	    };
	    /**
		 * The order of the Chebyshev polynomial which creates
		 * the equation which is applied to the incoming 
		 * signal through a Tone.WaveShaper. The equations
		 * are in the form:<br>
		 * order 2: 2x^2 + 1<br>
		 * order 3: 4x^3 + 3x <br>
		 * @memberOf Tone.Chebyshev#
		 * @type {Positive}
		 * @name order
		 */
	    Object.defineProperty(Tone.Chebyshev.prototype, 'order', {
	        get: function () {
	            return this._order;
	        },
	        set: function (order) {
	            this._order = order;
	            var curve = new Array(4096);
	            var len = curve.length;
	            for (var i = 0; i < len; ++i) {
	                var x = i * 2 / len - 1;
	                if (x === 0) {
	                    //should output 0 when input is 0
	                    curve[i] = 0;
	                } else {
	                    curve[i] = this._getCoefficient(x, order, {});
	                }
	            }
	            this._shaper.curve = curve;
	        }
	    });
	    /**
		 * The oversampling of the effect. Can either be "none", "2x" or "4x".
		 * @memberOf Tone.Chebyshev#
		 * @type {string}
		 * @name oversample
		 */
	    Object.defineProperty(Tone.Chebyshev.prototype, 'oversample', {
	        get: function () {
	            return this._shaper.oversample;
	        },
	        set: function (oversampling) {
	            this._shaper.oversample = oversampling;
	        }
	    });
	    /**
		 *  Clean up. 
		 *  @returns {Tone.Chebyshev} this
		 */
	    Tone.Chebyshev.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._shaper.dispose();
	        this._shaper = null;
	        return this;
	    };
	    return Tone.Chebyshev;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Base class for Stereo effects. Provides effectSendL/R and effectReturnL/R.
		 *
		 *	@constructor
		 *	@extends {Tone.Effect}
		 */
	    Tone.StereoEffect = function () {
	        //get the defaults
	        Tone.AudioNode.call(this);
	        var options = Tone.defaults(arguments, ['wet'], Tone.Effect);
	        this.createInsOuts(1, 1);
	        /**
			 *  the drywet knob to control the amount of effect
			 *  @type {Tone.CrossFade}
			 *  @private
			 */
	        this._dryWet = new Tone.CrossFade(options.wet);
	        /**
			 *  The wet control, i.e. how much of the effected
			 *  will pass through to the output.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.wet = this._dryWet.fade;
	        /**
			 *  then split it
			 *  @type {Tone.Split}
			 *  @private
			 */
	        this._split = new Tone.Split();
	        /**
			 *  the effects send LEFT
			 *  @type {GainNode}
			 *  @private
			 */
	        this.effectSendL = this._split.left;
	        /**
			 *  the effects send RIGHT
			 *  @type {GainNode}
			 *  @private
			 */
	        this.effectSendR = this._split.right;
	        /**
			 *  the stereo effect merger
			 *  @type {Tone.Merge}
			 *  @private
			 */
	        this._merge = new Tone.Merge();
	        /**
			 *  the effect return LEFT
			 *  @type {GainNode}
			 *  @private
			 */
	        this.effectReturnL = this._merge.left;
	        /**
			 *  the effect return RIGHT
			 *  @type {GainNode}
			 *  @private
			 */
	        this.effectReturnR = this._merge.right;
	        //connections
	        this.input.connect(this._split);
	        //dry wet connections
	        this.input.connect(this._dryWet, 0, 0);
	        this._merge.connect(this._dryWet, 0, 1);
	        this._dryWet.connect(this.output);
	        this._readOnly(['wet']);
	    };
	    Tone.extend(Tone.StereoEffect, Tone.Effect);
	    /**
		 *  Clean up.
		 *  @returns {Tone.StereoEffect} this
		 */
	    Tone.StereoEffect.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._dryWet.dispose();
	        this._dryWet = null;
	        this._split.dispose();
	        this._split = null;
	        this._merge.dispose();
	        this._merge = null;
	        this.effectSendL = null;
	        this.effectSendR = null;
	        this.effectReturnL = null;
	        this.effectReturnR = null;
	        this._writable(['wet']);
	        this.wet = null;
	        return this;
	    };
	    return Tone.StereoEffect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Chorus is a stereo chorus effect composed of
		 *         a left and right delay with a Tone.LFO applied to the delayTime of each channel.
		 *         Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).
		 *         Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).
		 *
		 *	@constructor
		 *	@extends {Tone.StereoEffect}
		 *	@param {Frequency|Object} [frequency] The frequency of the LFO.
		 *	@param {Milliseconds} [delayTime] The delay of the chorus effect in ms.
		 *	@param {NormalRange} [depth] The depth of the chorus.
		 *	@example
		 * var chorus = new Tone.Chorus(4, 2.5, 0.5);
		 * var synth = new Tone.PolySynth(4, Tone.MonoSynth).connect(chorus);
		 * synth.triggerAttackRelease(["C3","E3","G3"], "8n");
		 */
	    Tone.Chorus = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'delayTime',
	            'depth'
	        ], Tone.Chorus);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  the depth of the chorus
			 *  @type {number}
			 *  @private
			 */
	        this._depth = options.depth;
	        /**
			 *  the delayTime
			 *  @type {number}
			 *  @private
			 */
	        this._delayTime = options.delayTime / 1000;
	        /**
			 *  the lfo which controls the delayTime
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfoL = new Tone.LFO({
	            'frequency': options.frequency,
	            'min': 0,
	            'max': 1
	        });
	        /**
			 *  another LFO for the right side with a 180 degree phase diff
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfoR = new Tone.LFO({
	            'frequency': options.frequency,
	            'min': 0,
	            'max': 1,
	            'phase': 180
	        });
	        /**
			 *  delay for left
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._delayNodeL = new Tone.Delay();
	        /**
			 *  delay for right
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._delayNodeR = new Tone.Delay();
	        /**
			 * The frequency of the LFO which modulates the delayTime.
			 * @type {Frequency}
			 * @signal
			 */
	        this.frequency = this._lfoL.frequency;
	        //connections
	        this.effectSendL.chain(this._delayNodeL, this.effectReturnL);
	        this.effectSendR.chain(this._delayNodeR, this.effectReturnR);
	        //and pass through to make the detune apparent
	        this.effectSendL.connect(this.effectReturnL);
	        this.effectSendR.connect(this.effectReturnR);
	        //lfo setup
	        this._lfoL.connect(this._delayNodeL.delayTime);
	        this._lfoR.connect(this._delayNodeR.delayTime);
	        //start the lfo
	        this._lfoL.start();
	        this._lfoR.start();
	        //have one LFO frequency control the other
	        this._lfoL.frequency.connect(this._lfoR.frequency);
	        //set the initial values
	        this.depth = this._depth;
	        this.frequency.value = options.frequency;
	        this.type = options.type;
	        this._readOnly(['frequency']);
	        this.spread = options.spread;
	    };
	    Tone.extend(Tone.Chorus, Tone.StereoEffect);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Chorus.defaults = {
	        'frequency': 1.5,
	        'delayTime': 3.5,
	        'depth': 0.7,
	        'type': 'sine',
	        'spread': 180
	    };
	    /**
		 * The depth of the effect. A depth of 1 makes the delayTime
		 * modulate between 0 and 2*delayTime (centered around the delayTime).
		 * @memberOf Tone.Chorus#
		 * @type {NormalRange}
		 * @name depth
		 */
	    Object.defineProperty(Tone.Chorus.prototype, 'depth', {
	        get: function () {
	            return this._depth;
	        },
	        set: function (depth) {
	            this._depth = depth;
	            var deviation = this._delayTime * depth;
	            this._lfoL.min = Math.max(this._delayTime - deviation, 0);
	            this._lfoL.max = this._delayTime + deviation;
	            this._lfoR.min = Math.max(this._delayTime - deviation, 0);
	            this._lfoR.max = this._delayTime + deviation;
	        }
	    });
	    /**
		 * The delayTime in milliseconds of the chorus. A larger delayTime
		 * will give a more pronounced effect. Nominal range a delayTime
		 * is between 2 and 20ms.
		 * @memberOf Tone.Chorus#
		 * @type {Milliseconds}
		 * @name delayTime
		 */
	    Object.defineProperty(Tone.Chorus.prototype, 'delayTime', {
	        get: function () {
	            return this._delayTime * 1000;
	        },
	        set: function (delayTime) {
	            this._delayTime = delayTime / 1000;
	            this.depth = this._depth;
	        }
	    });
	    /**
		 * The oscillator type of the LFO.
		 * @memberOf Tone.Chorus#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.Chorus.prototype, 'type', {
	        get: function () {
	            return this._lfoL.type;
	        },
	        set: function (type) {
	            this._lfoL.type = type;
	            this._lfoR.type = type;
	        }
	    });
	    /**
		 * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
		 * When set to 180, LFO's will be panned hard left and right respectively.
		 * @memberOf Tone.Chorus#
		 * @type {Degrees}
		 * @name spread
		 */
	    Object.defineProperty(Tone.Chorus.prototype, 'spread', {
	        get: function () {
	            return this._lfoR.phase - this._lfoL.phase;
	        },
	        set: function (spread) {
	            this._lfoL.phase = 90 - spread / 2;
	            this._lfoR.phase = spread / 2 + 90;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.Chorus} this
		 */
	    Tone.Chorus.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        this._lfoL.dispose();
	        this._lfoL = null;
	        this._lfoR.dispose();
	        this._lfoR = null;
	        this._delayNodeL.dispose();
	        this._delayNodeL = null;
	        this._delayNodeR.dispose();
	        this._delayNodeR = null;
	        this._writable('frequency');
	        this.frequency = null;
	        return this;
	    };
	    return Tone.Chorus;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Convolver is a wrapper around the Native Web Audio
		 *          [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).
		 *          Convolution is useful for reverb and filter emulation. Read more about convolution reverb on
		 *          [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {string|Tone.Buffer|Object} [url] The URL of the impulse response or the Tone.Buffer
		 *                                           contianing the impulse response.
		 *  @param {Function=} onload The callback to invoke when the url is loaded.
		 *  @example
		 * //initializing the convolver with an impulse response
		 * var convolver = new Tone.Convolver("./path/to/ir.wav").toMaster();
		 */
	    Tone.Convolver = function () {
	        var options = Tone.defaults(arguments, [
	            'url',
	            'onload'
	        ], Tone.Convolver);
	        Tone.Effect.call(this, options);
	        /**
			 *  convolver node
			 *  @type {ConvolverNode}
			 *  @private
			 */
	        this._convolver = this.context.createConvolver();
	        /**
			 *  the convolution buffer
			 *  @type {Tone.Buffer}
			 *  @private
			 */
	        this._buffer = new Tone.Buffer(options.url, function (buffer) {
	            this._convolver.buffer = buffer.get();
	            options.onload();
	        }.bind(this));
	        this.connectEffect(this._convolver);
	    };
	    Tone.extend(Tone.Convolver, Tone.Effect);
	    /**
		 *  @static
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Convolver.defaults = { 'onload': Tone.noOp };
	    /**
		 *  The convolver's buffer
		 *  @memberOf Tone.Convolver#
		 *  @type {AudioBuffer}
		 *  @name buffer
		 */
	    Object.defineProperty(Tone.Convolver.prototype, 'buffer', {
	        get: function () {
	            return this._buffer.get();
	        },
	        set: function (buffer) {
	            this._buffer.set(buffer);
	            this._convolver.buffer = this._buffer.get();
	        }
	    });
	    /**
		 *  Load an impulse response url as an audio buffer.
		 *  Decodes the audio asynchronously and invokes
		 *  the callback once the audio buffer loads.
		 *  @param {string} url The url of the buffer to load.
		 *                      filetype support depends on the
		 *                      browser.
		 *  @param  {function=} callback
		 *  @returns {Promise}
		 */
	    Tone.Convolver.prototype.load = function (url, callback) {
	        return this._buffer.load(url, function (buff) {
	            this.buffer = buff;
	            if (callback) {
	                callback();
	            }
	        }.bind(this));
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Convolver} this
		 */
	    Tone.Convolver.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._convolver.disconnect();
	        this._convolver = null;
	        this._buffer.dispose();
	        this._buffer = null;
	        return this;
	    };
	    return Tone.Convolver;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Distortion is a simple distortion effect using Tone.WaveShaper.
		 *         Algorithm from [a stackoverflow answer](http://stackoverflow.com/a/22313408).
		 *
		 *  @extends {Tone.Effect}
		 *  @constructor
		 *  @param {Number|Object} [distortion] The amount of distortion (nominal range of 0-1)
		 *  @example
		 * var dist = new Tone.Distortion(0.8).toMaster();
		 * var fm = new Tone.SimpleFM().connect(dist);
		 * //this sounds good on bass notes
		 * fm.triggerAttackRelease("A1", "8n");
		 */
	    Tone.Distortion = function () {
	        var options = Tone.defaults(arguments, ['distortion'], Tone.Distortion);
	        Tone.Effect.call(this, options);
	        /**
			 *  @type {Tone.WaveShaper}
			 *  @private
			 */
	        this._shaper = new Tone.WaveShaper(4096);
	        /**
			 * holds the distortion amount
			 * @type {number}
			 * @private
			 */
	        this._distortion = options.distortion;
	        this.connectEffect(this._shaper);
	        this.distortion = options.distortion;
	        this.oversample = options.oversample;
	    };
	    Tone.extend(Tone.Distortion, Tone.Effect);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Distortion.defaults = {
	        'distortion': 0.4,
	        'oversample': 'none'
	    };
	    /**
		 * The amount of distortion.
		 * @memberOf Tone.Distortion#
		 * @type {NormalRange}
		 * @name distortion
		 */
	    Object.defineProperty(Tone.Distortion.prototype, 'distortion', {
	        get: function () {
	            return this._distortion;
	        },
	        set: function (amount) {
	            this._distortion = amount;
	            var k = amount * 100;
	            var deg = Math.PI / 180;
	            this._shaper.setMap(function (x) {
	                if (Math.abs(x) < 0.001) {
	                    //should output 0 when input is 0
	                    return 0;
	                } else {
	                    return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
	                }
	            });
	        }
	    });
	    /**
		 * The oversampling of the effect. Can either be "none", "2x" or "4x".
		 * @memberOf Tone.Distortion#
		 * @type {string}
		 * @name oversample
		 */
	    Object.defineProperty(Tone.Distortion.prototype, 'oversample', {
	        get: function () {
	            return this._shaper.oversample;
	        },
	        set: function (oversampling) {
	            this._shaper.oversample = oversampling;
	        }
	    });
	    /**
		 *  Clean up. 
		 *  @returns {Tone.Distortion} this
		 */
	    Tone.Distortion.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._shaper.dispose();
	        this._shaper = null;
	        return this;
	    };
	    return Tone.Distortion;
	});
	Module(function (Tone) {
	    
	    /**
		 * 	@class  Tone.FeedbackEffect provides a loop between an 
		 * 	        audio source and its own output. This is a base-class
		 * 	        for feedback effects. 
		 *
		 *  @constructor
		 *  @extends {Tone.Effect}
		 *  @param {NormalRange|Object} [feedback] The initial feedback value.
		 */
	    Tone.FeedbackEffect = function () {
	        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);
	        Tone.Effect.call(this, options);
	        /**
			 *  the gain which controls the feedback
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedbackGain = new Tone.Gain(options.feedback, Tone.Type.NormalRange);
	        /**
			 *  The amount of signal which is fed back into the effect input. 
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.feedback = this._feedbackGain.gain;
	        //the feedback loop
	        this.effectReturn.chain(this._feedbackGain, this.effectSend);
	        this._readOnly(['feedback']);
	    };
	    Tone.extend(Tone.FeedbackEffect, Tone.Effect);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.FeedbackEffect.defaults = { 'feedback': 0.125 };
	    /**
		 *  Clean up. 
		 *  @returns {Tone.FeedbackEffect} this
		 */
	    Tone.FeedbackEffect.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._writable(['feedback']);
	        this._feedbackGain.dispose();
	        this._feedbackGain = null;
	        this.feedback = null;
	        return this;
	    };
	    return Tone.FeedbackEffect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.FeedbackDelay is a DelayNode in which part of output
		 *          signal is fed back into the delay.
		 *
		 *  @constructor
		 *  @extends {Tone.FeedbackEffect}
		 *  @param {Time|Object} [delayTime] The delay applied to the incoming signal.
		 *  @param {NormalRange=} feedback The amount of the effected signal which
		 *                            is fed back through the delay.
		 *  @example
		 * var feedbackDelay = new Tone.FeedbackDelay("8n", 0.5).toMaster();
		 * var tom = new Tone.DrumSynth({
		 * 	"octaves" : 4,
		 * 	"pitchDecay" : 0.1
		 * }).connect(feedbackDelay);
		 * tom.triggerAttackRelease("A2","32n");
		 */
	    Tone.FeedbackDelay = function () {
	        var options = Tone.defaults(arguments, [
	            'delayTime',
	            'feedback'
	        ], Tone.FeedbackDelay);
	        Tone.FeedbackEffect.call(this, options);
	        /**
			 *  the delay node
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._delayNode = new Tone.Delay(options.delayTime, options.maxDelay);
	        /**
			 *  The delayTime of the DelayNode.
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = this._delayNode.delayTime;
	        // connect it up
	        this.connectEffect(this._delayNode);
	        this._readOnly(['delayTime']);
	    };
	    Tone.extend(Tone.FeedbackDelay, Tone.FeedbackEffect);
	    /**
		 *  The default values.
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.FeedbackDelay.defaults = {
	        'delayTime': 0.25,
	        'maxDelay': 1
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.FeedbackDelay} this
		 */
	    Tone.FeedbackDelay.prototype.dispose = function () {
	        Tone.FeedbackEffect.prototype.dispose.call(this);
	        this._delayNode.dispose();
	        this._delayNode = null;
	        this._writable(['delayTime']);
	        this.delayTime = null;
	        return this;
	    };
	    return Tone.FeedbackDelay;
	});
	Module(function (Tone) {
	    
	    /**
		 *  an array of comb filter delay values from Freeverb implementation
		 *  @static
		 *  @private
		 *  @type {Array}
		 */
	    var combFilterTunings = [
	        1557 / 44100,
	        1617 / 44100,
	        1491 / 44100,
	        1422 / 44100,
	        1277 / 44100,
	        1356 / 44100,
	        1188 / 44100,
	        1116 / 44100
	    ];
	    /**
		 *  an array of allpass filter frequency values from Freeverb implementation
		 *  @private
		 *  @static
		 *  @type {Array}
		 */
	    var allpassFilterFrequencies = [
	        225,
	        556,
	        441,
	        341
	    ];
	    /**
		 *  @class Tone.Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).
		 *         Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).
		 *
		 *  @extends {Tone.Effect}
		 *  @constructor
		 *  @param {NormalRange|Object} [roomSize] Correlated to the decay time.
		 *  @param {Frequency} [dampening] The cutoff frequency of a lowpass filter as part
		 *                                 of the reverb.
		 *  @example
		 * var freeverb = new Tone.Freeverb().toMaster();
		 * freeverb.dampening.value = 1000;
		 * //routing synth through the reverb
		 * var synth = new Tone.AMSynth().connect(freeverb);
		 */
	    Tone.Freeverb = function () {
	        var options = Tone.defaults(arguments, [
	            'roomSize',
	            'dampening'
	        ], Tone.Freeverb);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  The roomSize value between. A larger roomSize
			 *  will result in a longer decay.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);
	        /**
			 *  The amount of dampening of the reverberant signal.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.dampening = new Tone.Signal(options.dampening, Tone.Type.Frequency);
	        /**
			 *  the comb filters
			 *  @type {Array}
			 *  @private
			 */
	        this._combFilters = [];
	        /**
			 *  the allpass filters on the left
			 *  @type {Array}
			 *  @private
			 */
	        this._allpassFiltersL = [];
	        /**
			 *  the allpass filters on the right
			 *  @type {Array}
			 *  @private
			 */
	        this._allpassFiltersR = [];
	        //make the allpass filters on the right
	        for (var l = 0; l < allpassFilterFrequencies.length; l++) {
	            var allpassL = this.context.createBiquadFilter();
	            allpassL.type = 'allpass';
	            allpassL.frequency.value = allpassFilterFrequencies[l];
	            this._allpassFiltersL.push(allpassL);
	        }
	        //make the allpass filters on the left
	        for (var r = 0; r < allpassFilterFrequencies.length; r++) {
	            var allpassR = this.context.createBiquadFilter();
	            allpassR.type = 'allpass';
	            allpassR.frequency.value = allpassFilterFrequencies[r];
	            this._allpassFiltersR.push(allpassR);
	        }
	        //make the comb filters
	        for (var c = 0; c < combFilterTunings.length; c++) {
	            var lfpf = new Tone.LowpassCombFilter(combFilterTunings[c]);
	            if (c < combFilterTunings.length / 2) {
	                this.effectSendL.chain(lfpf, this._allpassFiltersL[0]);
	            } else {
	                this.effectSendR.chain(lfpf, this._allpassFiltersR[0]);
	            }
	            this.roomSize.connect(lfpf.resonance);
	            this.dampening.connect(lfpf.dampening);
	            this._combFilters.push(lfpf);
	        }
	        //chain the allpass filters togetehr
	        Tone.connectSeries.apply(Tone, this._allpassFiltersL);
	        Tone.connectSeries.apply(Tone, this._allpassFiltersR);
	        this._allpassFiltersL[this._allpassFiltersL.length - 1].connect(this.effectReturnL);
	        this._allpassFiltersR[this._allpassFiltersR.length - 1].connect(this.effectReturnR);
	        this._readOnly([
	            'roomSize',
	            'dampening'
	        ]);
	    };
	    Tone.extend(Tone.Freeverb, Tone.StereoEffect);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Freeverb.defaults = {
	        'roomSize': 0.7,
	        'dampening': 3000
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Freeverb} this
		 */
	    Tone.Freeverb.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        for (var al = 0; al < this._allpassFiltersL.length; al++) {
	            this._allpassFiltersL[al].disconnect();
	            this._allpassFiltersL[al] = null;
	        }
	        this._allpassFiltersL = null;
	        for (var ar = 0; ar < this._allpassFiltersR.length; ar++) {
	            this._allpassFiltersR[ar].disconnect();
	            this._allpassFiltersR[ar] = null;
	        }
	        this._allpassFiltersR = null;
	        for (var cf = 0; cf < this._combFilters.length; cf++) {
	            this._combFilters[cf].dispose();
	            this._combFilters[cf] = null;
	        }
	        this._combFilters = null;
	        this._writable([
	            'roomSize',
	            'dampening'
	        ]);
	        this.roomSize.dispose();
	        this.roomSize = null;
	        this.dampening.dispose();
	        this.dampening = null;
	        return this;
	    };
	    return Tone.Freeverb;
	});
	Module(function (Tone) {
	    
	    /**
		 *  an array of the comb filter delay time values
		 *  @private
		 *  @static
		 *  @type {Array}
		 */
	    var combFilterDelayTimes = [
	        1687 / 25000,
	        1601 / 25000,
	        2053 / 25000,
	        2251 / 25000
	    ];
	    /**
		 *  the resonances of each of the comb filters
		 *  @private
		 *  @static
		 *  @type {Array}
		 */
	    var combFilterResonances = [
	        0.773,
	        0.802,
	        0.753,
	        0.733
	    ];
	    /**
		 *  the allpass filter frequencies
		 *  @private
		 *  @static
		 *  @type {Array}
		 */
	    var allpassFilterFreqs = [
	        347,
	        113,
	        37
	    ];
	    /**
		 *  @class Tone.JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)
		 *         tuned by John Chowning in 1970.
		 *         It is made up of three allpass filters and four Tone.FeedbackCombFilter.
		 *
		 *
		 *  @extends {Tone.Effect}
		 *  @constructor
		 *  @param {NormalRange|Object} [roomSize] Coorelates to the decay time.
		 *  @example
		 * var reverb = new Tone.JCReverb(0.4).connect(Tone.Master);
		 * var delay = new Tone.FeedbackDelay(0.5);
		 * //connecting the synth to reverb through delay
		 * var synth = new Tone.DuoSynth().chain(delay, reverb);
		 * synth.triggerAttackRelease("A4","8n");
		 */
	    Tone.JCReverb = function () {
	        var options = Tone.defaults(arguments, ['roomSize'], Tone.JCReverb);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  room size control values between [0,1]
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.roomSize = new Tone.Signal(options.roomSize, Tone.Type.NormalRange);
	        /**
			 *  scale the room size
			 *  @type {Tone.Scale}
			 *  @private
			 */
	        this._scaleRoomSize = new Tone.Scale(-0.733, 0.197);
	        /**
			 *  a series of allpass filters
			 *  @type {Array}
			 *  @private
			 */
	        this._allpassFilters = [];
	        /**
			 *  parallel feedback comb filters
			 *  @type {Array}
			 *  @private
			 */
	        this._feedbackCombFilters = [];
	        //make the allpass filters
	        for (var af = 0; af < allpassFilterFreqs.length; af++) {
	            var allpass = this.context.createBiquadFilter();
	            allpass.type = 'allpass';
	            allpass.frequency.value = allpassFilterFreqs[af];
	            this._allpassFilters.push(allpass);
	        }
	        //and the comb filters
	        for (var cf = 0; cf < combFilterDelayTimes.length; cf++) {
	            var fbcf = new Tone.FeedbackCombFilter(combFilterDelayTimes[cf], 0.1);
	            this._scaleRoomSize.connect(fbcf.resonance);
	            fbcf.resonance.value = combFilterResonances[cf];
	            this._allpassFilters[this._allpassFilters.length - 1].connect(fbcf);
	            if (cf < combFilterDelayTimes.length / 2) {
	                fbcf.connect(this.effectReturnL);
	            } else {
	                fbcf.connect(this.effectReturnR);
	            }
	            this._feedbackCombFilters.push(fbcf);
	        }
	        //chain the allpass filters together
	        this.roomSize.connect(this._scaleRoomSize);
	        Tone.connectSeries.apply(Tone, this._allpassFilters);
	        this.effectSendL.connect(this._allpassFilters[0]);
	        this.effectSendR.connect(this._allpassFilters[0]);
	        this._readOnly(['roomSize']);
	    };
	    Tone.extend(Tone.JCReverb, Tone.StereoEffect);
	    /**
		 *  the default values
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.JCReverb.defaults = { 'roomSize': 0.5 };
	    /**
		 *  Clean up.
		 *  @returns {Tone.JCReverb} this
		 */
	    Tone.JCReverb.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        for (var apf = 0; apf < this._allpassFilters.length; apf++) {
	            this._allpassFilters[apf].disconnect();
	            this._allpassFilters[apf] = null;
	        }
	        this._allpassFilters = null;
	        for (var fbcf = 0; fbcf < this._feedbackCombFilters.length; fbcf++) {
	            this._feedbackCombFilters[fbcf].dispose();
	            this._feedbackCombFilters[fbcf] = null;
	        }
	        this._feedbackCombFilters = null;
	        this._writable(['roomSize']);
	        this.roomSize.dispose();
	        this.roomSize = null;
	        this._scaleRoomSize.dispose();
	        this._scaleRoomSize = null;
	        return this;
	    };
	    return Tone.JCReverb;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Mid/Side processing separates the the 'mid' signal
		 *         (which comes out of both the left and the right channel)
		 *         and the 'side' (which only comes out of the the side channels)
		 *         and effects them separately before being recombined.
		 *         Applies a Mid/Side seperation and recombination.
		 *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
		 *         <br><br>
		 *         This is a base-class for Mid/Side Effects.
		 *
		 *  @extends {Tone.Effect}
		 *  @constructor
		 */
	    Tone.MidSideEffect = function () {
	        Tone.Effect.apply(this, arguments);
	        /**
			 *  The mid/side split
			 *  @type  {Tone.MidSideSplit}
			 *  @private
			 */
	        this._midSideSplit = new Tone.MidSideSplit();
	        /**
			 *  The mid/side merge
			 *  @type  {Tone.MidSideMerge}
			 *  @private
			 */
	        this._midSideMerge = new Tone.MidSideMerge();
	        /**
			 *  The mid send. Connect to mid processing
			 *  @type {Tone}
			 *  @private
			 */
	        this.midSend = this._midSideSplit.mid;
	        /**
			 *  The side send. Connect to side processing
			 *  @type {Tone}
			 *  @private
			 */
	        this.sideSend = this._midSideSplit.side;
	        /**
			 *  The mid return connection
			 *  @type {GainNode}
			 *  @private
			 */
	        this.midReturn = this._midSideMerge.mid;
	        /**
			 *  The side return connection
			 *  @type {GainNode}
			 *  @private
			 */
	        this.sideReturn = this._midSideMerge.side;
	        //the connections
	        this.effectSend.connect(this._midSideSplit);
	        this._midSideMerge.connect(this.effectReturn);
	    };
	    Tone.extend(Tone.MidSideEffect, Tone.Effect);
	    /**
		 *  Clean up.
		 *  @returns {Tone.MidSideEffect} this
		 */
	    Tone.MidSideEffect.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._midSideSplit.dispose();
	        this._midSideSplit = null;
	        this._midSideMerge.dispose();
	        this._midSideMerge = null;
	        this.midSend = null;
	        this.sideSend = null;
	        this.midReturn = null;
	        this.sideReturn = null;
	        return this;
	    };
	    return Tone.MidSideEffect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Phaser is a phaser effect. Phasers work by changing the phase
		 *         of different frequency components of an incoming signal. Read more on
		 *         [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).
		 *         Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).
		 *
		 *	@extends {Tone.StereoEffect}
		 *	@constructor
		 *	@param {Frequency|Object} [frequency] The speed of the phasing.
		 *	@param {number} [octaves] The octaves of the effect.
		 *	@param {Frequency} [baseFrequency] The base frequency of the filters.
		 *	@example
		 * var phaser = new Tone.Phaser({
		 * 	"frequency" : 15,
		 * 	"octaves" : 5,
		 * 	"baseFrequency" : 1000
		 * }).toMaster();
		 * var synth = new Tone.FMSynth().connect(phaser);
		 * synth.triggerAttackRelease("E3", "2n");
		 */
	    Tone.Phaser = function () {
	        //set the defaults
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'octaves',
	            'baseFrequency'
	        ], Tone.Phaser);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  the lfo which controls the frequency on the left side
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfoL = new Tone.LFO(options.frequency, 0, 1);
	        /**
			 *  the lfo which controls the frequency on the right side
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfoR = new Tone.LFO(options.frequency, 0, 1);
	        this._lfoR.phase = 180;
	        /**
			 *  the base modulation frequency
			 *  @type {number}
			 *  @private
			 */
	        this._baseFrequency = options.baseFrequency;
	        /**
			 *  the octaves of the phasing
			 *  @type {number}
			 *  @private
			 */
	        this._octaves = options.octaves;
	        /**
			 *  The quality factor of the filters
			 *  @type {Positive}
			 *  @signal
			 */
	        this.Q = new Tone.Signal(options.Q, Tone.Type.Positive);
	        /**
			 *  the array of filters for the left side
			 *  @type {Array}
			 *  @private
			 */
	        this._filtersL = this._makeFilters(options.stages, this._lfoL, this.Q);
	        /**
			 *  the array of filters for the left side
			 *  @type {Array}
			 *  @private
			 */
	        this._filtersR = this._makeFilters(options.stages, this._lfoR, this.Q);
	        /**
			 * the frequency of the effect
			 * @type {Tone.Signal}
			 */
	        this.frequency = this._lfoL.frequency;
	        this.frequency.value = options.frequency;
	        //connect them up
	        this.effectSendL.connect(this._filtersL[0]);
	        this.effectSendR.connect(this._filtersR[0]);
	        this._filtersL[options.stages - 1].connect(this.effectReturnL);
	        this._filtersR[options.stages - 1].connect(this.effectReturnR);
	        //control the frequency with one LFO
	        this._lfoL.frequency.connect(this._lfoR.frequency);
	        //set the options
	        this.baseFrequency = options.baseFrequency;
	        this.octaves = options.octaves;
	        //start the lfo
	        this._lfoL.start();
	        this._lfoR.start();
	        this._readOnly([
	            'frequency',
	            'Q'
	        ]);
	    };
	    Tone.extend(Tone.Phaser, Tone.StereoEffect);
	    /**
		 *  defaults
		 *  @static
		 *  @type {object}
		 */
	    Tone.Phaser.defaults = {
	        'frequency': 0.5,
	        'octaves': 3,
	        'stages': 10,
	        'Q': 10,
	        'baseFrequency': 350
	    };
	    /**
		 *  @param {number} stages
		 *  @returns {Array} the number of filters all connected together
		 *  @private
		 */
	    Tone.Phaser.prototype._makeFilters = function (stages, connectToFreq, Q) {
	        var filters = new Array(stages);
	        //make all the filters
	        for (var i = 0; i < stages; i++) {
	            var filter = this.context.createBiquadFilter();
	            filter.type = 'allpass';
	            Q.connect(filter.Q);
	            connectToFreq.connect(filter.frequency);
	            filters[i] = filter;
	        }
	        Tone.connectSeries.apply(Tone, filters);
	        return filters;
	    };
	    /**
		 * The number of octaves the phase goes above
		 * the baseFrequency
		 * @memberOf Tone.Phaser#
		 * @type {Positive}
		 * @name octaves
		 */
	    Object.defineProperty(Tone.Phaser.prototype, 'octaves', {
	        get: function () {
	            return this._octaves;
	        },
	        set: function (octaves) {
	            this._octaves = octaves;
	            var max = this._baseFrequency * Math.pow(2, octaves);
	            this._lfoL.max = max;
	            this._lfoR.max = max;
	        }
	    });
	    /**
		 * The the base frequency of the filters.
		 * @memberOf Tone.Phaser#
		 * @type {number}
		 * @name baseFrequency
		 */
	    Object.defineProperty(Tone.Phaser.prototype, 'baseFrequency', {
	        get: function () {
	            return this._baseFrequency;
	        },
	        set: function (freq) {
	            this._baseFrequency = freq;
	            this._lfoL.min = freq;
	            this._lfoR.min = freq;
	            this.octaves = this._octaves;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.Phaser} this
		 */
	    Tone.Phaser.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'Q'
	        ]);
	        this.Q.dispose();
	        this.Q = null;
	        this._lfoL.dispose();
	        this._lfoL = null;
	        this._lfoR.dispose();
	        this._lfoR = null;
	        for (var i = 0; i < this._filtersL.length; i++) {
	            this._filtersL[i].disconnect();
	            this._filtersL[i] = null;
	        }
	        this._filtersL = null;
	        for (var j = 0; j < this._filtersR.length; j++) {
	            this._filtersR[j].disconnect();
	            this._filtersR[j] = null;
	        }
	        this._filtersR = null;
	        this.frequency = null;
	        return this;
	    };
	    return Tone.Phaser;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Just like a stereo feedback effect, but the feedback is routed from left to right
		 *         and right to left instead of on the same channel.
		 *
		 *	@constructor
		 *	@extends {Tone.StereoEffect}
		 */
	    Tone.StereoXFeedbackEffect = function () {
	        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  The amount of feedback from the output
			 *  back into the input of the effect (routed
			 *  across left and right channels).
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);
	        /**
			 *  the left side feeback
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedbackLR = new Tone.Gain();
	        /**
			 *  the right side feeback
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedbackRL = new Tone.Gain();
	        //connect it up
	        this.effectReturnL.chain(this._feedbackLR, this.effectSendR);
	        this.effectReturnR.chain(this._feedbackRL, this.effectSendL);
	        this.feedback.fan(this._feedbackLR.gain, this._feedbackRL.gain);
	        this._readOnly(['feedback']);
	    };
	    Tone.extend(Tone.StereoXFeedbackEffect, Tone.StereoEffect);
	    /**
		 *  clean up
		 *  @returns {Tone.StereoXFeedbackEffect} this
		 */
	    Tone.StereoXFeedbackEffect.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        this._writable(['feedback']);
	        this.feedback.dispose();
	        this.feedback = null;
	        this._feedbackLR.dispose();
	        this._feedbackLR = null;
	        this._feedbackRL.dispose();
	        this._feedbackRL = null;
	        return this;
	    };
	    return Tone.StereoXFeedbackEffect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.PingPongDelay is a feedback delay effect where the echo is heard
		 *          first in one channel and next in the opposite channel. In a stereo
		 *          system these are the right and left channels.
		 *          PingPongDelay in more simplified terms is two Tone.FeedbackDelays
		 *          with independent delay values. Each delay is routed to one channel
		 *          (left or right), and the channel triggered second will always
		 *          trigger at the same interval after the first.
		 *
		 * 	@constructor
		 * 	@extends {Tone.StereoXFeedbackEffect}
		 *  @param {Time|Object} [delayTime] The delayTime between consecutive echos.
		 *  @param {NormalRange=} feedback The amount of the effected signal which
		 *                                 is fed back through the delay.
		 *  @example
		 * var pingPong = new Tone.PingPongDelay("4n", 0.2).toMaster();
		 * var drum = new Tone.DrumSynth().connect(pingPong);
		 * drum.triggerAttackRelease("C4", "32n");
		 */
	    Tone.PingPongDelay = function () {
	        var options = Tone.defaults(arguments, [
	            'delayTime',
	            'feedback'
	        ], Tone.PingPongDelay);
	        Tone.StereoXFeedbackEffect.call(this, options);
	        /**
			 *  the delay node on the left side
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._leftDelay = new Tone.Delay(0, options.maxDelayTime);
	        /**
			 *  the delay node on the right side
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._rightDelay = new Tone.Delay(0, options.maxDelayTime);
	        /**
			 *  the predelay on the right side
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._rightPreDelay = new Tone.Delay(0, options.maxDelayTime);
	        /**
			 *  the delay time signal
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = new Tone.Signal(options.delayTime, Tone.Type.Time);
	        //connect it up
	        this.effectSendL.chain(this._leftDelay, this.effectReturnL);
	        this.effectSendR.chain(this._rightPreDelay, this._rightDelay, this.effectReturnR);
	        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);
	        //rearranged the feedback to be after the rightPreDelay
	        this._feedbackLR.disconnect();
	        this._feedbackLR.connect(this._rightDelay);
	        this._readOnly(['delayTime']);
	    };
	    Tone.extend(Tone.PingPongDelay, Tone.StereoXFeedbackEffect);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.PingPongDelay.defaults = {
	        'delayTime': 0.25,
	        'maxDelayTime': 1
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.PingPongDelay} this
		 */
	    Tone.PingPongDelay.prototype.dispose = function () {
	        Tone.StereoXFeedbackEffect.prototype.dispose.call(this);
	        this._leftDelay.dispose();
	        this._leftDelay = null;
	        this._rightDelay.dispose();
	        this._rightDelay = null;
	        this._rightPreDelay.dispose();
	        this._rightPreDelay = null;
	        this._writable(['delayTime']);
	        this.delayTime.dispose();
	        this.delayTime = null;
	        return this;
	    };
	    return Tone.PingPongDelay;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.PitchShift does near-realtime pitch shifting to the incoming signal.
		 *         The effect is achieved by speeding up or slowing down the delayTime
		 *         of a DelayNode using a sawtooth wave.
		 *         Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
		 *         Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
		 *
		 *  @extends {Tone.FeedbackEffect}
		 *  @param {Interval=} pitch The interval to transpose the incoming signal by.
		 */
	    Tone.PitchShift = function () {
	        var options = Tone.defaults(arguments, ['pitch'], Tone.PitchShift);
	        Tone.FeedbackEffect.call(this, options);
	        /**
			 *  The pitch signal
			 *  @type  {Tone.Signal}
			 *  @private
			 */
	        this._frequency = new Tone.Signal(0);
	        /**
			 *  Uses two DelayNodes to cover up the jump in
			 *  the sawtooth wave.
			 *  @type  {DelayNode}
			 *  @private
			 */
	        this._delayA = new Tone.Delay(0, 1);
	        /**
			 *  The first LFO.
			 *  @type  {Tone.LFO}
			 *  @private
			 */
	        this._lfoA = new Tone.LFO({
	            'min': 0,
	            'max': 0.1,
	            'type': 'sawtooth'
	        }).connect(this._delayA.delayTime);
	        /**
			 *  The second DelayNode
			 *  @type  {DelayNode}
			 *  @private
			 */
	        this._delayB = new Tone.Delay(0, 1);
	        /**
			 *  The first LFO.
			 *  @type  {Tone.LFO}
			 *  @private
			 */
	        this._lfoB = new Tone.LFO({
	            'min': 0,
	            'max': 0.1,
	            'type': 'sawtooth',
	            'phase': 180
	        }).connect(this._delayB.delayTime);
	        /**
			 *  Crossfade quickly between the two delay lines
			 *  to cover up the jump in the sawtooth wave
			 *  @type  {Tone.CrossFade}
			 *  @private
			 */
	        this._crossFade = new Tone.CrossFade();
	        /**
			 *  LFO which alternates between the two
			 *  delay lines to cover up the disparity in the
			 *  sawtooth wave.
			 *  @type  {Tone.LFO}
			 *  @private
			 */
	        this._crossFadeLFO = new Tone.LFO({
	            'min': 0,
	            'max': 1,
	            'type': 'triangle',
	            'phase': 90
	        }).connect(this._crossFade.fade);
	        /**
			 *  The delay node
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._feedbackDelay = new Tone.Delay(options.delayTime);
	        /**
			 *  The amount of delay on the input signal
			 *  @type {Time}
			 *  @signal
			 */
	        this.delayTime = this._feedbackDelay.delayTime;
	        this._readOnly('delayTime');
	        /**
			 *  Hold the current pitch
			 *  @type {Number}
			 *  @private
			 */
	        this._pitch = options.pitch;
	        /**
			 *  Hold the current windowSize
			 *  @type {Number}
			 *  @private
			 */
	        this._windowSize = options.windowSize;
	        //connect the two delay lines up
	        this._delayA.connect(this._crossFade.a);
	        this._delayB.connect(this._crossFade.b);
	        //connect the frequency
	        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);
	        //route the input
	        this.effectSend.fan(this._delayA, this._delayB);
	        this._crossFade.chain(this._feedbackDelay, this.effectReturn);
	        //start the LFOs at the same time
	        var now = this.now();
	        this._lfoA.start(now);
	        this._lfoB.start(now);
	        this._crossFadeLFO.start(now);
	        //set the initial value
	        this.windowSize = this._windowSize;
	    };
	    Tone.extend(Tone.PitchShift, Tone.FeedbackEffect);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.PitchShift.defaults = {
	        'pitch': 0,
	        'windowSize': 0.1,
	        'delayTime': 0,
	        'feedback': 0
	    };
	    /**
		 * Repitch the incoming signal by some interval (measured
		 * in semi-tones).
		 * @memberOf Tone.PitchShift#
		 * @type {Interval}
		 * @name pitch
		 * @example
		 * pitchShift.pitch = -12; //down one octave
		 * pitchShift.pitch = 7; //up a fifth
		 */
	    Object.defineProperty(Tone.PitchShift.prototype, 'pitch', {
	        get: function () {
	            return this._pitch;
	        },
	        set: function (interval) {
	            this._pitch = interval;
	            var factor = 0;
	            if (interval < 0) {
	                this._lfoA.min = 0;
	                this._lfoA.max = this._windowSize;
	                this._lfoB.min = 0;
	                this._lfoB.max = this._windowSize;
	                factor = Tone.intervalToFrequencyRatio(interval - 1) + 1;
	            } else {
	                this._lfoA.min = this._windowSize;
	                this._lfoA.max = 0;
	                this._lfoB.min = this._windowSize;
	                this._lfoB.max = 0;
	                factor = Tone.intervalToFrequencyRatio(interval) - 1;
	            }
	            this._frequency.value = factor * (1.2 / this._windowSize);
	        }
	    });
	    /**
		 * The window size corresponds roughly to the sample length in a looping sampler.
		 * Smaller values are desirable for a less noticeable delay time of the pitch shifted
		 * signal, but larger values will result in smoother pitch shifting for larger intervals.
		 * A nominal range of 0.03 to 0.1 is recommended.
		 * @memberOf Tone.PitchShift#
		 * @type {Time}
		 * @name windowSize
		 * @example
		 * pitchShift.windowSize = 0.1;
		 */
	    Object.defineProperty(Tone.PitchShift.prototype, 'windowSize', {
	        get: function () {
	            return this._windowSize;
	        },
	        set: function (size) {
	            this._windowSize = this.toSeconds(size);
	            this.pitch = this._pitch;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.PitchShift}  this
		 */
	    Tone.PitchShift.prototype.dispose = function () {
	        Tone.FeedbackEffect.prototype.dispose.call(this);
	        this._frequency.dispose();
	        this._frequency = null;
	        this._delayA.disconnect();
	        this._delayA = null;
	        this._delayB.disconnect();
	        this._delayB = null;
	        this._lfoA.dispose();
	        this._lfoA = null;
	        this._lfoB.dispose();
	        this._lfoB = null;
	        this._crossFade.dispose();
	        this._crossFade = null;
	        this._crossFadeLFO.dispose();
	        this._crossFadeLFO = null;
	        this._writable('delayTime');
	        this._feedbackDelay.dispose();
	        this._feedbackDelay = null;
	        this.delayTime = null;
	        return this;
	    };
	    return Tone.PitchShift;
	});
	Module(function (Tone) {
	    /**
		 *  @class Wrapper around the native BufferSourceNode.
		 *  @extends {Tone.AudioNode}
		 *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play
		 *  @param  {Function}  onload  The callback to invoke when the
		 *                               buffer is done playing.
		 */
	    Tone.BufferSource = function () {
	        var options = Tone.defaults(arguments, [
	            'buffer',
	            'onload'
	        ], Tone.BufferSource);
	        Tone.AudioNode.call(this, options);
	        /**
			 *  The callback to invoke after the
			 *  buffer source is done playing.
			 *  @type  {Function}
			 */
	        this.onended = options.onended;
	        /**
			 *  The time that the buffer was started.
			 *  @type  {Number}
			 *  @private
			 */
	        this._startTime = -1;
	        /**
			 *  An additional flag if the actual BufferSourceNode
			 *  has been started. b/c stopping an unstarted buffer
			 *  will throw it into an invalid state
			 *  @type  {Boolean}
			 *  @private
			 */
	        this._sourceStarted = false;
	        /**
			 *  Flag if the source has already been stopped
			 *  @type  {Boolean}
			 *  @private
			 */
	        this._sourceStopped = false;
	        /**
			 *  The time that the buffer is scheduled to stop.
			 *  @type  {Number}
			 *  @private
			 */
	        this._stopTime = -1;
	        /**
			 *  The gain node which envelopes the BufferSource
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._gainNode = this.output = new Tone.Gain();
	        /**
			 *  The buffer source
			 *  @type  {AudioBufferSourceNode}
			 *  @private
			 */
	        this._source = this.context.createBufferSource();
	        this._source.connect(this._gainNode);
	        this._source.onended = this._onended.bind(this);
	        /**
			 * The private buffer instance
			 * @type {Tone.Buffer}
			 * @private
			 */
	        this._buffer = new Tone.Buffer(options.buffer, options.onload);
	        /**
			 *  The playbackRate of the buffer
			 *  @type {Positive}
			 *  @signal
			 */
	        this.playbackRate = new Tone.Param(this._source.playbackRate, Tone.Type.Positive);
	        /**
			 *  The fadeIn time of the amplitude envelope.
			 *  @type {Time}
			 */
	        this.fadeIn = options.fadeIn;
	        /**
			 *  The fadeOut time of the amplitude envelope.
			 *  @type {Time}
			 */
	        this.fadeOut = options.fadeOut;
	        /**
			 * The curve applied to the fades, either "linear" or "exponential"
			 * @type {String}
			 */
	        this.curve = options.curve;
	        /**
			 *  The value that the buffer ramps to
			 *  @type {Gain}
			 *  @private
			 */
	        this._gain = 1;
	        /**
			 * The onended timeout
			 * @type {Number}
			 * @private
			 */
	        this._onendedTimeout = -1;
	        //set some values initially
	        this.loop = options.loop;
	        this.loopStart = options.loopStart;
	        this.loopEnd = options.loopEnd;
	        this.playbackRate.value = options.playbackRate;
	    };
	    Tone.extend(Tone.BufferSource, Tone.AudioNode);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.BufferSource.defaults = {
	        'onended': Tone.noOp,
	        'onload': Tone.noOp,
	        'loop': false,
	        'loopStart': 0,
	        'loopEnd': 0,
	        'fadeIn': 0,
	        'fadeOut': 0,
	        'curve': 'linear',
	        'playbackRate': 1
	    };
	    /**
		 *  Returns the playback state of the source, either "started" or "stopped".
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.BufferSource#
		 *  @name state
		 */
	    Object.defineProperty(Tone.BufferSource.prototype, 'state', {
	        get: function () {
	            return this.getStateAtTime(this.now());
	        }
	    });
	    /**
		 *  Get the playback state at the given time
		 *  @param  {Time}  time  The time to test the state at
		 *  @return  {Tone.State}  The playback state. 
		 */
	    Tone.BufferSource.prototype.getStateAtTime = function (time) {
	        time = this.toSeconds(time);
	        if (this._startTime !== -1 && time >= this._startTime && !this._sourceStopped) {
	            return Tone.State.Started;
	        } else {
	            return Tone.State.Stopped;
	        }
	    };
	    /**
		 *  Start the buffer
		 *  @param  {Time} [startTime=now] When the player should start.
		 *  @param  {Time} [offset=0] The offset from the beginning of the sample
		 *                                 to start at.
		 *  @param  {Time=} duration How long the sample should play. If no duration
		 *                                is given, it will default to the full length
		 *                                of the sample (minus any offset)
		 *  @param  {Gain}  [gain=1]  The gain to play the buffer back at.
		 *  @param  {Time=}  fadeInTime  The optional fadeIn ramp time.
		 *  @return  {Tone.BufferSource}  this
		 */
	    Tone.BufferSource.prototype.start = function (time, offset, duration, gain, fadeInTime) {
	        if (this._startTime !== -1) {
	            throw new Error('Tone.BufferSource can only be started once.');
	        }
	        if (!this.buffer.loaded) {
	            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');
	        }
	        time = this.toSeconds(time);
	        //if it's a loop the default offset is the loopstart point
	        if (this.loop) {
	            offset = Tone.defaultArg(offset, this.loopStart);
	        } else {
	            //otherwise the default offset is 0
	            offset = Tone.defaultArg(offset, 0);
	        }
	        offset = this.toSeconds(offset);
	        gain = Tone.defaultArg(gain, 1);
	        this._gain = gain;
	        fadeInTime = this.toSeconds(Tone.defaultArg(fadeInTime, this.fadeIn));
	        this.fadeIn = fadeInTime;
	        if (fadeInTime > 0) {
	            this._gainNode.gain.setValueAtTime(0, time);
	            if (this.curve === 'linear') {
	                this._gainNode.gain.linearRampToValueAtTime(this._gain, time + fadeInTime);
	            } else {
	                this._gainNode.gain.exponentialApproachValueAtTime(this._gain, time, fadeInTime);
	            }
	        } else {
	            this._gainNode.gain.setValueAtTime(gain, time);
	        }
	        this._startTime = time;
	        var computedDur = this.toSeconds(Tone.defaultArg(duration, this.buffer.duration - offset % this.buffer.duration));
	        computedDur = Math.max(computedDur, 0);
	        if (Tone.isDefined(duration)) {
	            //clip the duration when not looping
	            if (!this.loop) {
	                computedDur = Math.min(computedDur, this.buffer.duration - offset % this.buffer.duration);
	            }
	            this.stop(time + computedDur, this.fadeOut);
	        }
	        //start the buffer source
	        if (this.loop) {
	            //modify the offset if it's greater than the loop time
	            var loopEnd = this.loopEnd || this.buffer.duration;
	            var loopStart = this.loopStart;
	            var loopDuration = loopEnd - loopStart;
	            //move the offset back
	            if (offset >= loopEnd) {
	                offset = (offset - loopStart) % loopDuration + loopStart;
	            }
	        }
	        this._source.buffer = this.buffer.get();
	        this._source.loopEnd = this.loopEnd || this.buffer.duration;
	        if (offset < this.buffer.duration) {
	            this._sourceStarted = true;
	            this._source.start(time, offset);
	        }
	        return this;
	    };
	    /**
		 *  Stop the buffer. Optionally add a ramp time to fade the
		 *  buffer out.
		 *  @param  {Time=}  time         The time the buffer should stop.
		 *  @param  {Time=}  fadeOutTime  How long the gain should fade out for
		 *  @return  {Tone.BufferSource}  this
		 */
	    Tone.BufferSource.prototype.stop = function (time, fadeOutTime) {
	        if (!this.buffer.loaded) {
	            throw new Error('Tone.BufferSource: buffer is either not set or not loaded.');
	        }
	        if (this._sourceStopped) {
	            return;
	        }
	        time = this.toSeconds(time);
	        //if the event has already been scheduled, clear it
	        if (this._stopTime !== -1) {
	            this.cancelStop();
	        }
	        //stop if it's schedule before the start time
	        if (time <= this._startTime) {
	            this._gainNode.gain.cancelScheduledValues(time);
	            this._gainNode.gain.value = 0;
	            return this;
	        }
	        time = Math.max(this._startTime + this.fadeIn + this.sampleTime, time);
	        //cancel the previous curve
	        this._gainNode.gain.cancelScheduledValues(time);
	        this._stopTime = time;
	        //the fadeOut time
	        fadeOutTime = this.toSeconds(Tone.defaultArg(fadeOutTime, this.fadeOut));
	        var heldDuration = time - this._startTime - this.fadeIn - this.sampleTime;
	        if (!this.loop) {
	            //make sure the fade does not go beyond the length of the buffer
	            heldDuration = Math.min(heldDuration, this.buffer.duration);
	        }
	        fadeOutTime = Math.min(heldDuration, fadeOutTime);
	        var startFade = time - fadeOutTime;
	        if (fadeOutTime > this.sampleTime) {
	            this._gainNode.gain.setValueAtTime(this._gain, startFade);
	            if (this.curve === 'linear') {
	                this._gainNode.gain.linearRampToValueAtTime(0, time);
	            } else {
	                this._gainNode.gain.exponentialApproachValueAtTime(0, startFade, fadeOutTime);
	            }
	        } else {
	            this._gainNode.gain.setValueAtTime(0, time);
	        }
	        Tone.context.clearTimeout(this._onendedTimeout);
	        this._onendedTimeout = Tone.context.setTimeout(this._onended.bind(this), this._stopTime - this.now());
	        return this;
	    };
	    /**
		 *  Cancel a scheduled stop event
		 *  @return  {Tone.BufferSource}  this
		 */
	    Tone.BufferSource.prototype.cancelStop = function () {
	        if (this._startTime !== -1 && !this._sourceStopped) {
	            //cancel the stop envelope
	            var fadeInTime = this.toSeconds(this.fadeIn);
	            this._gainNode.gain.cancelScheduledValues(this._startTime + fadeInTime + this.sampleTime);
	            this._gainNode.gain.setValueAtTime(1, Math.max(this.now(), this._startTime + fadeInTime + this.sampleTime));
	            this.context.clearTimeout(this._onendedTimeout);
	            this._stopTime = -1;
	        }
	        return this;
	    };
	    /**
		 *  Internal callback when the buffer is ended.
		 *  Invokes `onended` and disposes the node.
		 *  @private
		 */
	    Tone.BufferSource.prototype._onended = function () {
	        if (!this._sourceStopped) {
	            this._sourceStopped = true;
	            //allow additional time for the exponential curve to fully decay
	            var additionalTail = this.curve === 'exponential' ? this.fadeOut * 2 : 0;
	            if (this._sourceStarted && this._stopTime !== -1) {
	                this._source.stop(this._stopTime + additionalTail);
	            }
	            this.onended(this);
	        }
	    };
	    /**
		 * If loop is true, the loop will start at this position.
		 * @memberOf Tone.BufferSource#
		 * @type {Time}
		 * @name loopStart
		 */
	    Object.defineProperty(Tone.BufferSource.prototype, 'loopStart', {
	        get: function () {
	            return this._source.loopStart;
	        },
	        set: function (loopStart) {
	            this._source.loopStart = this.toSeconds(loopStart);
	        }
	    });
	    /**
		 * If loop is true, the loop will end at this position.
		 * @memberOf Tone.BufferSource#
		 * @type {Time}
		 * @name loopEnd
		 */
	    Object.defineProperty(Tone.BufferSource.prototype, 'loopEnd', {
	        get: function () {
	            return this._source.loopEnd;
	        },
	        set: function (loopEnd) {
	            this._source.loopEnd = this.toSeconds(loopEnd);
	        }
	    });
	    /**
		 * The audio buffer belonging to the player.
		 * @memberOf Tone.BufferSource#
		 * @type {Tone.Buffer}
		 * @name buffer
		 */
	    Object.defineProperty(Tone.BufferSource.prototype, 'buffer', {
	        get: function () {
	            return this._buffer;
	        },
	        set: function (buffer) {
	            this._buffer.set(buffer);
	        }
	    });
	    /**
		 * If the buffer should loop once it's over.
		 * @memberOf Tone.BufferSource#
		 * @type {Boolean}
		 * @name loop
		 */
	    Object.defineProperty(Tone.BufferSource.prototype, 'loop', {
	        get: function () {
	            return this._source.loop;
	        },
	        set: function (loop) {
	            this._source.loop = loop;
	            this.cancelStop();
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return  {Tone.BufferSource}  this
		 */
	    Tone.BufferSource.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.onended = null;
	        this._source.onended = null;
	        this._source.disconnect();
	        this._source = null;
	        this._gainNode.dispose();
	        this._gainNode = null;
	        this._buffer.dispose();
	        this._buffer = null;
	        this._startTime = -1;
	        this.playbackRate = null;
	        Tone.context.clearTimeout(this._onendedTimeout);
	        return this;
	    };
	    return Tone.BufferSource;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Noise is a noise generator. It uses looped noise buffers to save on performance.
		 *          Tone.Noise supports the noise types: "pink", "white", and "brown". Read more about
		 *          colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
		 *
		 *  @constructor
		 *  @extends {Tone.Source}
		 *  @param {string} type the noise type (white|pink|brown)
		 *  @example
		 * //initialize the noise and start
		 * var noise = new Tone.Noise("pink").start();
		 *
		 * //make an autofilter to shape the noise
		 * var autoFilter = new Tone.AutoFilter({
		 * 	"frequency" : "8m",
		 * 	"min" : 800,
		 * 	"max" : 15000
		 * }).connect(Tone.Master);
		 *
		 * //connect the noise
		 * noise.connect(autoFilter);
		 * //start the autofilter LFO
		 * autoFilter.start()
		 */
	    Tone.Noise = function () {
	        var options = Tone.defaults(arguments, ['type'], Tone.Noise);
	        Tone.Source.call(this, options);
	        /**
			 *  @private
			 *  @type {AudioBufferSourceNode}
			 */
	        this._source = null;
	        /**
			 *  the buffer
			 *  @private
			 *  @type {AudioBuffer}
			 */
	        this._type = options.type;
	        /**
			 *  The playback rate of the noise. Affects
			 *  the "frequency" of the noise.
			 *  @type {Positive}
			 *  @signal
			 */
	        this._playbackRate = options.playbackRate;
	    };
	    Tone.extend(Tone.Noise, Tone.Source);
	    /**
		 *  the default parameters
		 *
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Noise.defaults = {
	        'type': 'white',
	        'playbackRate': 1
	    };
	    /**
		 * The type of the noise. Can be "white", "brown", or "pink".
		 * @memberOf Tone.Noise#
		 * @type {string}
		 * @name type
		 * @example
		 * noise.type = "white";
		 */
	    Object.defineProperty(Tone.Noise.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            if (this._type !== type) {
	                if (type in _noiseBuffers) {
	                    this._type = type;
	                    //if it's playing, stop and restart it
	                    if (this.state === Tone.State.Started) {
	                        var now = this.now();
	                        this._stop(now);
	                        this._start(now);
	                    }
	                } else {
	                    throw new TypeError('Tone.Noise: invalid type: ' + type);
	                }
	            }
	        }
	    });
	    /**
		 *  The playback rate of the noise. Affects
		 *  the "frequency" of the noise.
		 *  @type {Positive}
		 *  @signal
		 */
	    Object.defineProperty(Tone.Noise.prototype, 'playbackRate', {
	        get: function () {
	            return this._playbackRate;
	        },
	        set: function (rate) {
	            this._playbackRate = rate;
	            if (this._source) {
	                this._source.playbackRate.value = rate;
	            }
	        }
	    });
	    /**
		 *  internal start method
		 *
		 *  @param {Time} time
		 *  @private
		 */
	    Tone.Noise.prototype._start = function (time) {
	        var buffer = _noiseBuffers[this._type];
	        this._source = new Tone.BufferSource(buffer).connect(this.output);
	        this._source.loop = true;
	        this._source.playbackRate.value = this._playbackRate;
	        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));
	    };
	    /**
		 *  internal stop method
		 *
		 *  @param {Time} time
		 *  @private
		 */
	    Tone.Noise.prototype._stop = function (time) {
	        if (this._source) {
	            this._source.stop(this.toSeconds(time));
	            this._source = null;
	        }
	    };
	    /**
		 * Restarts the noise.
		 * @param  {[type]} time [description]
		 * @return {[type]}      [description]
		 */
	    Tone.Noise.prototype.restart = function (time) {
	        //TODO could be optimized by cancelling the buffer source 'stop'
	        //stop and restart
	        this._stop(time);
	        this._start(time);
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.Noise} this
		 */
	    Tone.Noise.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        if (this._source !== null) {
	            this._source.disconnect();
	            this._source = null;
	        }
	        this._buffer = null;
	        return this;
	    };
	    ///////////////////////////////////////////////////////////////////////////
	    // THE BUFFERS
	    ///////////////////////////////////////////////////////////////////////////
	    //Noise buffer stats
	    var bufferLength = 44100 * 5;
	    var channels = 2;
	    /**
		 *	The noise arrays. Generated on initialization.
		 *  borrowed heavily from https://github.com/zacharydenton/noise.js
		 *  (c) 2013 Zach Denton (MIT)
		 *  @static
		 *  @private
		 *  @type {Array}
		 */
	    var _noiseArrays = {
	        'pink': function () {
	            var buffer = [];
	            for (var channelNum = 0; channelNum < channels; channelNum++) {
	                var channel = new Float32Array(bufferLength);
	                buffer[channelNum] = channel;
	                var b0, b1, b2, b3, b4, b5, b6;
	                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0;
	                for (var i = 0; i < bufferLength; i++) {
	                    var white = Math.random() * 2 - 1;
	                    b0 = 0.99886 * b0 + white * 0.0555179;
	                    b1 = 0.99332 * b1 + white * 0.0750759;
	                    b2 = 0.969 * b2 + white * 0.153852;
	                    b3 = 0.8665 * b3 + white * 0.3104856;
	                    b4 = 0.55 * b4 + white * 0.5329522;
	                    b5 = -0.7616 * b5 - white * 0.016898;
	                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
	                    channel[i] *= 0.11;
	                    // (roughly) compensate for gain
	                    b6 = white * 0.115926;
	                }
	            }
	            return buffer;
	        }(),
	        'brown': function () {
	            var buffer = [];
	            for (var channelNum = 0; channelNum < channels; channelNum++) {
	                var channel = new Float32Array(bufferLength);
	                buffer[channelNum] = channel;
	                var lastOut = 0;
	                for (var i = 0; i < bufferLength; i++) {
	                    var white = Math.random() * 2 - 1;
	                    channel[i] = (lastOut + 0.02 * white) / 1.02;
	                    lastOut = channel[i];
	                    channel[i] *= 3.5;    // (roughly) compensate for gain
	                }
	            }
	            return buffer;
	        }(),
	        'white': function () {
	            var buffer = [];
	            for (var channelNum = 0; channelNum < channels; channelNum++) {
	                var channel = new Float32Array(bufferLength);
	                buffer[channelNum] = channel;
	                for (var i = 0; i < bufferLength; i++) {
	                    channel[i] = Math.random() * 2 - 1;
	                }
	            }
	            return buffer;
	        }()
	    };
	    /**
		 *	static noise buffers
		 *  @static
		 *  @private
		 *  @type {Tone.Buffer}
		 */
	    var _noiseBuffers = {};
	    //create the Tone.Buffers
	    function createBuffers() {
	        for (var type in _noiseArrays) {
	            _noiseBuffers[type] = new Tone.Buffer().fromArray(_noiseArrays[type]);
	        }
	    }
	    //create the noise buffers
	    Tone.getContext(createBuffers);
	    Tone.Context.on('init', createBuffers);
	    return Tone.Noise;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Simple convolution created with decaying noise.
		 *  		Generates an Impulse Response Buffer
		 * 			with Tone.Offline then feeds the IR into ConvolverNode.
		 * 			Note: the Reverb will not make any sound until [generate](#generate)
		 * 			has been invoked and resolved.
		 *
		 * 			Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).
		 * 			Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.
		 *
		 *  @extends {Tone.Convolver}
		 *  @param {Time=} decay The amount of time it will reverberate for.
		 */
	    Tone.Reverb = function () {
	        var options = Tone.defaults(arguments, ['decay'], Tone.Reverb);
	        Tone.Effect.call(this, options);
	        /**
			 *  Convolver node
			 *  @type {ConvolverNode}
			 *  @private
			 */
	        this._convolver = this.context.createConvolver();
	        /**
			 * The duration of the reverb
			 * @type {Time}
			 */
	        this.decay = options.decay;
	        /**
			 * The amount of time before the reverb is fully
			 * ramped in.
			 * @type {Time}
			 */
	        this.preDelay = options.preDelay;
	        this.connectEffect(this._convolver);
	    };
	    Tone.extend(Tone.Reverb, Tone.Effect);
	    /**
		 * The defaults
		 * @type {Object}
		 * @static
		 */
	    Tone.Reverb.defaults = {
	        'decay': 1.5,
	        'preDelay': 0.01
	    };
	    /**
		 * Generate the Impulse Response. Returns a promise while the IR is being
		 * generated.
		 * @return {Promise<Tone.Reverb>} Promise which returns this object.
		 */
	    Tone.Reverb.prototype.generate = function () {
	        return Tone.Offline(function () {
	            //create a noise burst which decays over the duration
	            var noiseL = new Tone.Noise();
	            var noiseR = new Tone.Noise();
	            var merge = new Tone.Merge();
	            noiseL.connect(merge.left);
	            noiseR.connect(merge.right);
	            var gainNode = new Tone.Gain().toMaster();
	            merge.connect(gainNode);
	            noiseL.start(0);
	            noiseR.start(0);
	            //short fade in
	            gainNode.gain.setValueAtTime(0, 0);
	            gainNode.gain.linearRampToValueAtTime(1, this.preDelay);
	            //decay
	            gainNode.gain.exponentialApproachValueAtTime(0, this.preDelay, this.decay - this.preDelay);
	        }.bind(this), this.decay).then(function (buffer) {
	            this._convolver.buffer = buffer.get();
	            return this;
	        }.bind(this));
	    };
	    /**
		 *  Clean up.
		 *  @return  {Tone.Reverb}  this
		 */
	    Tone.Reverb.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._convolver.disconnect();
	        this._convolver = null;
	        return this;
	    };
	    return Tone.Reverb;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Base class for stereo feedback effects where the effectReturn
		 *         is fed back into the same channel.
		 *
		 *	@constructor
		 *	@extends {Tone.StereoEffect}
		 */
	    Tone.StereoFeedbackEffect = function () {
	        var options = Tone.defaults(arguments, ['feedback'], Tone.FeedbackEffect);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  controls the amount of feedback
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.feedback = new Tone.Signal(options.feedback, Tone.Type.NormalRange);
	        /**
			 *  the left side feeback
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedbackL = new Tone.Gain();
	        /**
			 *  the right side feeback
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._feedbackR = new Tone.Gain();
	        //connect it up
	        this.effectReturnL.chain(this._feedbackL, this.effectSendL);
	        this.effectReturnR.chain(this._feedbackR, this.effectSendR);
	        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);
	        this._readOnly(['feedback']);
	    };
	    Tone.extend(Tone.StereoFeedbackEffect, Tone.StereoEffect);
	    /**
		 *  clean up
		 *  @returns {Tone.StereoFeedbackEffect} this
		 */
	    Tone.StereoFeedbackEffect.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        this._writable(['feedback']);
	        this.feedback.dispose();
	        this.feedback = null;
	        this._feedbackL.dispose();
	        this._feedbackL = null;
	        this._feedbackR.dispose();
	        this._feedbackR = null;
	        return this;
	    };
	    return Tone.StereoFeedbackEffect;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Applies a width factor to the mid/side seperation.
		 *         0 is all mid and 1 is all side.
		 *         Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
		 *         <br><br>
		 *         <code>
		 *         Mid *= 2*(1-width)<br>
		 *         Side *= 2*width
		 *         </code>
		 *
		 *  @extends {Tone.MidSideEffect}
		 *  @constructor
		 *  @param {NormalRange|Object} [width] The stereo width. A width of 0 is mono and 1 is stereo. 0.5 is no change.
		 */
	    Tone.StereoWidener = function () {
	        var options = Tone.defaults(arguments, ['width'], Tone.StereoWidener);
	        Tone.MidSideEffect.call(this, options);
	        /**
			 *  The width control. 0 = 100% mid. 1 = 100% side. 0.5 = no change.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);
	        this._readOnly(['width']);
	        /**
			 * Two times the (1-width) for the mid channel
			 * @type {Tone.Multiply}
			 * @private
			 */
	        this._twoTimesWidthMid = new Tone.Multiply(2);
	        /**
			 * Two times the width for the side channel
			 * @type {Tone.Multiply}
			 * @private
			 */
	        this._twoTimesWidthSide = new Tone.Multiply(2);
	        /**
			 *  Mid multiplier
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._midMult = new Tone.Multiply();
	        this._twoTimesWidthMid.connect(this._midMult, 0, 1);
	        this.midSend.chain(this._midMult, this.midReturn);
	        /**
			 * 1 - width
			 * @type {Tone}
			 */
	        this._oneMinusWidth = new Tone.Subtract();
	        this._oneMinusWidth.connect(this._twoTimesWidthMid);
	        this.context.getConstant(1).connect(this._oneMinusWidth, 0, 0);
	        this.width.connect(this._oneMinusWidth, 0, 1);
	        /**
			 *  Side multiplier
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._sideMult = new Tone.Multiply();
	        this.width.connect(this._twoTimesWidthSide);
	        this._twoTimesWidthSide.connect(this._sideMult, 0, 1);
	        this.sideSend.chain(this._sideMult, this.sideReturn);
	    };
	    Tone.extend(Tone.StereoWidener, Tone.MidSideEffect);
	    /**
		 *  the default values
		 *  @static
		 *  @type {Object}
		 */
	    Tone.StereoWidener.defaults = { 'width': 0.5 };
	    /**
		 *  Clean up.
		 *  @returns {Tone.StereoWidener} this
		 */
	    Tone.StereoWidener.prototype.dispose = function () {
	        Tone.MidSideEffect.prototype.dispose.call(this);
	        this._writable(['width']);
	        this.width.dispose();
	        this.width = null;
	        this._midMult.dispose();
	        this._midMult = null;
	        this._sideMult.dispose();
	        this._sideMult = null;
	        this._twoTimesWidthMid.dispose();
	        this._twoTimesWidthMid = null;
	        this._twoTimesWidthSide.dispose();
	        this._twoTimesWidthSide = null;
	        this._oneMinusWidth.dispose();
	        this._oneMinusWidth = null;
	        return this;
	    };
	    return Tone.StereoWidener;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Tremolo modulates the amplitude of an incoming signal using a Tone.LFO.
		 *         The type, frequency, and depth of the LFO is controllable.
		 *
		 *  @extends {Tone.StereoEffect}
		 *  @constructor
		 *  @param {Frequency} [frequency] The rate of the effect.
		 *  @param {NormalRange} [depth] The depth of the effect.
		 *  @example
		 * //create a tremolo and start it's LFO
		 * var tremolo = new Tone.Tremolo(9, 0.75).toMaster().start();
		 * //route an oscillator through the tremolo and start it
		 * var oscillator = new Tone.Oscillator().connect(tremolo).start();
		 */
	    Tone.Tremolo = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'depth'
	        ], Tone.Tremolo);
	        Tone.StereoEffect.call(this, options);
	        /**
			 *  The tremelo LFO in the left channel
			 *  @type  {Tone.LFO}
			 *  @private
			 */
	        this._lfoL = new Tone.LFO({
	            'phase': options.spread,
	            'min': 1,
	            'max': 0
	        });
	        /**
			 *  The tremelo LFO in the left channel
			 *  @type  {Tone.LFO}
			 *  @private
			 */
	        this._lfoR = new Tone.LFO({
	            'phase': options.spread,
	            'min': 1,
	            'max': 0
	        });
	        /**
			 *  Where the gain is multiplied
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._amplitudeL = new Tone.Gain();
	        /**
			 *  Where the gain is multiplied
			 *  @type  {Tone.Gain}
			 *  @private
			 */
	        this._amplitudeR = new Tone.Gain();
	        /**
			 *  The frequency of the tremolo.
			 *  @type  {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The depth of the effect. A depth of 0, has no effect
			 *  on the amplitude, and a depth of 1 makes the amplitude
			 *  modulate fully between 0 and 1.
			 *  @type  {NormalRange}
			 *  @signal
			 */
	        this.depth = new Tone.Signal(options.depth, Tone.Type.NormalRange);
	        this._readOnly([
	            'frequency',
	            'depth'
	        ]);
	        this.effectSendL.chain(this._amplitudeL, this.effectReturnL);
	        this.effectSendR.chain(this._amplitudeR, this.effectReturnR);
	        this._lfoL.connect(this._amplitudeL.gain);
	        this._lfoR.connect(this._amplitudeR.gain);
	        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);
	        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);
	        this.type = options.type;
	        this.spread = options.spread;
	    };
	    Tone.extend(Tone.Tremolo, Tone.StereoEffect);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Tremolo.defaults = {
	        'frequency': 10,
	        'type': 'sine',
	        'depth': 0.5,
	        'spread': 180
	    };
	    /**
		 * Start the tremolo.
		 * @param {Time} [time=now] When the tremolo begins.
		 * @returns {Tone.Tremolo} this
		 */
	    Tone.Tremolo.prototype.start = function (time) {
	        this._lfoL.start(time);
	        this._lfoR.start(time);
	        return this;
	    };
	    /**
		 * Stop the tremolo.
		 * @param {Time} [time=now] When the tremolo stops.
		 * @returns {Tone.Tremolo} this
		 */
	    Tone.Tremolo.prototype.stop = function (time) {
	        this._lfoL.stop(time);
	        this._lfoR.stop(time);
	        return this;
	    };
	    /**
		 * Sync the effect to the transport.
		 * @param {Time} [delay=0] Delay time before starting the effect after the
		 *                              Transport has started.
		 * @returns {Tone.AutoFilter} this
		 */
	    Tone.Tremolo.prototype.sync = function (delay) {
	        this._lfoL.sync(delay);
	        this._lfoR.sync(delay);
	        Tone.Transport.syncSignal(this.frequency);
	        return this;
	    };
	    /**
		 * Unsync the filter from the transport
		 * @returns {Tone.Tremolo} this
		 */
	    Tone.Tremolo.prototype.unsync = function () {
	        this._lfoL.unsync();
	        this._lfoR.unsync();
	        Tone.Transport.unsyncSignal(this.frequency);
	        return this;
	    };
	    /**
		 * The Tremolo's oscillator type.
		 * @memberOf Tone.Tremolo#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.Tremolo.prototype, 'type', {
	        get: function () {
	            return this._lfoL.type;
	        },
	        set: function (type) {
	            this._lfoL.type = type;
	            this._lfoR.type = type;
	        }
	    });
	    /**
		 * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
		 * When set to 180, LFO's will be panned hard left and right respectively.
		 * @memberOf Tone.Tremolo#
		 * @type {Degrees}
		 * @name spread
		 */
	    Object.defineProperty(Tone.Tremolo.prototype, 'spread', {
	        get: function () {
	            return this._lfoR.phase - this._lfoL.phase;    //180
	        },
	        set: function (spread) {
	            this._lfoL.phase = 90 - spread / 2;
	            this._lfoR.phase = spread / 2 + 90;
	        }
	    });
	    /**
		 *  clean up
		 *  @returns {Tone.Tremolo} this
		 */
	    Tone.Tremolo.prototype.dispose = function () {
	        Tone.StereoEffect.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'depth'
	        ]);
	        this._lfoL.dispose();
	        this._lfoL = null;
	        this._lfoR.dispose();
	        this._lfoR = null;
	        this._amplitudeL.dispose();
	        this._amplitudeL = null;
	        this._amplitudeR.dispose();
	        this._amplitudeR = null;
	        this.frequency = null;
	        this.depth = null;
	        return this;
	    };
	    return Tone.Tremolo;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO
		 *         modulates the delayTime of the delay, causing the pitch to rise
		 *         and fall. 
		 *  @extends {Tone.Effect}
		 *  @param {Frequency} frequency The frequency of the vibrato.
		 *  @param {NormalRange} depth The amount the pitch is modulated.
		 */
	    Tone.Vibrato = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'depth'
	        ], Tone.Vibrato);
	        Tone.Effect.call(this, options);
	        /**
			 *  The delay node used for the vibrato effect
			 *  @type {Tone.Delay}
			 *  @private
			 */
	        this._delayNode = new Tone.Delay(0, options.maxDelay);
	        /**
			 *  The LFO used to control the vibrato
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._lfo = new Tone.LFO({
	            'type': options.type,
	            'min': 0,
	            'max': options.maxDelay,
	            'frequency': options.frequency,
	            'phase': -90    //offse the phase so the resting position is in the center
	        }).start().connect(this._delayNode.delayTime);
	        /**
			 *  The frequency of the vibrato
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this._lfo.frequency;
	        /**
			 *  The depth of the vibrato. 
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.depth = this._lfo.amplitude;
	        this.depth.value = options.depth;
	        this._readOnly([
	            'frequency',
	            'depth'
	        ]);
	        this.effectSend.chain(this._delayNode, this.effectReturn);
	    };
	    Tone.extend(Tone.Vibrato, Tone.Effect);
	    /**
		 *  The defaults
		 *  @type  {Object}
		 *  @const
		 */
	    Tone.Vibrato.defaults = {
	        'maxDelay': 0.005,
	        'frequency': 5,
	        'depth': 0.1,
	        'type': 'sine'
	    };
	    /**
		 * Type of oscillator attached to the Vibrato.
		 * @memberOf Tone.Vibrato#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.Vibrato.prototype, 'type', {
	        get: function () {
	            return this._lfo.type;
	        },
	        set: function (type) {
	            this._lfo.type = type;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @returns {Tone.Vibrato} this
		 */
	    Tone.Vibrato.prototype.dispose = function () {
	        Tone.Effect.prototype.dispose.call(this);
	        this._delayNode.dispose();
	        this._delayNode = null;
	        this._lfo.dispose();
	        this._lfo = null;
	        this._writable([
	            'frequency',
	            'depth'
	        ]);
	        this.frequency = null;
	        this.depth = null;
	    };
	    return Tone.Vibrato;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Event abstracts away Tone.Transport.schedule and provides a schedulable
		 *          callback for a single or repeatable events along the timeline.
		 *
		 *  @extends {Tone}
		 *  @param {function} callback The callback to invoke at the time.
		 *  @param {*} value The value or values which should be passed to
		 *                      the callback function on invocation.
		 *  @example
		 * var chord = new Tone.Event(function(time, chord){
		 * 	//the chord as well as the exact time of the event
		 * 	//are passed in as arguments to the callback function
		 * }, ["D4", "E4", "F4"]);
		 * //start the chord at the beginning of the transport timeline
		 * chord.start();
		 * //loop it every measure for 8 measures
		 * chord.loop = 8;
		 * chord.loopEnd = "1m";
		 */
	    Tone.Event = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'value'
	        ], Tone.Event);
	        Tone.call(this);
	        /**
			 *  Loop value
			 *  @type  {Boolean|Positive}
			 *  @private
			 */
	        this._loop = options.loop;
	        /**
			 *  The callback to invoke.
			 *  @type  {Function}
			 */
	        this.callback = options.callback;
	        /**
			 *  The value which is passed to the
			 *  callback function.
			 *  @type  {*}
			 *  @private
			 */
	        this.value = options.value;
	        /**
			 *  When the note is scheduled to start.
			 *  @type  {Number}
			 *  @private
			 */
	        this._loopStart = this.toTicks(options.loopStart);
	        /**
			 *  When the note is scheduled to start.
			 *  @type  {Number}
			 *  @private
			 */
	        this._loopEnd = this.toTicks(options.loopEnd);
	        /**
			 *  Tracks the scheduled events
			 *  @type {Tone.TimelineState}
			 *  @private
			 */
	        this._state = new Tone.TimelineState(Tone.State.Stopped);
	        /**
			 *  The playback speed of the note. A speed of 1
			 *  is no change.
			 *  @private
			 *  @type {Positive}
			 */
	        this._playbackRate = 1;
	        /**
			 *  A delay time from when the event is scheduled to start
			 *  @type {Ticks}
			 *  @private
			 */
	        this._startOffset = 0;
	        /**
			 *  private holder of probability value
			 *  @type {NormalRange}
			 *  @private
			 */
	        this._probability = options.probability;
	        /**
			 *  the amount of variation from the
			 *  given time.
			 *  @type {Boolean|Time}
			 *  @private
			 */
	        this._humanize = options.humanize;
	        /**
			 *  If mute is true, the callback won't be
			 *  invoked.
			 *  @type {Boolean}
			 */
	        this.mute = options.mute;
	        //set the initial values
	        this.playbackRate = options.playbackRate;
	    };
	    Tone.extend(Tone.Event);
	    /**
		 *  The default values
		 *  @type  {Object}
		 *  @const
		 */
	    Tone.Event.defaults = {
	        'callback': Tone.noOp,
	        'loop': false,
	        'loopEnd': '1m',
	        'loopStart': 0,
	        'playbackRate': 1,
	        'value': null,
	        'probability': 1,
	        'mute': false,
	        'humanize': false
	    };
	    /**
		 *  Reschedule all of the events along the timeline
		 *  with the updated values.
		 *  @param {Time} after Only reschedules events after the given time.
		 *  @return  {Tone.Event}  this
		 *  @private
		 */
	    Tone.Event.prototype._rescheduleEvents = function (after) {
	        //if no argument is given, schedules all of the events
	        after = Tone.defaultArg(after, -1);
	        this._state.forEachFrom(after, function (event) {
	            var duration;
	            if (event.state === Tone.State.Started) {
	                if (Tone.isDefined(event.id)) {
	                    Tone.Transport.clear(event.id);
	                }
	                var startTick = event.time + Math.round(this.startOffset / this._playbackRate);
	                if (this._loop) {
	                    duration = Infinity;
	                    if (Tone.isNumber(this._loop)) {
	                        duration = this._loop * this._getLoopDuration();
	                    }
	                    var nextEvent = this._state.getAfter(startTick);
	                    if (nextEvent !== null) {
	                        duration = Math.min(duration, nextEvent.time - startTick);
	                    }
	                    if (duration !== Infinity) {
	                        //schedule a stop since it's finite duration
	                        this._state.setStateAtTime(Tone.State.Stopped, startTick + duration + 1);
	                        duration = Tone.Ticks(duration);
	                    }
	                    var interval = Tone.Ticks(this._getLoopDuration());
	                    event.id = Tone.Transport.scheduleRepeat(this._tick.bind(this), interval, Tone.Ticks(startTick), duration);
	                } else {
	                    event.id = Tone.Transport.schedule(this._tick.bind(this), Tone.Ticks(startTick));
	                }
	            }
	        }.bind(this));
	        return this;
	    };
	    /**
		 *  Returns the playback state of the note, either "started" or "stopped".
		 *  @type {String}
		 *  @readOnly
		 *  @memberOf Tone.Event#
		 *  @name state
		 */
	    Object.defineProperty(Tone.Event.prototype, 'state', {
	        get: function () {
	            return this._state.getValueAtTime(Tone.Transport.ticks);
	        }
	    });
	    /**
		 *  The start from the scheduled start time
		 *  @type {Ticks}
		 *  @memberOf Tone.Event#
		 *  @name startOffset
		 *  @private
		 */
	    Object.defineProperty(Tone.Event.prototype, 'startOffset', {
	        get: function () {
	            return this._startOffset;
	        },
	        set: function (offset) {
	            this._startOffset = offset;
	        }
	    });
	    /**
		 *  The probability of the notes being triggered.
		 *  @memberOf Tone.Event#
		 *  @type {NormalRange}
		 *  @name probability
		 */
	    Object.defineProperty(Tone.Event.prototype, 'probability', {
	        get: function () {
	            return this._probability;
	        },
	        set: function (prob) {
	            this._probability = prob;
	        }
	    });
	    /**
		 *  If set to true, will apply small random variation
		 *  to the callback time. If the value is given as a time, it will randomize
		 *  by that amount.
		 *  @example
		 * event.humanize = true;
		 *  @type {Boolean|Time}
		 *  @name humanize
		 */
	    Object.defineProperty(Tone.Event.prototype, 'humanize', {
	        get: function () {
	            return this._humanize;
	        },
	        set: function (variation) {
	            this._humanize = variation;
	        }
	    });
	    /**
		 *  Start the note at the given time.
		 *  @param  {TimelinePosition}  time  When the note should start.
		 *  @return  {Tone.Event}  this
		 */
	    Tone.Event.prototype.start = function (time) {
	        time = this.toTicks(time);
	        if (this._state.getValueAtTime(time) === Tone.State.Stopped) {
	            this._state.add({
	                'state': Tone.State.Started,
	                'time': time,
	                'id': undefined
	            });
	            this._rescheduleEvents(time);
	        }
	        return this;
	    };
	    /**
		 *  Stop the Event at the given time.
		 *  @param  {TimelinePosition}  time  When the note should stop.
		 *  @return  {Tone.Event}  this
		 */
	    Tone.Event.prototype.stop = function (time) {
	        this.cancel(time);
	        time = this.toTicks(time);
	        if (this._state.getValueAtTime(time) === Tone.State.Started) {
	            this._state.setStateAtTime(Tone.State.Stopped, time);
	            var previousEvent = this._state.getBefore(time);
	            var reschedulTime = time;
	            if (previousEvent !== null) {
	                reschedulTime = previousEvent.time;
	            }
	            this._rescheduleEvents(reschedulTime);
	        }
	        return this;
	    };
	    /**
		 *  Cancel all scheduled events greater than or equal to the given time
		 *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.
		 *  @return  {Tone.Event}  this
		 */
	    Tone.Event.prototype.cancel = function (time) {
	        time = Tone.defaultArg(time, -Infinity);
	        time = this.toTicks(time);
	        this._state.forEachFrom(time, function (event) {
	            Tone.Transport.clear(event.id);
	        });
	        this._state.cancel(time);
	        return this;
	    };
	    /**
		 *  The callback function invoker. Also
		 *  checks if the Event is done playing
		 *  @param  {Number}  time  The time of the event in seconds
		 *  @private
		 */
	    Tone.Event.prototype._tick = function (time) {
	        var ticks = Tone.Transport.getTicksAtTime(time);
	        if (!this.mute && this._state.getValueAtTime(ticks) === Tone.State.Started) {
	            if (this.probability < 1 && Math.random() > this.probability) {
	                return;
	            }
	            if (this.humanize) {
	                var variation = 0.02;
	                if (!Tone.isBoolean(this.humanize)) {
	                    variation = this.toSeconds(this.humanize);
	                }
	                time += (Math.random() * 2 - 1) * variation;
	            }
	            this.callback(time, this.value);
	        }
	    };
	    /**
		 *  Get the duration of the loop.
		 *  @return  {Ticks}
		 *  @private
		 */
	    Tone.Event.prototype._getLoopDuration = function () {
	        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);
	    };
	    /**
		 *  If the note should loop or not
		 *  between Tone.Event.loopStart and
		 *  Tone.Event.loopEnd. An integer
		 *  value corresponds to the number of
		 *  loops the Event does after it starts.
		 *  @memberOf Tone.Event#
		 *  @type {Boolean|Positive}
		 *  @name loop
		 */
	    Object.defineProperty(Tone.Event.prototype, 'loop', {
	        get: function () {
	            return this._loop;
	        },
	        set: function (loop) {
	            this._loop = loop;
	            this._rescheduleEvents();
	        }
	    });
	    /**
		 * 	The playback rate of the note. Defaults to 1.
		 *  @memberOf Tone.Event#
		 *  @type {Positive}
		 *  @name playbackRate
		 *  @example
		 * note.loop = true;
		 * //repeat the note twice as fast
		 * note.playbackRate = 2;
		 */
	    Object.defineProperty(Tone.Event.prototype, 'playbackRate', {
	        get: function () {
	            return this._playbackRate;
	        },
	        set: function (rate) {
	            this._playbackRate = rate;
	            this._rescheduleEvents();
	        }
	    });
	    /**
		 *  The loopEnd point is the time the event will loop
		 *  if Tone.Event.loop is true.
		 *  @memberOf Tone.Event#
		 *  @type {Time}
		 *  @name loopEnd
		 */
	    Object.defineProperty(Tone.Event.prototype, 'loopEnd', {
	        get: function () {
	            return Tone.Ticks(this._loopEnd).toSeconds();
	        },
	        set: function (loopEnd) {
	            this._loopEnd = this.toTicks(loopEnd);
	            if (this._loop) {
	                this._rescheduleEvents();
	            }
	        }
	    });
	    /**
		 *  The time when the loop should start.
		 *  @memberOf Tone.Event#
		 *  @type {Time}
		 *  @name loopStart
		 */
	    Object.defineProperty(Tone.Event.prototype, 'loopStart', {
	        get: function () {
	            return Tone.Ticks(this._loopStart).toSeconds();
	        },
	        set: function (loopStart) {
	            this._loopStart = this.toTicks(loopStart);
	            if (this._loop) {
	                this._rescheduleEvents();
	            }
	        }
	    });
	    /**
		 *  The current progress of the loop interval.
		 *  Returns 0 if the event is not started yet or
		 *  it is not set to loop.
		 *  @memberOf Tone.Event#
		 *  @type {NormalRange}
		 *  @name progress
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Event.prototype, 'progress', {
	        get: function () {
	            if (this._loop) {
	                var ticks = Tone.Transport.ticks;
	                var lastEvent = this._state.get(ticks);
	                if (lastEvent !== null && lastEvent.state === Tone.State.Started) {
	                    var loopDuration = this._getLoopDuration();
	                    var progress = (ticks - lastEvent.time) % loopDuration;
	                    return progress / loopDuration;
	                } else {
	                    return 0;
	                }
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 *  Clean up
		 *  @return  {Tone.Event}  this
		 */
	    Tone.Event.prototype.dispose = function () {
	        this.cancel();
	        this._state.dispose();
	        this._state = null;
	        this.callback = null;
	        this.value = null;
	    };
	    return Tone.Event;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Loop creates a looped callback at the 
		 *         specified interval. The callback can be 
		 *         started, stopped and scheduled along
		 *         the Transport's timeline. 
		 *  @example
		 * var loop = new Tone.Loop(function(time){
		 * 	//triggered every eighth note. 
		 * 	console.log(time);
		 * }, "8n").start(0);
		 * Tone.Transport.start();
		 *  @extends {Tone}
		 *  @param {Function} callback The callback to invoke with the event.
		 *  @param {Time} interval The time between successive callback calls. 
		 */
	    Tone.Loop = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'interval'
	        ], Tone.Loop);
	        Tone.call(this);
	        /**
			 *  The event which produces the callbacks
			 */
	        this._event = new Tone.Event({
	            'callback': this._tick.bind(this),
	            'loop': true,
	            'loopEnd': options.interval,
	            'playbackRate': options.playbackRate,
	            'probability': options.probability
	        });
	        /**
			 *  The callback to invoke with the next event in the pattern
			 *  @type {Function}
			 */
	        this.callback = options.callback;
	        //set the iterations
	        this.iterations = options.iterations;
	    };
	    Tone.extend(Tone.Loop);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Loop.defaults = {
	        'interval': '4n',
	        'callback': Tone.noOp,
	        'playbackRate': 1,
	        'iterations': Infinity,
	        'probability': true,
	        'mute': false
	    };
	    /**
		 *  Start the loop at the specified time along the Transport's
		 *  timeline.
		 *  @param  {TimelinePosition=}  time  When to start the Loop.
		 *  @return  {Tone.Loop}  this
		 */
	    Tone.Loop.prototype.start = function (time) {
	        this._event.start(time);
	        return this;
	    };
	    /**
		 *  Stop the loop at the given time.
		 *  @param  {TimelinePosition=}  time  When to stop the Arpeggio
		 *  @return  {Tone.Loop}  this
		 */
	    Tone.Loop.prototype.stop = function (time) {
	        this._event.stop(time);
	        return this;
	    };
	    /**
		 *  Cancel all scheduled events greater than or equal to the given time
		 *  @param  {TimelinePosition}  [time=0]  The time after which events will be cancel.
		 *  @return  {Tone.Loop}  this
		 */
	    Tone.Loop.prototype.cancel = function (time) {
	        this._event.cancel(time);
	        return this;
	    };
	    /**
		 *  Internal function called when the notes should be called
		 *  @param  {Number}  time  The time the event occurs
		 *  @private
		 */
	    Tone.Loop.prototype._tick = function (time) {
	        this.callback(time);
	    };
	    /**
		 *  The state of the Loop, either started or stopped.
		 *  @memberOf Tone.Loop#
		 *  @type {String}
		 *  @name state
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'state', {
	        get: function () {
	            return this._event.state;
	        }
	    });
	    /**
		 *  The progress of the loop as a value between 0-1. 0, when
		 *  the loop is stopped or done iterating. 
		 *  @memberOf Tone.Loop#
		 *  @type {NormalRange}
		 *  @name progress
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'progress', {
	        get: function () {
	            return this._event.progress;
	        }
	    });
	    /**
		 *  The time between successive callbacks. 
		 *  @example
		 * loop.interval = "8n"; //loop every 8n
		 *  @memberOf Tone.Loop#
		 *  @type {Time}
		 *  @name interval
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'interval', {
	        get: function () {
	            return this._event.loopEnd;
	        },
	        set: function (interval) {
	            this._event.loopEnd = interval;
	        }
	    });
	    /**
		 *  The playback rate of the loop. The normal playback rate is 1 (no change). 
		 *  A `playbackRate` of 2 would be twice as fast. 
		 *  @memberOf Tone.Loop#
		 *  @type {Time}
		 *  @name playbackRate
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'playbackRate', {
	        get: function () {
	            return this._event.playbackRate;
	        },
	        set: function (rate) {
	            this._event.playbackRate = rate;
	        }
	    });
	    /**
		 *  Random variation +/-0.01s to the scheduled time. 
		 *  Or give it a time value which it will randomize by.
		 *  @type {Boolean|Time}
		 *  @memberOf Tone.Loop#
		 *  @name humanize
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'humanize', {
	        get: function () {
	            return this._event.humanize;
	        },
	        set: function (variation) {
	            this._event.humanize = variation;
	        }
	    });
	    /**
		 *  The probably of the callback being invoked.
		 *  @memberOf Tone.Loop#
		 *  @type {NormalRange}
		 *  @name probability
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'probability', {
	        get: function () {
	            return this._event.probability;
	        },
	        set: function (prob) {
	            this._event.probability = prob;
	        }
	    });
	    /**
		 *  Muting the Loop means that no callbacks are invoked.
		 *  @memberOf Tone.Loop#
		 *  @type {Boolean}
		 *  @name mute
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'mute', {
	        get: function () {
	            return this._event.mute;
	        },
	        set: function (mute) {
	            this._event.mute = mute;
	        }
	    });
	    /**
		 *  The number of iterations of the loop. The default
		 *  value is Infinity (loop forever).
		 *  @memberOf Tone.Loop#
		 *  @type {Positive}
		 *  @name iterations
		 */
	    Object.defineProperty(Tone.Loop.prototype, 'iterations', {
	        get: function () {
	            if (this._event.loop === true) {
	                return Infinity;
	            } else {
	                return this._event.loop;
	            }
	        },
	        set: function (iters) {
	            if (iters === Infinity) {
	                this._event.loop = true;
	            } else {
	                this._event.loop = iters;
	            }
	        }
	    });
	    /**
		 *  Clean up
		 *  @return  {Tone.Loop}  this
		 */
	    Tone.Loop.prototype.dispose = function () {
	        this._event.dispose();
	        this._event = null;
	        this.callback = null;
	    };
	    return Tone.Loop;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.Part is a collection Tone.Events which can be
		 *         started/stopped and looped as a single unit.
		 *
		 *  @extends {Tone.Event}
		 *  @param {Function} callback The callback to invoke on each event
		 *  @param {Array} events the array of events
		 *  @example
		 * var part = new Tone.Part(function(time, note){
		 * 	//the notes given as the second element in the array
		 * 	//will be passed in as the second argument
		 * 	synth.triggerAttackRelease(note, "8n", time);
		 * }, [[0, "C2"], ["0:2", "C3"], ["0:3:2", "G2"]]);
		 *  @example
		 * //use an array of objects as long as the object has a "time" attribute
		 * var part = new Tone.Part(function(time, value){
		 * 	//the value is an object which contains both the note and the velocity
		 * 	synth.triggerAttackRelease(value.note, "8n", time, value.velocity);
		 * }, [{"time" : 0, "note" : "C3", "velocity": 0.9},
		 * 	   {"time" : "0:2", "note" : "C4", "velocity": 0.5}
		 * ]).start(0);
		 */
	    Tone.Part = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'events'
	        ], Tone.Part);
	        Tone.Event.call(this, options);
	        /**
			 *  An array of Objects.
			 *  @type  {Array}
			 *  @private
			 */
	        this._events = [];
	        //add the events
	        for (var i = 0; i < options.events.length; i++) {
	            if (Array.isArray(options.events[i])) {
	                this.add(options.events[i][0], options.events[i][1]);
	            } else {
	                this.add(options.events[i]);
	            }
	        }
	    };
	    Tone.extend(Tone.Part, Tone.Event);
	    /**
		 *  The default values
		 *  @type  {Object}
		 *  @const
		 */
	    Tone.Part.defaults = {
	        'callback': Tone.noOp,
	        'loop': false,
	        'loopEnd': '1m',
	        'loopStart': 0,
	        'playbackRate': 1,
	        'probability': 1,
	        'humanize': false,
	        'mute': false,
	        'events': []
	    };
	    /**
		 *  Start the part at the given time.
		 *  @param  {TransportTime}  time    When to start the part.
		 *  @param  {Time=}  offset  The offset from the start of the part
		 *                           to begin playing at.
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.start = function (time, offset) {
	        var ticks = this.toTicks(time);
	        if (this._state.getValueAtTime(ticks) !== Tone.State.Started) {
	            if (this._loop) {
	                offset = Tone.defaultArg(offset, this._loopStart);
	            } else {
	                offset = Tone.defaultArg(offset, 0);
	            }
	            offset = this.toTicks(offset);
	            this._state.add({
	                'state': Tone.State.Started,
	                'time': ticks,
	                'offset': offset
	            });
	            this._forEach(function (event) {
	                this._startNote(event, ticks, offset);
	            });
	        }
	        return this;
	    };
	    /**
		 *  Start the event in the given event at the correct time given
		 *  the ticks and offset and looping.
		 *  @param  {Tone.Event}  event
		 *  @param  {Ticks}  ticks
		 *  @param  {Ticks}  offset
		 *  @private
		 */
	    Tone.Part.prototype._startNote = function (event, ticks, offset) {
	        ticks -= offset;
	        if (this._loop) {
	            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {
	                if (event.startOffset < offset) {
	                    //start it on the next loop
	                    ticks += this._getLoopDuration();
	                }
	                event.start(Tone.Ticks(ticks));
	            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {
	                event.loop = false;
	                event.start(Tone.Ticks(ticks));
	            }
	        } else if (event.startOffset >= offset) {
	            event.start(Tone.Ticks(ticks));
	        }
	    };
	    /**
		 *  The start from the scheduled start time
		 *  @type {Ticks}
		 *  @memberOf Tone.Part#
		 *  @name startOffset
		 *  @private
		 */
	    Object.defineProperty(Tone.Part.prototype, 'startOffset', {
	        get: function () {
	            return this._startOffset;
	        },
	        set: function (offset) {
	            this._startOffset = offset;
	            this._forEach(function (event) {
	                event.startOffset += this._startOffset;
	            });
	        }
	    });
	    /**
		 *  Stop the part at the given time.
		 *  @param  {TimelinePosition}  time  When to stop the part.
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.stop = function (time) {
	        var ticks = this.toTicks(time);
	        this._state.cancel(ticks);
	        this._state.setStateAtTime(Tone.State.Stopped, ticks);
	        this._forEach(function (event) {
	            event.stop(time);
	        });
	        return this;
	    };
	    /**
		 *  Get/Set an Event's value at the given time.
		 *  If a value is passed in and no event exists at
		 *  the given time, one will be created with that value.
		 *  If two events are at the same time, the first one will
		 *  be returned.
		 *  @example
		 * part.at("1m"); //returns the part at the first measure
		 *
		 * part.at("2m", "C2"); //set the value at "2m" to C2.
		 * //if an event didn't exist at that time, it will be created.
		 *  @param {TransportTime} time The time of the event to get or set.
		 *  @param {*=} value If a value is passed in, the value of the
		 *                    event at the given time will be set to it.
		 *  @return {Tone.Event} the event at the time
		 */
	    Tone.Part.prototype.at = function (time, value) {
	        time = Tone.TransportTime(time);
	        var tickTime = Tone.Ticks(1).toSeconds();
	        for (var i = 0; i < this._events.length; i++) {
	            var event = this._events[i];
	            if (Math.abs(time.toTicks() - event.startOffset) < tickTime) {
	                if (Tone.isDefined(value)) {
	                    event.value = value;
	                }
	                return event;
	            }
	        }
	        //if there was no event at that time, create one
	        if (Tone.isDefined(value)) {
	            this.add(time, value);
	            //return the new event
	            return this._events[this._events.length - 1];
	        } else {
	            return null;
	        }
	    };
	    /**
		 *  Add a an event to the part.
		 *  @param {Time} time The time the note should start.
		 *                            If an object is passed in, it should
		 *                            have a 'time' attribute and the rest
		 *                            of the object will be used as the 'value'.
		 *  @param  {Tone.Event|*}  value
		 *  @returns {Tone.Part} this
		 *  @example
		 * part.add("1m", "C#+11");
		 */
	    Tone.Part.prototype.add = function (time, value) {
	        //extract the parameters
	        if (time.hasOwnProperty('time')) {
	            value = time;
	            time = value.time;
	        }
	        time = this.toTicks(time);
	        var event;
	        if (value instanceof Tone.Event) {
	            event = value;
	            event.callback = this._tick.bind(this);
	        } else {
	            event = new Tone.Event({
	                'callback': this._tick.bind(this),
	                'value': value
	            });
	        }
	        //the start offset
	        event.startOffset = time;
	        //initialize the values
	        event.set({
	            'loopEnd': this.loopEnd,
	            'loopStart': this.loopStart,
	            'loop': this.loop,
	            'humanize': this.humanize,
	            'playbackRate': this.playbackRate,
	            'probability': this.probability
	        });
	        this._events.push(event);
	        //start the note if it should be played right now
	        this._restartEvent(event);
	        return this;
	    };
	    /**
		 *  Restart the given event
		 *  @param  {Tone.Event}  event
		 *  @private
		 */
	    Tone.Part.prototype._restartEvent = function (event) {
	        this._state.forEach(function (stateEvent) {
	            if (stateEvent.state === Tone.State.Started) {
	                this._startNote(event, stateEvent.time, stateEvent.offset);
	            } else {
	                //stop the note
	                event.stop(Tone.Ticks(stateEvent.time));
	            }
	        }.bind(this));
	    };
	    /**
		 *  Remove an event from the part. Will recursively iterate
		 *  into nested parts to find the event.
		 *  @param {Time} time The time of the event
		 *  @param {*} value Optionally select only a specific event value
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.remove = function (time, value) {
	        //extract the parameters
	        if (time.hasOwnProperty('time')) {
	            value = time;
	            time = value.time;
	        }
	        time = this.toTicks(time);
	        for (var i = this._events.length - 1; i >= 0; i--) {
	            var event = this._events[i];
	            if (event instanceof Tone.Part) {
	                event.remove(time, value);
	            } else if (event.startOffset === time) {
	                if (Tone.isUndef(value) || Tone.isDefined(value) && event.value === value) {
	                    this._events.splice(i, 1);
	                    event.dispose();
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Remove all of the notes from the group.
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.removeAll = function () {
	        this._forEach(function (event) {
	            event.dispose();
	        });
	        this._events = [];
	        return this;
	    };
	    /**
		 *  Cancel scheduled state change events: i.e. "start" and "stop".
		 *  @param {TimelinePosition} after The time after which to cancel the scheduled events.
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.cancel = function (after) {
	        this._forEach(function (event) {
	            event.cancel(after);
	        });
	        this._state.cancel(this.toTicks(after));
	        return this;
	    };
	    /**
		 *  Iterate over all of the events
		 *  @param {Function} callback
		 *  @param {Object} ctx The context
		 *  @private
		 */
	    Tone.Part.prototype._forEach = function (callback, ctx) {
	        if (this._events) {
	            ctx = Tone.defaultArg(ctx, this);
	            for (var i = this._events.length - 1; i >= 0; i--) {
	                var e = this._events[i];
	                if (e instanceof Tone.Part) {
	                    e._forEach(callback, ctx);
	                } else {
	                    callback.call(ctx, e);
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 *  Set the attribute of all of the events
		 *  @param  {String}  attr  the attribute to set
		 *  @param  {*}  value      The value to set it to
		 *  @private
		 */
	    Tone.Part.prototype._setAll = function (attr, value) {
	        this._forEach(function (event) {
	            event[attr] = value;
	        });
	    };
	    /**
		 *  Internal tick method
		 *  @param  {Number}  time  The time of the event in seconds
		 *  @private
		 */
	    Tone.Part.prototype._tick = function (time, value) {
	        if (!this.mute) {
	            this.callback(time, value);
	        }
	    };
	    /**
		 *  Determine if the event should be currently looping
		 *  given the loop boundries of this Part.
		 *  @param  {Tone.Event}  event  The event to test
		 *  @private
		 */
	    Tone.Part.prototype._testLoopBoundries = function (event) {
	        if (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd) {
	            event.cancel(0);
	        } else if (event.state === Tone.State.Stopped) {
	            //reschedule it if it's stopped
	            this._restartEvent(event);
	        }
	    };
	    /**
		 *  The probability of the notes being triggered.
		 *  @memberOf Tone.Part#
		 *  @type {NormalRange}
		 *  @name probability
		 */
	    Object.defineProperty(Tone.Part.prototype, 'probability', {
	        get: function () {
	            return this._probability;
	        },
	        set: function (prob) {
	            this._probability = prob;
	            this._setAll('probability', prob);
	        }
	    });
	    /**
		 *  If set to true, will apply small random variation
		 *  to the callback time. If the value is given as a time, it will randomize
		 *  by that amount.
		 *  @example
		 * event.humanize = true;
		 *  @type {Boolean|Time}
		 *  @name humanize
		 */
	    Object.defineProperty(Tone.Part.prototype, 'humanize', {
	        get: function () {
	            return this._humanize;
	        },
	        set: function (variation) {
	            this._humanize = variation;
	            this._setAll('humanize', variation);
	        }
	    });
	    /**
		 *  If the part should loop or not
		 *  between Tone.Part.loopStart and
		 *  Tone.Part.loopEnd. An integer
		 *  value corresponds to the number of
		 *  loops the Part does after it starts.
		 *  @memberOf Tone.Part#
		 *  @type {Boolean|Positive}
		 *  @name loop
		 *  @example
		 * //loop the part 8 times
		 * part.loop = 8;
		 */
	    Object.defineProperty(Tone.Part.prototype, 'loop', {
	        get: function () {
	            return this._loop;
	        },
	        set: function (loop) {
	            this._loop = loop;
	            this._forEach(function (event) {
	                event._loopStart = this._loopStart;
	                event._loopEnd = this._loopEnd;
	                event.loop = loop;
	                this._testLoopBoundries(event);
	            });
	        }
	    });
	    /**
		 *  The loopEnd point determines when it will
		 *  loop if Tone.Part.loop is true.
		 *  @memberOf Tone.Part#
		 *  @type {Time}
		 *  @name loopEnd
		 */
	    Object.defineProperty(Tone.Part.prototype, 'loopEnd', {
	        get: function () {
	            return Tone.Ticks(this._loopEnd).toSeconds();
	        },
	        set: function (loopEnd) {
	            this._loopEnd = this.toTicks(loopEnd);
	            if (this._loop) {
	                this._forEach(function (event) {
	                    event.loopEnd = loopEnd;
	                    this._testLoopBoundries(event);
	                });
	            }
	        }
	    });
	    /**
		 *  The loopStart point determines when it will
		 *  loop if Tone.Part.loop is true.
		 *  @memberOf Tone.Part#
		 *  @type {Time}
		 *  @name loopStart
		 */
	    Object.defineProperty(Tone.Part.prototype, 'loopStart', {
	        get: function () {
	            return Tone.Ticks(this._loopStart).toSeconds();
	        },
	        set: function (loopStart) {
	            this._loopStart = this.toTicks(loopStart);
	            if (this._loop) {
	                this._forEach(function (event) {
	                    event.loopStart = this.loopStart;
	                    this._testLoopBoundries(event);
	                });
	            }
	        }
	    });
	    /**
		 * 	The playback rate of the part
		 *  @memberOf Tone.Part#
		 *  @type {Positive}
		 *  @name playbackRate
		 */
	    Object.defineProperty(Tone.Part.prototype, 'playbackRate', {
	        get: function () {
	            return this._playbackRate;
	        },
	        set: function (rate) {
	            this._playbackRate = rate;
	            this._setAll('playbackRate', rate);
	        }
	    });
	    /**
		 * 	The number of scheduled notes in the part.
		 *  @memberOf Tone.Part#
		 *  @type {Positive}
		 *  @name length
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Part.prototype, 'length', {
	        get: function () {
	            return this._events.length;
	        }
	    });
	    /**
		 *  Clean up
		 *  @return  {Tone.Part}  this
		 */
	    Tone.Part.prototype.dispose = function () {
	        this.removeAll();
	        this._state.dispose();
	        this._state = null;
	        this.callback = null;
	        this._events = null;
	        return this;
	    };
	    return Tone.Part;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Pattern arpeggiates between the given notes
		 *         in a number of patterns. See Tone.CtrlPattern for
		 *         a full list of patterns.
		 *  @example
		 * var pattern = new Tone.Pattern(function(time, note){
		 *   //the order of the notes passed in depends on the pattern
		 * }, ["C2", "D4", "E5", "A6"], "upDown");
		 *  @extends {Tone.Loop}
		 *  @param {Function} callback The callback to invoke with the
		 *                             event.
		 *  @param {Array} values The values to arpeggiate over.
		 */
	    Tone.Pattern = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'values',
	            'pattern'
	        ], Tone.Pattern);
	        Tone.Loop.call(this, options);
	        /**
			 *  The pattern manager
			 *  @type {Tone.CtrlPattern}
			 *  @private
			 */
	        this._pattern = new Tone.CtrlPattern({
	            'values': options.values,
	            'type': options.pattern,
	            'index': options.index
	        });
	    };
	    Tone.extend(Tone.Pattern, Tone.Loop);
	    /**
		 *  The defaults
		 *  @const
		 *  @type  {Object}
		 */
	    Tone.Pattern.defaults = {
	        'pattern': Tone.CtrlPattern.Type.Up,
	        'callback': Tone.noOp,
	        'values': []
	    };
	    /**
		 *  Internal function called when the notes should be called
		 *  @param  {Number}  time  The time the event occurs
		 *  @private
		 */
	    Tone.Pattern.prototype._tick = function (time) {
	        this.callback(time, this._pattern.value);
	        this._pattern.next();
	    };
	    /**
		 *  The current index in the values array.
		 *  @memberOf Tone.Pattern#
		 *  @type {Positive}
		 *  @name index
		 */
	    Object.defineProperty(Tone.Pattern.prototype, 'index', {
	        get: function () {
	            return this._pattern.index;
	        },
	        set: function (i) {
	            this._pattern.index = i;
	        }
	    });
	    /**
		 *  The array of events.
		 *  @memberOf Tone.Pattern#
		 *  @type {Array}
		 *  @name values
		 */
	    Object.defineProperty(Tone.Pattern.prototype, 'values', {
	        get: function () {
	            return this._pattern.values;
	        },
	        set: function (vals) {
	            this._pattern.values = vals;
	        }
	    });
	    /**
		 *  The current value of the pattern.
		 *  @memberOf Tone.Pattern#
		 *  @type {*}
		 *  @name value
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Pattern.prototype, 'value', {
	        get: function () {
	            return this._pattern.value;
	        }
	    });
	    /**
		 *  The pattern type. See Tone.CtrlPattern for the full list of patterns.
		 *  @memberOf Tone.Pattern#
		 *  @type {String}
		 *  @name pattern
		 */
	    Object.defineProperty(Tone.Pattern.prototype, 'pattern', {
	        get: function () {
	            return this._pattern.type;
	        },
	        set: function (pattern) {
	            this._pattern.type = pattern;
	        }
	    });
	    /**
		 *  Clean up
		 *  @return  {Tone.Pattern}  this
		 */
	    Tone.Pattern.prototype.dispose = function () {
	        Tone.Loop.prototype.dispose.call(this);
	        this._pattern.dispose();
	        this._pattern = null;
	    };
	    return Tone.Pattern;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class A sequence is an alternate notation of a part. Instead
		 *         of passing in an array of [time, event] pairs, pass
		 *         in an array of events which will be spaced at the
		 *         given subdivision. Sub-arrays will subdivide that beat
		 *         by the number of items are in the array.
		 *         Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)
		 *  @param  {Function}  callback  The callback to invoke with every note
		 *  @param  {Array}    events  The sequence
		 *  @param  {Time} subdivision  The subdivision between which events are placed.
		 *  @extends {Tone.Part}
		 *  @example
		 * var seq = new Tone.Sequence(function(time, note){
		 * 	console.log(note);
		 * //straight quater notes
		 * }, ["C4", "E4", "G4", "A4"], "4n");
		 *  @example
		 * var seq = new Tone.Sequence(function(time, note){
		 * 	console.log(note);
		 * //subdivisions are given as subarrays
		 * }, ["C4", ["E4", "D4", "E4"], "G4", ["A4", "G4"]]);
		 */
	    Tone.Sequence = function () {
	        var options = Tone.defaults(arguments, [
	            'callback',
	            'events',
	            'subdivision'
	        ], Tone.Sequence);
	        //remove the events
	        var events = options.events;
	        delete options.events;
	        Tone.Part.call(this, options);
	        /**
			 *  The subdivison of each note
			 *  @type  {Ticks}
			 *  @private
			 */
	        this._subdivision = this.toTicks(options.subdivision);
	        //if no time was passed in, the loop end is the end of the cycle
	        if (Tone.isUndef(options.loopEnd) && Tone.isDefined(events)) {
	            this._loopEnd = events.length * this._subdivision;
	        }
	        //defaults to looping
	        this._loop = true;
	        //add all of the events
	        if (Tone.isDefined(events)) {
	            for (var i = 0; i < events.length; i++) {
	                this.add(i, events[i]);
	            }
	        }
	    };
	    Tone.extend(Tone.Sequence, Tone.Part);
	    /**
		 *  The default values.
		 *  @type  {Object}
		 */
	    Tone.Sequence.defaults = { 'subdivision': '4n' };
	    /**
		 *  The subdivision of the sequence. This can only be
		 *  set in the constructor. The subdivision is the
		 *  interval between successive steps.
		 *  @type {Time}
		 *  @memberOf Tone.Sequence#
		 *  @name subdivision
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.Sequence.prototype, 'subdivision', {
	        get: function () {
	            return Tone.Ticks(this._subdivision).toSeconds();
	        }
	    });
	    /**
		 *  Get/Set an index of the sequence. If the index contains a subarray,
		 *  a Tone.Sequence representing that sub-array will be returned.
		 *  @example
		 * var sequence = new Tone.Sequence(playNote, ["E4", "C4", "F#4", ["A4", "Bb3"]])
		 * sequence.at(0)// => returns "E4"
		 * //set a value
		 * sequence.at(0, "G3");
		 * //get a nested sequence
		 * sequence.at(3).at(1)// => returns "Bb3"
		 * @param {Positive} index The index to get or set
		 * @param {*} value Optionally pass in the value to set at the given index.
		 */
	    Tone.Sequence.prototype.at = function (index, value) {
	        //if the value is an array,
	        if (Tone.isArray(value)) {
	            //remove the current event at that index
	            this.remove(index);
	        }
	        //call the parent's method
	        return Tone.Part.prototype.at.call(this, this._indexTime(index), value);
	    };
	    /**
		 *  Add an event at an index, if there's already something
		 *  at that index, overwrite it. If `value` is an array,
		 *  it will be parsed as a subsequence.
		 *  @param {Number} index The index to add the event to
		 *  @param {*} value The value to add at that index
		 *  @returns {Tone.Sequence} this
		 */
	    Tone.Sequence.prototype.add = function (index, value) {
	        if (value === null) {
	            return this;
	        }
	        if (Tone.isArray(value)) {
	            //make a subsequence and add that to the sequence
	            var subSubdivision = Math.round(this._subdivision / value.length);
	            value = new Tone.Sequence(this._tick.bind(this), value, Tone.Ticks(subSubdivision));
	        }
	        Tone.Part.prototype.add.call(this, this._indexTime(index), value);
	        return this;
	    };
	    /**
		 *  Remove a value from the sequence by index
		 *  @param {Number} index The index of the event to remove
		 *  @returns {Tone.Sequence} this
		 */
	    Tone.Sequence.prototype.remove = function (index, value) {
	        Tone.Part.prototype.remove.call(this, this._indexTime(index), value);
	        return this;
	    };
	    /**
		 *  Get the time of the index given the Sequence's subdivision
		 *  @param  {Number}  index
		 *  @return  {Time}  The time of that index
		 *  @private
		 */
	    Tone.Sequence.prototype._indexTime = function (index) {
	        if (index instanceof Tone.TransportTime) {
	            return index;
	        } else {
	            return Tone.Ticks(index * this._subdivision + this.startOffset).toSeconds();
	        }
	    };
	    /**
		 *  Clean up.
		 *  @return {Tone.Sequence} this
		 */
	    Tone.Sequence.prototype.dispose = function () {
	        Tone.Part.prototype.dispose.call(this);
	        return this;
	    };
	    return Tone.Sequence;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,
		 *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is
		 *         a square and only odd-numbered harmonics are present. At all other widths
		 *         even-numbered harmonics are present. Read more
		 *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).
		 *
		 *  @constructor
		 *  @extends {Tone.Source}
		 *  @param {Frequency} [frequency] The frequency of the oscillator
		 *  @param {NormalRange} [width] The width of the pulse
		 *  @example
		 * var pulse = new Tone.PulseOscillator("E5", 0.4).toMaster().start();
		 */
	    Tone.PulseOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'width'
	        ], Tone.Oscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  The width of the pulse.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.width = new Tone.Signal(options.width, Tone.Type.NormalRange);
	        /**
			 *  gate the width amount
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._widthGate = new Tone.Gain();
	        /**
			 *  the sawtooth oscillator
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._sawtooth = new Tone.Oscillator({
	            frequency: options.frequency,
	            detune: options.detune,
	            type: 'sawtooth',
	            phase: options.phase
	        });
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this._sawtooth.frequency;
	        /**
			 *  The detune in cents.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this._sawtooth.detune;
	        /**
			 *  Threshold the signal to turn it into a square
			 *  @type {Tone.WaveShaper}
			 *  @private
			 */
	        this._thresh = new Tone.WaveShaper(function (val) {
	            if (val < 0) {
	                return -1;
	            } else {
	                return 1;
	            }
	        });
	        //connections
	        this._sawtooth.chain(this._thresh, this.output);
	        this.width.chain(this._widthGate, this._thresh);
	        this._readOnly([
	            'width',
	            'frequency',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.PulseOscillator, Tone.Source);
	    /**
		 *  The default parameters.
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.PulseOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'width': 0.2
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} time
		 *  @private
		 */
	    Tone.PulseOscillator.prototype._start = function (time) {
	        time = this.toSeconds(time);
	        this._sawtooth.start(time);
	        this._widthGate.gain.setValueAtTime(1, time);
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} time
		 *  @private
		 */
	    Tone.PulseOscillator.prototype._stop = function (time) {
	        time = this.toSeconds(time);
	        this._sawtooth.stop(time);
	        //the width is still connected to the output.
	        //that needs to be stopped also
	        this._widthGate.gain.setValueAtTime(0, time);
	    };
	    /**
		 *  restart the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.PulseOscillator.prototype.restart = function (time) {
	        this._sawtooth.restart(time);
	    };
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.PulseOscillator#
		 * @type {Degrees}
		 * @name phase
		 */
	    Object.defineProperty(Tone.PulseOscillator.prototype, 'phase', {
	        get: function () {
	            return this._sawtooth.phase;
	        },
	        set: function (phase) {
	            this._sawtooth.phase = phase;
	        }
	    });
	    /**
		 * The type of the oscillator. Always returns "pulse".
		 * @readOnly
		 * @memberOf Tone.PulseOscillator#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.PulseOscillator.prototype, 'type', {
	        get: function () {
	            return 'pulse';
	        }
	    });
	    /**
		 * The partials of the waveform. Cannot set partials for this waveform type
		 * @memberOf Tone.PulseOscillator#
		 * @type {Array}
		 * @name partials
		 * @private
		 */
	    Object.defineProperty(Tone.PulseOscillator.prototype, 'partials', {
	        get: function () {
	            return [];
	        }
	    });
	    /**
		 *  Clean up method.
		 *  @return {Tone.PulseOscillator} this
		 */
	    Tone.PulseOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._sawtooth.dispose();
	        this._sawtooth = null;
	        this._writable([
	            'width',
	            'frequency',
	            'detune'
	        ]);
	        this.width.dispose();
	        this.width = null;
	        this._widthGate.dispose();
	        this._widthGate = null;
	        this._thresh.dispose();
	        this._thresh = null;
	        this.frequency = null;
	        this.detune = null;
	        return this;
	    };
	    return Tone.PulseOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator
		 *         at the modulationFrequency. This has the effect of continuously
		 *         changing the timbre of the oscillator by altering the harmonics
		 *         generated.
		 *
		 *  @extends {Tone.Source}
		 *  @constructor
		 *  @param {Frequency} frequency The starting frequency of the oscillator.
		 *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.
		 *  @example
		 *  var pwm = new Tone.PWMOscillator("Ab3", 0.3).toMaster().start();
		 */
	    Tone.PWMOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'modulationFrequency'
	        ], Tone.PWMOscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  the pulse oscillator
			 *  @type {Tone.PulseOscillator}
			 *  @private
			 */
	        this._pulse = new Tone.PulseOscillator(options.modulationFrequency);
	        //change the pulse oscillator type
	        this._pulse._sawtooth.type = 'sine';
	        /**
			 *  the modulator
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._modulator = new Tone.Oscillator({
	            'frequency': options.frequency,
	            'detune': options.detune,
	            'phase': options.phase
	        });
	        /**
			 *  Scale the oscillator so it doesn't go silent
			 *  at the extreme values.
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._scale = new Tone.Multiply(2);
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this._modulator.frequency;
	        /**
			 *  The detune of the oscillator.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this._modulator.detune;
	        /**
			 *  The modulation rate of the oscillator.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.modulationFrequency = this._pulse.frequency;
	        //connections
	        this._modulator.chain(this._scale, this._pulse.width);
	        this._pulse.connect(this.output);
	        this._readOnly([
	            'modulationFrequency',
	            'frequency',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.PWMOscillator, Tone.Source);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.PWMOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'modulationFrequency': 0.4
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.PWMOscillator.prototype._start = function (time) {
	        time = this.toSeconds(time);
	        this._modulator.start(time);
	        this._pulse.start(time);
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.PWMOscillator.prototype._stop = function (time) {
	        time = this.toSeconds(time);
	        this._modulator.stop(time);
	        this._pulse.stop(time);
	    };
	    /**
		 *  restart the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.PWMOscillator.prototype.restart = function (time) {
	        this._modulator.restart(time);
	        this._pulse.restart(time);
	    };
	    /**
		 * The type of the oscillator. Always returns "pwm".
		 * @readOnly
		 * @memberOf Tone.PWMOscillator#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.PWMOscillator.prototype, 'type', {
	        get: function () {
	            return 'pwm';
	        }
	    });
	    /**
		 * The partials of the waveform. Cannot set partials for this waveform type
		 * @memberOf Tone.PWMOscillator#
		 * @type {Array}
		 * @name partials
		 * @private
		 */
	    Object.defineProperty(Tone.PWMOscillator.prototype, 'partials', {
	        get: function () {
	            return [];
	        }
	    });
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.PWMOscillator#
		 * @type {number}
		 * @name phase
		 */
	    Object.defineProperty(Tone.PWMOscillator.prototype, 'phase', {
	        get: function () {
	            return this._modulator.phase;
	        },
	        set: function (phase) {
	            this._modulator.phase = phase;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.PWMOscillator} this
		 */
	    Tone.PWMOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._pulse.dispose();
	        this._pulse = null;
	        this._scale.dispose();
	        this._scale = null;
	        this._modulator.dispose();
	        this._modulator = null;
	        this._writable([
	            'modulationFrequency',
	            'frequency',
	            'detune'
	        ]);
	        this.frequency = null;
	        this.detune = null;
	        this.modulationFrequency = null;
	        return this;
	    };
	    return Tone.PWMOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.FMOscillator
		 *
		 *  @extends {Tone.Source}
		 *  @constructor
		 *  @param {Frequency} frequency The starting frequency of the oscillator.
		 *  @param {String} type The type of the carrier oscillator.
		 *  @param {String} modulationType The type of the modulator oscillator.
		 *  @example
		 * //a sine oscillator frequency-modulated by a square wave
		 * var fmOsc = new Tone.FMOscillator("Ab3", "sine", "square").toMaster().start();
		 */
	    Tone.FMOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type',
	            'modulationType'
	        ], Tone.FMOscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  The carrier oscillator
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._carrier = new Tone.Oscillator(options.frequency, options.type);
	        /**
			 *  The oscillator's frequency
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The detune control signal.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this._carrier.detune;
	        this.detune.value = options.detune;
	        /**
			 *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the
			 *  ratio of the frequency of the modulating signal (mf) to the amplitude of the
			 *  modulating signal (ma) -- as in ma/mf.
			 *	@type {Positive}
			 *	@signal
			 */
	        this.modulationIndex = new Tone.Multiply(options.modulationIndex);
	        this.modulationIndex.units = Tone.Type.Positive;
	        /**
			 *  The modulating oscillator
			 *  @type  {Tone.Oscillator}
			 *  @private
			 */
	        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);
	        /**
			 *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
			 *  A harmonicity of 1 gives both oscillators the same frequency.
			 *  Harmonicity = 2 means a change of an octave.
			 *  @type {Positive}
			 *  @signal
			 *  @example
			 * //pitch the modulator an octave below carrier
			 * synth.harmonicity.value = 0.5;
			 */
	        this.harmonicity = new Tone.Multiply(options.harmonicity);
	        this.harmonicity.units = Tone.Type.Positive;
	        /**
			 *  the node where the modulation happens
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._modulationNode = new Tone.Gain(0);
	        //connections
	        this.frequency.connect(this._carrier.frequency);
	        this.frequency.chain(this.harmonicity, this._modulator.frequency);
	        this.frequency.chain(this.modulationIndex, this._modulationNode);
	        this._modulator.connect(this._modulationNode.gain);
	        this._modulationNode.connect(this._carrier.frequency);
	        this._carrier.connect(this.output);
	        this.detune.connect(this._modulator.detune);
	        this.phase = options.phase;
	        this._readOnly([
	            'modulationIndex',
	            'frequency',
	            'detune',
	            'harmonicity'
	        ]);
	    };
	    Tone.extend(Tone.FMOscillator, Tone.Source);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.FMOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'modulationIndex': 2,
	        'modulationType': 'square',
	        'harmonicity': 1
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.FMOscillator.prototype._start = function (time) {
	        this._modulator.start(time);
	        this._carrier.start(time);
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.FMOscillator.prototype._stop = function (time) {
	        this._modulator.stop(time);
	        this._carrier.stop(time);
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.FMOscillator.prototype.restart = function (time) {
	        this._modulator.restart(time);
	        this._carrier.restart(time);
	    };
	    /**
		 * The type of the carrier oscillator
		 * @memberOf Tone.FMOscillator#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.FMOscillator.prototype, 'type', {
	        get: function () {
	            return this._carrier.type;
	        },
	        set: function (type) {
	            this._carrier.type = type;
	        }
	    });
	    /**
		 * The type of the modulator oscillator
		 * @memberOf Tone.FMOscillator#
		 * @type {String}
		 * @name modulationType
		 */
	    Object.defineProperty(Tone.FMOscillator.prototype, 'modulationType', {
	        get: function () {
	            return this._modulator.type;
	        },
	        set: function (type) {
	            this._modulator.type = type;
	        }
	    });
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.FMOscillator#
		 * @type {number}
		 * @name phase
		 */
	    Object.defineProperty(Tone.FMOscillator.prototype, 'phase', {
	        get: function () {
	            return this._carrier.phase;
	        },
	        set: function (phase) {
	            this._carrier.phase = phase;
	            this._modulator.phase = phase;
	        }
	    });
	    /**
		 * The partials of the carrier waveform. A partial represents
		 * the amplitude at a harmonic. The first harmonic is the
		 * fundamental frequency, the second is the octave and so on
		 * following the harmonic series.
		 * Setting this value will automatically set the type to "custom".
		 * The value is an empty array when the type is not "custom".
		 * @memberOf Tone.FMOscillator#
		 * @type {Array}
		 * @name partials
		 * @example
		 * osc.partials = [1, 0.2, 0.01];
		 */
	    Object.defineProperty(Tone.FMOscillator.prototype, 'partials', {
	        get: function () {
	            return this._carrier.partials;
	        },
	        set: function (partials) {
	            this._carrier.partials = partials;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.FMOscillator} this
		 */
	    Tone.FMOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._writable([
	            'modulationIndex',
	            'frequency',
	            'detune',
	            'harmonicity'
	        ]);
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune = null;
	        this.harmonicity.dispose();
	        this.harmonicity = null;
	        this._carrier.dispose();
	        this._carrier = null;
	        this._modulator.dispose();
	        this._modulator = null;
	        this._modulationNode.dispose();
	        this._modulationNode = null;
	        this.modulationIndex.dispose();
	        this.modulationIndex = null;
	        return this;
	    };
	    return Tone.FMOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.AMOscillator
		 *
		 *  @extends {Tone.Oscillator}
		 *  @constructor
		 *  @param {Frequency} frequency The starting frequency of the oscillator.
		 *  @param {String} type The type of the carrier oscillator.
		 *  @param {String} modulationType The type of the modulator oscillator.
		 *  @example
		 * //a sine oscillator frequency-modulated by a square wave
		 * var fmOsc = new Tone.AMOscillator("Ab3", "sine", "square").toMaster().start();
		 */
	    Tone.AMOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type',
	            'modulationType'
	        ], Tone.AMOscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  The carrier oscillator
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._carrier = new Tone.Oscillator(options.frequency, options.type);
	        /**
			 *  The oscillator's frequency
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this._carrier.frequency;
	        /**
			 *  The detune control signal.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this._carrier.detune;
	        this.detune.value = options.detune;
	        /**
			 *  The modulating oscillator
			 *  @type  {Tone.Oscillator}
			 *  @private
			 */
	        this._modulator = new Tone.Oscillator(options.frequency, options.modulationType);
	        /**
			 *  convert the -1,1 output to 0,1
			 *  @type {Tone.AudioToGain}
			 *  @private
			 */
	        this._modulationScale = new Tone.AudioToGain();
	        /**
			 *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
			 *  A harmonicity of 1 gives both oscillators the same frequency.
			 *  Harmonicity = 2 means a change of an octave.
			 *  @type {Positive}
			 *  @signal
			 *  @example
			 * //pitch the modulator an octave below carrier
			 * synth.harmonicity.value = 0.5;
			 */
	        this.harmonicity = new Tone.Multiply(options.harmonicity);
	        this.harmonicity.units = Tone.Type.Positive;
	        /**
			 *  the node where the modulation happens
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._modulationNode = new Tone.Gain(0);
	        //connections
	        this.frequency.chain(this.harmonicity, this._modulator.frequency);
	        this.detune.connect(this._modulator.detune);
	        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
	        this._carrier.chain(this._modulationNode, this.output);
	        this.phase = options.phase;
	        this._readOnly([
	            'frequency',
	            'detune',
	            'harmonicity'
	        ]);
	    };
	    Tone.extend(Tone.AMOscillator, Tone.Oscillator);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.AMOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'modulationType': 'square',
	        'harmonicity': 1
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.AMOscillator.prototype._start = function (time) {
	        this._modulator.start(time);
	        this._carrier.start(time);
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.AMOscillator.prototype._stop = function (time) {
	        this._modulator.stop(time);
	        this._carrier.stop(time);
	    };
	    /**
		 *  restart the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.AMOscillator.prototype.restart = function (time) {
	        this._modulator.restart(time);
	        this._carrier.restart(time);
	    };
	    /**
		 * The type of the carrier oscillator
		 * @memberOf Tone.AMOscillator#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.AMOscillator.prototype, 'type', {
	        get: function () {
	            return this._carrier.type;
	        },
	        set: function (type) {
	            this._carrier.type = type;
	        }
	    });
	    /**
		 * The type of the modulator oscillator
		 * @memberOf Tone.AMOscillator#
		 * @type {string}
		 * @name modulationType
		 */
	    Object.defineProperty(Tone.AMOscillator.prototype, 'modulationType', {
	        get: function () {
	            return this._modulator.type;
	        },
	        set: function (type) {
	            this._modulator.type = type;
	        }
	    });
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.AMOscillator#
		 * @type {number}
		 * @name phase
		 */
	    Object.defineProperty(Tone.AMOscillator.prototype, 'phase', {
	        get: function () {
	            return this._carrier.phase;
	        },
	        set: function (phase) {
	            this._carrier.phase = phase;
	            this._modulator.phase = phase;
	        }
	    });
	    /**
		 * The partials of the carrier waveform. A partial represents
		 * the amplitude at a harmonic. The first harmonic is the
		 * fundamental frequency, the second is the octave and so on
		 * following the harmonic series.
		 * Setting this value will automatically set the type to "custom".
		 * The value is an empty array when the type is not "custom".
		 * @memberOf Tone.AMOscillator#
		 * @type {Array}
		 * @name partials
		 * @example
		 * osc.partials = [1, 0.2, 0.01];
		 */
	    Object.defineProperty(Tone.AMOscillator.prototype, 'partials', {
	        get: function () {
	            return this._carrier.partials;
	        },
	        set: function (partials) {
	            this._carrier.partials = partials;
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.AMOscillator} this
		 */
	    Tone.AMOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'detune',
	            'harmonicity'
	        ]);
	        this.frequency = null;
	        this.detune = null;
	        this.harmonicity.dispose();
	        this.harmonicity = null;
	        this._carrier.dispose();
	        this._carrier = null;
	        this._modulator.dispose();
	        this._modulator = null;
	        this._modulationNode.dispose();
	        this._modulationNode = null;
	        this._modulationScale.dispose();
	        this._modulationScale = null;
	        return this;
	    };
	    return Tone.AMOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.FatOscillator
		 *
		 *  @extends {Tone.Source}
		 *  @constructor
		 *  @param {Frequency} frequency The starting frequency of the oscillator.
		 *  @param {String} type The type of the carrier oscillator.
		 *  @param {String} modulationType The type of the modulator oscillator.
		 *  @example
		 * //a sine oscillator frequency-modulated by a square wave
		 * var fmOsc = new Tone.FatOscillator("Ab3", "sine", "square").toMaster().start();
		 */
	    Tone.FatOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type',
	            'spread'
	        ], Tone.FatOscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  The oscillator's frequency
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The detune control signal.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        /**
			 *  The array of oscillators
			 *  @type {Array}
			 *  @private
			 */
	        this._oscillators = [];
	        /**
			 *  The total spread of the oscillators
			 *  @type  {Cents}
			 *  @private
			 */
	        this._spread = options.spread;
	        /**
			 *  The type of the oscillator
			 *  @type {String}
			 *  @private
			 */
	        this._type = options.type;
	        /**
			 *  The phase of the oscillators
			 *  @type {Degrees}
			 *  @private
			 */
	        this._phase = options.phase;
	        /**
			 *  The partials array
			 *  @type {Array}
			 *  @private
			 */
	        this._partials = Tone.defaultArg(options.partials, []);
	        //set the count initially
	        this.count = options.count;
	        this._readOnly([
	            'frequency',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.FatOscillator, Tone.Source);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.FatOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'phase': 0,
	        'spread': 20,
	        'count': 3,
	        'type': 'sawtooth'
	    };
	    /**
		 *  start the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.FatOscillator.prototype._start = function (time) {
	        time = this.toSeconds(time);
	        this._forEach(function (osc) {
	            osc.start(time);
	        });
	    };
	    /**
		 *  stop the oscillator
		 *  @param  {Time} [time=now]
		 *  @private
		 */
	    Tone.FatOscillator.prototype._stop = function (time) {
	        time = this.toSeconds(time);
	        this._forEach(function (osc) {
	            osc.stop(time);
	        });
	    };
	    /**
		 *  restart the oscillator
		 *  @param  {Time} time (optional) timing parameter
		 *  @private
		 */
	    Tone.FatOscillator.prototype.restart = function (time) {
	        time = this.toSeconds(time);
	        this._forEach(function (osc) {
	            osc.restart(time);
	        });
	    };
	    /**
		 *  Iterate over all of the oscillators
		 *  @param  {Function}  iterator  The iterator function
		 *  @private
		 */
	    Tone.FatOscillator.prototype._forEach = function (iterator) {
	        for (var i = 0; i < this._oscillators.length; i++) {
	            iterator.call(this, this._oscillators[i], i);
	        }
	    };
	    /**
		 * The type of the carrier oscillator
		 * @memberOf Tone.FatOscillator#
		 * @type {string}
		 * @name type
		 */
	    Object.defineProperty(Tone.FatOscillator.prototype, 'type', {
	        get: function () {
	            return this._type;
	        },
	        set: function (type) {
	            this._type = type;
	            this._forEach(function (osc) {
	                osc.type = type;
	            });
	        }
	    });
	    /**
		 * The detune spread between the oscillators. If "count" is
		 * set to 3 oscillators and the "spread" is set to 40,
		 * the three oscillators would be detuned like this: [-20, 0, 20]
		 * for a total detune spread of 40 cents.
		 * @memberOf Tone.FatOscillator#
		 * @type {Cents}
		 * @name spread
		 */
	    Object.defineProperty(Tone.FatOscillator.prototype, 'spread', {
	        get: function () {
	            return this._spread;
	        },
	        set: function (spread) {
	            this._spread = spread;
	            if (this._oscillators.length > 1) {
	                var start = -spread / 2;
	                var step = spread / (this._oscillators.length - 1);
	                this._forEach(function (osc, i) {
	                    osc.detune.value = start + step * i;
	                });
	            }
	        }
	    });
	    /**
		 * The number of detuned oscillators
		 * @memberOf Tone.FatOscillator#
		 * @type {Number}
		 * @name count
		 */
	    Object.defineProperty(Tone.FatOscillator.prototype, 'count', {
	        get: function () {
	            return this._oscillators.length;
	        },
	        set: function (count) {
	            count = Math.max(count, 1);
	            if (this._oscillators.length !== count) {
	                // var partials = this.partials;
	                // var type = this.type;
	                //dispose the previous oscillators
	                this._forEach(function (osc) {
	                    osc.dispose();
	                });
	                this._oscillators = [];
	                for (var i = 0; i < count; i++) {
	                    var osc = new Tone.Oscillator();
	                    if (this.type === Tone.Oscillator.Type.Custom) {
	                        osc.partials = this._partials;
	                    } else {
	                        osc.type = this._type;
	                    }
	                    osc.phase = this._phase;
	                    osc.volume.value = -6 - count * 1.1;
	                    this.frequency.connect(osc.frequency);
	                    this.detune.connect(osc.detune);
	                    osc.connect(this.output);
	                    this._oscillators[i] = osc;
	                }
	                //set the spread
	                this.spread = this._spread;
	                if (this.state === Tone.State.Started) {
	                    this._forEach(function (osc) {
	                        osc.start();
	                    });
	                }
	            }
	        }
	    });
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.FatOscillator#
		 * @type {Number}
		 * @name phase
		 */
	    Object.defineProperty(Tone.FatOscillator.prototype, 'phase', {
	        get: function () {
	            return this._phase;
	        },
	        set: function (phase) {
	            this._phase = phase;
	            this._forEach(function (osc) {
	                osc.phase = phase;
	            });
	        }
	    });
	    /**
		 * The partials of the carrier waveform. A partial represents
		 * the amplitude at a harmonic. The first harmonic is the
		 * fundamental frequency, the second is the octave and so on
		 * following the harmonic series.
		 * Setting this value will automatically set the type to "custom".
		 * The value is an empty array when the type is not "custom".
		 * @memberOf Tone.FatOscillator#
		 * @type {Array}
		 * @name partials
		 * @example
		 * osc.partials = [1, 0.2, 0.01];
		 */
	    Object.defineProperty(Tone.FatOscillator.prototype, 'partials', {
	        get: function () {
	            return this._partials;
	        },
	        set: function (partials) {
	            this._partials = partials;
	            this._type = Tone.Oscillator.Type.Custom;
	            this._forEach(function (osc) {
	                osc.partials = partials;
	            });
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.FatOscillator} this
		 */
	    Tone.FatOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'detune'
	        ]);
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune.dispose();
	        this.detune = null;
	        this._forEach(function (osc) {
	            osc.dispose();
	        });
	        this._oscillators = null;
	        this._partials = null;
	        return this;
	    };
	    return Tone.FatOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,
		 *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator
		 *         into one class. The oscillator class can be changed by setting the `type`.
		 *         `omniOsc.type = "pwm"` will set it to the Tone.PWMOscillator. Prefixing
		 *         any of the basic types ("sine", "square4", etc.) with "fm", "am", or "fat"
		 *         will use the FMOscillator, AMOscillator or FatOscillator respectively.
		 *         For example: `omniOsc.type = "fatsawtooth"` will create set the oscillator
		 *         to a FatOscillator of type "sawtooth".
		 *
		 *  @extends {Tone.Source}
		 *  @constructor
		 *  @param {Frequency} frequency The initial frequency of the oscillator.
		 *  @param {String} type The type of the oscillator.
		 *  @example
		 *  var omniOsc = new Tone.OmniOscillator("C#4", "pwm");
		 */
	    Tone.OmniOscillator = function () {
	        var options = Tone.defaults(arguments, [
	            'frequency',
	            'type'
	        ], Tone.OmniOscillator);
	        Tone.Source.call(this, options);
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The detune control
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        /**
			 *  the type of the oscillator source
			 *  @type {String}
			 *  @private
			 */
	        this._sourceType = undefined;
	        /**
			 *  the oscillator
			 *  @type {Tone.Oscillator}
			 *  @private
			 */
	        this._oscillator = null;
	        //set the oscillator
	        this.type = options.type;
	        this._readOnly([
	            'frequency',
	            'detune'
	        ]);
	        //set the options
	        this.set(options);
	    };
	    Tone.extend(Tone.OmniOscillator, Tone.Source);
	    /**
		 *  default values
		 *  @static
		 *  @type {Object}
		 *  @const
		 */
	    Tone.OmniOscillator.defaults = {
	        'frequency': 440,
	        'detune': 0,
	        'type': 'sine',
	        'phase': 0
	    };
	    /**
		 *  @enum {String}
		 *  @private
		 */
	    var OmniOscType = {
	        Pulse: 'PulseOscillator',
	        PWM: 'PWMOscillator',
	        Osc: 'Oscillator',
	        FM: 'FMOscillator',
	        AM: 'AMOscillator',
	        Fat: 'FatOscillator'
	    };
	    /**
		 *  start the oscillator
		 *  @param {Time} [time=now] the time to start the oscillator
		 *  @private
		 */
	    Tone.OmniOscillator.prototype._start = function (time) {
	        this._oscillator.start(time);
	    };
	    /**
		 *  start the oscillator
		 *  @param {Time} [time=now] the time to start the oscillator
		 *  @private
		 */
	    Tone.OmniOscillator.prototype._stop = function (time) {
	        this._oscillator.stop(time);
	    };
	    Tone.OmniOscillator.prototype.restart = function (time) {
	        this._oscillator.restart(time);
	    };
	    /**
		 * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or
		 * prefix the basic types with "fm", "am", or "fat" to use the FMOscillator, AMOscillator or FatOscillator
		 * types. The oscillator could also be set to "pwm" or "pulse". All of the parameters of the
		 * oscillator's class are accessible when the oscillator is set to that type, but throws an error
		 * when it's not.
		 *
		 * @memberOf Tone.OmniOscillator#
		 * @type {String}
		 * @name type
		 * @example
		 * omniOsc.type = "pwm";
		 * //modulationFrequency is parameter which is available
		 * //only when the type is "pwm".
		 * omniOsc.modulationFrequency.value = 0.5;
		 * @example
		 * //an square wave frequency modulated by a sawtooth
		 * omniOsc.type = "fmsquare";
		 * omniOsc.modulationType = "sawtooth";
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'type', {
	        get: function () {
	            var prefix = '';
	            if (this._sourceType === OmniOscType.FM) {
	                prefix = 'fm';
	            } else if (this._sourceType === OmniOscType.AM) {
	                prefix = 'am';
	            } else if (this._sourceType === OmniOscType.Fat) {
	                prefix = 'fat';
	            }
	            return prefix + this._oscillator.type;
	        },
	        set: function (type) {
	            if (type.substr(0, 2) === 'fm') {
	                this._createNewOscillator(OmniOscType.FM);
	                this._oscillator.type = type.substr(2);
	            } else if (type.substr(0, 2) === 'am') {
	                this._createNewOscillator(OmniOscType.AM);
	                this._oscillator.type = type.substr(2);
	            } else if (type.substr(0, 3) === 'fat') {
	                this._createNewOscillator(OmniOscType.Fat);
	                this._oscillator.type = type.substr(3);
	            } else if (type === 'pwm') {
	                this._createNewOscillator(OmniOscType.PWM);
	            } else if (type === 'pulse') {
	                this._createNewOscillator(OmniOscType.Pulse);
	            } else {
	                this._createNewOscillator(OmniOscType.Osc);
	                this._oscillator.type = type;
	            }
	        }
	    });
	    /**
		 * The partials of the waveform. A partial represents
		 * the amplitude at a harmonic. The first harmonic is the
		 * fundamental frequency, the second is the octave and so on
		 * following the harmonic series.
		 * Setting this value will automatically set the type to "custom".
		 * The value is an empty array when the type is not "custom".
		 * This is not available on "pwm" and "pulse" oscillator types.
		 * @memberOf Tone.OmniOscillator#
		 * @type {Array}
		 * @name partials
		 * @example
		 * osc.partials = [1, 0.2, 0.01];
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'partials', {
	        get: function () {
	            return this._oscillator.partials;
	        },
	        set: function (partials) {
	            this._oscillator.partials = partials;
	        }
	    });
	    /**
		 *  Set a member/attribute of the oscillator.
		 *  @param {Object|String} params
		 *  @param {number=} value
		 *  @param {Time=} rampTime
		 *  @returns {Tone.OmniOscillator} this
		 */
	    Tone.OmniOscillator.prototype.set = function (params, value) {
	        //make sure the type is set first
	        if (params === 'type') {
	            this.type = value;
	        } else if (Tone.isObject(params) && params.hasOwnProperty('type')) {
	            this.type = params.type;
	        }
	        //then set the rest
	        Tone.prototype.set.apply(this, arguments);
	        return this;
	    };
	    /**
		 *  connect the oscillator to the frequency and detune signals
		 *  @private
		 */
	    Tone.OmniOscillator.prototype._createNewOscillator = function (oscType) {
	        if (oscType !== this._sourceType) {
	            this._sourceType = oscType;
	            var OscillatorConstructor = Tone[oscType];
	            //short delay to avoid clicks on the change
	            var now = this.now();
	            if (this._oscillator !== null) {
	                var oldOsc = this._oscillator;
	                oldOsc.stop(now);
	                //dispose the old one
	                this.context.setTimeout(function () {
	                    oldOsc.dispose();
	                    oldOsc = null;
	                }, this.blockTime);
	            }
	            this._oscillator = new OscillatorConstructor();
	            this.frequency.connect(this._oscillator.frequency);
	            this.detune.connect(this._oscillator.detune);
	            this._oscillator.connect(this.output);
	            if (this.state === Tone.State.Started) {
	                this._oscillator.start(now);
	            }
	        }
	    };
	    /**
		 * The phase of the oscillator in degrees.
		 * @memberOf Tone.OmniOscillator#
		 * @type {Degrees}
		 * @name phase
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'phase', {
	        get: function () {
	            return this._oscillator.phase;
	        },
	        set: function (phase) {
	            this._oscillator.phase = phase;
	        }
	    });
	    /**
		 * The width of the oscillator (only if the oscillator is set to "pulse")
		 * @memberOf Tone.OmniOscillator#
		 * @type {NormalRange}
		 * @signal
		 * @name width
		 * @example
		 * var omniOsc = new Tone.OmniOscillator(440, "pulse");
		 * //can access the width attribute only if type === "pulse"
		 * omniOsc.width.value = 0.2;
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'width', {
	        get: function () {
	            if (this._sourceType === OmniOscType.Pulse) {
	                return this._oscillator.width;
	            }
	        }
	    });
	    /**
		 * The number of detuned oscillators
		 * @memberOf Tone.OmniOscillator#
		 * @type {Number}
		 * @name count
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'count', {
	        get: function () {
	            if (this._sourceType === OmniOscType.Fat) {
	                return this._oscillator.count;
	            }
	        },
	        set: function (count) {
	            if (this._sourceType === OmniOscType.Fat) {
	                this._oscillator.count = count;
	            }
	        }
	    });
	    /**
		 * The detune spread between the oscillators. If "count" is
		 * set to 3 oscillators and the "spread" is set to 40,
		 * the three oscillators would be detuned like this: [-20, 0, 20]
		 * for a total detune spread of 40 cents. See Tone.FatOscillator
		 * for more info.
		 * @memberOf Tone.OmniOscillator#
		 * @type {Cents}
		 * @name spread
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'spread', {
	        get: function () {
	            if (this._sourceType === OmniOscType.Fat) {
	                return this._oscillator.spread;
	            }
	        },
	        set: function (spread) {
	            if (this._sourceType === OmniOscType.Fat) {
	                this._oscillator.spread = spread;
	            }
	        }
	    });
	    /**
		 * The type of the modulator oscillator. Only if the oscillator
		 * is set to "am" or "fm" types. see. Tone.AMOscillator or Tone.FMOscillator
		 * for more info.
		 * @memberOf Tone.OmniOscillator#
		 * @type {String}
		 * @name modulationType
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationType', {
	        get: function () {
	            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {
	                return this._oscillator.modulationType;
	            }
	        },
	        set: function (mType) {
	            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {
	                this._oscillator.modulationType = mType;
	            }
	        }
	    });
	    /**
		 * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the
		 * ratio of the frequency of the modulating signal (mf) to the amplitude of the
		 * modulating signal (ma) -- as in ma/mf.
		 * See Tone.FMOscillator for more info.
		 * @type {Positive}
		 * @signal
		 * @name modulationIndex
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationIndex', {
	        get: function () {
	            if (this._sourceType === OmniOscType.FM) {
	                return this._oscillator.modulationIndex;
	            }
	        }
	    });
	    /**
		 *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
		 *  A harmonicity of 1 gives both oscillators the same frequency.
		 *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator
		 *  for more info.
		 *  @memberOf Tone.OmniOscillator#
		 *  @signal
		 *  @type {Positive}
		 *  @name harmonicity
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'harmonicity', {
	        get: function () {
	            if (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM) {
	                return this._oscillator.harmonicity;
	            }
	        }
	    });
	    /**
		 * The modulationFrequency Signal of the oscillator
		 * (only if the oscillator type is set to pwm). See
		 * Tone.PWMOscillator for more info.
		 * @memberOf Tone.OmniOscillator#
		 * @type {Frequency}
		 * @signal
		 * @name modulationFrequency
		 * @example
		 * var omniOsc = new Tone.OmniOscillator(440, "pwm");
		 * //can access the modulationFrequency attribute only if type === "pwm"
		 * omniOsc.modulationFrequency.value = 0.2;
		 */
	    Object.defineProperty(Tone.OmniOscillator.prototype, 'modulationFrequency', {
	        get: function () {
	            if (this._sourceType === OmniOscType.PWM) {
	                return this._oscillator.modulationFrequency;
	            }
	        }
	    });
	    /**
		 *  Clean up.
		 *  @return {Tone.OmniOscillator} this
		 */
	    Tone.OmniOscillator.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'detune'
	        ]);
	        this.detune.dispose();
	        this.detune = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this._oscillator.dispose();
	        this._oscillator = null;
	        this._sourceType = null;
	        return this;
	    };
	    return Tone.OmniOscillator;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Base-class for all instruments
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 */
	    Tone.Instrument = function (options) {
	        //get the defaults
	        options = Tone.defaultArg(options, Tone.Instrument.defaults);
	        Tone.AudioNode.call(this);
	        /**
			 *  The output and volume triming node
			 *  @type  {Tone.Volume}
			 *  @private
			 */
	        this._volume = this.output = new Tone.Volume(options.volume);
	        /**
			 * The volume of the output in decibels.
			 * @type {Decibels}
			 * @signal
			 * @example
			 * source.volume.value = -6;
			 */
	        this.volume = this._volume.volume;
	        this._readOnly('volume');
	        /**
			 * Keep track of all events scheduled to the transport
			 * when the instrument is 'synced'
			 * @type {Array<Number>}
			 * @private
			 */
	        this._scheduledEvents = [];
	    };
	    Tone.extend(Tone.Instrument, Tone.AudioNode);
	    /**
		 *  the default attributes
		 *  @type {object}
		 */
	    Tone.Instrument.defaults = {
	        /** the volume of the output in decibels */
	        'volume': 0
	    };
	    /**
		 *  @abstract
		 *  @param {string|number} note the note to trigger
		 *  @param {Time} [time=now] the time to trigger the ntoe
		 *  @param {number} [velocity=1] the velocity to trigger the note
		 */
	    Tone.Instrument.prototype.triggerAttack = Tone.noOp;
	    /**
		 *  @abstract
		 *  @param {Time} [time=now] when to trigger the release
		 */
	    Tone.Instrument.prototype.triggerRelease = Tone.noOp;
	    /**
		 * Sync the instrument to the Transport. All subsequent calls of
		 * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)
		 * will be scheduled along the transport.
		 * @example
		 * instrument.sync()
		 * //schedule 3 notes when the transport first starts
		 * instrument.triggerAttackRelease('C4', '8n', 0)
		 * instrument.triggerAttackRelease('E4', '8n', '8n')
		 * instrument.triggerAttackRelease('G4', '8n', '4n')
		 * //start the transport to hear the notes
		 * Transport.start()
		 * @returns {Tone.Instrument} this
		 */
	    Tone.Instrument.prototype.sync = function () {
	        this._syncMethod('triggerAttack', 1);
	        this._syncMethod('triggerRelease', 0);
	        return this;
	    };
	    /**
		 * Wrap the given method so that it can be synchronized
		 * @param {String} method Which method to wrap and sync
		 * @param  {Number} timePosition What position the time argument appears in
		 * @private
		 */
	    Tone.Instrument.prototype._syncMethod = function (method, timePosition) {
	        var originalMethod = this['_original_' + method] = this[method];
	        this[method] = function () {
	            var args = Array.prototype.slice.call(arguments);
	            var time = args[timePosition];
	            var id = Tone.Transport.schedule(function (t) {
	                args[timePosition] = t;
	                originalMethod.apply(this, args);
	            }.bind(this), time);
	            this._scheduledEvents.push(id);
	        }.bind(this);
	    };
	    /**
		 * Unsync the instrument from the Transport
		 * @returns {Tone.Instrument} this
		 */
	    Tone.Instrument.prototype.unsync = function () {
	        this._scheduledEvents.forEach(function (id) {
	            Tone.Transport.clear(id);
	        });
	        this._scheduledEvents = [];
	        if (this._original_triggerAttack) {
	            this.triggerAttack = this._original_triggerAttack;
	            this.triggerRelease = this._original_triggerRelease;
	        }
	        return this;
	    };
	    /**
		 *  Trigger the attack and then the release after the duration.
		 *  @param  {Frequency} note     The note to trigger.
		 *  @param  {Time} duration How long the note should be held for before
		 *                          triggering the release. This value must be greater than 0.
		 *  @param {Time} [time=now]  When the note should be triggered.
		 *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.
		 *  @returns {Tone.Instrument} this
		 *  @example
		 * //trigger "C4" for the duration of an 8th note
		 * synth.triggerAttackRelease("C4", "8n");
		 */
	    Tone.Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {
	        time = this.toSeconds(time);
	        duration = this.toSeconds(duration);
	        this.triggerAttack(note, time, velocity);
	        this.triggerRelease(time + duration);
	        return this;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.Instrument} this
		 */
	    Tone.Instrument.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._volume.dispose();
	        this._volume = null;
	        this._writable(['volume']);
	        this.volume = null;
	        this.unsync();
	        this._scheduledEvents = null;
	        return this;
	    };
	    return Tone.Instrument;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  This is an abstract base class for other monophonic instruments to 
		 *          extend. IMPORTANT: It does not make any sound on its own and
		 *          shouldn't be directly instantiated.
		 *
		 *  @constructor
		 *  @abstract
		 *  @extends {Tone.Instrument}
		 */
	    Tone.Monophonic = function (options) {
	        //get the defaults
	        options = Tone.defaultArg(options, Tone.Monophonic.defaults);
	        Tone.Instrument.call(this, options);
	        /**
			 *  The glide time between notes. 
			 *  @type {Time}
			 */
	        this.portamento = options.portamento;
	    };
	    Tone.extend(Tone.Monophonic, Tone.Instrument);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Monophonic.defaults = { 'portamento': 0 };
	    /**
		 *  Trigger the attack of the note optionally with a given velocity. 
		 *  
		 *  
		 *  @param  {Frequency} note     The note to trigger.
		 *  @param  {Time} [time=now]     When the note should start.
		 *  @param  {number} [velocity=1] velocity The velocity scaler 
		 *                                determines how "loud" the note 
		 *                                will be triggered.
		 *  @returns {Tone.Monophonic} this
		 *  @example
		 * synth.triggerAttack("C4");
		 *  @example
		 * //trigger the note a half second from now at half velocity
		 * synth.triggerAttack("C4", "+0.5", 0.5);
		 */
	    Tone.Monophonic.prototype.triggerAttack = function (note, time, velocity) {
	        time = this.toSeconds(time);
	        this._triggerEnvelopeAttack(time, velocity);
	        this.setNote(note, time);
	        return this;
	    };
	    /**
		 *  Trigger the release portion of the envelope
		 *  @param  {Time} [time=now] If no time is given, the release happens immediatly
		 *  @returns {Tone.Monophonic} this
		 *  @example
		 * synth.triggerRelease();
		 */
	    Tone.Monophonic.prototype.triggerRelease = function (time) {
	        time = this.toSeconds(time);
	        this._triggerEnvelopeRelease(time);
	        return this;
	    };
	    /**
		 *  override this method with the actual method
		 *  @abstract
		 *  @private
		 */
	    Tone.Monophonic.prototype._triggerEnvelopeAttack = function () {
	    };
	    /**
		 *  override this method with the actual method
		 *  @abstract
		 *  @private
		 */
	    Tone.Monophonic.prototype._triggerEnvelopeRelease = function () {
	    };
	    /**
		 *  Get the level of the output at the given time. Measures
		 *  the envelope(s) value at the time. 
		 *  @param {Time} time The time to query the envelope value
		 *  @return {NormalRange} The output level between 0-1
		 */
	    Tone.Monophonic.prototype.getLevelAtTime = function (time) {
	        time = this.toSeconds(time);
	        return this.envelope.getValueAtTime(time);
	    };
	    /**
		 *  Set the note at the given time. If no time is given, the note
		 *  will set immediately. 
		 *  @param {Frequency} note The note to change to.
		 *  @param  {Time} [time=now] The time when the note should be set. 
		 *  @returns {Tone.Monophonic} this
		 * @example
		 * //change to F#6 in one quarter note from now.
		 * synth.setNote("F#6", "+4n");
		 * @example
		 * //change to Bb4 right now
		 * synth.setNote("Bb4");
		 */
	    Tone.Monophonic.prototype.setNote = function (note, time) {
	        time = this.toSeconds(time);
	        if (this.portamento > 0 && this.getLevelAtTime(time) > 0.05) {
	            var portTime = this.toSeconds(this.portamento);
	            this.frequency.exponentialRampTo(note, portTime, time);
	        } else {
	            this.frequency.setValueAtTime(note, time);
	        }
	        return this;
	    };
	    return Tone.Monophonic;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator
		 *          routed through a Tone.AmplitudeEnvelope.
		 *          <img src="https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231">
		 *
		 *  @constructor
		 *  @extends {Tone.Monophonic}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 *  @example
		 * var synth = new Tone.Synth().toMaster();
		 * synth.triggerAttackRelease("C4", "8n");
		 */
	    Tone.Synth = function (options) {
	        //get the defaults
	        options = Tone.defaultArg(options, Tone.Synth.defaults);
	        Tone.Monophonic.call(this, options);
	        /**
			 *  The oscillator.
			 *  @type {Tone.OmniOscillator}
			 */
	        this.oscillator = new Tone.OmniOscillator(options.oscillator);
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this.oscillator.frequency;
	        /**
			 *  The detune control.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this.oscillator.detune;
	        /**
			 *  The amplitude envelope.
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);
	        //connect the oscillators to the output
	        this.oscillator.chain(this.envelope, this.output);
	        this._readOnly([
	            'oscillator',
	            'frequency',
	            'detune',
	            'envelope'
	        ]);
	    };
	    Tone.extend(Tone.Synth, Tone.Monophonic);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.Synth.defaults = {
	        'oscillator': { 'type': 'triangle' },
	        'envelope': {
	            'attack': 0.005,
	            'decay': 0.1,
	            'sustain': 0.3,
	            'release': 1
	        }
	    };
	    /**
		 *  start the attack portion of the envelope
		 *  @param {Time} [time=now] the time the attack should start
		 *  @param {number} [velocity=1] the velocity of the note (0-1)
		 *  @returns {Tone.Synth} this
		 *  @private
		 */
	    Tone.Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {
	        //the envelopes
	        this.envelope.triggerAttack(time, velocity);
	        this.oscillator.start(time);
	        //if there is no release portion, stop the oscillator
	        if (this.envelope.sustain === 0) {
	            this.oscillator.stop(time + this.envelope.attack + this.envelope.decay);
	        }
	        return this;
	    };
	    /**
		 *  start the release portion of the envelope
		 *  @param {Time} [time=now] the time the release should start
		 *  @returns {Tone.Synth} this
		 *  @private
		 */
	    Tone.Synth.prototype._triggerEnvelopeRelease = function (time) {
	        time = this.toSeconds(time);
	        this.envelope.triggerRelease(time);
	        this.oscillator.stop(time + this.envelope.release);
	        return this;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.Synth} this
		 */
	    Tone.Synth.prototype.dispose = function () {
	        Tone.Monophonic.prototype.dispose.call(this);
	        this._writable([
	            'oscillator',
	            'frequency',
	            'detune',
	            'envelope'
	        ]);
	        this.oscillator.dispose();
	        this.oscillator = null;
	        this.envelope.dispose();
	        this.envelope = null;
	        this.frequency = null;
	        this.detune = null;
	        return this;
	    };
	    return Tone.Synth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  AMSynth uses the output of one Tone.Synth to modulate the
		 *          amplitude of another Tone.Synth. The harmonicity (the ratio between
		 *          the two signals) affects the timbre of the output signal greatly.
		 *          Read more about Amplitude Modulation Synthesis on
		 *          [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).
		 *          <img src="https://docs.google.com/drawings/d/1TQu8Ed4iFr1YTLKpB3U1_hur-UwBrh5gdBXc8BxfGKw/pub?w=1009&h=457">
		 *
		 *  @constructor
		 *  @extends {Tone.Monophonic}
		 *  @param {Object} [options] the options available for the synth
		 *                            see defaults below
		 *  @example
		 * var synth = new Tone.AMSynth().toMaster();
		 * synth.triggerAttackRelease("C4", "4n");
		 */
	    Tone.AMSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.AMSynth.defaults);
	        Tone.Monophonic.call(this, options);
	        /**
			 *  The carrier voice.
			 *  @type {Tone.Synth}
			 *  @private
			 */
	        this._carrier = new Tone.Synth();
	        this._carrier.volume.value = -10;
	        /**
			 *  The carrier's oscillator
			 *  @type {Tone.Oscillator}
			 */
	        this.oscillator = this._carrier.oscillator;
	        /**
			 *  The carrier's envelope
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.envelope = this._carrier.envelope.set(options.envelope);
	        /**
			 *  The modulator voice.
			 *  @type {Tone.Synth}
			 *  @private
			 */
	        this._modulator = new Tone.Synth();
	        this._modulator.volume.value = -10;
	        /**
			 *  The modulator's oscillator which is applied
			 *  to the amplitude of the oscillator
			 *  @type {Tone.Oscillator}
			 */
	        this.modulation = this._modulator.oscillator.set(options.modulation);
	        /**
			 *  The modulator's envelope
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);
	        /**
			 *  The frequency.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);
	        /**
			 *  The detune in cents
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        /**
			 *  Harmonicity is the ratio between the two voices. A harmonicity of
			 *  1 is no change. Harmonicity = 2 means a change of an octave.
			 *  @type {Positive}
			 *  @signal
			 *  @example
			 * //pitch voice1 an octave below voice0
			 * synth.harmonicity.value = 0.5;
			 */
	        this.harmonicity = new Tone.Multiply(options.harmonicity);
	        this.harmonicity.units = Tone.Type.Positive;
	        /**
			 *  convert the -1,1 output to 0,1
			 *  @type {Tone.AudioToGain}
			 *  @private
			 */
	        this._modulationScale = new Tone.AudioToGain();
	        /**
			 *  the node where the modulation happens
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._modulationNode = new Tone.Gain();
	        //control the two voices frequency
	        this.frequency.connect(this._carrier.frequency);
	        this.frequency.chain(this.harmonicity, this._modulator.frequency);
	        this.detune.fan(this._carrier.detune, this._modulator.detune);
	        this._modulator.chain(this._modulationScale, this._modulationNode.gain);
	        this._carrier.chain(this._modulationNode, this.output);
	        this._readOnly([
	            'frequency',
	            'harmonicity',
	            'oscillator',
	            'envelope',
	            'modulation',
	            'modulationEnvelope',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.AMSynth, Tone.Monophonic);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.AMSynth.defaults = {
	        'harmonicity': 3,
	        'detune': 0,
	        'oscillator': { 'type': 'sine' },
	        'envelope': {
	            'attack': 0.01,
	            'decay': 0.01,
	            'sustain': 1,
	            'release': 0.5
	        },
	        'modulation': { 'type': 'square' },
	        'modulationEnvelope': {
	            'attack': 0.5,
	            'decay': 0,
	            'sustain': 1,
	            'release': 0.5
	        }
	    };
	    /**
		 *  trigger the attack portion of the note
		 *
		 *  @param  {Time} [time=now] the time the note will occur
		 *  @param {NormalRange} [velocity=1] the velocity of the note
		 *  @private
		 *  @returns {Tone.AMSynth} this
		 */
	    Tone.AMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {
	        //the port glide
	        time = this.toSeconds(time);
	        //the envelopes
	        this._carrier._triggerEnvelopeAttack(time, velocity);
	        this._modulator._triggerEnvelopeAttack(time);
	        return this;
	    };
	    /**
		 *  trigger the release portion of the note
		 *
		 *  @param  {Time} [time=now] the time the note will release
		 *  @private
		 *  @returns {Tone.AMSynth} this
		 */
	    Tone.AMSynth.prototype._triggerEnvelopeRelease = function (time) {
	        this._carrier._triggerEnvelopeRelease(time);
	        this._modulator._triggerEnvelopeRelease(time);
	        return this;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.AMSynth} this
		 */
	    Tone.AMSynth.prototype.dispose = function () {
	        Tone.Monophonic.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'harmonicity',
	            'oscillator',
	            'envelope',
	            'modulation',
	            'modulationEnvelope',
	            'detune'
	        ]);
	        this._carrier.dispose();
	        this._carrier = null;
	        this._modulator.dispose();
	        this._modulator = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune.dispose();
	        this.detune = null;
	        this.harmonicity.dispose();
	        this.harmonicity = null;
	        this._modulationScale.dispose();
	        this._modulationScale = null;
	        this._modulationNode.dispose();
	        this._modulationNode = null;
	        this.oscillator = null;
	        this.envelope = null;
	        this.modulationEnvelope = null;
	        this.modulation = null;
	        return this;
	    };
	    return Tone.AMSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.MonoSynth is composed of one oscillator, one filter, and two envelopes.
		 *          The amplitude of the Tone.Oscillator and the cutoff frequency of the
		 *          Tone.Filter are controlled by Tone.Envelopes.
		 *          <img src="https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240">
		 *
		 *  @constructor
		 *  @extends {Tone.Monophonic}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 *  @example
		 * var synth = new Tone.MonoSynth({
		 * 	"oscillator" : {
		 * 		"type" : "square"
		 *  },
		 *  "envelope" : {
		 *  	"attack" : 0.1
		 *  }
		 * }).toMaster();
		 * synth.triggerAttackRelease("C4", "8n");
		 */
	    Tone.MonoSynth = function (options) {
	        //get the defaults
	        options = Tone.defaultArg(options, Tone.MonoSynth.defaults);
	        Tone.Monophonic.call(this, options);
	        /**
			 *  The oscillator.
			 *  @type {Tone.OmniOscillator}
			 */
	        this.oscillator = new Tone.OmniOscillator(options.oscillator);
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = this.oscillator.frequency;
	        /**
			 *  The detune control.
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = this.oscillator.detune;
	        /**
			 *  The filter.
			 *  @type {Tone.Filter}
			 */
	        this.filter = new Tone.Filter(options.filter);
	        /**
			 *  The filter envelope.
			 *  @type {Tone.FrequencyEnvelope}
			 */
	        this.filterEnvelope = new Tone.FrequencyEnvelope(options.filterEnvelope);
	        /**
			 *  The amplitude envelope.
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);
	        //connect the oscillators to the output
	        this.oscillator.chain(this.filter, this.envelope, this.output);
	        //connect the filter envelope
	        this.filterEnvelope.connect(this.filter.frequency);
	        this._readOnly([
	            'oscillator',
	            'frequency',
	            'detune',
	            'filter',
	            'filterEnvelope',
	            'envelope'
	        ]);
	    };
	    Tone.extend(Tone.MonoSynth, Tone.Monophonic);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.MonoSynth.defaults = {
	        'frequency': 'C4',
	        'detune': 0,
	        'oscillator': { 'type': 'square' },
	        'filter': {
	            'Q': 6,
	            'type': 'lowpass',
	            'rolloff': -24
	        },
	        'envelope': {
	            'attack': 0.005,
	            'decay': 0.1,
	            'sustain': 0.9,
	            'release': 1
	        },
	        'filterEnvelope': {
	            'attack': 0.06,
	            'decay': 0.2,
	            'sustain': 0.5,
	            'release': 2,
	            'baseFrequency': 200,
	            'octaves': 7,
	            'exponent': 2
	        }
	    };
	    /**
		 *  start the attack portion of the envelope
		 *  @param {Time} [time=now] the time the attack should start
		 *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)
		 *  @returns {Tone.MonoSynth} this
		 *  @private
		 */
	    Tone.MonoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {
	        time = this.toSeconds(time);
	        //the envelopes
	        this.envelope.triggerAttack(time, velocity);
	        this.filterEnvelope.triggerAttack(time);
	        this.oscillator.start(time);
	        if (this.envelope.sustain === 0) {
	            this.oscillator.stop(time + this.envelope.attack + this.envelope.decay);
	        }
	        return this;
	    };
	    /**
		 *  start the release portion of the envelope
		 *  @param {Time} [time=now] the time the release should start
		 *  @returns {Tone.MonoSynth} this
		 *  @private
		 */
	    Tone.MonoSynth.prototype._triggerEnvelopeRelease = function (time) {
	        this.envelope.triggerRelease(time);
	        this.filterEnvelope.triggerRelease(time);
	        this.oscillator.stop(time + this.envelope.release);
	        return this;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.MonoSynth} this
		 */
	    Tone.MonoSynth.prototype.dispose = function () {
	        Tone.Monophonic.prototype.dispose.call(this);
	        this._writable([
	            'oscillator',
	            'frequency',
	            'detune',
	            'filter',
	            'filterEnvelope',
	            'envelope'
	        ]);
	        this.oscillator.dispose();
	        this.oscillator = null;
	        this.envelope.dispose();
	        this.envelope = null;
	        this.filterEnvelope.dispose();
	        this.filterEnvelope = null;
	        this.filter.dispose();
	        this.filter = null;
	        this.frequency = null;
	        this.detune = null;
	        return this;
	    };
	    return Tone.MonoSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.DuoSynth is a monophonic synth composed of two
		 *          MonoSynths run in parallel with control over the
		 *          frequency ratio between the two voices and vibrato effect.
		 *          <img src="https://docs.google.com/drawings/d/1bL4GXvfRMMlqS7XyBm9CjL9KJPSUKbcdBNpqOlkFLxk/pub?w=1012&h=448">
		 *
		 *  @constructor
		 *  @extends {Tone.Monophonic}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 *  @example
		 * var duoSynth = new Tone.DuoSynth().toMaster();
		 * duoSynth.triggerAttackRelease("C4", "2n");
		 */
	    Tone.DuoSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.DuoSynth.defaults);
	        Tone.Monophonic.call(this, options);
	        /**
			 *  the first voice
			 *  @type {Tone.MonoSynth}
			 */
	        this.voice0 = new Tone.MonoSynth(options.voice0);
	        this.voice0.volume.value = -10;
	        /**
			 *  the second voice
			 *  @type {Tone.MonoSynth}
			 */
	        this.voice1 = new Tone.MonoSynth(options.voice1);
	        this.voice1.volume.value = -10;
	        /**
			 *  The vibrato LFO.
			 *  @type {Tone.LFO}
			 *  @private
			 */
	        this._vibrato = new Tone.LFO(options.vibratoRate, -50, 50);
	        this._vibrato.start();
	        /**
			 * the vibrato frequency
			 * @type {Frequency}
			 * @signal
			 */
	        this.vibratoRate = this._vibrato.frequency;
	        /**
			 *  the vibrato gain
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._vibratoGain = new Tone.Gain(options.vibratoAmount, Tone.Type.Positive);
	        /**
			 * The amount of vibrato
			 * @type {Positive}
			 * @signal
			 */
	        this.vibratoAmount = this._vibratoGain.gain;
	        /**
			 *  the frequency control
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);
	        /**
			 *  Harmonicity is the ratio between the two voices. A harmonicity of
			 *  1 is no change. Harmonicity = 2 means a change of an octave.
			 *  @type {Positive}
			 *  @signal
			 *  @example
			 * //pitch voice1 an octave below voice0
			 * duoSynth.harmonicity.value = 0.5;
			 */
	        this.harmonicity = new Tone.Multiply(options.harmonicity);
	        this.harmonicity.units = Tone.Type.Positive;
	        //control the two voices frequency
	        this.frequency.connect(this.voice0.frequency);
	        this.frequency.chain(this.harmonicity, this.voice1.frequency);
	        this._vibrato.connect(this._vibratoGain);
	        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);
	        this.voice0.connect(this.output);
	        this.voice1.connect(this.output);
	        this._readOnly([
	            'voice0',
	            'voice1',
	            'frequency',
	            'vibratoAmount',
	            'vibratoRate'
	        ]);
	    };
	    Tone.extend(Tone.DuoSynth, Tone.Monophonic);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.DuoSynth.defaults = {
	        'vibratoAmount': 0.5,
	        'vibratoRate': 5,
	        'harmonicity': 1.5,
	        'voice0': {
	            'volume': -10,
	            'portamento': 0,
	            'oscillator': { 'type': 'sine' },
	            'filterEnvelope': {
	                'attack': 0.01,
	                'decay': 0,
	                'sustain': 1,
	                'release': 0.5
	            },
	            'envelope': {
	                'attack': 0.01,
	                'decay': 0,
	                'sustain': 1,
	                'release': 0.5
	            }
	        },
	        'voice1': {
	            'volume': -10,
	            'portamento': 0,
	            'oscillator': { 'type': 'sine' },
	            'filterEnvelope': {
	                'attack': 0.01,
	                'decay': 0,
	                'sustain': 1,
	                'release': 0.5
	            },
	            'envelope': {
	                'attack': 0.01,
	                'decay': 0,
	                'sustain': 1,
	                'release': 0.5
	            }
	        }
	    };
	    /**
		 *  start the attack portion of the envelopes
		 *
		 *  @param {Time} [time=now] the time the attack should start
		 *  @param {NormalRange} [velocity=1] the velocity of the note (0-1)
		 *  @returns {Tone.DuoSynth} this
		 *  @private
		 */
	    Tone.DuoSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {
	        time = this.toSeconds(time);
	        this.voice0._triggerEnvelopeAttack(time, velocity);
	        this.voice1._triggerEnvelopeAttack(time, velocity);
	        return this;
	    };
	    /**
		 *  start the release portion of the envelopes
		 *
		 *  @param {Time} [time=now] the time the release should start
		 *  @returns {Tone.DuoSynth} this
		 *  @private
		 */
	    Tone.DuoSynth.prototype._triggerEnvelopeRelease = function (time) {
	        this.voice0._triggerEnvelopeRelease(time);
	        this.voice1._triggerEnvelopeRelease(time);
	        return this;
	    };
	    /**
		 *  Get the level of the output at the given time. Measures
		 *  the envelope(s) value at the time. 
		 *  @param {Time} time The time to query the envelope value
		 *  @return {NormalRange} The output level between 0-1
		 */
	    Tone.DuoSynth.prototype.getLevelAtTime = function (time) {
	        return (this.voice0.getLevelAtTime(time) + this.voice1.getLevelAtTime(time)) / 2;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.DuoSynth} this
		 */
	    Tone.DuoSynth.prototype.dispose = function () {
	        Tone.Monophonic.prototype.dispose.call(this);
	        this._writable([
	            'voice0',
	            'voice1',
	            'frequency',
	            'vibratoAmount',
	            'vibratoRate'
	        ]);
	        this.voice0.dispose();
	        this.voice0 = null;
	        this.voice1.dispose();
	        this.voice1 = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this._vibratoGain.dispose();
	        this._vibratoGain = null;
	        this._vibrato = null;
	        this.harmonicity.dispose();
	        this.harmonicity = null;
	        this.vibratoAmount.dispose();
	        this.vibratoAmount = null;
	        this.vibratoRate = null;
	        return this;
	    };
	    return Tone.DuoSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  FMSynth is composed of two Tone.Synths where one Tone.Synth modulates
		 *          the frequency of a second Tone.Synth. A lot of spectral content
		 *          can be explored using the modulationIndex parameter. Read more about
		 *          frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).
		 *          <img src="https://docs.google.com/drawings/d/1h0PUDZXPgi4Ikx6bVT6oncrYPLluFKy7lj53puxj-DM/pub?w=902&h=462">
		 *
		 *  @constructor
		 *  @extends {Tone.Monophonic}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 *  @example
		 * var fmSynth = new Tone.FMSynth().toMaster();
		 * fmSynth.triggerAttackRelease("C5", "4n");
		 */
	    Tone.FMSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.FMSynth.defaults);
	        Tone.Monophonic.call(this, options);
	        /**
			 *  The carrier voice.
			 *  @type {Tone.Synth}
			 *  @private
			 */
	        this._carrier = new Tone.Synth(options.carrier);
	        this._carrier.volume.value = -10;
	        /**
			 *  The carrier's oscillator
			 *  @type {Tone.Oscillator}
			 */
	        this.oscillator = this._carrier.oscillator;
	        /**
			 *  The carrier's envelope
			 *  @type {Tone.Oscillator}
			 */
	        this.envelope = this._carrier.envelope.set(options.envelope);
	        /**
			 *  The modulator voice.
			 *  @type {Tone.Synth}
			 *  @private
			 */
	        this._modulator = new Tone.Synth(options.modulator);
	        this._modulator.volume.value = -10;
	        /**
			 *  The modulator's oscillator which is applied
			 *  to the amplitude of the oscillator
			 *  @type {Tone.Oscillator}
			 */
	        this.modulation = this._modulator.oscillator.set(options.modulation);
	        /**
			 *  The modulator's envelope
			 *  @type {Tone.Oscillator}
			 */
	        this.modulationEnvelope = this._modulator.envelope.set(options.modulationEnvelope);
	        /**
			 *  The frequency control.
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(440, Tone.Type.Frequency);
	        /**
			 *  The detune in cents
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        /**
			 *  Harmonicity is the ratio between the two voices. A harmonicity of
			 *  1 is no change. Harmonicity = 2 means a change of an octave.
			 *  @type {Positive}
			 *  @signal
			 *  @example
			 * //pitch voice1 an octave below voice0
			 * synth.harmonicity.value = 0.5;
			 */
	        this.harmonicity = new Tone.Multiply(options.harmonicity);
	        this.harmonicity.units = Tone.Type.Positive;
	        /**
			 *  The modulation index which essentially the depth or amount of the modulation. It is the
			 *  ratio of the frequency of the modulating signal (mf) to the amplitude of the
			 *  modulating signal (ma) -- as in ma/mf.
			 *	@type {Positive}
			 *	@signal
			 */
	        this.modulationIndex = new Tone.Multiply(options.modulationIndex);
	        this.modulationIndex.units = Tone.Type.Positive;
	        /**
			 *  the node where the modulation happens
			 *  @type {GainNode}
			 *  @private
			 */
	        this._modulationNode = new Tone.Gain(0);
	        //control the two voices frequency
	        this.frequency.connect(this._carrier.frequency);
	        this.frequency.chain(this.harmonicity, this._modulator.frequency);
	        this.frequency.chain(this.modulationIndex, this._modulationNode);
	        this.detune.fan(this._carrier.detune, this._modulator.detune);
	        this._modulator.connect(this._modulationNode.gain);
	        this._modulationNode.connect(this._carrier.frequency);
	        this._carrier.connect(this.output);
	        this._readOnly([
	            'frequency',
	            'harmonicity',
	            'modulationIndex',
	            'oscillator',
	            'envelope',
	            'modulation',
	            'modulationEnvelope',
	            'detune'
	        ]);
	    };
	    Tone.extend(Tone.FMSynth, Tone.Monophonic);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.FMSynth.defaults = {
	        'harmonicity': 3,
	        'modulationIndex': 10,
	        'detune': 0,
	        'oscillator': { 'type': 'sine' },
	        'envelope': {
	            'attack': 0.01,
	            'decay': 0.01,
	            'sustain': 1,
	            'release': 0.5
	        },
	        'modulation': { 'type': 'square' },
	        'modulationEnvelope': {
	            'attack': 0.5,
	            'decay': 0,
	            'sustain': 1,
	            'release': 0.5
	        }
	    };
	    /**
		 * 	trigger the attack portion of the note
		 *
		 *  @param  {Time} [time=now] the time the note will occur
		 *  @param {number} [velocity=1] the velocity of the note
		 *  @returns {Tone.FMSynth} this
		 *  @private
		 */
	    Tone.FMSynth.prototype._triggerEnvelopeAttack = function (time, velocity) {
	        time = this.toSeconds(time);
	        //the envelopes
	        this._carrier._triggerEnvelopeAttack(time, velocity);
	        this._modulator._triggerEnvelopeAttack(time);
	        return this;
	    };
	    /**
		 *  trigger the release portion of the note
		 *
		 *  @param  {Time} [time=now] the time the note will release
		 *  @returns {Tone.FMSynth} this
		 *  @private
		 */
	    Tone.FMSynth.prototype._triggerEnvelopeRelease = function (time) {
	        time = this.toSeconds(time);
	        this._carrier._triggerEnvelopeRelease(time);
	        this._modulator._triggerEnvelopeRelease(time);
	        return this;
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.FMSynth} this
		 */
	    Tone.FMSynth.prototype.dispose = function () {
	        Tone.Monophonic.prototype.dispose.call(this);
	        this._writable([
	            'frequency',
	            'harmonicity',
	            'modulationIndex',
	            'oscillator',
	            'envelope',
	            'modulation',
	            'modulationEnvelope',
	            'detune'
	        ]);
	        this._carrier.dispose();
	        this._carrier = null;
	        this._modulator.dispose();
	        this._modulator = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this.detune.dispose();
	        this.detune = null;
	        this.modulationIndex.dispose();
	        this.modulationIndex = null;
	        this.harmonicity.dispose();
	        this.harmonicity = null;
	        this._modulationNode.dispose();
	        this._modulationNode = null;
	        this.oscillator = null;
	        this.envelope = null;
	        this.modulationEnvelope = null;
	        this.modulation = null;
	        return this;
	    };
	    return Tone.FMSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.MembraneSynth makes kick and tom sounds using a single oscillator
		 *          with an amplitude envelope and frequency ramp. A Tone.OmniOscillator
		 *          is routed through a Tone.AmplitudeEnvelope to the output. The drum
		 *          quality of the sound comes from the frequency envelope applied
		 *          during Tone.MembraneSynth.triggerAttack(note). The frequency envelope
		 *          starts at <code>note * .octaves</code> and ramps to <code>note</code>
		 *          over the duration of <code>.pitchDecay</code>.
		 *
		 *  @constructor
		 *  @extends {Tone.Instrument}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 *  @example
		 * var synth = new Tone.MembraneSynth().toMaster();
		 * synth.triggerAttackRelease("C2", "8n");
		 */
	    Tone.MembraneSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.MembraneSynth.defaults);
	        Tone.Instrument.call(this, options);
	        /**
			 *  The oscillator.
			 *  @type {Tone.OmniOscillator}
			 */
	        this.oscillator = new Tone.OmniOscillator(options.oscillator);
	        /**
			 *  The amplitude envelope.
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);
	        /**
			 *  The number of octaves the pitch envelope ramps.
			 *  @type {Positive}
			 */
	        this.octaves = options.octaves;
	        /**
			 *  The amount of time the frequency envelope takes.
			 *  @type {Time}
			 */
	        this.pitchDecay = options.pitchDecay;
	        this.oscillator.chain(this.envelope, this.output);
	        this._readOnly([
	            'oscillator',
	            'envelope'
	        ]);
	    };
	    Tone.extend(Tone.MembraneSynth, Tone.Instrument);
	    /**
		 *  @static
		 *  @type {Object}
		 */
	    Tone.MembraneSynth.defaults = {
	        'pitchDecay': 0.05,
	        'octaves': 10,
	        'oscillator': { 'type': 'sine' },
	        'envelope': {
	            'attack': 0.001,
	            'decay': 0.4,
	            'sustain': 0.01,
	            'release': 1.4,
	            'attackCurve': 'exponential'
	        }
	    };
	    /**
		 *  Trigger the note at the given time with the given velocity.
		 *
		 *  @param  {Frequency} note     the note
		 *  @param  {Time} [time=now]     the time, if not given is now
		 *  @param  {number} [velocity=1] velocity defaults to 1
		 *  @returns {Tone.MembraneSynth} this
		 *  @example
		 *  kick.triggerAttack(60);
		 */
	    Tone.MembraneSynth.prototype.triggerAttack = function (note, time, velocity) {
	        time = this.toSeconds(time);
	        note = this.toFrequency(note);
	        var maxNote = note * this.octaves;
	        this.oscillator.frequency.setValueAtTime(maxNote, time);
	        this.oscillator.frequency.exponentialRampToValueAtTime(note, time + this.toSeconds(this.pitchDecay));
	        this.envelope.triggerAttack(time, velocity);
	        this.oscillator.start(time);
	        return this;
	    };
	    /**
		 *  Trigger the release portion of the note.
		 *
		 *  @param  {Time} [time=now] the time the note will release
		 *  @returns {Tone.MembraneSynth} this
		 */
	    Tone.MembraneSynth.prototype.triggerRelease = function (time) {
	        time = this.toSeconds(time);
	        this.envelope.triggerRelease(time);
	        this.oscillator.stop(time + this.envelope.release);
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.MembraneSynth} this
		 */
	    Tone.MembraneSynth.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        this._writable([
	            'oscillator',
	            'envelope'
	        ]);
	        this.oscillator.dispose();
	        this.oscillator = null;
	        this.envelope.dispose();
	        this.envelope = null;
	        return this;
	    };
	    return Tone.MembraneSynth;
	});
	Module(function (Tone) {
	    /**
		 *  Inharmonic ratio of frequencies based on the Roland TR-808
		 *  Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model
		 *  @private
		 *  @static
		 *  @type {Array}
		 */
	    var inharmRatios = [
	        1,
	        1.483,
	        1.932,
	        2.546,
	        2.63,
	        3.897
	    ];
	    /**
		 *  @class  A highly inharmonic and spectrally complex source with a highpass filter
		 *          and amplitude envelope which is good for making metalophone sounds. Based
		 *          on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).
		 *          Inspiration from [Sound on Sound](https://web.archive.org/web/20160610143924/https://www.soundonsound.com/sos/jul02/articles/synthsecrets0702.asp).
		 *
		 *  @constructor
		 *  @extends {Tone.Instrument}
		 *  @param {Object} [options] The options availble for the synth
		 *                             see defaults below
		 */
	    Tone.MetalSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.MetalSynth.defaults);
	        Tone.Instrument.call(this, options);
	        /**
			 *  The frequency of the cymbal
			 *  @type  {Frequency}
			 *  @signal
			 */
	        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);
	        /**
			 *  The array of FMOscillators
			 *  @type  {Array}
			 *  @private
			 */
	        this._oscillators = [];
	        /**
			 *  The frequency multipliers
			 *  @type {Array}
			 *  @private
			 */
	        this._freqMultipliers = [];
	        /**
			 *  The amplitude for the body
			 *  @type {Tone.Gain}
			 *  @private
			 */
	        this._amplitue = new Tone.Gain(0).connect(this.output);
	        /**
			 *  highpass the output
			 *  @type {Tone.Filter}
			 *  @private
			 */
	        this._highpass = new Tone.Filter({
	            'type': 'highpass',
	            'Q': -3.0102999566398125
	        }).connect(this._amplitue);
	        /**
			 *  The number of octaves the highpass
			 *  filter frequency ramps
			 *  @type {Number}
			 *  @private
			 */
	        this._octaves = options.octaves;
	        /**
			 *  Scale the body envelope
			 *  for the bandpass
			 *  @type {Tone.Scale}
			 *  @private
			 */
	        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);
	        /**
			 *  The envelope which is connected both to the
			 *  amplitude and highpass filter's cutoff frequency
			 *  @type  {Tone.Envelope}
			 */
	        this.envelope = new Tone.Envelope({
	            'attack': options.envelope.attack,
	            'attackCurve': 'linear',
	            'decay': options.envelope.decay,
	            'sustain': 0,
	            'release': options.envelope.release
	        }).chain(this._filterFreqScaler, this._highpass.frequency);
	        this.envelope.connect(this._amplitue.gain);
	        for (var i = 0; i < inharmRatios.length; i++) {
	            var osc = new Tone.FMOscillator({
	                'type': 'square',
	                'modulationType': 'square',
	                'harmonicity': options.harmonicity,
	                'modulationIndex': options.modulationIndex
	            });
	            osc.connect(this._highpass);
	            this._oscillators[i] = osc;
	            var mult = new Tone.Multiply(inharmRatios[i]);
	            this._freqMultipliers[i] = mult;
	            this.frequency.chain(mult, osc.frequency);
	        }
	        //set the octaves
	        this.octaves = options.octaves;
	    };
	    Tone.extend(Tone.MetalSynth, Tone.Instrument);
	    /**
		 *  default values
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.MetalSynth.defaults = {
	        'frequency': 200,
	        'envelope': {
	            'attack': 0.001,
	            'decay': 1.4,
	            'release': 0.2
	        },
	        'harmonicity': 5.1,
	        'modulationIndex': 32,
	        'resonance': 4000,
	        'octaves': 1.5
	    };
	    /**
		 *  Trigger the attack.
		 *  @param  {Time}  time      When the attack should be triggered.
		 *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.
		 *  @return  {Tone.MetalSynth}  this
		 */
	    Tone.MetalSynth.prototype.triggerAttack = function (time, vel) {
	        time = this.toSeconds(time);
	        vel = Tone.defaultArg(vel, 1);
	        this.envelope.triggerAttack(time, vel);
	        this._oscillators.forEach(function (osc) {
	            osc.start(time);
	        });
	        //if the sustain is 0, stop the oscillator as well
	        if (this.envelope.sustain === 0) {
	            this._oscillators.forEach(function (osc) {
	                osc.stop(time + this.envelope.attack + this.envelope.decay);
	            }.bind(this));
	        }
	        return this;
	    };
	    /**
		 *  Trigger the release of the envelope.
		 *  @param  {Time}  time      When the release should be triggered.
		 *  @return  {Tone.MetalSynth}  this
		 */
	    Tone.MetalSynth.prototype.triggerRelease = function (time) {
	        time = this.toSeconds(time);
	        this.envelope.triggerRelease(time);
	        this._oscillators.forEach(function (osc) {
	            osc.stop(time + this.envelope.release);
	        }.bind(this));
	        return this;
	    };
	    /**
		 * Sync the instrument to the Transport. All subsequent calls of
		 * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)
		 * will be scheduled along the transport.
		 * @example
		 * synth.sync()
		 * //schedule 3 notes when the transport first starts
		 * synth.triggerAttackRelease('8n', 0)
		 * synth.triggerAttackRelease('8n', '8n')
		 * synth.triggerAttackRelease('8n', '4n')
		 * //start the transport to hear the notes
		 * Transport.start()
		 * @returns {Tone.Instrument} this
		 */
	    Tone.MetalSynth.prototype.sync = function () {
	        this._syncMethod('triggerAttack', 0);
	        this._syncMethod('triggerRelease', 0);
	        return this;
	    };
	    /**
		 *  Trigger the attack and release of the envelope after the given
		 *  duration.
		 *  @param  {Time}  duration  The duration before triggering the release
		 *  @param  {Time}  time      When the attack should be triggered.
		 *  @param  {NormalRange}  [velocity=1]  The velocity that the envelope should be triggered at.
		 *  @return  {Tone.MetalSynth}  this
		 */
	    Tone.MetalSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {
	        time = this.toSeconds(time);
	        duration = this.toSeconds(duration);
	        this.triggerAttack(time, velocity);
	        this.triggerRelease(time + duration);
	        return this;
	    };
	    /**
		 *  The modulationIndex of the oscillators which make up the source.
		 *  see Tone.FMOscillator.modulationIndex
		 *  @memberOf Tone.MetalSynth#
		 *  @type {Positive}
		 *  @name  modulationIndex
		 */
	    Object.defineProperty(Tone.MetalSynth.prototype, 'modulationIndex', {
	        get: function () {
	            return this._oscillators[0].modulationIndex.value;
	        },
	        set: function (val) {
	            for (var i = 0; i < this._oscillators.length; i++) {
	                this._oscillators[i].modulationIndex.value = val;
	            }
	        }
	    });
	    /**
		 *  The harmonicity of the oscillators which make up the source.
		 *  see Tone.FMOscillator.harmonicity
		 *  @memberOf Tone.MetalSynth#
		 *  @type {Positive}
		 *  @name  harmonicity
		 */
	    Object.defineProperty(Tone.MetalSynth.prototype, 'harmonicity', {
	        get: function () {
	            return this._oscillators[0].harmonicity.value;
	        },
	        set: function (val) {
	            for (var i = 0; i < this._oscillators.length; i++) {
	                this._oscillators[i].harmonicity.value = val;
	            }
	        }
	    });
	    /**
		 *  The frequency of the highpass filter attached to the envelope
		 *  @memberOf Tone.MetalSynth#
		 *  @type {Frequency}
		 *  @name  resonance
		 */
	    Object.defineProperty(Tone.MetalSynth.prototype, 'resonance', {
	        get: function () {
	            return this._filterFreqScaler.min;
	        },
	        set: function (val) {
	            this._filterFreqScaler.min = val;
	            this.octaves = this._octaves;
	        }
	    });
	    /**
		 *  The number of octaves above the "resonance" frequency
		 *  that the filter ramps during the attack/decay envelope
		 *  @memberOf Tone.MetalSynth#
		 *  @type {Number}
		 *  @name  octaves
		 */
	    Object.defineProperty(Tone.MetalSynth.prototype, 'octaves', {
	        get: function () {
	            return this._octaves;
	        },
	        set: function (octs) {
	            this._octaves = octs;
	            this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);
	        }
	    });
	    /**
		 *  Clean up
		 *  @returns {Tone.MetalSynth} this
		 */
	    Tone.MetalSynth.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        for (var i = 0; i < this._oscillators.length; i++) {
	            this._oscillators[i].dispose();
	            this._freqMultipliers[i].dispose();
	        }
	        this._oscillators = null;
	        this._freqMultipliers = null;
	        this.frequency.dispose();
	        this.frequency = null;
	        this._filterFreqScaler.dispose();
	        this._filterFreqScaler = null;
	        this._amplitue.dispose();
	        this._amplitue = null;
	        this.envelope.dispose();
	        this.envelope = null;
	        this._highpass.dispose();
	        this._highpass = null;
	    };
	    return Tone.MetalSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.NoiseSynth is composed of a noise generator (Tone.Noise), one filter (Tone.Filter),
		 *          and two envelopes (Tone.Envelop). One envelope controls the amplitude
		 *          of the noise and the other is controls the cutoff frequency of the filter.
		 *          <img src="https://docs.google.com/drawings/d/1rqzuX9rBlhT50MRvD2TKml9bnZhcZmzXF1rf_o7vdnE/pub?w=918&h=242">
		 *
		 *  @constructor
		 *  @extends {Tone.Instrument}
		 *  @param {Object} [options] the options available for the synth
		 *                          see defaults below
		 * @example
		 * var noiseSynth = new Tone.NoiseSynth().toMaster();
		 * noiseSynth.triggerAttackRelease("8n");
		 */
	    Tone.NoiseSynth = function (options) {
	        //get the defaults
	        options = Tone.defaultArg(options, Tone.NoiseSynth.defaults);
	        Tone.Instrument.call(this, options);
	        /**
			 *  The noise source.
			 *  @type {Tone.Noise}
			 *  @example
			 * noiseSynth.set("noise.type", "brown");
			 */
	        this.noise = new Tone.Noise();
	        /**
			 *  The amplitude envelope.
			 *  @type {Tone.AmplitudeEnvelope}
			 */
	        this.envelope = new Tone.AmplitudeEnvelope(options.envelope);
	        //connect the noise to the output
	        this.noise.chain(this.envelope, this.output);
	        this._readOnly([
	            'noise',
	            'envelope'
	        ]);
	    };
	    Tone.extend(Tone.NoiseSynth, Tone.Instrument);
	    /**
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.NoiseSynth.defaults = {
	        'noise': { 'type': 'white' },
	        'envelope': {
	            'attack': 0.005,
	            'decay': 0.1,
	            'sustain': 0
	        }
	    };
	    /**
		 *  Start the attack portion of the envelopes. Unlike other
		 *  instruments, Tone.NoiseSynth doesn't have a note.
		 *  @param {Time} [time=now] the time the attack should start
		 *  @param {number} [velocity=1] the velocity of the note (0-1)
		 *  @returns {Tone.NoiseSynth} this
		 *  @example
		 * noiseSynth.triggerAttack();
		 */
	    Tone.NoiseSynth.prototype.triggerAttack = function (time, velocity) {
	        //the envelopes
	        this.envelope.triggerAttack(time, velocity);
	        //start the noise
	        this.noise.start(time);
	        if (this.envelope.sustain === 0) {
	            this.noise.stop(time = this.envelope.attack + this.envelope.decay);
	        }
	        return this;
	    };
	    /**
		 *  Start the release portion of the envelopes.
		 *  @param {Time} [time=now] the time the release should start
		 *  @returns {Tone.NoiseSynth} this
		 */
	    Tone.NoiseSynth.prototype.triggerRelease = function (time) {
	        this.envelope.triggerRelease(time);
	        this.noise.stop(time + this.envelope.release);
	        return this;
	    };
	    /**
		 * Sync the instrument to the Transport. All subsequent calls of
		 * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)
		 * will be scheduled along the transport.
		 * @example
		 * synth.sync()
		 * //schedule 3 notes when the transport first starts
		 * synth.triggerAttackRelease('8n', 0)
		 * synth.triggerAttackRelease('8n', '8n')
		 * synth.triggerAttackRelease('8n', '4n')
		 * //start the transport to hear the notes
		 * Transport.start()
		 * @returns {Tone.Instrument} this
		 */
	    Tone.NoiseSynth.prototype.sync = function () {
	        this._syncMethod('triggerAttack', 0);
	        this._syncMethod('triggerRelease', 0);
	        return this;
	    };
	    /**
		 *  Trigger the attack and then the release.
		 *  @param  {Time} duration the duration of the note
		 *  @param  {Time} [time=now]     the time of the attack
		 *  @param  {number} [velocity=1] the velocity
		 *  @returns {Tone.NoiseSynth} this
		 */
	    Tone.NoiseSynth.prototype.triggerAttackRelease = function (duration, time, velocity) {
	        time = this.toSeconds(time);
	        duration = this.toSeconds(duration);
	        this.triggerAttack(time, velocity);
	        this.triggerRelease(time + duration);
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.NoiseSynth} this
		 */
	    Tone.NoiseSynth.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        this._writable([
	            'noise',
	            'envelope'
	        ]);
	        this.noise.dispose();
	        this.noise = null;
	        this.envelope.dispose();
	        this.envelope = null;
	        return this;
	    };
	    return Tone.NoiseSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Karplus-String string synthesis. Often out of tune.
		 *         Will change when the AudioWorkerNode is available across
		 *         browsers.
		 *
		 *  @constructor
		 *  @extends {Tone.Instrument}
		 *  @param {Object} [options] see the defaults
		 *  @example
		 * var plucky = new Tone.PluckSynth().toMaster();
		 * plucky.triggerAttack("C4");
		 */
	    Tone.PluckSynth = function (options) {
	        options = Tone.defaultArg(options, Tone.PluckSynth.defaults);
	        Tone.Instrument.call(this, options);
	        /**
			 *  @type {Tone.Noise}
			 *  @private
			 */
	        this._noise = new Tone.Noise('pink');
	        /**
			 *  The amount of noise at the attack.
			 *  Nominal range of [0.1, 20]
			 *  @type {number}
			 */
	        this.attackNoise = options.attackNoise;
	        /**
			 *  the LFCF
			 *  @type {Tone.LowpassCombFilter}
			 *  @private
			 */
	        this._lfcf = new Tone.LowpassCombFilter({
	            'resonance': options.resonance,
	            'dampening': options.dampening
	        });
	        /**
			 *  The resonance control.
			 *  @type {NormalRange}
			 *  @signal
			 */
	        this.resonance = this._lfcf.resonance;
	        /**
			 *  The dampening control. i.e. the lowpass filter frequency of the comb filter
			 *  @type {Frequency}
			 *  @signal
			 */
	        this.dampening = this._lfcf.dampening;
	        //connections
	        this._noise.connect(this._lfcf);
	        this._lfcf.connect(this.output);
	        this._readOnly([
	            'resonance',
	            'dampening'
	        ]);
	    };
	    Tone.extend(Tone.PluckSynth, Tone.Instrument);
	    /**
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.PluckSynth.defaults = {
	        'attackNoise': 1,
	        'dampening': 4000,
	        'resonance': 0.7
	    };
	    /**
		 *  Trigger the note.
		 *  @param {Frequency} note The note to trigger.
		 *  @param {Time} [time=now] When the note should be triggered.
		 *  @returns {Tone.PluckSynth} this
		 */
	    Tone.PluckSynth.prototype.triggerAttack = function (note, time) {
	        note = this.toFrequency(note);
	        time = this.toSeconds(time);
	        var delayAmount = 1 / note;
	        this._lfcf.delayTime.setValueAtTime(delayAmount, time);
	        this._noise.start(time);
	        this._noise.stop(time + delayAmount * this.attackNoise);
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.PluckSynth} this
		 */
	    Tone.PluckSynth.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        this._noise.dispose();
	        this._lfcf.dispose();
	        this._noise = null;
	        this._lfcf = null;
	        this._writable([
	            'resonance',
	            'dampening'
	        ]);
	        this.dampening = null;
	        this.resonance = null;
	        return this;
	    };
	    return Tone.PluckSynth;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.PolySynth handles voice creation and allocation for any
		 *          instruments passed in as the second paramter. PolySynth is
		 *          not a synthesizer by itself, it merely manages voices of
		 *          one of the other types of synths, allowing any of the
		 *          monophonic synthesizers to be polyphonic.
		 *
		 *  @constructor
		 *  @extends {Tone.Instrument}
		 *  @param {number|Object} [polyphony=4] The number of voices to create
		 *  @param {function} [voice=Tone.Synth] The constructor of the voices
		 *                                            uses Tone.Synth by default.
		 *  @example
		 * //a polysynth composed of 6 Voices of Synth
		 * var synth = new Tone.PolySynth(6, Tone.Synth).toMaster();
		 * //set the attributes using the set interface
		 * synth.set("detune", -1200);
		 * //play a chord
		 * synth.triggerAttackRelease(["C4", "E4", "A4"], "4n");
		 */
	    Tone.PolySynth = function () {
	        var options = Tone.defaults(arguments, [
	            'polyphony',
	            'voice'
	        ], Tone.PolySynth);
	        Tone.Instrument.call(this, options);
	        options = Tone.defaultArg(options, Tone.Instrument.defaults);
	        //max polyphony
	        options.polyphony = Math.min(Tone.PolySynth.MAX_POLYPHONY, options.polyphony);
	        /**
			 *  the array of voices
			 *  @type {Array}
			 */
	        this.voices = new Array(options.polyphony);
	        /**
			 *  The queue of voices with data about last trigger
			 *  and the triggered note
			 *  @private
			 *  @type {Array}
			 */
	        this._triggers = new Array(options.polyphony);
	        /**
			 *  The detune in cents
			 *  @type {Cents}
			 *  @signal
			 */
	        this.detune = new Tone.Signal(options.detune, Tone.Type.Cents);
	        this._readOnly('detune');
	        //create the voices
	        for (var i = 0; i < options.polyphony; i++) {
	            var v = new options.voice(arguments[2], arguments[3]);
	            if (!(v instanceof Tone.Monophonic)) {
	                throw new Error('Synth constructor must be instance of Tone.Monophonic');
	            }
	            this.voices[i] = v;
	            v.connect(this.output);
	            if (v.hasOwnProperty('detune')) {
	                this.detune.connect(v.detune);
	            }
	            this._triggers[i] = {
	                release: -1,
	                note: null,
	                voice: v
	            };
	        }
	    };
	    Tone.extend(Tone.PolySynth, Tone.Instrument);
	    /**
		 *  the defaults
		 *  @const
		 *  @static
		 *  @type {Object}
		 */
	    Tone.PolySynth.defaults = {
	        'polyphony': 4,
	        'volume': 0,
	        'detune': 0,
	        'voice': Tone.Synth
	    };
	    /**
		 *  Trigger the attack portion of the note
		 *  @param  {Frequency|Array} notes The notes to play. Accepts a single
		 *                                  Frequency or an array of frequencies.
		 *  @param  {Time} [time=now]  The start time of the note.
		 *  @param {number} [velocity=1] The velocity of the note.
		 *  @returns {Tone.PolySynth} this
		 *  @example
		 * //trigger a chord immediately with a velocity of 0.2
		 * poly.triggerAttack(["Ab3", "C4", "F5"], undefined, 0.2);
		 */
	    Tone.PolySynth.prototype.triggerAttack = function (notes, time, velocity) {
	        if (!Array.isArray(notes)) {
	            notes = [notes];
	        }
	        time = this.toSeconds(time);
	        for (var i = 0; i < notes.length; i++) {
	            var val = notes[i];
	            //trigger the oldest voice
	            var oldest = this._triggers[0];
	            for (var j = 1; j < this._triggers.length; j++) {
	                if (this._triggers[j].release < oldest.release) {
	                    oldest = this._triggers[j];
	                }
	            }
	            oldest.release = Infinity;
	            oldest.note = JSON.stringify(val);
	            oldest.voice.triggerAttack(val, time, velocity);
	        }
	        return this;
	    };
	    /**
		 *  Trigger the attack and release after the specified duration
		 *
		 *  @param  {Frequency|Array} notes The notes to play. Accepts a single
		 *                                  Frequency or an array of frequencies.
		 *  @param  {Time} duration the duration of the note
		 *  @param  {Time} [time=now]     if no time is given, defaults to now
		 *  @param  {number} [velocity=1] the velocity of the attack (0-1)
		 *  @returns {Tone.PolySynth} this
		 *  @example
		 * //trigger a chord for a duration of a half note
		 * poly.triggerAttackRelease(["Eb3", "G4", "C5"], "2n");
		 *  @example
		 * //can pass in an array of durations as well
		 * poly.triggerAttackRelease(["Eb3", "G4", "C5"], ["2n", "4n", "4n"]);
		 */
	    Tone.PolySynth.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {
	        time = this.toSeconds(time);
	        this.triggerAttack(notes, time, velocity);
	        if (Tone.isArray(duration) && Tone.isArray(notes)) {
	            for (var i = 0; i < notes.length; i++) {
	                var d = duration[Math.min(i, duration.length - 1)];
	                this.triggerRelease(notes[i], time + this.toSeconds(d));
	            }
	        } else {
	            this.triggerRelease(notes, time + this.toSeconds(duration));
	        }
	        return this;
	    };
	    /**
		 *  Trigger the release of the note. Unlike monophonic instruments,
		 *  a note (or array of notes) needs to be passed in as the first argument.
		 *  @param  {Frequency|Array} notes The notes to play. Accepts a single
		 *                                  Frequency or an array of frequencies.
		 *  @param  {Time} [time=now]  When the release will be triggered.
		 *  @returns {Tone.PolySynth} this
		 *  @example
		 * poly.triggerRelease(["Ab3", "C4", "F5"], "+2n");
		 */
	    Tone.PolySynth.prototype.triggerRelease = function (notes, time) {
	        if (!Array.isArray(notes)) {
	            notes = [notes];
	        }
	        time = this.toSeconds(time);
	        for (var i = 0; i < notes.length; i++) {
	            //get the voice
	            var stringified = JSON.stringify(notes[i]);
	            for (var v = 0; v < this._triggers.length; v++) {
	                var desc = this._triggers[v];
	                if (desc.note === stringified && desc.release > time) {
	                    desc.voice.triggerRelease(time);
	                    desc.release = time;
	                }
	            }
	        }
	        return this;
	    };
	    /**
		 * Sync the instrument to the Transport. All subsequent calls of
		 * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)
		 * will be scheduled along the transport.
		 * @example
		 * synth.sync()
		 * //schedule 3 notes when the transport first starts
		 * synth.triggerAttackRelease('8n', 0)
		 * synth.triggerAttackRelease('8n', '8n')
		 * synth.triggerAttackRelease('8n', '4n')
		 * //start the transport to hear the notes
		 * Transport.start()
		 * @returns {Tone.Instrument} this
		 */
	    Tone.PolySynth.prototype.sync = function () {
	        this._syncMethod('triggerAttack', 1);
	        this._syncMethod('triggerRelease', 1);
	        return this;
	    };
	    /**
		 *  Set a member/attribute of the voices.
		 *  @param {Object|string} params
		 *  @param {number=} value
		 *  @param {Time=} rampTime
		 *  @returns {Tone.PolySynth} this
		 *  @example
		 * poly.set({
		 * 	"filter" : {
		 * 		"type" : "highpass"
		 * 	},
		 * 	"envelope" : {
		 * 		"attack" : 0.25
		 * 	}
		 * });
		 */
	    Tone.PolySynth.prototype.set = function (params, value, rampTime) {
	        for (var i = 0; i < this.voices.length; i++) {
	            this.voices[i].set(params, value, rampTime);
	        }
	        return this;
	    };
	    /**
		 *  Get the synth's attributes. Given no arguments get
		 *  will return all available object properties and their corresponding
		 *  values. Pass in a single attribute to retrieve or an array
		 *  of attributes. The attribute strings can also include a "."
		 *  to access deeper properties.
		 *  @param {Array=} params the parameters to get, otherwise will return
		 *  					   all available.
		 */
	    Tone.PolySynth.prototype.get = function (params) {
	        return this.voices[0].get(params);
	    };
	    /**
		 *  Trigger the release portion of all the currently active voices.
		 *  @param {Time} [time=now] When the notes should be released.
		 *  @return {Tone.PolySynth} this
		 */
	    Tone.PolySynth.prototype.releaseAll = function (time) {
	        time = this.toSeconds(time);
	        for (var i = 0; i < this._triggers.length; i++) {
	            var desc = this._triggers[i];
	            if (desc.release > time) {
	                desc.release = time;
	                desc.voice.triggerRelease(time);
	            }
	        }
	        return this;
	    };
	    /**
		 *  Clean up.
		 *  @returns {Tone.PolySynth} this
		 */
	    Tone.PolySynth.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        for (var i = 0; i < this.voices.length; i++) {
	            this.voices[i].dispose();
	            this.voices[i] = null;
	        }
	        this._writable('detune');
	        this.detune.dispose();
	        this.detune = null;
	        this.voices = null;
	        this._triggers = null;
	        return this;
	    };
	    /**
		 *  The maximum number of notes that can be allocated
		 *  to a polysynth.
		 *  @type  {Number}
		 *  @static
		 */
	    Tone.PolySynth.MAX_POLYPHONY = 20;
	    return Tone.PolySynth;
	});
	Module(function (Tone) {
	    /**
		 * @class Automatically interpolates between a set of pitched samples. Pass in an object which maps the note's pitch or midi value to the url, then you can trigger the attack and release of that note like other instruments. By automatically repitching the samples, it is possible to play pitches which were not explicitly included which can save loading time.
		 *        For sample or buffer playback where repitching is not necessary, use [Tone.Player](https://tonejs.github.io/docs/Player).
		 * @param {Object} samples An object of samples mapping either Midi
		 *                         Note Numbers or Scientific Pitch Notation
		 *                         to the url of that sample.
		 * @param {Function=} onload The callback to invoke when all of the samples are loaded.
		 * @param {String=} baseUrl The root URL of all of the samples, which is prepended to all the URLs.
		 * @example
		 * var sampler = new Tone.Sampler({
		 * 	"C3" : "path/to/C3.mp3",
		 * 	"D#3" : "path/to/Dsharp3.mp3",
		 * 	"F#3" : "path/to/Fsharp3.mp3",
		 * 	"A3" : "path/to/A3.mp3",
		 * }, function(){
		 * 	//sampler will repitch the closest sample
		 * 	sampler.triggerAttack("D3")
		 * })
		 * @extends {Tone.Instrument}
		 */
	    Tone.Sampler = function (urls) {
	        // shift arguments over one. Those are the remainder of the options
	        var args = Array.prototype.slice.call(arguments);
	        args.shift();
	        var options = Tone.defaults(args, [
	            'onload',
	            'baseUrl'
	        ], Tone.Sampler);
	        Tone.Instrument.call(this, options);
	        var urlMap = {};
	        for (var note in urls) {
	            if (Tone.isNote(note)) {
	                //convert the note name to MIDI
	                var mid = Tone.Frequency(note).toMidi();
	                urlMap[mid] = urls[note];
	            } else if (!isNaN(parseFloat(note))) {
	                //otherwise if it's numbers assume it's midi
	                urlMap[note] = urls[note];
	            } else {
	                throw new Error('Tone.Sampler: url keys must be the note\'s pitch');
	            }
	        }
	        /**
			 * The stored and loaded buffers
			 * @type {Tone.Buffers}
			 * @private
			 */
	        this._buffers = new Tone.Buffers(urlMap, options.onload, options.baseUrl);
	        /**
			 * The object of all currently playing BufferSources
			 * @type {Object}
			 * @private
			 */
	        this._activeSources = {};
	        /**
			 * The envelope applied to the beginning of the sample.
			 * @type {Time}
			 */
	        this.attack = options.attack;
	        /**
			 * The envelope applied to the end of the envelope.
			 * @type {Time}
			 */
	        this.release = options.release;
	    };
	    Tone.extend(Tone.Sampler, Tone.Instrument);
	    /**
		 * The defaults
		 * @const
		 * @type {Object}
		 */
	    Tone.Sampler.defaults = {
	        attack: 0,
	        release: 0.1,
	        onload: Tone.noOp,
	        baseUrl: ''
	    };
	    /**
		 * Returns the difference in steps between the given midi note at the closets sample.
		 * @param  {Midi} midi
		 * @return {Interval}
		 * @private
		 */
	    Tone.Sampler.prototype._findClosest = function (midi) {
	        //searches within 8 octaves of the given midi note
	        var MAX_INTERVAL = 96;
	        var interval = 0;
	        while (interval < MAX_INTERVAL) {
	            // check above and below
	            if (this._buffers.has(midi + interval)) {
	                return -interval;
	            } else if (this._buffers.has(midi - interval)) {
	                return interval;
	            }
	            interval++;
	        }
	        return null;
	    };
	    /**
		 * @param  {Frequency} note     The note to play
		 * @param  {Time=} time     When to play the note
		 * @param  {NormalRange=} velocity The velocity to play the sample back.
		 * @return {Tone.Sampler}          this
		 */
	    Tone.Sampler.prototype.triggerAttack = function (note, time, velocity) {
	        var midi = Tone.Frequency(note).toMidi();
	        // find the closest note pitch
	        var difference = this._findClosest(midi);
	        if (difference !== null) {
	            var closestNote = midi - difference;
	            var buffer = this._buffers.get(closestNote);
	            // play that note
	            var source = new Tone.BufferSource({
	                'buffer': buffer,
	                'playbackRate': Tone.intervalToFrequencyRatio(difference),
	                'fadeIn': this.attack,
	                'fadeOut': this.release,
	                'curve': 'exponential'
	            }).connect(this.output);
	            source.start(time, 0, buffer.duration, velocity);
	            // add it to the active sources
	            if (!Tone.isArray(this._activeSources[midi])) {
	                this._activeSources[midi] = [];
	            }
	            this._activeSources[midi].push({
	                note: midi,
	                source: source
	            });
	        }
	        return this;
	    };
	    /**
		 * @param  {Frequency} note     The note to release.
		 * @param  {Time=} time     	When to release the note.
		 * @return {Tone.Sampler}	this
		 */
	    Tone.Sampler.prototype.triggerRelease = function (note, time) {
	        var midi = Tone.Frequency(note).toMidi();
	        // find the note
	        if (this._activeSources[midi] && this._activeSources[midi].length) {
	            var source = this._activeSources[midi].shift().source;
	            time = this.toSeconds(time);
	            source.stop(time + this.release, this.release);
	        }
	        return this;
	    };
	    /**
		 * Release all currently active notes.
		 * @param  {Time=} time     	When to release the notes.
		 * @return {Tone.Sampler}	this
		 */
	    Tone.Sampler.prototype.releaseAll = function (time) {
	        time = this.toSeconds(time);
	        for (var note in this._activeSources) {
	            var sources = this._activeSources[note];
	            while (sources.length) {
	                var source = sources.shift().source;
	                source.stop(time + this.release, this.release);
	            }
	        }
	        return this;
	    };
	    /**
		 * Sync the instrument to the Transport. All subsequent calls of
		 * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)
		 * will be scheduled along the transport.
		 * @example
		 * synth.sync()
		 * //schedule 3 notes when the transport first starts
		 * synth.triggerAttackRelease('8n', 0)
		 * synth.triggerAttackRelease('8n', '8n')
		 * synth.triggerAttackRelease('8n', '4n')
		 * //start the transport to hear the notes
		 * Transport.start()
		 * @returns {Tone.Instrument} this
		 */
	    Tone.Sampler.prototype.sync = function () {
	        this._syncMethod('triggerAttack', 1);
	        this._syncMethod('triggerRelease', 1);
	        return this;
	    };
	    /**
		 * Invoke the attack phase, then after the duration, invoke the release.
		 * @param  {Frequency} note     The note to play
		 * @param  {Time} duration The time the note should be held
		 * @param  {Time=} time     When to start the attack
		 * @param  {NormalRange} [velocity=1] The velocity of the attack
		 * @return {Tone.Sampler}          this
		 */
	    Tone.Sampler.prototype.triggerAttackRelease = function (note, duration, time, velocity) {
	        time = this.toSeconds(time);
	        duration = this.toSeconds(duration);
	        this.triggerAttack(note, time, velocity);
	        this.triggerRelease(note, time + duration);
	        return this;
	    };
	    /**
		 *  Add a note to the sampler.
		 *  @param  {Note|Midi}   note      The buffer's pitch.
		 *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,
		 *                                                 or a buffer which will be added
		 *                                                 with the given name.
		 *  @param  {Function=}  callback  The callback to invoke
		 *                                 when the url is loaded.
		 */
	    Tone.Sampler.prototype.add = function (note, url, callback) {
	        if (Tone.isNote(note)) {
	            //convert the note name to MIDI
	            var mid = Tone.Frequency(note).toMidi();
	            this._buffers.add(mid, url, callback);
	        } else if (!isNaN(parseFloat(note))) {
	            //otherwise if it's numbers assume it's midi
	            this._buffers.add(note, url, callback);
	        } else {
	            throw new Error('Tone.Sampler: note must be the note\'s pitch. Instead got ' + note);
	        }
	    };
	    /**
		 * If the buffers are loaded or not
		 * @memberOf Tone.Sampler#
		 * @type {Boolean}
		 * @name loaded
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Sampler.prototype, 'loaded', {
	        get: function () {
	            return this._buffers.loaded;
	        }
	    });
	    /**
		 * Clean up
		 * @return {Tone.Sampler} this
		 */
	    Tone.Sampler.prototype.dispose = function () {
	        Tone.Instrument.prototype.dispose.call(this);
	        this._buffers.dispose();
	        this._buffers = null;
	        for (var midi in this._activeSources) {
	            this._activeSources[midi].forEach(function (event) {
	                event.source.dispose();
	            });
	        }
	        this._activeSources = null;
	        return this;
	    };
	    return Tone.Sampler;
	});
	Module(function (Tone) {
	    if (Tone.supported) {
	        if (!OscillatorNode.prototype.setPeriodicWave) {
	            OscillatorNode.prototype.setPeriodicWave = OscillatorNode.prototype.setWaveTable;
	        }
	        if (!AudioContext.prototype.createPeriodicWave) {
	            AudioContext.prototype.createPeriodicWave = AudioContext.prototype.createWaveTable;
	        }
	    }
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Maps a NormalRange [0, 1] to an AudioRange [-1, 1]. 
		 *         See also Tone.AudioToGain. 
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @example
		 * var g2a = new Tone.GainToAudio();
		 */
	    Tone.GainToAudio = function () {
	        Tone.SignalBase.call(this);
	        /**
			 *  @type {WaveShaperNode}
			 *  @private
			 */
	        this._norm = this.input = this.output = new Tone.WaveShaper(function (x) {
	            return Math.abs(x) * 2 - 1;
	        });
	    };
	    Tone.extend(Tone.GainToAudio, Tone.SignalBase);
	    /**
		 *  clean up
		 *  @returns {Tone.GainToAudio} this
		 */
	    Tone.GainToAudio.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._norm.dispose();
	        this._norm = null;
	        return this;
	    };
	    return Tone.GainToAudio;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class Normalize takes an input min and max and maps it linearly to NormalRange [0,1]
		 *
		 *  @extends {Tone.SignalBase}
		 *  @constructor
		 *  @param {number} inputMin the min input value
		 *  @param {number} inputMax the max input value
		 *  @example
		 * var norm = new Tone.Normalize(2, 4);
		 * var sig = new Tone.Signal(3).connect(norm);
		 * //output of norm is 0.5. 
		 */
	    Tone.Normalize = function (inputMin, inputMax) {
	        Tone.SignalBase.call(this);
	        /**
			 *  the min input value
			 *  @type {number}
			 *  @private
			 */
	        this._inputMin = Tone.defaultArg(inputMin, 0);
	        /**
			 *  the max input value
			 *  @type {number}
			 *  @private
			 */
	        this._inputMax = Tone.defaultArg(inputMax, 1);
	        /**
			 *  subtract the min from the input
			 *  @type {Tone.Add}
			 *  @private
			 */
	        this._sub = this.input = new Tone.Add(0);
	        /**
			 *  divide by the difference between the input and output
			 *  @type {Tone.Multiply}
			 *  @private
			 */
	        this._div = this.output = new Tone.Multiply(1);
	        this._sub.connect(this._div);
	        this._setRange();
	    };
	    Tone.extend(Tone.Normalize, Tone.SignalBase);
	    /**
		 * The minimum value the input signal will reach.
		 * @memberOf Tone.Normalize#
		 * @type {number}
		 * @name min
		 */
	    Object.defineProperty(Tone.Normalize.prototype, 'min', {
	        get: function () {
	            return this._inputMin;
	        },
	        set: function (min) {
	            this._inputMin = min;
	            this._setRange();
	        }
	    });
	    /**
		 * The maximum value the input signal will reach.
		 * @memberOf Tone.Normalize#
		 * @type {number}
		 * @name max
		 */
	    Object.defineProperty(Tone.Normalize.prototype, 'max', {
	        get: function () {
	            return this._inputMax;
	        },
	        set: function (max) {
	            this._inputMax = max;
	            this._setRange();
	        }
	    });
	    /**
		 *  set the values
		 *  @private
		 */
	    Tone.Normalize.prototype._setRange = function () {
	        this._sub.value = -this._inputMin;
	        this._div.value = 1 / (this._inputMax - this._inputMin);
	    };
	    /**
		 *  clean up
		 *  @returns {Tone.Normalize} this
		 */
	    Tone.Normalize.prototype.dispose = function () {
	        Tone.SignalBase.prototype.dispose.call(this);
	        this._sub.dispose();
	        this._sub = null;
	        this._div.dispose();
	        this._div = null;
	        return this;
	    };
	    return Tone.Normalize;
	});
	Module(function (Tone) {
	    /**
		 * @class Tone.TransportTimelineSignal extends Tone.Signal, but adds the ability to synchronize the signal to the signal to the Tone.Transport
		 * @extends {Tone.Signal}
		 */
	    Tone.TransportTimelineSignal = function () {
	        Tone.Signal.apply(this, arguments);
	        /**
			 * The real signal output
			 * @type {Tone.Signal}
			 * @private
			 */
	        this.output = this._outputSig = new Tone.Signal(this._initialValue);
	        /**
			 * Keep track of the last value. (small optimization)
			 * @private
			 * @type {Number}
			 */
	        this._lastVal = this.value;
	        /**
			 * The event id of the tick update loop
			 * @private
			 * @type {Number}
			 */
	        this._synced = Tone.Transport.scheduleRepeat(this._onTick.bind(this), '1i');
	        /**
			 * A bound version of the anchor value methods
			 * @type {Function}
			 * @private
			 */
	        this._bindAnchorValue = this._anchorValue.bind(this);
	        Tone.Transport.on('start stop pause', this._bindAnchorValue);
	        this._events.memory = Infinity;
	    };
	    Tone.extend(Tone.TransportTimelineSignal, Tone.Signal);
	    /**
		 * Callback which is invoked every tick.
		 * @private
		 * @param  {Number} time
		 * @return {Tone.TransportTimelineSignal}      this
		 */
	    Tone.TransportTimelineSignal.prototype._onTick = function (time) {
	        var val = this.getValueAtTime(Tone.Transport.seconds);
	        if (this._lastVal !== val) {
	            this._lastVal = val;
	            //approximate ramp curves with linear ramps
	            this._outputSig.linearRampToValueAtTime(val, time);
	        }
	    };
	    /**
		 * Anchor the value at the start and stop of the Transport
		 * @param  {Number} time The time of the event
		 * @return {Tone.TransportTimelineSignal}      this
		 * @private
		 */
	    Tone.TransportTimelineSignal.prototype._anchorValue = function (time) {
	        var val = this.getValueAtTime(Tone.Transport.seconds);
	        this._lastVal = val;
	        this._outputSig.cancelScheduledValues(time);
	        this._outputSig.setValueAtTime(val, time);
	        return this;
	    };
	    /**
		 *  Get the scheduled value at the given time. This will
		 *  return the unconverted (raw) value.
		 *  @param  {TransportTime}  time  The time in seconds.
		 *  @return  {Number}  The scheduled value at the given time.
		 */
	    Tone.TransportTimelineSignal.prototype.getValueAtTime = function (time) {
	        time = Tone.TransportTime(time);
	        return Tone.Signal.prototype.getValueAtTime.call(this, time);
	    };
	    /**
		 * Set the output of the signal at the given time
		 * @param  {Number} value The value to change to at the given time
		 * @param  {TransportTime} time  The time to change the signal
		 * @return {Tone.TransportTimelineSignal}       this
		 */
	    Tone.TransportTimelineSignal.prototype.setValueAtTime = function (value, time) {
	        time = Tone.TransportTime(time);
	        Tone.Signal.prototype.setValueAtTime.call(this, value, time);
	        return this;
	    };
	    /**
		 * Linear ramp to the given value from the previous scheduled point to the given value
		 * @param  {Number} value The value to change to at the given time
		 * @param  {TransportTime} time  The time to change the signal
		 * @return {Tone.TransportTimelineSignal}       this
		 */
	    Tone.TransportTimelineSignal.prototype.linearRampToValueAtTime = function (value, time) {
	        time = Tone.TransportTime(time);
	        Tone.Signal.prototype.linearRampToValueAtTime.call(this, value, time);
	        return this;
	    };
	    /**
		 * Exponential ramp to the given value from the previous scheduled point to the given value
		 * @param  {Number} value The value to change to at the given time
		 * @param  {TransportTime} time  The time to change the signal
		 * @return {Tone.TransportTimelineSignal}       this
		 */
	    Tone.TransportTimelineSignal.prototype.exponentialRampToValueAtTime = function (value, time) {
	        time = Tone.TransportTime(time);
	        Tone.Signal.prototype.exponentialRampToValueAtTime.call(this, value, time);
	        return this;
	    };
	    /**
		 *  Start exponentially approaching the target value at the given time with
		 *  a rate having the given time constant.
		 *  @param {number} value
		 *  @param {TransportTime} startTime
		 *  @param {number} timeConstant
		 * @return {Tone.TransportTimelineSignal}       this
		 */
	    Tone.TransportTimelineSignal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {
	        startTime = Tone.TransportTime(startTime);
	        Tone.Signal.prototype.setTargetAtTime.call(this, value, startTime, timeConstant);
	        return this;
	    };
	    /**
		 *  Cancels all scheduled parameter changes with times greater than or
		 *  equal to startTime.
		 *  @param  {TransportTime} startTime
		 *  @returns {Tone.Param} this
		 */
	    Tone.TransportTimelineSignal.prototype.cancelScheduledValues = function (startTime) {
	        startTime = Tone.TransportTime(startTime);
	        Tone.Signal.prototype.cancelScheduledValues.call(this, startTime);
	        return this;
	    };
	    /**
		 *  Set an array of arbitrary values starting at the given time for the given duration.
		 *  @param {Float32Array} values
		 *  @param {Time} startTime
		 *  @param {Time} duration
		 *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value
		 *  @returns {Tone.Signal} this
		 */
	    Tone.TransportTimelineSignal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {
	        startTime = Tone.TransportTime(startTime);
	        duration = Tone.TransportTime(duration);
	        Tone.Signal.prototype.setValueCurveAtTime.call(this, values, startTime, duration, scaling);
	        return this;
	    };
	    /**
		 *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except
		 *  it holds the automated value at time until the next automated event.
		 *  @param  {Time} time
		 *  @returns {Tone.TransportTimelineSignal} this
		 */
	    Tone.TransportTimelineSignal.prototype.cancelAndHoldAtTime = function (time) {
	        return Tone.Signal.prototype.cancelAndHoldAtTime.call(this, Tone.TransportTime(time));
	    };
	    /**
		 * Dispose and disconnect
		 * @return {Tone.TransportTimelineSignal} this
		 */
	    Tone.TransportTimelineSignal.prototype.dispose = function () {
	        Tone.Transport.clear(this._synced);
	        Tone.Transport.off('start stop pause', this._syncedCallback);
	        this._events.cancel(0);
	        Tone.Signal.prototype.dispose.call(this);
	        this._outputSig.dispose();
	        this._outputSig = null;
	    };
	    return Tone.TransportTimelineSignal;
	});
	Module(function (Tone) {
	    /**
		 * @class Tone.GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).
		 *        Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the
		 *        amount of time each small chunk of audio is played for and the overlap is the
		 *        amount of crossfading transition time between successive grains.
		 * @extends {Tone.Source}
		 * @param {String|Tone.Buffer} url	The url to load, or the Tone.Buffer to play.
		 * @param {Function=} callback The callback to invoke after the url is loaded.
		 */
	    Tone.GrainPlayer = function () {
	        var options = Tone.defaults(arguments, [
	            'url',
	            'onload'
	        ], Tone.GrainPlayer);
	        Tone.Source.call(this, options);
	        /**
			 *  The audio buffer belonging to the player.
			 *  @type  {Tone.Buffer}
			 */
	        this.buffer = new Tone.Buffer(options.url, options.onload);
	        /**
			 *  Create a repeating tick to schedule
			 *  the grains.
			 *  @type  {Tone.Clock}
			 *  @private
			 */
	        this._clock = new Tone.Clock(this._tick.bind(this), options.grainSize);
	        /**
			 *  @type  {Number}
			 *  @private
			 */
	        this._loopStart = 0;
	        /**
			 *  @type  {Number}
			 *  @private
			 */
	        this._loopEnd = 0;
	        /**
			 * All of the currently playing BufferSources
			 * @type {Array}
			 * @private
			 */
	        this._activeSources = [];
	        /**
			 *  @type  {Number}
			 *  @private
			 */
	        this._playbackRate = options.playbackRate;
	        /**
			 *  @type  {Number}
			 *  @private
			 */
	        this._grainSize = options.grainSize;
	        /**
			 *  @private
			 *  @type {Number}
			 */
	        this._overlap = options.overlap;
	        /**
			 *  Adjust the pitch independently of the playbackRate.
			 *  @type  {Cents}
			 */
	        this.detune = options.detune;
	        //setup
	        this.overlap = options.overlap;
	        this.loop = options.loop;
	        this.playbackRate = options.playbackRate;
	        this.grainSize = options.grainSize;
	        this.loopStart = options.loopStart;
	        this.loopEnd = options.loopEnd;
	        this.reverse = options.reverse;
	        this._clock.on('stop', this._onstop.bind(this));
	    };
	    Tone.extend(Tone.GrainPlayer, Tone.Source);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.GrainPlayer.defaults = {
	        'onload': Tone.noOp,
	        'overlap': 0.1,
	        'grainSize': 0.2,
	        'playbackRate': 1,
	        'detune': 0,
	        'loop': false,
	        'loopStart': 0,
	        'loopEnd': 0,
	        'reverse': false
	    };
	    /**
		 *  Play the buffer at the given startTime. Optionally add an offset
		 *  and/or duration which will play the buffer from a position
		 *  within the buffer for the given duration.
		 *
		 *  @param  {Time} [startTime=now] When the player should start.
		 *  @param  {Time} [offset=0] The offset from the beginning of the sample
		 *                                 to start at.
		 *  @param  {Time=} duration How long the sample should play. If no duration
		 *                                is given, it will default to the full length
		 *                                of the sample (minus any offset)
		 *  @returns {Tone.GrainPlayer} this
		 *  @memberOf Tone.GrainPlayer#
		 *  @method start
		 *  @name start
		 */
	    /**
		 *  Internal start method
		 *  @param {Time} time
		 *  @param {Time} offset
		 *  @private
		 */
	    Tone.GrainPlayer.prototype._start = function (time, offset, duration) {
	        offset = Tone.defaultArg(offset, 0);
	        offset = this.toSeconds(offset);
	        time = this.toSeconds(time);
	        this._offset = offset;
	        this._clock.start(time);
	        if (duration) {
	            this.stop(time + this.toSeconds(duration));
	        }
	    };
	    /**
		 *  Internal start method
		 *  @param {Time} time
		 *  @private
		 */
	    Tone.GrainPlayer.prototype._stop = function (time) {
	        this._clock.stop(time);
	    };
	    /**
		 * Invoked when the clock is stopped
		 * @param  {Number} time
		 * @private
		 */
	    Tone.GrainPlayer.prototype._onstop = function (time) {
	        //stop the players
	        this._activeSources.forEach(function (source) {
	            source.stop(time, 0);
	        });
	    };
	    /**
		 *  Invoked on each clock tick. scheduled a new
		 *  grain at this time.
		 *  @param  {Time}  time
		 *  @private
		 */
	    Tone.GrainPlayer.prototype._tick = function (time) {
	        var fadeIn = this._offset < this._overlap ? 0 : this._overlap;
	        var source = new Tone.BufferSource({
	            'buffer': this.buffer,
	            'fadeIn': fadeIn,
	            'fadeOut': this._overlap,
	            'loop': this.loop,
	            'loopStart': this._loopStart,
	            'loopEnd': this._loopEnd,
	            'playbackRate': Tone.intervalToFrequencyRatio(this.detune / 100)
	        }).connect(this.output);
	        source.start(time, this._offset);
	        this._offset += this.grainSize;
	        source.stop(time + this.grainSize);
	        //add it to the active sources
	        this._activeSources.push(source);
	        //remove it when it's done
	        source.onended = function () {
	            var index = this._activeSources.indexOf(source);
	            if (index !== -1) {
	                this._activeSources.splice(index, 1);
	            }
	        }.bind(this);
	    };
	    /**
		 *  Jump to a specific time and play it.
		 *  @param  {Time}  offset  The offset to jump to.
		 *  @param {Time=} time When to make the jump.
		 *  @return  {Tone.GrainPlayer}  this
		 */
	    Tone.GrainPlayer.prototype.seek = function (offset, time) {
	        this._offset = this.toSeconds(offset);
	        this._tick(this.toSeconds(time));
	        return this;
	    };
	    /**
		 * The playback rate of the sample
		 * @memberOf Tone.GrainPlayer#
		 * @type {Positive}
		 * @name playbackRate
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'playbackRate', {
	        get: function () {
	            return this._playbackRate;
	        },
	        set: function (rate) {
	            this._playbackRate = rate;
	            this.grainSize = this._grainSize;
	        }
	    });
	    /**
		 * The loop start time.
		 * @memberOf Tone.GrainPlayer#
		 * @type {Time}
		 * @name loopStart
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopStart', {
	        get: function () {
	            return this._loopStart;
	        },
	        set: function (time) {
	            this._loopStart = this.toSeconds(time);
	        }
	    });
	    /**
		 * The loop end time.
		 * @memberOf Tone.GrainPlayer#
		 * @type {Time}
		 * @name loopEnd
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'loopEnd', {
	        get: function () {
	            return this._loopEnd;
	        },
	        set: function (time) {
	            this._loopEnd = this.toSeconds(time);
	        }
	    });
	    /**
		 * The direction the buffer should play in
		 * @memberOf Tone.GrainPlayer#
		 * @type {boolean}
		 * @name reverse
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'reverse', {
	        get: function () {
	            return this.buffer.reverse;
	        },
	        set: function (rev) {
	            this.buffer.reverse = rev;
	        }
	    });
	    /**
		 * The size of each chunk of audio that the
		 * buffer is chopped into and played back at.
		 * @memberOf Tone.GrainPlayer#
		 * @type {Time}
		 * @name grainSize
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'grainSize', {
	        get: function () {
	            return this._grainSize;
	        },
	        set: function (size) {
	            this._grainSize = this.toSeconds(size);
	            this._clock.frequency.value = this._playbackRate / this._grainSize;
	        }
	    });
	    /**
		 * This is the duration of the cross-fade between
		 * sucessive grains.
		 * @memberOf Tone.GrainPlayer#
		 * @type {Time}
		 * @name overlap
		 */
	    Object.defineProperty(Tone.GrainPlayer.prototype, 'overlap', {
	        get: function () {
	            return this._overlap;
	        },
	        set: function (time) {
	            this._overlap = this.toSeconds(time);
	        }
	    });
	    /**
		 * Clean up
		 * @return {Tone.GrainPlayer} this
		 */
	    Tone.GrainPlayer.prototype.dispose = function () {
	        Tone.Source.prototype.dispose.call(this);
	        this.buffer.dispose();
	        this.buffer = null;
	        this._clock.dispose();
	        this._clock = null;
	        this._activeSources.forEach(function (source) {
	            source.dispose();
	        });
	        this._activeSources = null;
	        return this;
	    };
	    return Tone.GrainPlayer;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Player is an audio file player with start, loop, and stop functions.
		 *
		 *  @constructor
		 *  @extends {Tone.Source}
		 *  @param {string|AudioBuffer} url Either the AudioBuffer or the url from
		 *                                  which to load the AudioBuffer
		 *  @param {Function=} onload The function to invoke when the buffer is loaded.
		 *                            Recommended to use Tone.Buffer.on('load') instead.
		 *  @example
		 * var player = new Tone.Player("./path/to/sample.mp3").toMaster();
		 * //play as soon as the buffer is loaded
		 * player.autostart = true;
		 */
	    Tone.Player = function (url) {
	        var options;
	        if (url instanceof Tone.Buffer && url.loaded) {
	            url = url.get();
	            options = Tone.Player.defaults;
	        } else {
	            options = Tone.defaults(arguments, [
	                'url',
	                'onload'
	            ], Tone.Player);
	        }
	        Tone.Source.call(this, options);
	        /**
			 *  If the file should play as soon
			 *  as the buffer is loaded.
			 *  @type {Boolean}
			 *  @example
			 * //will play as soon as it's loaded
			 * var player = new Tone.Player({
			 * 	"url" : "./path/to/sample.mp3",
			 * 	"autostart" : true,
			 * }).toMaster();
			 */
	        this.autostart = options.autostart;
	        /**
			 *  the buffer
			 *  @private
			 *  @type {Tone.Buffer}
			 */
	        this._buffer = new Tone.Buffer({
	            'url': options.url,
	            'onload': this._onload.bind(this, options.onload),
	            'reverse': options.reverse
	        });
	        if (url instanceof AudioBuffer) {
	            this._buffer.set(url);
	        }
	        /**
			 *  if the buffer should loop once it's over
			 *  @type {Boolean}
			 *  @private
			 */
	        this._loop = options.loop;
	        /**
			 *  if 'loop' is true, the loop will start at this position
			 *  @type {Time}
			 *  @private
			 */
	        this._loopStart = options.loopStart;
	        /**
			 *  if 'loop' is true, the loop will end at this position
			 *  @type {Time}
			 *  @private
			 */
	        this._loopEnd = options.loopEnd;
	        /**
			 *  the playback rate
			 *  @private
			 *  @type {Number}
			 */
	        this._playbackRate = options.playbackRate;
	        /**
			 *  All of the active buffer source nodes
			 *  @type {Array<Tone.BufferSource>}
			 *  @private
			 */
	        this._activeSources = [];
	        /**
			 *  The elapsed time counter.
			 *  @type {Tone.TickSource}
			 *  @private
			 */
	        this._elapsedTime = new Tone.TickSource(options.playbackRate);
	        /**
			 *  The fadeIn time of the amplitude envelope.
			 *  @type {Time}
			 */
	        this.fadeIn = options.fadeIn;
	        /**
			 *  The fadeOut time of the amplitude envelope.
			 *  @type {Time}
			 */
	        this.fadeOut = options.fadeOut;
	    };
	    Tone.extend(Tone.Player, Tone.Source);
	    /**
		 *  the default parameters
		 *  @static
		 *  @const
		 *  @type {Object}
		 */
	    Tone.Player.defaults = {
	        'onload': Tone.noOp,
	        'playbackRate': 1,
	        'loop': false,
	        'autostart': false,
	        'loopStart': 0,
	        'loopEnd': 0,
	        'retrigger': false,
	        'reverse': false,
	        'fadeIn': 0,
	        'fadeOut': 0
	    };
	    /**
		 *  Load the audio file as an audio buffer.
		 *  Decodes the audio asynchronously and invokes
		 *  the callback once the audio buffer loads.
		 *  Note: this does not need to be called if a url
		 *  was passed in to the constructor. Only use this
		 *  if you want to manually load a new url.
		 * @param {string} url The url of the buffer to load.
		 *                     Filetype support depends on the
		 *                     browser.
		 *  @param  {Function=} callback The function to invoke once
		 *                               the sample is loaded.
		 *  @returns {Promise}
		 */
	    Tone.Player.prototype.load = function (url, callback) {
	        return this._buffer.load(url, this._onload.bind(this, callback));
	    };
	    /**
		 * Internal callback when the buffer is loaded.
		 * @private
		 */
	    Tone.Player.prototype._onload = function (callback) {
	        callback = Tone.defaultArg(callback, Tone.noOp);
	        callback(this);
	        if (this.autostart) {
	            this.start();
	        }
	    };
	    /**
		 * Internal callback when the buffer is done playing.
		 * @private
		 */
	    Tone.Player.prototype._onSourceEnd = function (source) {
	        var index = this._activeSources.indexOf(source);
	        this._activeSources.splice(index, 1);
	    };
	    /**
		 *  Play the buffer at the given startTime. Optionally add an offset
		 *  and/or duration which will play the buffer from a position
		 *  within the buffer for the given duration.
		 *
		 *  @param  {Time} [startTime=now] When the player should start.
		 *  @param  {Time} [offset=0] The offset from the beginning of the sample
		 *                                 to start at.
		 *  @param  {Time=} duration How long the sample should play. If no duration
		 *                                is given, it will default to the full length
		 *                                of the sample (minus any offset)
		 *  @returns {Tone.Player} this
		 *  @memberOf Tone.Player#
		 *  @method start
		 *  @name start
		 */
	    /**
		 *  Internal start method
		 *  @private
		 */
	    Tone.Player.prototype._start = function (startTime, offset, duration) {
	        //if it's a loop the default offset is the loopstart point
	        if (this._loop) {
	            offset = Tone.defaultArg(offset, this._loopStart);
	        } else {
	            //otherwise the default offset is 0
	            offset = Tone.defaultArg(offset, 0);
	        }
	        //compute the values in seconds
	        offset = this.toSeconds(offset);
	        var computedDuration = Tone.defaultArg(duration, Math.max(this._buffer.duration - offset, 0));
	        computedDuration = this.toSeconds(computedDuration);
	        startTime = this.toSeconds(startTime);
	        //start the elapsed time counter
	        this._elapsedTime.start(startTime, offset);
	        //make the source
	        var source = new Tone.BufferSource({
	            'buffer': this._buffer,
	            'loop': this._loop,
	            'loopStart': this._loopStart,
	            'loopEnd': this._loopEnd,
	            'onended': this._onSourceEnd.bind(this),
	            'playbackRate': this._playbackRate,
	            'fadeIn': this.fadeIn,
	            'fadeOut': this.fadeOut
	        }).connect(this.output);
	        //set the looping properties
	        if (!this._loop && !this._synced) {
	            //if it's not looping, set the state change at the end of the sample
	            this._state.setStateAtTime(Tone.State.Stopped, startTime + computedDuration / this._playbackRate);
	        }
	        //add it to the array of active sources
	        this._activeSources.push(source);
	        //start it
	        if (this._loop && Tone.isUndef(duration)) {
	            source.start(startTime, offset);
	        } else {
	            source.start(startTime, offset, computedDuration);
	        }
	        return this;
	    };
	    /**
		 *  Stop playback.
		 *  @private
		 *  @param  {Time} [time=now]
		 *  @returns {Tone.Player} this
		 */
	    Tone.Player.prototype._stop = function (time) {
	        time = this.toSeconds(time);
	        this._elapsedTime.stop(time);
	        this._activeSources.forEach(function (source) {
	            source.stop(time);
	        });
	        return this;
	    };
	    /**
		 * Stop and then restart the player from the beginning (or offset)
		 *  @param  {Time} [startTime=now] When the player should start.
		 *  @param  {Time} [offset=0] The offset from the beginning of the sample
		 *                                 to start at.
		 *  @param  {Time=} duration How long the sample should play. If no duration
		 *                                is given, it will default to the full length
		 *                                of the sample (minus any offset)
		 *  @returns {Tone.Player} this
		 */
	    Tone.Player.prototype.restart = function (time, offset, duration) {
	        this._stop(time);
	        this._start(time, offset, duration);
	        return this;
	    };
	    /**
		 *  Seek to a specific time in the player's buffer. If the
		 *  source is no longer playing at that time, it will stop.
		 *  If you seek to a time that
		 *  @param {Time} offset The time to seek to.
		 *  @param {Time=} time The time for the seek event to occur.
		 *  @return {Tone.Player} this
		 *  @example
		 * source.start(0.2);
		 * source.stop(0.4);
		 */
	    Tone.Player.prototype.seek = function (offset, time) {
	        time = this.toSeconds(time);
	        if (this._state.getValueAtTime(time) === Tone.State.Started) {
	            offset = this.toSeconds(offset);
	            // if it's currently playing, stop it
	            this._stop(time);
	            //restart it at the given time
	            this._start(time, offset);
	        }
	        return this;
	    };
	    /**
		 *  Set the loop start and end. Will only loop if loop is
		 *  set to true.
		 *  @param {Time} loopStart The loop end time
		 *  @param {Time} loopEnd The loop end time
		 *  @returns {Tone.Player} this
		 *  @example
		 * //loop 0.1 seconds of the file.
		 * player.setLoopPoints(0.2, 0.3);
		 * player.loop = true;
		 */
	    Tone.Player.prototype.setLoopPoints = function (loopStart, loopEnd) {
	        this.loopStart = loopStart;
	        this.loopEnd = loopEnd;
	        return this;
	    };
	    /**
		 * If loop is true, the loop will start at this position.
		 * @memberOf Tone.Player#
		 * @type {Time}
		 * @name loopStart
		 */
	    Object.defineProperty(Tone.Player.prototype, 'loopStart', {
	        get: function () {
	            return this._loopStart;
	        },
	        set: function (loopStart) {
	            this._loopStart = loopStart;
	            //get the current source
	            this._activeSources.forEach(function (source) {
	                source.loopStart = loopStart;
	            });
	        }
	    });
	    /**
		 * If loop is true, the loop will end at this position.
		 * @memberOf Tone.Player#
		 * @type {Time}
		 * @name loopEnd
		 */
	    Object.defineProperty(Tone.Player.prototype, 'loopEnd', {
	        get: function () {
	            return this._loopEnd;
	        },
	        set: function (loopEnd) {
	            this._loopEnd = loopEnd;
	            //get the current source
	            this._activeSources.forEach(function (source) {
	                source.loopEnd = loopEnd;
	            });
	        }
	    });
	    /**
		 * The audio buffer belonging to the player.
		 * @memberOf Tone.Player#
		 * @type {Tone.Buffer}
		 * @name buffer
		 */
	    Object.defineProperty(Tone.Player.prototype, 'buffer', {
	        get: function () {
	            return this._buffer;
	        },
	        set: function (buffer) {
	            this._buffer.set(buffer);
	        }
	    });
	    /**
		 * If the buffer should loop once it's over.
		 * @memberOf Tone.Player#
		 * @type {Boolean}
		 * @name loop
		 */
	    Object.defineProperty(Tone.Player.prototype, 'loop', {
	        get: function () {
	            return this._loop;
	        },
	        set: function (loop) {
	            //if no change, do nothing
	            if (this._loop === loop) {
	                return;
	            }
	            this._loop = loop;
	            var now = this.now();
	            if (!loop) {
	                //stop the playback on the next cycle
	                this._stopAtNextIteration(now);
	            } else {
	                //remove the next stopEvent
	                var stopEvent = this._state.getNextState(Tone.State.Stopped, now);
	                if (stopEvent) {
	                    this._activeSources.forEach(function (source) {
	                        source.loop = loop;
	                    });
	                    this._state.cancel(stopEvent.time);
	                    this._elapsedTime.cancel(stopEvent.time);
	                }
	            }
	        }
	    });
	    /**
		 *  Schedules a stop event at the next full iteration. Used
		 *  for scheduling stop when the loop state or playbackRate changes
		 *  @param  {Number}  now  The current time
		 *  @private
		 */
	    Tone.Player.prototype._stopAtNextIteration = function (now) {
	        if (this._state.getValueAtTime(now) === Tone.State.Started) {
	            var nextStop = this._state.getNextState(Tone.State.Stopped, now);
	            var position = this._elapsedTime.getTicksAtTime(now);
	            var iterations = Math.max(Math.ceil(position / this.buffer.duration), 1);
	            var stopTime = this._elapsedTime.getTimeOfTick(iterations * this.buffer.duration, nextStop ? nextStop.time - this.sampleTime : Infinity);
	            this.stop(stopTime);
	        }
	    };
	    /**
		 * The playback speed. 1 is normal speed. This is not a signal because
		 * Safari and iOS currently don't support playbackRate as a signal.
		 * @memberOf Tone.Player#
		 * @type {Number}
		 * @name playbackRate
		 */
	    Object.defineProperty(Tone.Player.prototype, 'playbackRate', {
	        get: function () {
	            return this._playbackRate;
	        },
	        set: function (rate) {
	            this._playbackRate = rate;
	            var now = this.now();
	            this._elapsedTime.frequency.setValueAtTime(rate, now);
	            //if it's not looping
	            if (!this._loop) {
	                this._stopAtNextIteration(now);
	            }
	            //set all the sources
	            this._activeSources.forEach(function (source) {
	                source.playbackRate.setValueAtTime(rate, now);
	            });
	        }
	    });
	    /**
		 * The current playback position of the buffer. 
		 * @memberOf Tone.Player#
		 * @type {Number}
		 * @name position
		 */
	    Object.defineProperty(Tone.Player.prototype, 'position', {
	        get: function () {
	            var now = this.now();
	            if (this._state.getValueAtTime(now) === Tone.State.Started && this.loaded) {
	                var duration = this.buffer.duration;
	                var position = this._elapsedTime.getTicksAtTime(now);
	                return position % duration;
	            } else {
	                return 0;
	            }
	        }
	    });
	    /**
		 * The direction the buffer should play in
		 * @memberOf Tone.Player#
		 * @type {Boolean}
		 * @name reverse
		 */
	    Object.defineProperty(Tone.Player.prototype, 'reverse', {
	        get: function () {
	            return this._buffer.reverse;
	        },
	        set: function (rev) {
	            this._buffer.reverse = rev;
	        }
	    });
	    /**
		 * If all the buffer is loaded
		 * @memberOf Tone.Player#
		 * @type {Boolean}
		 * @name loaded
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Player.prototype, 'loaded', {
	        get: function () {
	            return this._buffer.loaded;
	        }
	    });
	    /**
		 *  Dispose and disconnect.
		 *  @return {Tone.Player} this
		 */
	    Tone.Player.prototype.dispose = function () {
	        //disconnect all of the players
	        this._activeSources.forEach(function (source) {
	            source.dispose();
	        });
	        this._activeSources = null;
	        Tone.Source.prototype.dispose.call(this);
	        this._buffer.dispose();
	        this._buffer = null;
	        this._elapsedTime.dispose();
	        this._elapsedTime = null;
	        return this;
	    };
	    return Tone.Player;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.Players combines multiple [Tone.Player](Player) objects.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Object} urls An object mapping a name to a url.
		 *  @param {function=} onload The function to invoke when all buffers are loaded.
		 */
	    Tone.Players = function (urls) {
	        var args = Array.prototype.slice.call(arguments);
	        args.shift();
	        var options = Tone.defaults(args, ['onload'], Tone.Players);
	        Tone.call(this);
	        /**
			 *  The output volume node
			 *  @type  {Tone.Volume}
			 *  @private
			 */
	        this._volume = this.output = new Tone.Volume(options.volume);
	        /**
			 * The volume of the output in decibels.
			 * @type {Decibels}
			 * @signal
			 * @example
			 * source.volume.value = -6;
			 */
	        this.volume = this._volume.volume;
	        this._readOnly('volume');
	        //make the output explicitly stereo
	        this._volume.output.output.channelCount = 2;
	        this._volume.output.output.channelCountMode = 'explicit';
	        //mute initially
	        this.mute = options.mute;
	        /**
			 * The container of all of the players
			 * @type {Object}
			 * @private
			 */
	        this._players = {};
	        /**
			 * The loading count
			 * @type {Number}
			 * @private
			 */
	        this._loadingCount = 0;
	        /**
			 * private holder of the fadeIn time
			 * @type {Time}
			 * @private
			 */
	        this._fadeIn = options.fadeIn;
	        /**
			 * private holder of the fadeOut time
			 * @type {Time}
			 * @private
			 */
	        this._fadeOut = options.fadeOut;
	        //add all of the players
	        for (var name in urls) {
	            this._loadingCount++;
	            this.add(name, urls[name], this._bufferLoaded.bind(this, options.onload));
	        }
	    };
	    Tone.extend(Tone.Players, Tone.AudioNode);
	    /**
		 * The default values
		 * @type {Object}
		 */
	    Tone.Players.defaults = {
	        'volume': 0,
	        'mute': false,
	        'onload': Tone.noOp,
	        'fadeIn': 0,
	        'fadeOut': 0
	    };
	    /**
		 *  A buffer was loaded. decrement the counter.
		 *  @param  {Function}  callback
		 *  @private
		 */
	    Tone.Players.prototype._bufferLoaded = function (callback) {
	        this._loadingCount--;
	        if (this._loadingCount === 0 && callback) {
	            callback(this);
	        }
	    };
	    /**
		 * Mute the output.
		 * @memberOf Tone.Source#
		 * @type {boolean}
		 * @name mute
		 * @example
		 * //mute the output
		 * source.mute = true;
		 */
	    Object.defineProperty(Tone.Players.prototype, 'mute', {
	        get: function () {
	            return this._volume.mute;
	        },
	        set: function (mute) {
	            this._volume.mute = mute;
	        }
	    });
	    /**
		 * The fadeIn time of the amplitude envelope.
		 * @memberOf Tone.Source#
		 * @type {Time}
		 * @name fadeIn
		 */
	    Object.defineProperty(Tone.Players.prototype, 'fadeIn', {
	        get: function () {
	            return this._fadeIn;
	        },
	        set: function (fadeIn) {
	            this._fadeIn = fadeIn;
	            this._forEach(function (player) {
	                player.fadeIn = fadeIn;
	            });
	        }
	    });
	    /**
		 * The fadeOut time of the amplitude envelope.
		 * @memberOf Tone.Source#
		 * @type {Time}
		 * @name fadeOut
		 */
	    Object.defineProperty(Tone.Players.prototype, 'fadeOut', {
	        get: function () {
	            return this._fadeOut;
	        },
	        set: function (fadeOut) {
	            this._fadeOut = fadeOut;
	            this._forEach(function (player) {
	                player.fadeOut = fadeOut;
	            });
	        }
	    });
	    /**
		 * The state of the players object. Returns "started" if any of the players are playing.
		 * @memberOf Tone.Players#
		 * @type {String}
		 * @name state
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Players.prototype, 'state', {
	        get: function () {
	            var playing = false;
	            this._forEach(function (player) {
	                playing = playing || player.state === Tone.State.Started;
	            });
	            return playing ? Tone.State.Started : Tone.State.Stopped;
	        }
	    });
	    /**
		 *  True if the buffers object has a buffer by that name.
		 *  @param  {String|Number}  name  The key or index of the
		 *                                 buffer.
		 *  @return  {Boolean}
		 */
	    Tone.Players.prototype.has = function (name) {
	        return this._players.hasOwnProperty(name);
	    };
	    /**
		 *  Get a player by name.
		 *  @param  {String}  name  The players name as defined in
		 *                          the constructor object or `add` method.
		 *  @return  {Tone.Player}
		 */
	    Tone.Players.prototype.get = function (name) {
	        if (this.has(name)) {
	            return this._players[name];
	        } else {
	            throw new Error('Tone.Players: no player named ' + name);
	        }
	    };
	    /**
		 * Iterate over all of the players
		 * @param  {Function} callback
		 * @return {Tone.Players}            this
		 * @private
		 */
	    Tone.Players.prototype._forEach = function (callback) {
	        for (var playerName in this._players) {
	            callback(this._players[playerName], playerName);
	        }
	        return this;
	    };
	    /**
		 * If all the buffers are loaded or not
		 * @memberOf Tone.Players#
		 * @type {Boolean}
		 * @name loaded
		 * @readOnly
		 */
	    Object.defineProperty(Tone.Players.prototype, 'loaded', {
	        get: function () {
	            var isLoaded = true;
	            this._forEach(function (player) {
	                isLoaded = isLoaded && player.loaded;
	            });
	            return isLoaded;
	        }
	    });
	    /**
		 *  Add a player by name and url to the Players
		 *  @param  {String}    name      A unique name to give the player
		 *  @param  {String|Tone.Buffer|Audiobuffer}  url  Either the url of the bufer,
		 *                                                 or a buffer which will be added
		 *                                                 with the given name.
		 *  @param  {Function=}  callback  The callback to invoke
		 *                                 when the url is loaded.
		 */
	    Tone.Players.prototype.add = function (name, url, callback) {
	        this._players[name] = new Tone.Player(url, callback).connect(this.output);
	        this._players[name].fadeIn = this._fadeIn;
	        this._players[name].fadeOut = this._fadeOut;
	        return this;
	    };
	    /**
		 * Stop all of the players at the given time
		 * @param {Time} time The time to stop all of the players.
		 * @return {Tone.Players} this
		 */
	    Tone.Players.prototype.stopAll = function (time) {
	        this._forEach(function (player) {
	            player.stop(time);
	        });
	    };
	    /**
		 *  Dispose and disconnect.
		 *  @return {Tone.Players} this
		 */
	    Tone.Players.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this._volume.dispose();
	        this._volume = null;
	        this._writable('volume');
	        this.volume = null;
	        this.output = null;
	        this._forEach(function (player) {
	            player.dispose();
	        });
	        this._players = null;
	        return this;
	    };
	    return Tone.Players;
	});
	Module(function (Tone) {
	    
	    /**
		 *  @class  Tone.UserMedia uses MediaDevices.getUserMedia to open up
		 *          and external microphone or audio input. Check
		 *          [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)
		 *          to see which browsers are supported. Access to an external input
		 *          is limited to secure (HTTPS) connections.
		 *
		 *  @constructor
		 *  @extends {Tone.AudioNode}
		 *  @param {Decibels=} volume The level of the input
		 *  @example
		 * //list the inputs and open the third one
		 * var motu = new Tone.UserMedia();
		 *
		 * //opening the input asks the user to activate their mic
		 * motu.open().then(function(){
		 * 	//promise resolves when input is available
		 * });
		 */
	    Tone.UserMedia = function () {
	        var options = Tone.defaults(arguments, ['volume'], Tone.UserMedia);
	        Tone.AudioNode.call(this);
	        /**
			 *  The MediaStreamNode
			 *  @type {MediaStreamAudioSourceNode}
			 *  @private
			 */
	        this._mediaStream = null;
	        /**
			 *  The media stream created by getUserMedia.
			 *  @type {LocalMediaStream}
			 *  @private
			 */
	        this._stream = null;
	        /**
			 *  The open device
			 *  @type  {MediaDeviceInfo}
			 *  @private
			 */
	        this._device = null;
	        /**
			 *  The output volume node
			 *  @type  {Tone.Volume}
			 *  @private
			 */
	        this._volume = this.output = new Tone.Volume(options.volume);
	        /**
			 * The volume of the output in decibels.
			 * @type {Decibels}
			 * @signal
			 * @example
			 * input.volume.value = -6;
			 */
	        this.volume = this._volume.volume;
	        this._readOnly('volume');
	        this.mute = options.mute;
	    };
	    Tone.extend(Tone.UserMedia, Tone.AudioNode);
	    /**
		 * the default parameters
		 * @type {Object}
		 */
	    Tone.UserMedia.defaults = {
	        'volume': 0,
	        'mute': false
	    };
	    /**
		 *  Open the media stream. If a string is passed in, it is assumed
		 *  to be the label or id of the stream, if a number is passed in,
		 *  it is the input number of the stream.
		 *  @param  {String|Number} [labelOrId="default"] The label or id of the audio input media device.
		 *                                                With no argument, the default stream is opened.
		 *  @return {Promise} The promise is resolved when the stream is open.
		 */
	    Tone.UserMedia.prototype.open = function (labelOrId) {
	        return Tone.UserMedia.enumerateDevices().then(function (devices) {
	            var device;
	            if (Tone.isNumber(labelOrId)) {
	                device = devices[labelOrId];
	            } else {
	                device = devices.find(function (device) {
	                    return device.label === labelOrId || device.deviceId === labelOrId;
	                });
	                //didn't find a matching device
	                if (!device && devices.length > 0) {
	                    device = devices[0];
	                } else if (!device && Tone.isDefined(labelOrId)) {
	                    throw new Error('Tone.UserMedia: no matching device: ' + labelOrId);
	                }
	            }
	            this._device = device;
	            //do getUserMedia
	            var constraints = {
	                audio: {
	                    'echoCancellation': false,
	                    'sampleRate': this.context.sampleRate
	                }
	            };
	            if (device) {
	                constraints.audio.deviceId = device.deviceId;
	            }
	            return navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {
	                //start a new source only if the previous one is closed
	                if (!this._stream) {
	                    this._stream = stream;
	                    //Wrap a MediaStreamSourceNode around the live input stream.
	                    this._mediaStream = this.context.createMediaStreamSource(stream);
	                    //Connect the MediaStreamSourceNode to a gate gain node
	                    this._mediaStream.connect(this.output);
	                }
	                return this;
	            }.bind(this));
	        }.bind(this));
	    };
	    /**
		 *  Close the media stream
		 *  @return {Tone.UserMedia} this
		 */
	    Tone.UserMedia.prototype.close = function () {
	        if (this._stream) {
	            this._stream.getAudioTracks().forEach(function (track) {
	                track.stop();
	            });
	            this._stream = null;
	            //remove the old media stream
	            this._mediaStream.disconnect();
	            this._mediaStream = null;
	        }
	        this._device = null;
	        return this;
	    };
	    /**
		 *  Returns a promise which resolves with the list of audio input devices available.
		 *  @return {Promise} The promise that is resolved with the devices
		 *  @static
		 *  @example
		 * Tone.UserMedia.enumerateDevices().then(function(devices){
		 * 	console.log(devices)
		 * })
		 */
	    Tone.UserMedia.enumerateDevices = function () {
	        return navigator.mediaDevices.enumerateDevices().then(function (devices) {
	            return devices.filter(function (device) {
	                return device.kind === 'audioinput';
	            });
	        });
	    };
	    /**
		 *  Returns the playback state of the source, "started" when the microphone is open
		 *  and "stopped" when the mic is closed.
		 *  @type {Tone.State}
		 *  @readOnly
		 *  @memberOf Tone.UserMedia#
		 *  @name state
		 */
	    Object.defineProperty(Tone.UserMedia.prototype, 'state', {
	        get: function () {
	            return this._stream && this._stream.active ? Tone.State.Started : Tone.State.Stopped;
	        }
	    });
	    /**
		 * 	Returns an identifier for the represented device that is
		 * 	persisted across sessions. It is un-guessable by other applications and
		 * 	unique to the origin of the calling application. It is reset when the
		 * 	user clears cookies (for Private Browsing, a different identifier is
		 * 	used that is not persisted across sessions). Returns undefined when the
		 * 	device is not open.
		 *  @type {String}
		 *  @readOnly
		 *  @memberOf Tone.UserMedia#
		 *  @name deviceId
		 */
	    Object.defineProperty(Tone.UserMedia.prototype, 'deviceId', {
	        get: function () {
	            if (this._device) {
	                return this._device.deviceId;
	            }
	        }
	    });
	    /**
		 * 	Returns a group identifier. Two devices have the
		 * 	same group identifier if they belong to the same physical device.
		 * 	Returns undefined when the device is not open.
		 *  @type {String}
		 *  @readOnly
		 *  @memberOf Tone.UserMedia#
		 *  @name groupId
		 */
	    Object.defineProperty(Tone.UserMedia.prototype, 'groupId', {
	        get: function () {
	            if (this._device) {
	                return this._device.groupId;
	            }
	        }
	    });
	    /**
		 * 	Returns a label describing this device (for example "Built-in Microphone").
		 * 	Returns undefined when the device is not open or label is not available
		 * 	because of permissions.
		 *  @type {String}
		 *  @readOnly
		 *  @memberOf Tone.UserMedia#
		 *  @name groupId
		 */
	    Object.defineProperty(Tone.UserMedia.prototype, 'label', {
	        get: function () {
	            if (this._device) {
	                return this._device.label;
	            }
	        }
	    });
	    /**
		 * Mute the output.
		 * @memberOf Tone.UserMedia#
		 * @type {boolean}
		 * @name mute
		 * @example
		 * //mute the output
		 * userMedia.mute = true;
		 */
	    Object.defineProperty(Tone.UserMedia.prototype, 'mute', {
	        get: function () {
	            return this._volume.mute;
	        },
	        set: function (mute) {
	            this._volume.mute = mute;
	        }
	    });
	    /**
		 * Clean up.
		 * @return {Tone.UserMedia} this
		 */
	    Tone.UserMedia.prototype.dispose = function () {
	        Tone.AudioNode.prototype.dispose.call(this);
	        this.close();
	        this._writable('volume');
	        this._volume.dispose();
	        this._volume = null;
	        this.volume = null;
	        return this;
	    };
	    /**
		 *  If getUserMedia is supported by the browser.
		 *  @type  {Boolean}
		 *  @memberOf Tone.UserMedia#
		 *  @name supported
		 *  @static
		 *  @readOnly
		 */
	    Object.defineProperty(Tone.UserMedia, 'supported', {
	        get: function () {
	            return Tone.isDefined(navigator.mediaDevices) && Tone.isFunction(navigator.mediaDevices.getUserMedia);
	        }
	    });
	    return Tone.UserMedia;
	});
	Module(function (Tone) {
	    /**
		 *  @class Tone.Midi is a primitive type for encoding Time values.
		 *         Tone.Midi can be constructed with or without the `new` keyword. Tone.Midi can be passed
		 *         into the parameter of any method which takes time as an argument.
		 *  @constructor
		 *  @extends {Tone.Frequency}
		 *  @param  {String|Number}  val    The time value.
		 *  @param  {String=}  units  The units of the value.
		 *  @example
		 * var t = Tone.Midi("4n");//a quarter note
		 */
	    Tone.Midi = function (val, units) {
	        if (this instanceof Tone.Midi) {
	            Tone.Frequency.call(this, val, units);
	        } else {
	            return new Tone.Midi(val, units);
	        }
	    };
	    Tone.extend(Tone.Midi, Tone.Frequency);
	    /**
		 *  The default units if none are given.
		 *  @type {String}
		 *  @private
		 */
	    Tone.Midi.prototype._defaultUnits = 'midi';
	    /**
		 *  Returns the value of a frequency in the current units
		 *  @param {Frequency} freq
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Midi.prototype._frequencyToUnits = function (freq) {
	        return Tone.Frequency.ftom(Tone.Frequency.prototype._frequencyToUnits.call(this, freq));
	    };
	    /**
		 *  Returns the value of a tick in the current time units
		 *  @param {Ticks} ticks
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Midi.prototype._ticksToUnits = function (ticks) {
	        return Tone.Frequency.ftom(Tone.Frequency.prototype._ticksToUnits.call(this, ticks));
	    };
	    /**
		 *  Return the value of the beats in the current units
		 *  @param {Number} beats
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Midi.prototype._beatsToUnits = function (beats) {
	        return Tone.Frequency.ftom(Tone.Frequency.prototype._beatsToUnits.call(this, beats));
	    };
	    /**
		 *  Returns the value of a second in the current units
		 *  @param {Seconds} seconds
		 *  @return  {Number}
		 *  @private
		 */
	    Tone.Midi.prototype._secondsToUnits = function (seconds) {
	        return Tone.Frequency.ftom(Tone.Frequency.prototype._secondsToUnits.call(this, seconds));
	    };
	    /**
		 *  Return the value of the frequency as a MIDI note
		 *  @return  {MIDI}
		 *  @example
		 * Tone.Midi(60).toMidi(); //60
		 */
	    Tone.Midi.prototype.toMidi = function () {
	        return this.valueOf();
	    };
	    /**
		 *  Return the value of the frequency as a MIDI note
		 *  @return  {MIDI}
		 *  @example
		 * Tone.Midi(60).toMidi(); //60
		 */
	    Tone.Midi.prototype.toFrequency = function () {
	        return Tone.Frequency.mtof(this.toMidi());
	    };
	    /**
		 *  Transposes the frequency by the given number of semitones.
		 *  @param  {Interval}  interval
		 *  @return  {Tone.Frequency} A new transposed frequency
		 *  @example
		 * Tone.Frequency("A4").transpose(3); //"C5"
		 */
	    Tone.Midi.prototype.transpose = function (interval) {
	        return new this.constructor(this.toMidi() + interval);
	    };
	    return Tone.Midi;
	});
	
	return Tone;
}));

/***/ }),

/***/ "../../node_modules/webmidi/webmidi.min.js":
/*!***********************************************************************************************************!*\
  !*** /home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/webmidi/webmidi.min.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*

WebMidi v2.2.0

WebMidi.js helps you tame the Web MIDI API. Send and receive MIDI messages with ease. Control instruments with user-friendly functions (playNote, sendPitchBend, etc.). React to MIDI input with simple event listeners (noteon, pitchbend, controlchange, etc.).
https://github.com/djipco/webmidi


The MIT License (MIT)

Copyright (c) 2015-2018, Jean-Philippe Côté

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/

!function(scope){"use strict";function WebMidi(){if(WebMidi.prototype._singleton)throw new Error("WebMidi is a singleton, it cannot be instantiated directly.");WebMidi.prototype._singleton=this,this._inputs=[],this._outputs=[],this._userHandlers={},this._stateChangeQueue=[],this._processingStateChange=!1,this._midiInterfaceEvents=["connected","disconnected"],this._notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],this._semitones={C:0,D:2,E:4,F:5,G:7,A:9,B:11},Object.defineProperties(this,{MIDI_SYSTEM_MESSAGES:{value:{sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,"continue":251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MESSAGES:{value:{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,channelmode:11,programchange:12,channelaftertouch:13,pitchbend:14},writable:!1,enumerable:!0,configurable:!1},MIDI_REGISTERED_PARAMETER:{value:{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]},writable:!1,enumerable:!0,configurable:!1},MIDI_CONTROL_CHANGE_MESSAGES:{value:{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101},writable:!1,enumerable:!0,configurable:!1},MIDI_CHANNEL_MODE_MESSAGES:{value:{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127},writable:!1,enumerable:!0,configurable:!1},octaveOffset:{value:0,writable:!0,enumerable:!0,configurable:!1}}),Object.defineProperties(this,{supported:{enumerable:!0,get:function(){return"requestMIDIAccess"in navigator}},enabled:{enumerable:!0,get:function(){return void 0!==this["interface"]}.bind(this)},inputs:{enumerable:!0,get:function(){return this._inputs}.bind(this)},outputs:{enumerable:!0,get:function(){return this._outputs}.bind(this)},sysexEnabled:{enumerable:!0,get:function(){return!(!this["interface"]||!this["interface"].sysexEnabled)}.bind(this)},time:{enumerable:!0,get:function(){return performance.now()}}})}function Input(midiInput){var that=this;this._userHandlers={channel:{},system:{}},this._midiInput=midiInput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiInput.connection}},id:{enumerable:!0,get:function(){return that._midiInput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiInput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiInput.name}},state:{enumerable:!0,get:function(){return that._midiInput.state}},type:{enumerable:!0,get:function(){return that._midiInput.type}}}),this._initializeUserHandlers(),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}function Output(midiOutput){var that=this;this._midiOutput=midiOutput,Object.defineProperties(this,{connection:{enumerable:!0,get:function(){return that._midiOutput.connection}},id:{enumerable:!0,get:function(){return that._midiOutput.id}},manufacturer:{enumerable:!0,get:function(){return that._midiOutput.manufacturer}},name:{enumerable:!0,get:function(){return that._midiOutput.name}},state:{enumerable:!0,get:function(){return that._midiOutput.state}},type:{enumerable:!0,get:function(){return that._midiOutput.type}}})}var wm=new WebMidi;WebMidi.prototype.enable=function(callback,sysex){return this.enabled?void 0:this.supported?void navigator.requestMIDIAccess({sysex:sysex}).then(function(midiAccess){function onPortsOpen(){clearTimeout(promiseTimeout),this._updateInputsAndOutputs(),this["interface"].onstatechange=this._onInterfaceStateChange.bind(this),"function"==typeof callback&&callback.call(this),events.forEach(function(event){this._onInterfaceStateChange(event)}.bind(this))}var promiseTimeout,events=[],promises=[];this["interface"]=midiAccess,this._resetInterfaceUserHandlers(),this["interface"].onstatechange=function(e){events.push(e)};for(var inputs=midiAccess.inputs.values(),input=inputs.next();input&&!input.done;input=inputs.next())promises.push(input.value.open());for(var outputs=midiAccess.outputs.values(),output=outputs.next();output&&!output.done;output=outputs.next())promises.push(output.value.open());promiseTimeout=setTimeout(onPortsOpen.bind(this),200),Promise&&Promise.all(promises)["catch"](function(err){}).then(onPortsOpen.bind(this))}.bind(this),function(err){"function"==typeof callback&&callback.call(this,err)}.bind(this)):void("function"==typeof callback&&callback(new Error("The Web MIDI API is not supported by your browser.")))},WebMidi.prototype.disable=function(){if(!this.supported)throw new Error("The Web MIDI API is not supported by your browser.");this["interface"]&&(this["interface"].onstatechange=void 0),this["interface"]=void 0,this._inputs=[],this._outputs=[],this._resetInterfaceUserHandlers()},WebMidi.prototype.addListener=function(type,listener){if(!this.enabled)throw new Error("WebMidi must be enabled before adding event listeners.");if("function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(!(this._midiInterfaceEvents.indexOf(type)>=0))throw new TypeError("The specified event type is not supported.");return this._userHandlers[type].push(listener),this},WebMidi.prototype.hasListener=function(type,listener){if(!this.enabled)throw new Error("WebMidi must be enabled before checking event listeners.");if("function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(!(this._midiInterfaceEvents.indexOf(type)>=0))throw new TypeError("The specified event type is not supported.");for(var o=0;o<this._userHandlers[type].length;o++)if(this._userHandlers[type][o]===listener)return!0;return!1},WebMidi.prototype.removeListener=function(type,listener){if(!this.enabled)throw new Error("WebMidi must be enabled before removing event listeners.");if(void 0!==listener&&"function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(this._midiInterfaceEvents.indexOf(type)>=0)if(listener)for(var o=0;o<this._userHandlers[type].length;o++)this._userHandlers[type][o]===listener&&this._userHandlers[type].splice(o,1);else this._userHandlers[type]=[];else{if(void 0!==type)throw new TypeError("The specified event type is not supported.");this._resetInterfaceUserHandlers()}return this},WebMidi.prototype.toMIDIChannels=function(channel){var channels;return channels="all"===channel||void 0===channel?["all"]:Array.isArray(channel)?channel:[channel],channels.indexOf("all")>-1&&(channels=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),channels.map(function(ch){return parseInt(ch)}).filter(function(ch){return ch>=1&&16>=ch})},WebMidi.prototype.getInputById=function(id){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var i=0;i<this.inputs.length;i++)if(this.inputs[i].id===id)return this.inputs[i];return!1},WebMidi.prototype.getOutputById=function(id){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var i=0;i<this.outputs.length;i++)if(this.outputs[i].id===id)return this.outputs[i];return!1},WebMidi.prototype.getInputByName=function(name){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var i=0;i<this.inputs.length;i++)if(~this.inputs[i].name.indexOf(name))return this.inputs[i];return!1},WebMidi.prototype.getOctave=function(number){return null!=number&&number>=0&&127>=number?Math.floor(Math.floor(number)/12-1)+Math.floor(wm.octaveOffset):void 0},WebMidi.prototype.getOutputByName=function(name){if(!this.enabled)throw new Error("WebMidi is not enabled.");for(var i=0;i<this.outputs.length;i++)if(~this.outputs[i].name.indexOf(name))return this.outputs[i];return!1},WebMidi.prototype.guessNoteNumber=function(input){var output=!1;if(input&&input.toFixed&&input>=0&&127>=input?output=Math.round(input):parseInt(input)>=0&&parseInt(input)<=127?output=parseInt(input):("string"==typeof input||input instanceof String)&&(output=this.noteNameToNumber(input)),output===!1)throw new Error("Invalid input value ("+input+").");return output},WebMidi.prototype.noteNameToNumber=function(name){"string"!=typeof name&&(name="");var matches=name.match(/([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)/i);if(!matches)throw new RangeError("Invalid note name.");var semitones=wm._semitones[matches[1].toUpperCase()],octave=parseInt(matches[3]),result=12*(octave+1-Math.floor(wm.octaveOffset))+semitones;if(matches[2].toLowerCase().indexOf("b")>-1?result-=matches[2].length:matches[2].toLowerCase().indexOf("#")>-1&&(result+=matches[2].length),0>result||result>127)throw new RangeError("Invalid note name or note outside valid range.");return result},WebMidi.prototype._updateInputsAndOutputs=function(){this._updateInputs(),this._updateOutputs()},WebMidi.prototype._updateInputs=function(){for(var i=0;i<this._inputs.length;i++){for(var remove=!0,updated=this["interface"].inputs.values(),input=updated.next();input&&!input.done;input=updated.next())if(this._inputs[i]._midiInput===input.value){remove=!1;break}remove&&this._inputs.splice(i,1)}this["interface"]&&this["interface"].inputs.forEach(function(nInput){for(var add=!0,j=0;j<this._inputs.length;j++)this._inputs[j]._midiInput===nInput&&(add=!1);add&&this._inputs.push(new Input(nInput))}.bind(this))},WebMidi.prototype._updateOutputs=function(){for(var i=0;i<this._outputs.length;i++){for(var remove=!0,updated=this["interface"].outputs.values(),output=updated.next();output&&!output.done;output=updated.next())if(this._outputs[i]._midiOutput===output.value){remove=!1;break}remove&&this._outputs.splice(i,1)}this["interface"]&&this["interface"].outputs.forEach(function(nOutput){for(var add=!0,j=0;j<this._outputs.length;j++)this._outputs[j]._midiOutput===nOutput&&(add=!1);add&&this._outputs.push(new Output(nOutput))}.bind(this))},WebMidi.prototype._onInterfaceStateChange=function(e){this._updateInputsAndOutputs();var event={timestamp:e.timeStamp,type:e.port.state};this["interface"]&&"connected"===e.port.state?"output"===e.port.type?event.port=this.getOutputById(e.port.id):"input"===e.port.type&&(event.port=this.getInputById(e.port.id)):event.port={connection:"closed",id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this._userHandlers[e.port.state].forEach(function(handler){handler(event)})},WebMidi.prototype._resetInterfaceUserHandlers=function(){for(var i=0;i<this._midiInterfaceEvents.length;i++)this._userHandlers[this._midiInterfaceEvents[i]]=[]},Input.prototype.addListener=function(type,channel,listener){var that=this;if(void 0===channel&&(channel="all"),Array.isArray(channel)||(channel=[channel]),channel.forEach(function(item){if("all"!==item&&!(item>=1&&16>=item))throw new RangeError("The 'channel' parameter is invalid.")}),"function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(void 0!==wm.MIDI_SYSTEM_MESSAGES[type])this._userHandlers.system[type]||(this._userHandlers.system[type]=[]),this._userHandlers.system[type].push(listener);else{if(void 0===wm.MIDI_CHANNEL_MESSAGES[type])throw new TypeError("The specified event type is not supported.");if(channel.indexOf("all")>-1){channel=[];for(var j=1;16>=j;j++)channel.push(j)}this._userHandlers.channel[type]||(this._userHandlers.channel[type]=[]),channel.forEach(function(ch){that._userHandlers.channel[type][ch]||(that._userHandlers.channel[type][ch]=[]),that._userHandlers.channel[type][ch].push(listener)})}return this},Input.prototype.on=Input.prototype.addListener,Input.prototype.hasListener=function(type,channel,listener){var that=this;if("function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===channel&&(channel="all"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type]){for(var o=0;o<this._userHandlers.system[type].length;o++)if(this._userHandlers.system[type][o]===listener)return!0}else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(channel.indexOf("all")>-1){channel=[];for(var j=1;16>=j;j++)channel.push(j)}return this._userHandlers.channel[type]?channel.every(function(chNum){var listeners=that._userHandlers.channel[type][chNum];return listeners&&listeners.indexOf(listener)>-1}):!1}return!1},Input.prototype.removeListener=function(type,channel,listener){var that=this;if(void 0!==listener&&"function"!=typeof listener)throw new TypeError("The 'listener' parameter must be a function.");if(void 0===channel&&(channel="all"),channel.constructor!==Array&&(channel=[channel]),void 0!==wm.MIDI_SYSTEM_MESSAGES[type])if(void 0===listener)this._userHandlers.system[type]=[];else for(var o=0;o<this._userHandlers.system[type].length;o++)this._userHandlers.system[type][o]===listener&&this._userHandlers.system[type].splice(o,1);else if(void 0!==wm.MIDI_CHANNEL_MESSAGES[type]){if(channel.indexOf("all")>-1){channel=[];for(var j=1;16>=j;j++)channel.push(j)}if(!this._userHandlers.channel[type])return this;channel.forEach(function(chNum){var listeners=that._userHandlers.channel[type][chNum];if(listeners)if(void 0===listener)that._userHandlers.channel[type][chNum]=[];else for(var l=0;l<listeners.length;l++)listeners[l]===listener&&listeners.splice(l,1)})}else{if(void 0!==type)throw new TypeError("The specified event type is not supported.");this._initializeUserHandlers()}return this},Input.prototype._initializeUserHandlers=function(){for(var prop1 in wm.MIDI_CHANNEL_MESSAGES)wm.MIDI_CHANNEL_MESSAGES.hasOwnProperty(prop1)&&(this._userHandlers.channel[prop1]={});for(var prop2 in wm.MIDI_SYSTEM_MESSAGES)wm.MIDI_SYSTEM_MESSAGES.hasOwnProperty(prop2)&&(this._userHandlers.system[prop2]=[])},Input.prototype._onMidiMessage=function(e){if(this._userHandlers.system.midimessage.length>0){var event={target:this,data:e.data,timestamp:e.timeStamp,type:"midimessage"};this._userHandlers.system.midimessage.forEach(function(callback){callback(event)})}e.data[0]<240?this._parseChannelEvent(e):e.data[0]<=255&&this._parseSystemEvent(e)},Input.prototype._parseChannelEvent=function(e){var data1,data2,command=e.data[0]>>4,channel=(15&e.data[0])+1;e.data.length>1&&(data1=e.data[1],data2=e.data.length>2?e.data[2]:void 0);var event={target:this,data:e.data,timestamp:e.timeStamp,channel:channel};command===wm.MIDI_CHANNEL_MESSAGES.noteoff||command===wm.MIDI_CHANNEL_MESSAGES.noteon&&0===data2?(event.type="noteoff",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.noteon?(event.type="noteon",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.velocity=data2/127,event.rawVelocity=data2):command===wm.MIDI_CHANNEL_MESSAGES.keyaftertouch?(event.type="keyaftertouch",event.note={number:data1,name:wm._notes[data1%12],octave:wm.getOctave(data1)},event.value=data2/127):command===wm.MIDI_CHANNEL_MESSAGES.controlchange&&data1>=0&&119>=data1?(event.type="controlchange",event.controller={number:data1,name:this.getCcNameByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.channelmode&&data1>=120&&127>=data1?(event.type="channelmode",event.controller={number:data1,name:this.getChannelModeByNumber(data1)},event.value=data2):command===wm.MIDI_CHANNEL_MESSAGES.programchange?(event.type="programchange",event.value=data1):command===wm.MIDI_CHANNEL_MESSAGES.channelaftertouch?(event.type="channelaftertouch",event.value=data1/127):command===wm.MIDI_CHANNEL_MESSAGES.pitchbend?(event.type="pitchbend",event.value=((data2<<7)+data1-8192)/8192):event.type="unknownchannelmessage",this._userHandlers.channel[event.type]&&this._userHandlers.channel[event.type][channel]&&this._userHandlers.channel[event.type][channel].forEach(function(callback){callback(event)})},Input.prototype.getCcNameByNumber=function(number){if(number=Math.floor(number),!(number>=0&&119>=number))throw new RangeError("The control change number must be between 0 and 119.");for(var cc in wm.MIDI_CONTROL_CHANGE_MESSAGES)if(wm.MIDI_CONTROL_CHANGE_MESSAGES.hasOwnProperty(cc)&&number===wm.MIDI_CONTROL_CHANGE_MESSAGES[cc])return cc;return void 0},Input.prototype.getChannelModeByNumber=function(number){if(number=Math.floor(number),!(number>=120&&status<=127))throw new RangeError("The control change number must be between 120 and 127.");for(var cm in wm.MIDI_CHANNEL_MODE_MESSAGES)if(wm.MIDI_CHANNEL_MODE_MESSAGES.hasOwnProperty(cm)&&number===wm.MIDI_CHANNEL_MODE_MESSAGES[cm])return cm},Input.prototype._parseSystemEvent=function(e){var command=e.data[0],event={target:this,data:e.data,timestamp:e.timeStamp};command===wm.MIDI_SYSTEM_MESSAGES.sysex?event.type="sysex":command===wm.MIDI_SYSTEM_MESSAGES.timecode?event.type="timecode":command===wm.MIDI_SYSTEM_MESSAGES.songposition?event.type="songposition":command===wm.MIDI_SYSTEM_MESSAGES.songselect?(event.type="songselect",event.song=e.data[1]):command===wm.MIDI_SYSTEM_MESSAGES.tuningrequest?event.type="tuningrequest":command===wm.MIDI_SYSTEM_MESSAGES.clock?event.type="clock":command===wm.MIDI_SYSTEM_MESSAGES.start?event.type="start":command===wm.MIDI_SYSTEM_MESSAGES["continue"]?event.type="continue":command===wm.MIDI_SYSTEM_MESSAGES.stop?event.type="stop":command===wm.MIDI_SYSTEM_MESSAGES.activesensing?event.type="activesensing":command===wm.MIDI_SYSTEM_MESSAGES.reset?event.type="reset":event.type="unknownsystemmessage",this._userHandlers.system[event.type]&&this._userHandlers.system[event.type].forEach(function(callback){callback(event)})},Output.prototype.send=function(status,data,timestamp){if(!(status>=128&&255>=status))throw new RangeError("The status byte must be an integer between 128 (0x80) and 255 (0xFF).");void 0===data&&(data=[]),Array.isArray(data)||(data=[data]);var message=[];return data.forEach(function(item,index){var parsed=Math.floor(item);if(!(parsed>=0&&255>=parsed))throw new RangeError("Data bytes must be integers between 0 (0x00) and 255 (0xFF).");message.push(parsed)}),this._midiOutput.send([status].concat(message),parseFloat(timestamp)||0),this},Output.prototype.sendSysex=function(manufacturer,data,options){if(!wm.sysexEnabled)throw new Error("Sysex message support must first be activated.");return options=options||{},manufacturer=[].concat(manufacturer),data.forEach(function(item){if(0>item||item>127)throw new RangeError("The data bytes of a sysex message must be integers between 0 (0x00) and 127 (0x7F).")}),data=manufacturer.concat(data,wm.MIDI_SYSTEM_MESSAGES.sysexend),this.send(wm.MIDI_SYSTEM_MESSAGES.sysex,data,this._parseTimeParameter(options.time)),this},Output.prototype.sendTimecodeQuarterFrame=function(value,options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.timecode,value,this._parseTimeParameter(options.time)),this},Output.prototype.sendSongPosition=function(value,options){value=Math.floor(value)||0,options=options||{};var msb=value>>7&127,lsb=127&value;return this.send(wm.MIDI_SYSTEM_MESSAGES.songposition,[msb,lsb],this._parseTimeParameter(options.time)),this},Output.prototype.sendSongSelect=function(value,options){if(value=Math.floor(value),options=options||{},!(value>=0&&127>=value))throw new RangeError("The song number must be between 0 and 127.");return this.send(wm.MIDI_SYSTEM_MESSAGES.songselect,[value],this._parseTimeParameter(options.time)),this},Output.prototype.sendTuningRequest=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.tuningrequest,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendClock=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.clock,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStart=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.start,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendContinue=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES["continue"],void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendStop=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.stop,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.sendActiveSensing=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.activesensing,[],this._parseTimeParameter(options.time)),this},Output.prototype.sendReset=function(options){return options=options||{},this.send(wm.MIDI_SYSTEM_MESSAGES.reset,void 0,this._parseTimeParameter(options.time)),this},Output.prototype.stopNote=function(note,channel,options){if("all"===note)return this.sendChannelMode("allnotesoff",0,channel,options);var nVelocity=64;return options=options||{},options.rawVelocity?!isNaN(options.velocity)&&options.velocity>=0&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&options.velocity>=0&&options.velocity<=1&&(nVelocity=127*options.velocity),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nVelocity)],this._parseTimeParameter(options.time))}.bind(this))}.bind(this)),this},Output.prototype.playNote=function(note,channel,options){var nVelocity=64;if(options=options||{},options.rawVelocity?!isNaN(options.velocity)&&options.velocity>=0&&options.velocity<=127&&(nVelocity=options.velocity):!isNaN(options.velocity)&&options.velocity>=0&&options.velocity<=1&&(nVelocity=127*options.velocity),options.time=this._parseTimeParameter(options.time),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteon<<4)+(ch-1),[item,Math.round(nVelocity)],options.time)}.bind(this))}.bind(this)),!isNaN(options.duration)){options.duration<=0&&(options.duration=0);var nRelease=64;options.rawVelocity?!isNaN(options.release)&&options.release>=0&&options.release<=127&&(nRelease=options.release):!isNaN(options.release)&&options.release>=0&&options.release<=1&&(nRelease=127*options.release),this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.noteoff<<4)+(ch-1),[item,Math.round(nRelease)],(options.time||wm.time)+options.duration)}.bind(this))}.bind(this))}return this},Output.prototype.sendKeyAftertouch=function(note,channel,pressure,options){var that=this;if(options=options||{},1>channel||channel>16)throw new RangeError("The channel must be between 1 and 16.");(isNaN(pressure)||0>pressure||pressure>1)&&(pressure=.5);var nPressure=Math.round(127*pressure);return this._convertNoteToArray(note).forEach(function(item){wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.keyaftertouch<<4)+(ch-1),[item,nPressure],that._parseTimeParameter(options.time))})}),this},Output.prototype.sendControlChange=function(controller,value,channel,options){if(options=options||{},"string"==typeof controller){if(controller=wm.MIDI_CONTROL_CHANGE_MESSAGES[controller],!controller)throw new TypeError("Invalid controller name.")}else if(controller=Math.floor(controller),!(controller>=0&&119>=controller))throw new RangeError("Controller numbers must be between 0 and 119.");if(value=Math.floor(value)||0,!(value>=0&&127>=value))throw new RangeError("Controller value must be between 0 and 127.");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.controlchange<<4)+(ch-1),[controller,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype._selectRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(parameter[0]>=0&&parameter[0]<=127))throw new RangeError("The control65 value must be between 0 and 127");if(parameter[1]=Math.floor(parameter[1]),!(parameter[1]>=0&&parameter[1]<=127))throw new RangeError("The control64 value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.sendControlChange(101,parameter[0],channel,{time:time}),that.sendControlChange(100,parameter[1],channel,{time:time})}),this},Output.prototype._selectNonRegisteredParameter=function(parameter,channel,time){var that=this;if(parameter[0]=Math.floor(parameter[0]),!(parameter[0]>=0&&parameter[0]<=127))throw new RangeError("The control63 value must be between 0 and 127");if(parameter[1]=Math.floor(parameter[1]),!(parameter[1]>=0&&parameter[1]<=127))throw new RangeError("The control62 value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.sendControlChange(99,parameter[0],channel,{time:time}),that.sendControlChange(98,parameter[1],channel,{time:time})}),this},Output.prototype._setCurrentRegisteredParameter=function(data,channel,time){var that=this;if(data=[].concat(data),data[0]=Math.floor(data[0]),!(data[0]>=0&&data[0]<=127))throw new RangeError("The msb value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.sendControlChange(6,data[0],channel,{time:time})}),data[1]=Math.floor(data[1]),data[1]>=0&&data[1]<=127&&wm.toMIDIChannels(channel).forEach(function(ch){that.sendControlChange(38,data[1],channel,{time:time})}),this},Output.prototype._deselectRegisteredParameter=function(channel,time){var that=this;return wm.toMIDIChannels(channel).forEach(function(ch){that.sendControlChange(101,127,channel,{time:time}),that.sendControlChange(100,127,channel,{time:time})}),this},Output.prototype.setRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error("The specified parameter is not available.");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(ch){that._selectRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.setNonRegisteredParameter=function(parameter,data,channel,options){var that=this;if(options=options||{},!(parameter[0]>=0&&parameter[0]<=127&&parameter[1]>=0&&parameter[1]<=127))throw new Error("Position 0 and 1 of the 2-position parameter array must both be between 0 and 127.");return data=[].concat(data),wm.toMIDIChannels(channel).forEach(function(ch){that._selectNonRegisteredParameter(parameter,channel,options.time),that._setCurrentRegisteredParameter(data,channel,options.time),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.incrementRegisteredParameter=function(parameter,channel,options){var that=this;if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new Error("The specified parameter is not available.");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(ch){that._selectRegisteredParameter(parameter,channel,options.time),that.sendControlChange(96,0,channel,{time:options.time}),that._deselectRegisteredParameter(channel,options.time)}),this},Output.prototype.decrementRegisteredParameter=function(parameter,channel,options){if(options=options||{},!Array.isArray(parameter)){if(!wm.MIDI_REGISTERED_PARAMETER[parameter])throw new TypeError("The specified parameter is not available.");parameter=wm.MIDI_REGISTERED_PARAMETER[parameter]}return wm.toMIDIChannels(channel).forEach(function(ch){this._selectRegisteredParameter(parameter,channel,options.time),this.sendControlChange(97,0,channel,{time:options.time}),this._deselectRegisteredParameter(channel,options.time)}.bind(this)),this},Output.prototype.setPitchBendRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},semitones=Math.floor(semitones)||0,!(semitones>=0&&127>=semitones))throw new RangeError("The semitones value must be between 0 and 127");if(cents=Math.floor(cents)||0,!(cents>=0&&127>=cents))throw new RangeError("The cents value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.setRegisteredParameter("pitchbendrange",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setModulationRange=function(semitones,cents,channel,options){var that=this;if(options=options||{},semitones=Math.floor(semitones)||0,!(semitones>=0&&127>=semitones))throw new RangeError("The semitones value must be between 0 and 127");if(cents=Math.floor(cents)||0,!(cents>=0&&127>=cents))throw new RangeError("The cents value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.setRegisteredParameter("modulationrange",[semitones,cents],channel,{time:options.time})}),this},Output.prototype.setMasterTuning=function(value,channel,options){var that=this;if(options=options||{},value=parseFloat(value)||0,-65>=value||value>=64)throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");var coarse=Math.floor(value)+64,fine=value-Math.floor(value);fine=Math.round((fine+1)/2*16383);var msb=fine>>7&127,lsb=127&fine;return wm.toMIDIChannels(channel).forEach(function(ch){that.setRegisteredParameter("channelcoarsetuning",coarse,channel,{time:options.time}),that.setRegisteredParameter("channelfinetuning",[msb,lsb],channel,{time:options.time})}),this},Output.prototype.setTuningProgram=function(value,channel,options){var that=this;if(options=options||{},value=Math.floor(value),!(value>=0&&127>=value))throw new RangeError("The program value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.setRegisteredParameter("tuningprogram",value,channel,{time:options.time})}),this},Output.prototype.setTuningBank=function(value,channel,options){var that=this;if(options=options||{},value=Math.floor(value)||0,!(value>=0&&127>=value))throw new RangeError("The bank value must be between 0 and 127");return wm.toMIDIChannels(channel).forEach(function(ch){that.setRegisteredParameter("tuningbank",value,channel,{time:options.time})}),this},Output.prototype.sendChannelMode=function(command,value,channel,options){if(options=options||{},"string"==typeof command){if(command=wm.MIDI_CHANNEL_MODE_MESSAGES[command],!command)throw new TypeError("Invalid channel mode message name.")}else if(command=Math.floor(command),!(command>=120&&127>=command))throw new RangeError("Channel mode numerical identifiers must be between 120 and 127.");if(value=Math.floor(value)||0,0>value||value>127)throw new RangeError("Value must be an integer between 0 and 127.");return wm.toMIDIChannels(channel).forEach(function(ch){this.send((wm.MIDI_CHANNEL_MESSAGES.channelmode<<4)+(ch-1),[command,value],this._parseTimeParameter(options.time))}.bind(this)),this},Output.prototype.sendProgramChange=function(program,channel,options){
var that=this;if(options=options||{},program=Math.floor(program),isNaN(program)||0>program||program>127)throw new RangeError("Program numbers must be between 0 and 127.");return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.programchange<<4)+(ch-1),[program],that._parseTimeParameter(options.time))}),this},Output.prototype.sendChannelAftertouch=function(pressure,channel,options){var that=this;options=options||{},pressure=parseFloat(pressure),(isNaN(pressure)||0>pressure||pressure>1)&&(pressure=.5);var nPressure=Math.round(127*pressure);return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.channelaftertouch<<4)+(ch-1),[nPressure],that._parseTimeParameter(options.time))}),this},Output.prototype.sendPitchBend=function(bend,channel,options){var that=this;if(options=options||{},isNaN(bend)||-1>bend||bend>1)throw new RangeError("Pitch bend value must be between -1 and 1.");var nLevel=Math.round((bend+1)/2*16383),msb=nLevel>>7&127,lsb=127&nLevel;return wm.toMIDIChannels(channel).forEach(function(ch){that.send((wm.MIDI_CHANNEL_MESSAGES.pitchbend<<4)+(ch-1),[lsb,msb],that._parseTimeParameter(options.time))}),this},Output.prototype._parseTimeParameter=function(time){var parsed,value;return"string"==typeof time&&"+"===time.substring(0,1)?(parsed=parseFloat(time),parsed&&parsed>0&&(value=wm.time+parsed)):(parsed=parseFloat(time),parsed>wm.time&&(value=parsed)),value},Output.prototype._convertNoteToArray=function(note){var notes=[];return Array.isArray(note)||(note=[note]),note.forEach(function(item){notes.push(wm.guessNoteNumber(item))}),notes}, true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return wm}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined}(this);

/***/ }),

/***/ "../../node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "../common/config.json":
/*!*****************************!*\
  !*** ../common/config.json ***!
  \*****************************/
/*! exports provided: server_ip, chorale_port, leadsheet_port, default */
/***/ (function(module) {

module.exports = {"server_ip":"10.0.1.122","chorale_port":5001,"leadsheet_port":5000};

/***/ }),

/***/ "../common/styles/main.scss":
/*!**********************************!*\
  !*** ../common/styles/main.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader!../../../node_modules/sass-loader/lib/loader.js!./main.scss */ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/main.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../common/styles/osmd.scss":
/*!**********************************!*\
  !*** ../common/styles/osmd.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader!../../../node_modules/sass-loader/lib/loader.js!./osmd.scss */ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/osmd.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../common/styles/overlays.scss":
/*!**************************************!*\
  !*** ../common/styles/overlays.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../node_modules/css-loader!../../../node_modules/sass-loader/lib/loader.js!./overlays.scss */ "../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!../common/styles/overlays.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../node_modules/style-loader/lib/addStyles.js */ "../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../common/tonejs-instruments/Tonejs-Instruments.js":
/*!**********************************************************!*\
  !*** ../common/tonejs-instruments/Tonejs-Instruments.js ***!
  \**********************************************************/
/*! exports provided: SampleLibrary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SampleLibrary", function() { return SampleLibrary; });
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ "../../node_modules/tone/build/Tone.js");
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tone__WEBPACK_IMPORTED_MODULE_0__);
/**
* @fileoverview A sample library and quick-loader for tone.js
*
* @author N.P. Brosowsky (nbrosowsky@gmail.com)
* https://github.com/nbrosowsky/tonejs-instruments
*/




var SampleLibrary = {
    minify: false,
    ext: '.[mp3|ogg]', // use setExt to change the extensions on all files // do not change this variable //
    baseUrl: '/samples/',
    list: ['bass-electric','bassoon','cello','clarinet','contrabass','flute','french-horn','guitar-acoustic','guitar-electric','harmonium','harp','organ','piano','saxophone','trombone','trumpet','tuba','violin','xylophone'],

    setExt: function (newExt) {
        var i
        for (i = 0; i <= this.list.length - 1; i++) {
            for (var property in this[this.list[i]]) {

                this[this.list[i]][property] = this[this.list[i]][property].replace(this.ext, newExt)
            }


        }
        this.ext = newExt;
        return console.log("sample extensions set to " + this.ext)
    },

    load: function (arg) {
        var t, rt, i;
        (arg) ? t = arg: t = {};
        t.instruments = t.instruments || this.list;
        t.baseUrl = t.baseUrl || this.baseUrl;

        // update extensions if arg given
        if (t.ext) {
            if (t.ext != this.ext) {
                this.setExt(t.ext)
            }
            t.ext = this.ext
        }

        rt = {};

        // if an array of instruments is passed...
        if (Array.isArray(t.instruments)) {
            for (i = 0; i <= t.instruments.length - 1; i++) {
                var newT = this[t.instruments[i]];
                //Minimize the number of samples to load
                if (this.minify === true || t.minify === true) {
                    var minBy = 1;
                    if (Object.keys(newT).length >= 17) {
                        minBy = 2
                    }
                    if (Object.keys(newT).length >= 33) {
                        minBy = 4
                    }
                    if (Object.keys(newT).length >= 49) {
                        minBy = 6
                    }

                    var filtered = Object.keys(newT).filter(function (_, i) {
                        return i % minBy != 0;
                    })
                    filtered.forEach(function (f) {
                        delete newT[f]
                    })

                }




                rt[t.instruments[i]] = new tone__WEBPACK_IMPORTED_MODULE_0__["Sampler"](
                    newT, {
                        baseUrl: t.baseUrl + t.instruments[i] + "/"
                    }

                )
            }

            return rt

            // if a single instrument name is passed...
        } else {
            newT = this[t.instruments];

            //Minimize the number of samples to load
            if (this.minify === true || t.minify === true) {
                minBy = 1;
                if (Object.keys(newT).length >= 17) {
                    minBy = 2
                }
                if (Object.keys(newT).length >= 33) {
                    minBy = 4
                }
                if (Object.keys(newT).length >= 49) {
                    minBy = 6
                }

                filtered = Object.keys(newT).filter(function (_, i) {
                    return i % minBy != 0;
                })
                filtered.forEach(function (f) {
                    delete newT[f]
                })
            }




            var s = new tone__WEBPACK_IMPORTED_MODULE_0__["Sampler"](
                newT, {
                    baseUrl: t.baseUrl + t.instruments + "/"
                }
            )

            return s
        }

    },

    'bass-electric': {
        'A3': 'A3.[mp3|ogg]',
        'C1': 'C1.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'D1': 'D1.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]'

    },

    'bassoon': {
        'A3': 'A3.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]'

    },

    'cello': {
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'F#4': 'Fs4.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'G#3': 'Gs3.[mp3|ogg]',
        'G#4': 'Gs4.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'D#4': 'Ds4.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]'

    },

    'clarinet': {
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D5': 'D5.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'F#5': 'Fs5.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'A#4': 'As4.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]'

    },

    'contrabass': {
        'C1': 'C1.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'D1': 'D1.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'F#0': 'Fs0.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'G0': 'G0.[mp3|ogg]',
        'G#1': 'Gs1.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A#0': 'As0.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]'

    },

    'flute': {
        'A5': 'A5.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C5': 'C5.[mp3|ogg]',
        'C6': 'C6.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'E5': 'E5.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]'

    },

    'french-horn': {
        'D2': 'D2.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'A0': 'A0.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'C1': 'C1.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',

    },

    'guitar-acoustic': {
        'F3': 'F3.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G#1': 'Gs1.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'G#3': 'Gs3.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A#1': 'As1.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'B1': 'B1.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'D1': 'D1.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]'

    },


    'guitar-electric': {
        'D4': 'D4.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'D#4': 'Ds4.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G#1': 'Gs1.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'G#3': 'Gs3.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A#1': 'As1.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'B1': 'B1.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'D1': 'D1.[mp3|ogg]'
    },

    'harmonium': {
        'C1': 'C1.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'D#0': 'Ds0.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'F#4': 'Fs4.[mp3|ogg]',
        'A0': 'A0.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'C0': 'C0.[mp3|ogg]'

    },

    'harp': {
        'C5': 'C5.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D6': 'D6.[mp3|ogg]',
        'D7': 'D7.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E5': 'E5.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'F6': 'F6.[mp3|ogg]',
        'F7': 'F7.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G5': 'G5.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'A6': 'A6.[mp3|ogg]',
        'B1': 'B1.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'B5': 'B5.[mp3|ogg]',
        'B6': 'B6.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]'

    },

    'organ': {
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C5': 'C5.[mp3|ogg]',
        'C6': 'C6.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'D#4': 'Ds4.[mp3|ogg]',
        'D#5': 'Ds5.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'F#4': 'Fs4.[mp3|ogg]',
        'F#5': 'Fs5.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'A5': 'A5.[mp3|ogg]',
        'C1': 'C1.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]'
    },

    'piano': {
        'A0': 'A0.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'A5': 'A5.[mp3|ogg]',
        'A6': 'A6.[mp3|ogg]',
        'A#0': 'As0.[mp3|ogg]',
        'A#1': 'As1.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'A#4': 'As4.[mp3|ogg]',
        'A#5': 'As5.[mp3|ogg]',
        'A#6': 'As6.[mp3|ogg]',
        'B0': 'B0.[mp3|ogg]',
        'B1': 'B1.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'B4': 'B4.[mp3|ogg]',
        'B5': 'B5.[mp3|ogg]',
        'B6': 'B6.[mp3|ogg]',
        'C0': 'C0.[mp3|ogg]',
        'C1': 'C1.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C5': 'C5.[mp3|ogg]',
        'C6': 'C6.[mp3|ogg]',
        'C7': 'C7.[mp3|ogg]',
        'C#0': 'Cs0.[mp3|ogg]',
        'C#1': 'Cs1.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'C#5': 'Cs5.[mp3|ogg]',
        'C#6': 'Cs6.[mp3|ogg]',
        'D0': 'D0.[mp3|ogg]',
        'D1': 'D1.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D5': 'D5.[mp3|ogg]',
        'D6': 'D6.[mp3|ogg]',
        'D#0': 'Ds0.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'D#4': 'Ds4.[mp3|ogg]',
        'D#5': 'Ds5.[mp3|ogg]',
        'D#6': 'Ds6.[mp3|ogg]',
        'E0': 'E0.[mp3|ogg]',
        'E1': 'E1.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'E5': 'E5.[mp3|ogg]',
        'E6': 'E6.[mp3|ogg]',
        'F0': 'F0.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'F5': 'F5.[mp3|ogg]',
        'F6': 'F6.[mp3|ogg]',
        'F#0': 'Fs0.[mp3|ogg]',
        'F#1': 'Fs1.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'F#4': 'Fs4.[mp3|ogg]',
        'F#5': 'Fs5.[mp3|ogg]',
        'F#6': 'Fs6.[mp3|ogg]',
        'G0': 'G0.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]',
        'G5': 'G5.[mp3|ogg]',
        'G6': 'G6.[mp3|ogg]',
        'G#0': 'Gs0.[mp3|ogg]',
        'G#1': 'Gs1.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'G#3': 'Gs3.[mp3|ogg]',
        'G#4': 'Gs4.[mp3|ogg]',
        'G#5': 'Gs5.[mp3|ogg]',
        'G#6': 'Gs6.[mp3|ogg]'
    },

    'saxophone': {
        'D#4': 'Ds4.[mp3|ogg]',
        'E2': 'E2.[mp3|ogg]',
        'E3': 'E3.[mp3|ogg]',
        'E4': 'E4.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'F#2': 'Fs2.[mp3|ogg]',
        'F#3': 'Fs3.[mp3|ogg]',
        'F#4': 'Fs4.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'G#3': 'Gs3.[mp3|ogg]',
        'G#4': 'Gs4.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'B2': 'B2.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]'

    },

    'trombone': {
        'A#2': 'As2.[mp3|ogg]',
        'C2': 'C2.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]',
        'C#1': 'Cs1.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'G#1': 'Gs1.[mp3|ogg]',
        'G#2': 'Gs2.[mp3|ogg]',
        'A#0': 'As0.[mp3|ogg]',
        'A#1': 'As1.[mp3|ogg]'

    },

    'trumpet': {
        'C5': 'C5.[mp3|ogg]',
        'D4': 'D4.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'F4': 'F4.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'A4': 'A4.[mp3|ogg]',
        'A#3': 'As3.[mp3|ogg]',
        'C3': 'C3.[mp3|ogg]'

    },

    'tuba': {
        'A#1': 'As1.[mp3|ogg]',
        'A#2': 'As2.[mp3|ogg]',
        'D2': 'D2.[mp3|ogg]',
        'D3': 'D3.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'F0': 'F0.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'A#0': 'As0.[mp3|ogg]'

    },

    'violin': {
        'C#1': 'Cs1.[mp3|ogg]',
        'D#1': 'Ds1.[mp3|ogg]',
        'F1': 'F1.[mp3|ogg]',
        'G1': 'G1.[mp3|ogg]',
        'A1': 'A1.[mp3|ogg]',
        'B1': 'B1.[mp3|ogg]',
        'C#2': 'Cs2.[mp3|ogg]',
        'D#2': 'Ds2.[mp3|ogg]',
        'F2': 'F2.[mp3|ogg]',
        'G2': 'G2.[mp3|ogg]',
        'A2': 'A2.[mp3|ogg]',
        'C#3': 'Cs3.[mp3|ogg]',
        'D#3': 'Ds3.[mp3|ogg]',
        'F3': 'F3.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'A3': 'A3.[mp3|ogg]',
        'B3': 'B3.[mp3|ogg]',
        'C#4': 'Cs4.[mp3|ogg]',
        'D#4': 'Ds4.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]'

    },

    'xylophone': {
        'C7': 'C7.[mp3|ogg]',
        'G3': 'G3.[mp3|ogg]',
        'G4': 'G4.[mp3|ogg]',
        'G5': 'G5.[mp3|ogg]',
        'G6': 'G6.[mp3|ogg]',
        'C4': 'C4.[mp3|ogg]',
        'C5': 'C5.[mp3|ogg]',
        'C6': 'C6.[mp3|ogg]'

    }


}


/***/ }),

/***/ "./annotationBox.ts":
/*!**************************!*\
  !*** ./annotationBox.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
class AnnotationBox {
    constructor(timestampContainer) {
        this.cssClass = this.constructor.name;
        if (typeof timestampContainer === "string") {
            this.timestampContainer = document.getElementById(timestampContainer);
        }
        else if (timestampContainer && "appendChild" in timestampContainer) {
            this.timestampContainer = timestampContainer;
        }
        if (!this.timestampContainer || this.timestampContainer.getAttribute('containedquarternotes') === undefined) {
            throw new Error("Please pass a valid timestamp container for the annotation box");
        }
        this.validateTimestampContainer();
        this.containedQuarterNotes = (() => {
            let containedQuarters_str = (this.timestampContainer.getAttribute('containedquarternotes'));
            let containedQuarters_strlist = containedQuarters_str.split(' ');
            let containedQuarterNotes = containedQuarters_strlist.map(parseInt);
            return containedQuarterNotes;
        })();
        this.createContainer();
    }
    validateTimestampContainer() { }
    ;
    createContainer() {
        const containerId = this.timestampContainer.id + '-' + this.cssClass;
        let containerByID = document.getElementById(containerId);
        let containerExistsInitially = containerByID !== null;
        this.container = (containerByID || document.createElement("div"));
        this.container.id = containerId;
        this.container.classList.add(this.cssClass);
        if (!containerExistsInitially) {
            this.timestampContainer.appendChild(this.container);
        }
    }
    ;
    draw() {
        throw new EvalError("Not implemented, please subclass the draw function");
    }
    ;
}
exports.AnnotationBox = AnnotationBox;


/***/ }),

/***/ "./chord_selector.ts":
/*!***************************!*\
  !*** ./chord_selector.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const annotationBox_1 = __webpack_require__(/*! ./annotationBox */ "./annotationBox.ts");
const $ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
const deepEqual = __webpack_require__(/*! deep-equal */ "../../node_modules/deep-equal/index.js");
class ChordSelector extends annotationBox_1.AnnotationBox {
    constructor(timestampContainer, onChordChange, wheelSize_px = 250) {
        super(timestampContainer);
        this.slur_symbol = '-';
        this.notes = ['C', 'D', 'E', 'F', 'G', 'A', 'B',
            this.slur_symbol];
        this.accidentals = (() => {
            let accidentals = [];
            for (let i in this.notes) {
                accidentals.push('b');
                accidentals.push('#');
            }
            ;
            return accidentals;
        })();
        this.chordTypes = ['M', 'm', 'm7', 'M7', '7'];
        this.previouslySelectedNoteIndex = null;
        this.outsideClickListener = (event) => {
            let target = event.target;
            if (!$(target).closest(this.container).length) {
                this.closeSelector();
            }
        };
        this.onChordChange = onChordChange;
        this.container.classList.add('noselect');
        this.wheelSize_px = wheelSize_px;
        this.draw();
        this.previousChord = this.currentChord;
    }
    validateTimestampContainer() {
        if (!this.timestampContainer.classList.contains('half-note')) {
            throw new EvalError("Chord selector should be associated to a half-note box");
        }
        ;
    }
    get currentNote() {
        return this.notes[this.noteWheel.selectedNavItemIndex];
    }
    set currentNote(note) {
        let note_index = this.notes.indexOf(note);
        this.noteWheel.navigateWheel(note_index);
    }
    get currentAccidental() {
        let selectedAccidentalIndex = this.accidentalWheel.selectedNavItemIndex;
        if (selectedAccidentalIndex !== null && selectedAccidentalIndex > 0) {
            return this.accidentals[selectedAccidentalIndex];
        }
        else {
            return '';
        }
    }
    set currentAccidental(accidental) {
        let accidentalIndex = this.accidentals.indexOf(accidental);
        if (accidentalIndex >= 0) {
            let fullIndex = 2 * this.noteWheel.selectedNavItemIndex + accidentalIndex;
            this.accidentalWheel.navigateWheel(fullIndex);
        }
        else {
            if (this.accidentalWheel.selectedNavItemIndex !== null && this.accidentalWheel.selectedNavItemIndex >= 0) {
                this.accidentalWheel.navItems[this.accidentalWheel.selectedNavItemIndex].selected = false;
                this.accidentalWheel.navItems[this.accidentalWheel.selectedNavItemIndex].refreshNavItem();
            }
            this.accidentalWheel.selectedNavItemIndex = null;
        }
    }
    get currentChordType() {
        return this.chordTypes[this.chordTypeWheel.selectedNavItemIndex];
    }
    set currentChordType(chordType) {
        let chordType_index = this.chordTypes.indexOf(chordType);
        this.chordTypeWheel.navigateWheel(chordType_index);
    }
    get currentChord() {
        return { note: this.currentNote, accidental: this.currentAccidental,
            chordType: this.currentChordType };
    }
    ;
    set currentChord(chord_obj) {
        this.currentNote = chord_obj['note'];
        if (this.currentNote !== this.slur_symbol) {
            this.currentAccidental = chord_obj['accidental'];
            this.currentChordType = chord_obj['chordType'];
        }
        else {
            this.currentAccidental = '';
            this.currentChordType = this.chordTypes[0];
        }
        ;
        this.closeSelector();
    }
    updateSpreader() {
        let currentNote = this.currentNote;
        var spreaderText = currentNote + this.currentAccidental;
        if (this.currentChordType !== 'M') {
            spreaderText = spreaderText + this.currentChordType;
        }
        this.noteWheel.spreader.inTitle.title = spreaderText;
        this.noteWheel.spreader.outTitle.title = spreaderText;
        this.noteWheel.refreshWheel();
    }
    ;
    hideCurrentAccidentalNavItems() {
        this.accidentalWheel.navItems[2 * this.noteWheel.selectedNavItemIndex].navItem.hide();
        this.accidentalWheel.navItems[2 * this.noteWheel.selectedNavItemIndex + 1].navItem.hide();
    }
    ;
    hidePreviouslySelectedAccidentalNavItems() {
        if (this.previouslySelectedNoteIndex !== null) {
            this.accidentalWheel.navItems[2 * this.previouslySelectedNoteIndex].navItem.hide();
            this.accidentalWheel.navItems[2 * this.previouslySelectedNoteIndex + 1].navItem.hide();
        }
    }
    ;
    closeNoteWheel() {
        if (this.noteWheel.currentPercent === this.noteWheel.maxPercent) {
            this.noteWheel.spreadWheel();
        }
    }
    closeChordTypeWheel() {
        if (this.chordTypeWheel.currentPercent === this.chordTypeWheel.maxPercent) {
            this.chordTypeWheel.spreadWheel();
        }
    }
    closeNoteWheelAndCleanAfterNoteAndAccidentalSelectionDone() {
        this.updateSpreader();
        this.hideCurrentAccidentalNavItems();
        this.previouslySelectedNoteIndex = null;
        this.closeNoteWheel();
    }
    toggleActiveContainer(force = undefined) {
        let isActive = this.container.classList.toggle('active', force);
    }
    closeSelector() {
        this.updateSpreader();
        this.closeNoteWheelAndCleanAfterNoteAndAccidentalSelectionDone();
        this.closeChordTypeWheel();
        this.toggleActiveContainer(false);
        this.removeClickListener();
        if (!deepEqual(this.currentChord, this.previousChord)) {
            this.onChordChange();
            this.previousChord = this.currentChord;
        }
    }
    initHideOnClickOutside() {
        let self = this;
        document.addEventListener('click', self.outsideClickListener);
    }
    ;
    removeClickListener() {
        let self = this;
        document.removeEventListener('click', self.outsideClickListener);
    }
    ;
    createWheelNav() {
        let self = this;
        let accidentalContainer = document.createElement('div');
        accidentalContainer.id = this.container.id + '-accidental';
        this.container.appendChild(accidentalContainer);
        let chordTypeContainer = document.createElement('div');
        chordTypeContainer.id = this.container.id + '-chordType';
        this.container.appendChild(chordTypeContainer);
        wheelnav.cssMode = true;
        this.noteWheel = new wheelnav(this.container.id, null, this.wheelSize_px, this.wheelSize_px);
        this.accidentalWheel = new wheelnav(accidentalContainer.id, this.noteWheel.raphael);
        this.chordTypeWheel = new wheelnav(chordTypeContainer.id, this.noteWheel.raphael);
        this.noteWheel.spreaderEnable = true;
        this.noteWheel.spreaderRadius = 22;
        this.noteWheel.animatetime = 150;
        this.noteWheel.animateeffect = 'easeInOut';
        this.noteWheel.spreaderTitleFont = "100 20px Boogaloo, sans-serif";
        this.noteWheel.spreaderFillColor = 'white';
        this.chordTypeWheel.spreaderEnable = false;
        this.chordTypeWheel.spreaderRadius = 22;
        this.chordTypeWheel.animatetime = 105;
        this.chordTypeWheel.animateeffect = 'easeInOut';
        this.noteWheel.spreaderPathInAttr = {
            fill: '#FFE9EC', 'fill-opacity': 1,
            'stroke-width': 3, stroke: '#FFD3D9', cursor: 'pointer'
        };
        this.noteWheel.spreaderTitleInAttr = { fill: '#555' };
        this.noteWheel.spreaderTitleOutAttr = { fill: '#555' };
        this.noteWheel.colors = new Array('#009CEB');
        this.accidentalWheel.colors = new Array('#FFB6C1');
        this.chordTypeWheel.colors = new Array('#FFD0B6');
        this.noteWheel.slicePathFunction = slicePath().DonutSlice;
        this.noteWheel.slicePathCustom = slicePath().DonutSliceCustomization();
        this.noteWheel.slicePathCustom.minRadiusPercent = 0.15;
        this.noteWheel.slicePathCustom.maxRadiusPercent = 0.6;
        this.noteWheel.sliceSelectedPathCustom = this.noteWheel.slicePathCustom;
        this.noteWheel.sliceInitPathCustom = this.noteWheel.slicePathCustom;
        this.accidentalWheel.slicePathFunction = slicePath().DonutSlice;
        this.accidentalWheel.slicePathCustom = slicePath().DonutSliceCustomization();
        this.accidentalWheel.slicePathCustom.minRadiusPercent = 0.6;
        this.accidentalWheel.slicePathCustom.maxRadiusPercent = 0.9;
        this.accidentalWheel.sliceSelectedPathCustom = this.accidentalWheel.slicePathCustom;
        this.accidentalWheel.sliceInitPathCustom = this.accidentalWheel.slicePathCustom;
        this.chordTypeWheel.slicePathFunction = slicePath().DonutSlice;
        this.chordTypeWheel.slicePathCustom = slicePath().DonutSliceCustomization();
        this.chordTypeWheel.slicePathCustom.minRadiusPercent = 0.16;
        this.chordTypeWheel.slicePathCustom.maxRadiusPercent = 0.6;
        this.chordTypeWheel.sliceSelectedPathCustom = this.chordTypeWheel.slicePathCustom;
        this.chordTypeWheel.sliceInitPathCustom = this.chordTypeWheel.slicePathCustom;
        this.noteWheel.clickModeRotate = false;
        this.accidentalWheel.clickModeRotate = false;
        this.chordTypeWheel.clickModeRotate = false;
        this.noteWheel.navAngle = -90;
        this.accidentalWheel.navAngle = -103;
        this.chordTypeWheel.navAngle = -135;
        this.noteWheel.currentPercent = 0;
        this.chordTypeWheel.currentPercent = 0;
        this.accidentalWheel.createWheel(this.accidentals);
        this.chordTypeWheel.createWheel(this.chordTypes);
        this.noteWheel.createWheel(this.notes);
        let spreaderRadius = this.noteWheel.spreaderRadius;
        let offset_px = this.wheelSize_px / 2 - spreaderRadius;
        let svgElem = $(this.container).children('svg')[0];
        svgElem.style.setProperty('position', 'absolute');
        svgElem.style.setProperty('left', `-${offset_px}px`);
        svgElem.style.setProperty('top', `-${offset_px}px`);
        for (let item of this.accidentalWheel.navItems) {
            item.navItem.hide();
        }
        for (let navItem of this.noteWheel.navItems) {
            navItem.navigateFunction = function () {
                if (this.itemIndex === self.notes.indexOf(self.slur_symbol)) {
                    self.hidePreviouslySelectedAccidentalNavItems();
                    self.currentAccidental = '';
                    self.currentChordType = self.chordTypes[0];
                    self.closeSelector();
                    return;
                }
                if (self.previouslySelectedNoteIndex == this.itemIndex) {
                    self.currentAccidental = '';
                    self.accidentalWheel.navItems[2 * this.itemIndex].navItem.hide();
                    self.accidentalWheel.navItems[2 * this.itemIndex + 1].navItem.hide();
                    self.closeNoteWheelAndCleanAfterNoteAndAccidentalSelectionDone();
                    self.chordTypeWheel.spreadWheel();
                }
                else {
                    if (self.accidentalWheel.selectedNavItemIndex !== null &&
                        Math.floor(self.accidentalWheel.selectedNavItemIndex / 2) !== this.itemIndex) {
                        self.currentAccidental = '';
                    }
                    self.hidePreviouslySelectedAccidentalNavItems();
                    for (let accidentalItemIndexOffset of [0, 1]) {
                        self.accidentalWheel.navItems[2 * this.itemIndex + accidentalItemIndexOffset].navItem.show();
                    }
                    self.updateSpreader();
                }
                self.previouslySelectedNoteIndex = this.itemIndex;
            };
        }
        for (let navItem of this.accidentalWheel.navItems) {
            navItem.navigateFunction = function () {
                for (let accidentalItemIndexOffset of [-1, 0, 1]) {
                    let accidentalItemIndex = this.itemIndex + accidentalItemIndexOffset;
                    accidentalItemIndex = Math.min(Math.max(accidentalItemIndex, 0), self.accidentalWheel.navItems.length - 1);
                    self.accidentalWheel.navItems[accidentalItemIndex].navItem.hide();
                }
                self.closeNoteWheelAndCleanAfterNoteAndAccidentalSelectionDone();
                self.chordTypeWheel.spreadWheel();
            };
        }
        for (let navItem of this.chordTypeWheel.navItems) {
            navItem.navigateFunction = function () {
                self.closeSelector();
            };
        }
        this.noteWheel.spreader.spreaderPath.click(self.hideCurrentAccidentalNavItems.bind(self));
        this.noteWheel.spreader.spreaderTitle.click(self.hideCurrentAccidentalNavItems.bind(self));
        this.noteWheel.spreader.spreaderPath.click(() => { this.container.classList.toggle('active'); });
        this.noteWheel.spreader.spreaderTitle.click(() => { this.container.classList.toggle('active'); });
        function onOpenSelector() {
            if (this.currentPercent === this.maxPercent) {
                self.initHideOnClickOutside();
            }
        }
        ;
        this.noteWheel.spreader.spreaderPath.click(onOpenSelector.bind(this.noteWheel));
        this.noteWheel.spreader.spreaderTitle.click(onOpenSelector.bind(this.noteWheel));
        function onClickSpreadWithOpenWheels() {
            if (self.noteWheel.currentPercent !== self.noteWheel.maxPercent ||
                self.chordTypeWheel.currentPercent === self.chordTypeWheel.maxPercent) {
                self.closeSelector();
            }
        }
        ;
        this.noteWheel.spreader.spreaderPath.click(onClickSpreadWithOpenWheels.bind(self));
        this.noteWheel.spreader.spreaderTitle.click(onClickSpreadWithOpenWheels.bind(self));
        this.noteWheel.refreshWheel();
        this.updateSpreader();
    }
    draw() {
        this.createWheelNav();
        this.updateSpreader();
    }
}
exports.ChordSelector = ChordSelector;


/***/ }),

/***/ "./fermata.ts":
/*!********************!*\
  !*** ./fermata.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(/*! ../common/styles/overlays.scss */ "../common/styles/overlays.scss");
const annotationBox_1 = __webpack_require__(/*! ./annotationBox */ "./annotationBox.ts");
class FermataBox extends annotationBox_1.AnnotationBox {
    constructor(timestampContainer, sequenceDuration) {
        super(timestampContainer);
        this.containedQuarterNote = this.containedQuarterNotes[0];
        this.sequenceDuration = sequenceDuration;
        this.draw();
    }
    validateTimestampContainer() {
        if (!this.timestampContainer.classList.contains('quarter-note')) {
            throw new EvalError("Fermata should be associated to a quarter-note box");
        }
        ;
    }
    draw() {
        if (this.containedQuarterNote >= this.sequenceDuration - 2) {
            this.container.classList.add('imposed');
            this.container.classList.add('active');
        }
        else {
            this.container.addEventListener('click', () => {
                this.container.classList.toggle('active');
            });
        }
        ;
    }
}
exports.FermataBox = FermataBox;


/***/ }),

/***/ "./file_upload.ts":
/*!************************!*\
  !*** ./file_upload.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function($) {
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(/*! jquery-simple-upload */ "../../node_modules/jquery-simple-upload/simpleUpload.js");
let serverConfig = __webpack_require__(/*! ../common/config.json */ "../common/config.json");
let serverUrl = `http://${serverConfig['server_ip']}:${serverConfig['chorale_port']}/`;
let generateArgs = 'analyze-audio';
let useFineUpload = false;
function createWavInput(onSuccess) {
    if (useFineUpload) {
        Promise.resolve().then(() => __webpack_require__(/*! fine-uploader */ "../../node_modules/fine-uploader/lib/traditional.js")).then(qq => {
            __webpack_require__(/*! fine-uploader/fine-uploader/fine-uploader-gallery.css */ "../../node_modules/fine-uploader/fine-uploader/fine-uploader-gallery.css");
            let gallery_template = __webpack_require__(/*! fine-uploader/all.fine-uploader/templates/gallery.html */ "../../node_modules/fine-uploader/all.fine-uploader/templates/gallery.html");
            let fineUploadGalleryTemplateElement = document.createElement('div');
            document.body.appendChild(fineUploadGalleryTemplateElement);
            fineUploadGalleryTemplateElement.innerHTML = gallery_template;
            let uploaderDiv = document.createElement('div');
            uploaderDiv.id = 'uploader';
            document.body.appendChild(uploaderDiv);
            var uploader = new qq.FineUploader({
                element: document.getElementById("uploader")
            });
        });
    }
    else {
        let simpleUpload = document.createElement('div');
        document.body.appendChild(simpleUpload);
        let simpleUpload_html = `<div id="filename"></div>
          <div id="progress"></div>
          <div id="progressBar"></div>

          <label for="wav-input">Select a .wav file to upload</label>
          <input type="file" name="audio" accept="audio/x-wav" id="wav-input"/>`;
        simpleUpload.innerHTML = simpleUpload_html;
        $('#wav-input').change(function () {
            $(this).simpleUpload(serverUrl + generateArgs, {
                start: function (file) {
                    $('#filename').html(file.name);
                    $('#progress').html("");
                    $('#progressBar').width(0);
                },
                progress: function (progress) {
                    $('#progress').html("Progress: " + Math.round(progress) + "%");
                    $('#progressBar').width(progress + "%");
                },
                success: function (data) {
                    $('#progress').html("Success!<br>Data: " + JSON.stringify(data));
                    onSuccess();
                },
                error: function (error) {
                    $('#progress').html("Failure!<br>" + error.name + ": " + error.message);
                }
            });
        });
    }
}
exports.createWavInput = createWavInput;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js")))

/***/ }),

/***/ "./lfo.ts":
/*!****************!*\
  !*** ./lfo.ts ***!
  \****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const Nexus = __webpack_require__(/*! nexusui */ "../../node_modules/nexusui/dist/NexusUI.js");
function createLFOControls() {
    let LFOControlsGridElem = document.createElement('div');
    LFOControlsGridElem.id = 'lfo-controls';
    document.body.appendChild(LFOControlsGridElem);
    let LFOToggleElem = document.createElement('div');
    LFOToggleElem.id = 'LFO-toggle';
    LFOControlsGridElem.appendChild(LFOToggleElem);
    let LFORateElem = document.createElement('div');
    LFORateElem.id = 'LFO-rate';
    LFOControlsGridElem.appendChild(LFORateElem);
    let LFOValueElem = document.createElement('div');
    LFOValueElem.id = 'LFO-value';
    LFOControlsGridElem.appendChild(LFOValueElem);
    let lfoToggle = new Nexus.Toggle('#LFO-toggle', {
        'size': [40, 20],
        'state': false
    });
    let useLFO = false;
    lfoToggle.on('change', (toggleOn) => {
        useLFO = toggleOn;
    });
    LFOToggleElem.style.setProperty('width', '100%');
    LFOToggleElem.style.setProperty('padding-top', '30px');
    let LFONameElem = document.createElement('div');
    LFONameElem.textContent = 'Improvizer';
    LFOToggleElem.appendChild(LFONameElem);
    LFONameElem.style.setProperty('padding-top', '25px');
    let lfoRateDial = new Nexus.Dial('#LFO-rate', {
        'interaction': 'vertical'
    });
    let LFORateNameElem = document.createElement('div');
    LFORateNameElem.textContent = 'Rate';
    LFORateElem.appendChild(LFORateNameElem);
    let lfoValueDial = new Nexus.Dial('#LFO-value', {
        'interaction': 'vertical'
    });
    let LFOValueNameElem = document.createElement('div');
    LFOValueNameElem.textContent = 'Value';
    LFOValueElem.appendChild(LFOValueNameElem);
}
exports.createLFOControls = createLFOControls;
function triggerRegeneration() {
    throw Error("Not implemented");
}


/***/ }),

/***/ "./locator.ts":
/*!********************!*\
  !*** ./locator.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const opensheetmusicdisplay_1 = __webpack_require__(/*! opensheetmusicdisplay */ "../../../opensheetmusicdisplay/build/opensheetmusicdisplay.min.js");
const fermata_1 = __webpack_require__(/*! ./fermata */ "./fermata.ts");
const chord_selector_1 = __webpack_require__(/*! ./chord_selector */ "./chord_selector.ts");
const $ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
__webpack_require__(/*! nipplejs */ "../../node_modules/nipplejs/dist/nipplejs.js");
__webpack_require__(/*! ../common/styles/overlays.scss */ "../common/styles/overlays.scss");
class eOSMD extends opensheetmusicdisplay_1.OpenSheetMusicDisplay {
    constructor(container, autoResize = false, leadsheet = false) {
        super(container, autoResize);
        this._chordSelectors = [];
        this._fermatas = [];
        this._boundingBoxes = [];
        this.leadsheet = leadsheet;
        if (leadsheet) {
        }
    }
    get chordSelectors() {
        return this._chordSelectors;
    }
    get fermatas() {
        return this._fermatas;
    }
    render(onclickFactory = undefined) {
        super.render();
        this.drawTimestampBoxes(onclickFactory);
    }
    computeBoundingBoxes() {
        let measureList = this.graphicalMusicSheet.MeasureList;
        let numberOfStaves = measureList[0].length;
        let staffIndex = 0;
        let boundingBoxes = [];
        for (let measureIndex in measureList) {
            let measure = measureList[measureIndex][staffIndex];
            let system = measure.parentMusicSystem;
            let height = system.PositionAndShape.Size.height;
            let measureBoundingBox = measure.PositionAndShape;
            let x = measureBoundingBox.AbsolutePosition.x;
            let y = measureBoundingBox.AbsolutePosition.y;
            let width = measureBoundingBox.Size.width;
            let rectangle = {
                "xmin": x * 10,
                "ymin": y * 10,
                "xmax": (x + width) * 10,
                "ymax": (y + height) * 10
            };
            boundingBoxes.push(rectangle);
        }
        this._boundingBoxes = boundingBoxes;
    }
    ;
    computePositionZoom(value, shift = 1) {
        return ((value - shift) * 10.0 * this.zoom);
    }
    createTimeDiv(x, y, width, height, divClass, divId, onclick, timestamps) {
        const commonDivId = divId + '-common';
        let commonDiv = (document.getElementById(commonDivId) ||
            document.createElement("div"));
        let div = (document.getElementById(divId) ||
            document.createElement("div"));
        commonDiv.style.top = this.computePositionZoom(y, 0) + 'px';
        commonDiv.style.height = this.computePositionZoom(height, 0) + 'px';
        commonDiv.style.left = this.computePositionZoom(x, 1) + 'px';
        commonDiv.style.width = this.computePositionZoom(width) + 'px';
        if (commonDiv.id !== commonDivId) {
            commonDiv.id = commonDivId;
            commonDiv.classList.add('timecontainer');
            commonDiv.classList.add(divClass);
            div.id = divId;
            div.classList.add('notebox');
            div.classList.add('available');
            let containedQuarterNotes = [];
            let quarterNoteStart = Math.floor(timestamps[0].RealValue * 4);
            let quarterNoteEnd = Math.floor(timestamps[1].RealValue * 4);
            for (let i = quarterNoteStart; i < quarterNoteEnd; i++) {
                containedQuarterNotes.push(i);
            }
            commonDiv.setAttribute('containedQuarterNotes', containedQuarterNotes.toString().replace(/,/g, ' '));
            let granularitySelect = document.getElementById('select-granularity').children[0];
            const currentGranularity = granularitySelect[parseInt(granularitySelect.value)].textContent;
            if (currentGranularity == divClass)
                div.classList.add('active');
            div.addEventListener('click', onclick);
            div.addEventListener('wheel', function (event) {
                event.preventDefault();
                let scrollUp = (-event.deltaY >= 0);
                cycleGranularity(scrollUp);
            }, false);
            let inner = this.renderingBackend.getInnerElement();
            inner.appendChild(commonDiv);
            commonDiv.appendChild(div);
            if (!this.leadsheet && divClass === 'quarter-note') {
                this.fermatas.push(new fermata_1.FermataBox(commonDiv, this.sequenceDuration()));
            }
            if (this.leadsheet && divClass == 'half-note') {
                this._chordSelectors.push(new chord_selector_1.ChordSelector(commonDiv, onclick));
            }
        }
        return div;
    }
    ;
    sequenceDuration() {
        return this.graphicalMusicSheet.MeasureList.length * 4;
    }
    drawChordBox(timestampDiv) {
        const chordDivId = timestampDiv.id + '-chord';
        let chordDiv = (document.getElementById(chordDivId) ||
            document.createElement("div"));
        chordDiv.id = chordDivId;
        chordDiv.classList.add('chord');
        let containedQuarters_str = timestampDiv.getAttribute('containedquarternotes');
        chordDiv.setAttribute('containedquarternotes', containedQuarters_str);
        chordDiv.addEventListener('click', () => {
            chordDiv.classList.toggle('active');
        });
        timestampDiv.parentNode.appendChild(chordDiv);
    }
    drawTimestampBoxes(onclickFactory = undefined) {
        let measureList = this.graphicalMusicSheet.MeasureList;
        let numberOfStaves = measureList[0].length;
        function makeTimestamps(timeTuples) {
            return timeTuples.map(([num, den]) => new opensheetmusicdisplay_1.Fraction(num, den));
        }
        const timestampsQuarter = makeTimestamps([[0, 4], [1, 4],
            [2, 4], [3, 4], [4, 4]]);
        const timestampsHalf = makeTimestamps([[0, 2], [1, 2], [2, 2]]);
        const timestampsWhole = makeTimestamps([[0, 1], [1, 1]]);
        const timestampsAndNames = [
            [timestampsQuarter, "quarter-note"],
            [timestampsHalf, "half-note"],
            [timestampsWhole, "whole-note"]
        ];
        for (let measureIndex in measureList) {
            let measure = measureList[measureIndex][0];
            let beginInstructionsWidth = measure.beginInstructionsWidth;
            let sourceMeasure = measure.parentSourceMeasure;
            let absoluteTimestamp = sourceMeasure.AbsoluteTimestamp;
            let musicSystem = measure.parentMusicSystem;
            let systemTop = musicSystem.PositionAndShape.AbsolutePosition.y;
            let systemHeight = musicSystem.PositionAndShape.Size.height;
            let y = musicSystem.PositionAndShape.AbsolutePosition.y + musicSystem.StaffLines[0].PositionAndShape.RelativePosition.y;
            const endY = musicSystem.PositionAndShape.AbsolutePosition.y +
                musicSystem.StaffLines[musicSystem.StaffLines.length - 1].PositionAndShape.RelativePosition.y + 4.0;
            let height = endY - y;
            for (const [timestampList, granularityName] of timestampsAndNames) {
                for (var timestampIndex = 0; timestampIndex < timestampList.length - 1; timestampIndex++) {
                    let leftTimestamp = opensheetmusicdisplay_1.Fraction.plus(absoluteTimestamp, timestampList[timestampIndex]);
                    let rightTimestamp = opensheetmusicdisplay_1.Fraction.plus(absoluteTimestamp, timestampList[timestampIndex + 1]);
                    let xLeft = this.graphicalMusicSheet
                        .calculateXPositionFromTimestamp(leftTimestamp)[0];
                    let xRight;
                    if (timestampIndex < timestampList.length - 2) {
                        xRight = this.graphicalMusicSheet
                            .calculateXPositionFromTimestamp(rightTimestamp)[0];
                    }
                    else {
                        xRight = (measure.PositionAndShape.AbsolutePosition.x +
                            measure.PositionAndShape.Size.width) + 1;
                    }
                    if (beginInstructionsWidth > 1) {
                        if (beginInstructionsWidth > 5) {
                            xLeft -= 1;
                            xRight -= 1;
                        }
                        else {
                            xLeft -= 2;
                            xRight -= 2;
                        }
                    }
                    let width = xRight - xLeft;
                    let onclick = (event) => { };
                    if (onclickFactory) {
                        onclick = onclickFactory(leftTimestamp, rightTimestamp);
                    }
                    let timediv = this.createTimeDiv(xLeft, y, width, height, granularityName, `${granularityName}-${measureIndex}-${timestampIndex}`, onclick, [leftTimestamp, rightTimestamp]);
                }
            }
            let duration = sourceMeasure.Duration;
        }
    }
    get boundingBoxes() {
        this.computeBoundingBoxes();
        return this._boundingBoxes;
    }
}
exports.eOSMD = eOSMD;
function cycleGranularity(increase) {
    let granularitySelect = $('#select-granularity > select');
    let granularitySelectElem = granularitySelect[0];
    const selectedGranularity = parseInt(granularitySelect.val().toString());
    const numOptions = granularitySelectElem.children.length;
    if (increase) {
        granularitySelectElem.value =
            Math.min(selectedGranularity + 1, numOptions - 1).toString();
    }
    else {
        granularitySelectElem.value =
            Math.max(selectedGranularity - 1, 0).toString();
    }
    granularitySelectElem.dispatchEvent(new Event('change'));
}


/***/ }),

/***/ "./renderer.ts":
/*!*********************!*\
  !*** ./renderer.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const electron_1 = __webpack_require__(/*! electron */ "electron");
let link_channel_prefix = 'link/';
let link_initialized = false;
const locator_1 = __webpack_require__(/*! ./locator */ "./locator.ts");
const $ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
const WebMidi = __webpack_require__(/*! webmidi */ "../../node_modules/webmidi/webmidi.min.js");
const MidiConvert = __webpack_require__(/*! midiconvert */ "../../node_modules/midiconvert/src/MidiConvert.js");
const tone_piano_1 = __webpack_require__(/*! tone-piano */ "../../node_modules/tone-piano/build/Piano.js");
const Tone = __webpack_require__(/*! tone */ "../../node_modules/tone/build/Tone.js");
const Tonejs_Instruments_1 = __webpack_require__(/*! ../common/tonejs-instruments/Tonejs-Instruments */ "../common/tonejs-instruments/Tonejs-Instruments.js");
const Nexus = __webpack_require__(/*! nexusui */ "../../node_modules/nexusui/dist/NexusUI.js");
const log = __webpack_require__(/*! loglevel */ "../../node_modules/loglevel/lib/loglevel.js");
const lfo_1 = __webpack_require__(/*! ./lfo */ "./lfo.ts");
__webpack_require__(/*! ../common/styles/osmd.scss */ "../common/styles/osmd.scss");
__webpack_require__(/*! ../common/styles/main.scss */ "../common/styles/main.scss");
let server_config = __webpack_require__(/*! ../common/config.json */ "../common/config.json");
let link_enabled = false;
electron_1.ipcRenderer.on('numPeers', (numPeers) => {
    new Notification('DeepBach/Ableton LINK interface', {
        body: 'Number of peers changed, now ' + numPeers + ' peers'
    });
});
Tone.Instrument.prototype.keyDown = function () { return this; };
Tone.Instrument.prototype.keyUp = function () { return this; };
Tone.Instrument.prototype.pedalDown = function () { return this; };
Tone.Instrument.prototype.pedalUp = function () { return this; };
Nexus.colors.accent = '#ffb6c1';
Nexus.colors.fill = '#e5f5fd';
let topControlsGridElem = document.createElement('div');
topControlsGridElem.id = 'top-controls';
document.body.appendChild(topControlsGridElem);
let playbuttonElem = document.createElement('div');
playbuttonElem.id = 'play-button';
topControlsGridElem.appendChild(playbuttonElem);
let playbutton = new Nexus.TextButton('#play-button', {
    'size': [150, 50],
    'state': false,
    'text': 'Play',
    'alternateText': 'Pause'
});
playbutton.on('change', playCallback);
let stopbuttonElem = document.createElement("div");
stopbuttonElem.id = 'stop-button';
topControlsGridElem.appendChild(stopbuttonElem);
let stopbutton = new Nexus.TextButton('#stop-button', {
    'size': [150, 50],
    'state': false,
    'text': 'Stop'
});
stopbutton.on('change', (event) => {
    playbutton.flip(false);
    Tone.Transport.stop();
    nowPlayingCallback(0, 0);
});
document.addEventListener("keydown", (event) => {
    const keyName = event.key;
    switch (keyName) {
        case ' ':
        case 'Spacebar':
        case 'p':
            playbutton.down();
            break;
        case 's':
            stopbutton.down();
            stopbutton.up();
            break;
    }
});
let granularities = ['quarter-note', 'half-note', 'whole-note'];
let granularitySelectElem = document.createElement("div");
granularitySelectElem.id = 'select-granularity';
topControlsGridElem.appendChild(granularitySelectElem);
let granularitySelect = new Nexus.Select('#select-granularity', {
    'size': [150, 50],
    'options': granularities,
});
granularitySelectElem.firstElementChild.style.fontSize = (playbuttonElem.firstElementChild.firstElementChild.style.fontSize);
function granularityOnChange(ev) {
    $('.notebox').removeClass('active');
    $('.' + this.value + '> .notebox').addClass('active');
}
;
granularitySelect.on('change', granularityOnChange.bind(granularitySelect));
const initialGranulatity = granularities.indexOf('whole-note').toString();
granularitySelect.selectedIndex = initialGranulatity;
let insertLFO = true;
if (insertLFO) {
    lfo_1.createLFOControls();
}
let titlediv = document.createElement('div');
titlediv.textContent = 'DeepBach';
titlediv.style.alignContent = 'CenterTop';
titlediv.style.width = '100%';
titlediv.style.fontStyle = 'bold';
titlediv.style.fontSize = '64px';
document.body.appendChild(document.createElement("div"));
let useLeadsheetMode = true;
let serverPort;
if (useLeadsheetMode) {
    serverPort = server_config['leadsheet_port'];
}
else {
    serverPort = server_config['chorale_port'];
}
let serverIp;
let useLocalServer = false;
if (useLocalServer) {
    serverIp = 'localhost';
}
else {
    serverIp = server_config['server_ip'];
}
let serverUrl = `http://${serverIp}:${serverPort}/`;
let osmd;
let osmdContainer = document.createElement("div");
osmdContainer.classList.add('osmd-container');
document.body.appendChild(osmdContainer);
osmd = new locator_1.eOSMD(osmdContainer, true, useLeadsheetMode);
loadMusicXMLandMidi(serverUrl + 'ex', serverUrl + 'get-midi');
function removeMusicXMLHeaderNodes(xmlDocument) {
    let titleNode = xmlDocument.getElementsByTagName('work-title')[0];
    let movementTitleNode = xmlDocument.getElementsByTagName('movement-title')[0];
    let composerNode = xmlDocument.getElementsByTagName('creator')[0];
    titleNode.textContent = movementTitleNode.textContent = composerNode.textContent = "";
}
function getFermatas() {
    const activeFermataElems = $('.FermataBox.active');
    let containedQuarterNotesList = [];
    for (let activeFemataElem of activeFermataElems) {
        containedQuarterNotesList.push(parseInt(activeFemataElem.parentElement.getAttribute('containedQuarterNotes')));
    }
    return containedQuarterNotesList;
}
function getChordLabels() {
    let chordLabels = [];
    for (let chordSelector of osmd.chordSelectors) {
        chordLabels.push(chordSelector.currentChord);
    }
    ;
    return chordLabels;
}
;
function getMetadata() {
    return {
        leadsheet: osmd.leadsheet,
        fermatas: getFermatas(),
        chordLabels: getChordLabels()
    };
}
function onClickTimestampBoxFactory(timeStart, timeEnd) {
    const [quarternoteStart, quarternoteEnd] = ([timeStart, timeEnd].map(timeFrac => Math.round(4 * timeFrac.RealValue)));
    const argsGenerationUrl = ("timerange-change" +
        `?quarternoteStart=${quarternoteStart}` +
        `&quarternoteEnd=${quarternoteEnd}`);
    const argsMidiUrl = "get-midi";
    return (function (event) {
        loadMusicXMLandMidi(serverUrl + argsGenerationUrl, serverUrl + argsMidiUrl);
        ;
    });
}
function blockall(e) {
    e.stopPropagation();
    e.preventDefault();
}
function toggleBusyClass(toggleBusy) {
    let noteboxes = $('.notebox');
    if (toggleBusy) {
        noteboxes.addClass('busy');
        noteboxes.removeClass('available');
    }
    else {
        noteboxes.removeClass('busy');
        noteboxes.addClass('available');
    }
}
function disableChanges() {
    toggleBusyClass(true);
    $('.timecontainer').addClass('busy');
    $('.timecontainer').each(function () {
        this.addEventListener("click", blockall, true);
    });
}
function enableChanges() {
    $('.timecontainer').each(function () {
        this.removeEventListener("click", blockall, true);
    });
    $('.timecontainer').removeClass('busy');
    toggleBusyClass(false);
}
function loadMusicXMLandMidi(urlXML, urlMidi) {
    disableChanges();
    log.debug('Metadata:');
    log.debug(JSON.stringify(getMetadata()));
    $.post({
        url: urlXML,
        data: JSON.stringify(getMetadata()),
        contentType: 'application/json',
        dataType: 'xml',
        success: (xmldata) => {
            removeMusicXMLHeaderNodes(xmldata);
            osmd.load(xmldata)
                .then(() => {
                osmd.render(onClickTimestampBoxFactory);
                enableChanges();
            }, (err) => { log.error(err); enableChanges(); });
            loadMidi(urlMidi);
        }
    });
}
;
var silentInstrument = new Tone.Instrument();
var piano = new tone_piano_1.Piano([21, 108], 5);
var chorus = new Tone.Chorus(2, 1.5, 0.5).toMaster();
var reverb = new Tone.Reverb(1.5).connect(chorus);
reverb.generate();
var polysynth = new Tone.PolySynth(12);
polysynth.connect(reverb);
var polysynth_chords = new Tone.PolySynth(24);
polysynth_chords.connect(reverb);
let steelpan = new Tone.PolySynth(12).set({
    "oscillator": {
        "type": "fatcustom",
        "partials": [0.2, 1, 0, 0.5, 0.1],
        "spread": 40,
        "count": 3
    },
    "envelope": {
        "attack": 0.001,
        "decay": 1.6,
        "sustain": 0,
        "release": 1.6
    }
});
steelpan.connect(reverb);
let loadSamplesButtonElem = document.createElement('div');
loadSamplesButtonElem.id = 'load-samples-button';
document.body.appendChild(loadSamplesButtonElem);
let loadSamplesButton = new Nexus.TextButton('#load-samples-button', {
    'size': [150, 50],
    'state': false,
    'text': 'Load samples',
    'alternateText': 'Samples loading'
});
let sampledInstruments;
let sampled_instruments_names = ['organ', 'harmonium', 'xylophone'];
loadSamplesButton.on('change', () => {
    log.info('Start downloading audio samples')(loadSamplesButtonElem.firstElementChild).style.pointerEvents = 'none';
    loadSamplesButtonElem.style.cursor = 'wait';
    let loadPromises = [];
    let sampleLibraryLoadPromise = new Promise((resolve, reject) => {
        sampledInstruments = Tonejs_Instruments_1.SampleLibrary.load({
            instruments: sampled_instruments_names,
            baseUrl: "tonejs-instruments/samples/"
        });
        Object.keys(sampledInstruments).forEach(function (instrument_name) {
            sampledInstruments[instrument_name].release = 1.8;
            sampledInstruments[instrument_name].toMaster();
        });
        resolve(sampledInstruments);
    });
    loadPromises.push(sampleLibraryLoadPromise);
    let pianoLoadPromise = piano.load();
    loadPromises.push(pianoLoadPromise);
    Promise.all(loadPromises).then(() => {
        log.info('Finished downloading');
        loadSamplesButtonElem.remove();
        instrumentSelect.render();
    });
});
function addTriggerAttackRelease_(piano) {
    piano.triggerAttackRelease = () => { return piano; };
    return piano;
}
addTriggerAttackRelease_(piano);
let instrumentFactories = {
    'PolySynth': () => { return polysynth; },
    'Sampled Piano': () => {
        piano.disconnect(0);
        piano.toMaster();
        return piano;
    },
    'Sampled Piano (w/ reverb)': () => { piano.disconnect(0); piano.connect(reverb); return piano; },
    'Xylophone': () => { return sampledInstruments['xylophone']; },
    'Steelpan': () => { return steelpan; },
    'None': () => { return silentInstrument; }
};
let instrumentSelectElem = document.createElement('div');
instrumentSelectElem.id = 'instrument-select';
document.body.appendChild(instrumentSelectElem);
let instrumentSelect = new Nexus.Select('#instrument-select', {
    'size': [275, 40],
    'options': Object.keys(instrumentFactories)
});
let current_instrument = polysynth;
function instrumentOnChange() {
    current_instrument = instrumentFactories[this.value]();
}
;
instrumentSelect.on('change', instrumentOnChange.bind(instrumentSelect));
const initialInstrument = 'PolySynth';
instrumentSelect.value = initialInstrument;
let chordInstrumentSelectElem;
let chordInstrumentFactories;
let chordInstrumentSelect;
let chords_instrument;
const initialChordInstrument = 'PolySynth';
if (osmd.leadsheet) {
    chordInstrumentSelectElem = document.createElement('div');
    chordInstrumentSelectElem.id = 'chord-instrument-select';
    document.body.appendChild(chordInstrumentSelectElem);
    chordInstrumentFactories = {
        'PolySynth': () => { return polysynth_chords; },
        'Organ': () => { return sampledInstruments['organ']; },
        'Harmonium': () => { return sampledInstruments['harmonium']; },
        'None': () => { return silentInstrument; }
    };
    chordInstrumentSelect = new Nexus.Select('#chord-instrument-select', {
        'size': [275, 40],
        'options': Object.keys(chordInstrumentFactories)
    });
    chords_instrument = polysynth_chords;
    let chordInstrumentOnChange = function () {
        chords_instrument = chordInstrumentFactories[this.value]();
    };
    chordInstrumentSelect.on('change', chordInstrumentOnChange.bind(chordInstrumentSelect));
    chordInstrumentSelect.value = initialChordInstrument;
}
let bpmContainerElem = document.createElement('div');
bpmContainerElem.setAttribute('horizontal', '');
bpmContainerElem.setAttribute('layout', '');
bpmContainerElem.setAttribute('display', 'grid');
bpmContainerElem.setAttribute('grid-template-columns', '200px 200px;');
document.body.appendChild(bpmContainerElem);
let bpmNameElem = document.createElement('div');
bpmNameElem.textContent = 'BPM';
bpmContainerElem.appendChild(bpmNameElem);
let bpmCounterElem = document.createElement('div');
bpmCounterElem.setAttribute('id', 'bpm-counter');
bpmContainerElem.appendChild(bpmCounterElem);
let minAcceptedBPM = 30;
let maxAcceptedBPM = 250;
if (maxAcceptedBPM < 2 * minAcceptedBPM) {
    throw Error(`BPM range should be at least one tempo octave wide, ie.
        maxAcceptedBPM at least twice as big as minAcceptedBPM`);
}
let currentBPM;
let bpmCounter = new Nexus.Number('#bpm-counter', {
    'min': minAcceptedBPM,
    'max': maxAcceptedBPM,
    'step': 0.01
});
bpmCounter.on('change', function (newBPM) {
    Tone.Transport.bpm.value = newBPM;
    if (link_enabled)
        electron_1.ipcRenderer.send(link_channel_prefix + 'tempo', newBPM);
});
electron_1.ipcRenderer.on(link_channel_prefix + 'tempo', (newBPM) => {
    while (newBPM > maxAcceptedBPM)
        newBPM = newBPM / 2;
    while (newBPM < minAcceptedBPM)
        newBPM = 2 * newBPM;
    if (Tone.Transport.bpm.value !== newBPM) {
        Tone.Transport.bpm.value = newBPM;
        bpmCounter._value.update(newBPM);
        bpmCounter.render();
    }
});
function synchronizeToLinkBPM() {
    electron_1.ipcRenderer.emit(link_channel_prefix + 'get_bpm');
}
if (link_enabled) {
    synchronizeToLinkBPM();
}
else {
    bpmCounter.value = 110;
}
let midiOut;
function getTimingOffset() {
    return performance.now() - Tone.now() * 1000;
}
function playNote(time, event) {
    log.debug(`Play note event @ time ${time}: ` + JSON.stringify(event));
    current_instrument.triggerAttackRelease(event.name, event.duration, time, event.velocity);
    midiOut.playNote(event.name, 1, { time: time * 1000 + getTimingOffset(),
        duration: event.duration * 1000 });
}
function playNoteChordsInstrument(time, event) {
    log.debug(`Play chord event @ time ${time}: ` + JSON.stringify(event));
    chords_instrument.triggerAttackRelease(event.name, event.duration, time, event.velocity);
    midiOut.playNote(event.name, 2, { time: time * 1000 + getTimingOffset(),
        duration: event.duration * 1000 });
}
function nowPlayingCallback(time, step) {
    $('.notebox').removeClass('playing');
    $(`.timecontainer[containedQuarterNotes~='${step}'] .notebox`).addClass('playing');
}
let sequence_duration_tone;
if (osmd.leadsheet) {
    sequence_duration_tone = Tone.Time('8m');
}
else {
    sequence_duration_tone = Tone.Time('4m');
}
let [seq_dur_measures, seq_dur_quarters, seq_dur_sixteenths] = sequence_duration_tone.toBarsBeatsSixteenths().split(':').map(parseFloat);
let sequence_duration_quarters = Math.floor((4 * seq_dur_measures +
    seq_dur_quarters + Math.floor(seq_dur_sixteenths / 4)));
let steps = [];
for (let i = 0; i < sequence_duration_quarters; i++) {
    steps.push(i);
}
function scheduleTrackToInstrument(midiTrack, isChords = false) {
    let notes = midiTrack.notes;
    let playNote_callback;
    let getInstrument;
    if (isChords) {
        getInstrument = () => chords_instrument;
        playNote_callback = playNoteChordsInstrument;
    }
    else {
        getInstrument = () => current_instrument;
        playNote_callback = playNote;
    }
    let part = new Tone.Part(playNote_callback, notes);
    part.start(0);
    part.loop = true;
    part.loopEnd = sequence_duration_tone;
    let sustain = new Tone.Part((time, event) => {
        if (event.value) {
            getInstrument().pedalDown(time);
        }
        else {
            getInstrument().pedalUp(time);
        }
    }, midiTrack.controlChanges[64]).start(0);
    let noteOffEvents = new Tone.Part((time, event) => {
        getInstrument().keyUp(event.midi, time, event.velocity);
    }, midiTrack.noteOffs).start(0);
    let noteOnEvents = new Tone.Part((time, event) => {
        getInstrument().keyDown(event.midi, time, event.velocity);
    }, midiTrack.notes).start(0);
    log.debug('Midi track content');
    log.debug(midiTrack.noteOffs);
    log.debug(midiTrack.notes);
    for (let part of [sustain, noteOffEvents, noteOnEvents]) {
        part.loop = true;
        part.loopEnd = sequence_duration_tone;
    }
}
function loadMidi(url) {
    MidiConvert.load(url, function (midi) {
        Tone.Transport.cancel();
        Tone.Transport.bpm.value = midi.header.bpm;
        Tone.Transport.timeSignature = midi.header.timeSignature;
        let drawCallback = (time, step) => {
            Tone.Draw.schedule((time) => { nowPlayingCallback(time, step); }, time);
        };
        new Tone.Sequence(drawCallback, steps, '4n').start(0);
        if (!osmd.leadsheet) {
            for (let track of midi.tracks) {
                scheduleTrackToInstrument(track);
            }
        }
        else {
            scheduleTrackToInstrument(midi.tracks[0]);
            scheduleTrackToInstrument(midi.tracks[1], true);
        }
        Tone.Transport.bpm.value = bpmCounter.value;
    });
}
function downbeatStartCallback() {
    Tone.Transport.start("+0.00001", "0:0:0");
}
function playCallback() {
    Tone.context.resume().then(() => {
        if (playbutton.state) {
            if (!(link_enabled)) {
                Tone.Transport.start("+0.2");
            }
            else {
                log.info('LINK: Waiting for `downbeat` message...');
                electron_1.ipcRenderer.once('downbeat', () => {
                    log.info('LINK: Received `downbeat` message, starting playback');
                    downbeatStartCallback();
                });
            }
        }
        else {
            Tone.Transport.stop();
        }
    });
}
;
let dummyMidiOut = new Tone.Instrument();
dummyMidiOut.playNote = () => { };
let midiOutSelectElem = document.createElement("div");
midiOutSelectElem.id = 'select-midiout';
document.body.appendChild(midiOutSelectElem);
let midiOutSelect;
WebMidi.enable(function (err) {
    if (err)
        log.error(err);
    let midiOutSelect = new Nexus.Select('#select-midiout', {
        'size': [150, 50],
        'options': ['No Output'].concat(WebMidi.outputs.map((output) => output.name)),
    });
    function midiOutOnChange(ev) {
        if (this.value !== 'No Output') {
            midiOut = WebMidi.getOutputByName(this.value);
        }
        else {
            midiOut = dummyMidiOut;
        }
        log.info('Selected MIDI out: ' + JSON.stringify(midiOut));
    }
    ;
    midiOutSelect.on('change', midiOutOnChange.bind(midiOutSelect));
    midiOutSelect.value = 'No Output';
});
let linkbuttonElem = document.createElement('div');
linkbuttonElem.id = 'link-button';
topControlsGridElem.appendChild(linkbuttonElem);
let linkbutton = new Nexus.TextButton('#link-button', {
    'size': [150, 50],
    'state': false,
    'text': 'Enable LINK',
    'alternateText': 'Disable LINK'
});
electron_1.ipcRenderer.on(link_channel_prefix + 'enable-success', (enable_succeeded) => {
    if (enable_succeeded) {
        log.info('Succesfully enabled Link');
        link_enabled = true;
        synchronizeToLinkBPM();
    }
    else {
        log.error('Failed to enable Link');
    }
});
electron_1.ipcRenderer.on(link_channel_prefix + 'disable-success', (disable_succeeded) => {
    if (disable_succeeded) {
        log.info('Succesfully disabled Link');
        link_enabled = false;
    }
    else {
        log.error('Failed to disable Link');
    }
});
function link_enable_callback(enable_value) {
    return __awaiter(this, void 0, void 0, function* () {
        if (enable_value) {
            if (!link_initialized) {
                yield electron_1.ipcRenderer.send(link_channel_prefix + 'init');
                link_initialized = true;
            }
            electron_1.ipcRenderer.send(link_channel_prefix + 'enable');
        }
        else {
            electron_1.ipcRenderer.send(link_channel_prefix + 'disable');
        }
    });
}
linkbutton.on('change', link_enable_callback);
const file_upload_1 = __webpack_require__(/*! ./file_upload */ "./file_upload.ts");
file_upload_1.createWavInput(() => loadMusicXMLandMidi(serverUrl + 'get-musicxml', serverUrl + 'get-midi'));


/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("electron");

/***/ })

/******/ });
//# sourceMappingURL=renderer.js.map