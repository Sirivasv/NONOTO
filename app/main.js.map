{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/abletonlink/index.js","webpack:////home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/loglevel/lib/loglevel.js","webpack:////home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/nbind/dist sync","webpack:////home/theis/code/flowmachinesstudio/interactive-score-interface/node_modules/nbind/dist/nbind.js","webpack:///./main.ts","webpack:///external \"electron\"","webpack:///external \"path\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,KAAK,QAIL;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,qEAAqE;AACrE,WAAW;AACX;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACzPD;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,wE;;;;;;;;;;;;ACRA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mDAA2B;AAC3B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.ts\");\n","const nbind = require('nbind');\nconst binding = nbind.init(__dirname);\nconst lib = binding.lib;\n\nlib.AbletonLink.prototype.startUpdate = function(interval_ms, callback) {\n    this.update();\n    if(callback) {\n        this.timer = setInterval(() => {\n            this.update();\n            callback(this.beat, this.phase, this.bpm);\n        }, interval_ms);\n        callback(this.beat, this.phase, this.bpm);\n    } else {\n        this.timer = setInterval(() => {\n            this.update();\n        }, interval_ms);\n    }\n};\n\nlib.AbletonLink.prototype.stopUpdate = function() {\n    if(this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n    }\n}\n\nmodule.exports = lib.AbletonLink;\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/nbind/dist sync recursive\";","\"use strict\";\n// This file is part of nbind, copyright (C) 2014-2016 BusFaster Ltd.\n// Released under the MIT license, see LICENSE.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path = require('path'); // tslint:disable-line:no-var-requires\nvar Binding = (function () {\n    function Binding() {\n    }\n    return Binding;\n}());\nexports.Binding = Binding;\n/** Default callback that throws any error given to it. */\nfunction rethrow(err, result) {\n    if (err)\n        throw (err);\n}\n/** Make list of possible paths for a single compiled output file name. */\nfunction makeModulePathList(root, name) {\n    return ([\n        // Binary copied using copyasm\n        [root, name],\n        // node-gyp's linked version in the \"build\" dir\n        [root, 'build', name],\n        // node-waf and gyp_addon (a.k.a node-gyp)\n        [root, 'build', 'Debug', name],\n        [root, 'build', 'Release', name],\n        // Debug files, for development (legacy behavior, remove for node v0.9)\n        [root, 'out', 'Debug', name],\n        [root, 'Debug', name],\n        // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        [root, 'out', 'Release', name],\n        [root, 'Release', name],\n        // Legacy from node-waf, node <= 0.4.x\n        [root, 'build', 'default', name],\n        [\n            root,\n            process.env['NODE_BINDINGS_COMPILED_DIR'] || 'compiled',\n            process.versions.node,\n            process.platform,\n            process.arch,\n            name\n        ]\n    ]);\n}\nfunction findCompiledModule(basePath, specList, callback) {\n    var resolvedList = [];\n    var ext = path.extname(basePath);\n    /** If basePath has a known extension, check if it's a loadable module. */\n    for (var _i = 0, specList_1 = specList; _i < specList_1.length; _i++) {\n        var spec = specList_1[_i];\n        if (ext == spec.ext) {\n            try {\n                spec.path = require.resolve(basePath);\n                // Stop if a module was found.\n                callback(null, spec);\n                return (spec);\n            }\n            catch (err) {\n                resolvedList.push(basePath);\n            }\n        }\n    }\n    /** Try all possible subdirectories of basePath. */\n    for (var _a = 0, specList_2 = specList; _a < specList_2.length; _a++) {\n        var spec = specList_2[_a];\n        // Check if any possible path contains a loadable module,\n        // and store unsuccessful attempts.\n        for (var _b = 0, _c = makeModulePathList(basePath, spec.name); _b < _c.length; _b++) {\n            var pathParts = _c[_b];\n            var resolvedPath = path.resolve.apply(path, pathParts);\n            try {\n                spec.path = require.resolve(resolvedPath);\n            }\n            catch (err) {\n                resolvedList.push(resolvedPath);\n                continue;\n            }\n            // Stop if a module was found.\n            callback(null, spec);\n            return (spec);\n        }\n    }\n    var err = new Error('Could not locate the bindings file. Tried:\\n' +\n        resolvedList.join('\\n'));\n    err.tries = resolvedList;\n    callback(err);\n    return (null);\n}\nfunction find(basePath, cb) {\n    var callback = arguments[arguments.length - 1];\n    if (typeof (callback) != 'function')\n        callback = rethrow;\n    return (findCompiledModule((basePath != callback && basePath) || process.cwd(), [\n        { ext: '.node', name: 'nbind.node', type: 'node' },\n        { ext: '.js', name: 'nbind.js', type: 'emcc' }\n    ], callback));\n}\nexports.find = find;\nfunction init(basePath, lib, cb) {\n    var callback = arguments[arguments.length - 1];\n    if (typeof (callback) != 'function')\n        callback = rethrow;\n    var binding = new Binding();\n    find(basePath != callback && basePath, function (err, binary) {\n        if (err) {\n            callback(err);\n            return;\n        }\n        binding.binary = binary;\n        binding.lib = (lib != callback && lib) || {};\n        if (binary.type == 'emcc') {\n            initAsm(binding, callback);\n        }\n        else {\n            initNode(binding, callback);\n        }\n    });\n    return (binding);\n}\nexports.init = init;\n/** Initialize asm.js module. */\nfunction initAsm(binding, callback) {\n    var lib = binding.lib;\n    lib.locateFile = lib.locateFile || function (name) {\n        return (path.resolve(path.dirname(binding.binary.path), name));\n    };\n    // Load the Asm.js module.\n    require(binding.binary.path)(lib, function (err, parts) {\n        if (!err) {\n            for (var _i = 0, _a = Object.keys(parts); _i < _a.length; _i++) {\n                var key = _a[_i];\n                binding[key] = parts[key];\n            }\n        }\n        callback(err, binding);\n    });\n}\n/** Initialize native Node.js addon. */\nfunction initNode(binding, callback) {\n    // Load the compiled addon.\n    var lib = require(binding.binary.path);\n    if (!lib || typeof (lib) != 'object') {\n        callback(new Error('Error loading addon'));\n        return;\n    }\n    binding.bind = lib.NBind.bind_value;\n    binding.reflect = lib.NBind.reflect;\n    binding.queryType = lib.NBind.queryType;\n    binding.toggleLightGC = function (enable) { }; // tslint:disable-line:no-empty\n    Object.keys(lib).forEach(function (key) {\n        binding.lib[key] = lib[key];\n    });\n    callback(null, binding);\n}\n","// Modules to control application life and create native browser window\nimport {app, BrowserWindow, ipcMain} from 'electron'\nimport * as log from 'loglevel'\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow: BrowserWindow;\n\nfunction createWindow() {\n  // Create the browser window.\n  mainWindow = new BrowserWindow({width: 800, height: 600})\n\n  // and load the index.html of the app.\n  mainWindow.loadFile('./index.html')\n\n  // Open the DevTools.\n  // mainWindow.webContents.openDevTools()\n\n  // Emitted when the window is closed.\n  mainWindow.on('closed', function () {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = null\n  })\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', function () {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === null) {\n    createWindow()\n  }\n})\n\n// code for ableton-link server\nconst abletonlink = require('abletonlink');\n\nlet pattern_synchronization_duration_quarters = 4.\nlet link_channel_prefix: string = 'link/'\nlet link;\n\nfunction initAbletonLinkServer(bpm: number=120, quantum: number=4,\n    enable: boolean=false): boolean {\n    link = new abletonlink(bpm=120., quantum, enable);\n    // TODO(theis): how to detect errors in initialization?\n    let success = true\n    return success\n};\n\nipcMain.on(link_channel_prefix + 'init', (event, _) => {\n        let return_promise = new Promise((resolve) => {\n            // TODO(theis): could just throw error in main process\n            // maybe not necessary to send error message to renderer\n            let success = initAbletonLinkServer();\n            resolve(success);\n        });\n        event.sender.send(link_channel_prefix + 'init-success', return_promise)\n    }\n);\n\n// IPC API for the link server\nipcMain.on(link_channel_prefix + 'event', function(data){});\n\n// bind to Link specific events\nipcMain.on(link_channel_prefix + 'tempo', (newBPM) => {\n        // HACK perform a comparison to avoid messaging loops, since\n        // the link update triggers a BPM modification message\n        // from main to renderer\n        if (link.bpm !== newBPM) link.bpm = newBPM\n    }\n);\nipcMain.on(link_channel_prefix + 'enable', (event, _) => {\n        link.enable();\n        event.sender.send(link_channel_prefix + 'enable-success', true)\n    }\n);\nipcMain.on(link_channel_prefix + 'disable', (event, _) => {\n        // TODO is this actually desirable???\n        link.disable();\n        event.sender.send(link_channel_prefix + 'disable-success', true)\n    }\n);\n\nipcMain.on(link_channel_prefix + 'get_bpm', (event, _) => {\n    event.sender.send(link_channel_prefix + 'bpm', link.bpm);\n    }\n);\n\nipcMain.on('disconnect', function(){});\n\nlink.on('tempo', (bpm) => {\n        log.info('LINK: BPM changed, now ' + bpm)\n        mainWindow.webContents.send(link_channel_prefix + 'tempo', bpm);\n    }\n);\n\nlink.on('numPeers', (numPeers) => {\n        log.info('LINK: numPeers changed, now ' + numPeers);\n        mainWindow.webContents.send(link_channel_prefix + 'numPeers', numPeers);\n    }\n);\n\n// downbeat clock\nlet updateRate: number = 16;\n(() => {\n    let lastBeat = 0.0;\n    let lastPhase = 0.0;\n    link.startUpdate(updateRate, (beat, phase, bpm) => {\n        beat = 0 ^ beat;\n        if(0 < beat - lastBeat) {\n            mainWindow.webContents.send('beat', { beat });\n            lastBeat = beat;\n        }\n        if(0 > phase - lastPhase) {\n            mainWindow.webContents.send('downbeat');\n            log.debug('LINK: downbeat');\n        }\n        lastPhase = phase;\n    });\n})();\n\n\n//\n// (() => {\n//     let lastBeat = 0.0;\n//     let lastPhase = 0.0;\n//     link.startUpdate(16, (beat, phase, bpm) => {\n//         beat = 0 ^ beat;\n//         if(0 < beat - lastBeat) {\n//             io.emit('beat', { beat });\n//             lastBeat = beat;\n//         }\n//         if(0 > phase - lastPhase) {\n//             io.emit('downbeat');\n//             console.log('downbeat')\n//         }\n//         lastPhase = phase;\n//     });\n// })();\n","module.exports = require(\"electron\");","module.exports = require(\"path\");"],"sourceRoot":""}